// Class DeadByDaylight.InteractionDefinition
// Size: 0x630 (Inherited: 0x220)
struct UInteractionDefinition : USceneComponent {
	char pad_220[0x38]; // 0x220(0x38)
	struct FString InteractionID; // 0x258(0x10)
	float SnapTime; // 0x268(0x04)
	bool ResetCameraDuringSnap; // 0x26c(0x01)
	bool IsInteractionCancelled; // 0x26d(0x01)
	bool AllowStartInteractionFromHeldInput; // 0x26e(0x01)
	bool StopInteractionOnMontageComplete; // 0x26f(0x01)
	bool StopInteractionOnMontageBlendingOut; // 0x270(0x01)
	bool StopInteractionOnTimerExpire; // 0x271(0x01)
	bool StopInteractionOnHeightDelta; // 0x272(0x01)
	bool StopEnterMontageOnExit; // 0x273(0x01)
	bool StopUpdateMontageOnExit; // 0x274(0x01)
	bool IgnoreStrafeAnimFix; // 0x275(0x01)
	enum class EInteractionAnimation InteractionAnimation; // 0x276(0x01)
	bool CamperCanInteract; // 0x277(0x01)
	bool SlasherCanInteract; // 0x278(0x01)
	bool AllowInputPersistence; // 0x279(0x01)
	bool snapPosition; // 0x27a(0x01)
	bool snapRotation; // 0x27b(0x01)
	float SnapStopDistance; // 0x27c(0x04)
	bool TestClearPathDuringSnap; // 0x280(0x01)
	bool MustBeClosestPlayerToSnapPoint; // 0x281(0x01)
	bool CheckInteractableIsInPlayerView; // 0x282(0x01)
	char pad_283[0x1]; // 0x283(0x01)
	float CheckInteractableInViewSphereSweepRadius; // 0x284(0x04)
	struct FVector CheckInteractableInViewOffset; // 0x288(0x0c)
	float CheckInteractableInViewOffsetDistanceToHitPoint; // 0x294(0x04)
	bool IsInterruptibleIfTestClearPathDuringSnapFails; // 0x298(0x01)
	bool TestPlayerOrientationOnSnap; // 0x299(0x01)
	bool ScaleEnterAnimationToTime; // 0x29a(0x01)
	bool ScaleMainAnimationToTime; // 0x29b(0x01)
	bool ScaleExitAnimationToTime; // 0x29c(0x01)
	enum class ESnapBackType SnapBackType; // 0x29d(0x01)
	enum class ESnapBackPositionType SnapBackPositionType; // 0x29e(0x01)
	char pad_29F[0x1]; // 0x29f(0x01)
	struct FVector2D SnapBackPositionOffset; // 0x2a0(0x08)
	bool SnapToInitialRotationDuringSnapBack; // 0x2a8(0x01)
	bool UseStartSnapTimeForSnapExitTime; // 0x2a9(0x01)
	bool CanInteractWhileIncapacitated; // 0x2aa(0x01)
	bool CanInteractWhileCloaked; // 0x2ab(0x01)
	bool CanInteractWhileAttacking; // 0x2ac(0x01)
	bool CanInteractWhileChainLinked; // 0x2ad(0x01)
	bool CanInteractWhileShocked; // 0x2ae(0x01)
	bool CanInteractWhileUnhookingSelf; // 0x2af(0x01)
	bool CanInteractWhileCarrying; // 0x2b0(0x01)
	bool AllowNavigation; // 0x2b1(0x01)
	bool AllowNavigationInput; // 0x2b2(0x01)
	bool AllowRotation; // 0x2b3(0x01)
	bool UseCameraMontageMode; // 0x2b4(0x01)
	bool OwnerBlocksAttack; // 0x2b5(0x01)
	bool IsHighPriority; // 0x2b6(0x01)
	bool AllowOverridingWhenNotForced; // 0x2b7(0x01)
	bool IgnoreOverlapOnInteractable; // 0x2b8(0x01)
	bool UseAuthoritativeMovement; // 0x2b9(0x01)
	bool CanBeAuthoritativePushedDuringEnter; // 0x2ba(0x01)
	bool CanBeAuthoritativePushedDuringUpdate; // 0x2bb(0x01)
	bool CanBeAuthoritativePushedDuringExit; // 0x2bc(0x01)
	bool CanAuthoritativePush; // 0x2bd(0x01)
	bool CancelOnHit; // 0x2be(0x01)
	bool CancelOnAttack; // 0x2bf(0x01)
	bool HideItem; // 0x2c0(0x01)
	bool AutoBindToParentInteractor; // 0x2c1(0x01)
	bool AutoBindToParentZone; // 0x2c2(0x01)
	char pad_2C3[0x1]; // 0x2c3(0x01)
	float CancelOnMoveInitialDelay; // 0x2c4(0x04)
	float CancelOnMoveInput; // 0x2c8(0x04)
	bool CancelOnMoveInputOnlyWhenRunning; // 0x2cc(0x01)
	char pad_2CD[0x3]; // 0x2cd(0x03)
	struct TArray<float> ProgressBasedSkillChecks; // 0x2d0(0x10)
	bool CanCrouch; // 0x2e0(0x01)
	bool AffectsStillness; // 0x2e1(0x01)
	bool ConsideredIdle; // 0x2e2(0x01)
	bool BlockSelfInteract; // 0x2e3(0x01)
	float InteractionTime; // 0x2e4(0x04)
	enum class EInputInteractionType interactionInputType; // 0x2e8(0x01)
	bool StopInteractionOnInputRelease; // 0x2e9(0x01)
	bool AllowHitMontageWhenInteracting; // 0x2ea(0x01)
	bool ShowBasicInteractionIcon; // 0x2eb(0x01)
	char pad_2EC[0x4]; // 0x2ec(0x04)
	struct TArray<struct UInterruptionDefinition*> _interruptionDefinitions; // 0x2f0(0x10)
	struct FMulticastInlineDelegate OnInteractionEnteredDelegate; // 0x300(0x10)
	char pad_310[0x30]; // 0x310(0x30)
	struct FMulticastInlineDelegate OnInteractionFinishedDelegate; // 0x340(0x10)
	struct FMulticastInlineDelegate OnInteractionInterruptedStartDelegate; // 0x350(0x10)
	struct FMulticastInlineDelegate OnInteractionInterruptedStartedDelegate; // 0x360(0x10)
	struct FMulticastInlineDelegate OnInteractionInterruptedEndDelegate; // 0x370(0x10)
	struct FMulticastInlineDelegate OnInteractionAnimNotify; // 0x380(0x10)
	bool DebugUnavailability; // 0x390(0x01)
	enum class EInputInteractionType SecondaryActionInputType; // 0x391(0x01)
	char pad_392[0x1e]; // 0x392(0x1e)
	struct UCurveFloat* NavigationSpeedCurveEnter; // 0x3b0(0x08)
	struct UCurveFloat* NavigationSpeedCurve; // 0x3b8(0x08)
	struct UCurveFloat* NavigationSpeedCurveExit; // 0x3c0(0x08)
	bool _shouldCheckInteractedUpon; // 0x3c8(0x01)
	enum class EInteractionOwnership OwnershipUsability; // 0x3c9(0x01)
	char pad_3CA[0x2]; // 0x3ca(0x02)
	float ExitInteractionTime; // 0x3cc(0x04)
	bool ApplyModifiersToExitTime; // 0x3d0(0x01)
	char pad_3D1[0x7]; // 0x3d1(0x07)
	struct FText InteractionDescriptionText; // 0x3d8(0x18)
	bool InteractionCanBeToggled; // 0x3f0(0x01)
	bool IsOverridingInputToggleReleasePromptMessage; // 0x3f1(0x01)
	char pad_3F2[0x6]; // 0x3f2(0x06)
	struct FString InputToggleReleasePromptMessage; // 0x3f8(0x10)
	bool IgnoreSprintToCancelSetting; // 0x408(0x01)
	bool ForceWithSprintToCancelSetting; // 0x409(0x01)
	char pad_40A[0x2]; // 0x40a(0x02)
	float InteractionHeightDeltaMax; // 0x40c(0x04)
	float MaximumVelocity; // 0x410(0x04)
	char pad_414[0x4]; // 0x414(0x04)
	struct FAnimationMontageDescriptor EnterMontage; // 0x418(0x20)
	struct FAnimationMontageDescriptor UpdateMontage; // 0x438(0x20)
	struct FAnimationMontageDescriptor ExitMontage; // 0x458(0x20)
	struct TArray<struct FName> EnterMontageVariantCycle; // 0x478(0x10)
	struct TArray<struct FName> UpdateMontageVariantCycle; // 0x488(0x10)
	struct TArray<struct FName> ExitMontageVariantCycle; // 0x498(0x10)
	struct FName SnapSocketName; // 0x4a8(0x0c)
	bool _canBeAttachedToAnyZone; // 0x4b4(0x01)
	bool _isInterruptibleBySacrifice; // 0x4b5(0x01)
	bool IgnoreStun; // 0x4b6(0x01)
	char pad_4B7[0x1]; // 0x4b7(0x01)
	struct FGameplayTagContainer _tags; // 0x4b8(0x20)
	struct FGameplayTag _objectStateTag; // 0x4d8(0x0c)
	char pad_4E4[0x4]; // 0x4e4(0x04)
	struct TMap<struct FName, struct FSecondaryInteractionProperties> _secondaryInteractions; // 0x4e8(0x50)
	bool _useHoldPrompt; // 0x538(0x01)
	bool _allowInteractionInNarrowSpaces; // 0x539(0x01)
	bool _allowIKSensorDuringInteraction; // 0x53a(0x01)
	bool _overrideSlashableRelativeLocation; // 0x53b(0x01)
	struct FVector _slashableRelativeLocation; // 0x53c(0x0c)
	bool _startUpdateMontageDuringEnter; // 0x548(0x01)
	char pad_549[0x7]; // 0x549(0x07)
	struct UInteractor* _interactor; // 0x550(0x08)
	struct TArray<struct UInteractionDefinition*> _mutuallyExclusiveInteractionsClient; // 0x558(0x10)
	struct FActivationDefinition _activationDefinition; // 0x568(0x28)
	struct UPrimitiveComponent* _zone; // 0x590(0x08)
	enum class EInputInteractionType _cancelInputType; // 0x598(0x01)
	char pad_599[0x7]; // 0x599(0x07)
	struct FGameplayTagContainer _preventingTags; // 0x5a0(0x20)
	struct FGameplayTagContainer _disablingTags; // 0x5c0(0x20)
	struct TArray<struct UPlayerInteractionHandler*> _evaluatingInteractionHandlers; // 0x5e0(0x10)
	struct FSecondaryInteractionProperties DEPRECATED_SecondaryInteractionProperties; // 0x5f0(0x38)
	char pad_628[0x8]; // 0x628(0x08)

	void UpdateSlashableLocation(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.UpdateSlashableLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x5541790
	bool ShouldStartUpdateMontageDuringEnter(struct ADBDPlayer* Character); // Function DeadByDaylight.InteractionDefinition.ShouldStartUpdateMontageDuringEnter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55416f0
	void SetSecondaryActionInputType(enum class EInputInteractionType inputType); // Function DeadByDaylight.InteractionDefinition.SetSecondaryActionInputType // (Final|Native|Public|BlueprintCallable) // @ game+0x5541670
	void ResetSlashableLocation(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.ResetSlashableLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x55415e0
	void RemoveExclusiveInteraction(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.InteractionDefinition.RemoveExclusiveInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x5541550
	void RemoveDisablingTags(struct FGameplayTag tagToRemove); // Function DeadByDaylight.InteractionDefinition.RemoveDisablingTags // (Final|Native|Public|BlueprintCallable) // @ game+0x55414b0
	void OnUpdateMontageStart(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.OnUpdateMontageStart // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnInterruptorUpdateStart(struct UInterruptionDefinition* currentInterruption, struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee); // Function DeadByDaylight.InteractionDefinition.OnInterruptorUpdateStart // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionUpdateTick(struct ADBDPlayer* Player, float DeltaTime); // Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateTick // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionUpdateStart(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateStart // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionUpdateMontageReachedMiddle(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateMontageReachedMiddle // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionUpdateEnd(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.OnInteractionUpdateEnd // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionInterruptStarted(struct ADBDPlayer* Player, struct UInterruptionDefinition* currentInterruption, struct ADBDPlayer* interruptingPlayer); // Function DeadByDaylight.InteractionDefinition.OnInteractionInterruptStarted // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionInterruptStart(struct ADBDPlayer* Player, struct UInterruptionDefinition* currentInterruption, struct ADBDPlayer* interruptingPlayer); // Function DeadByDaylight.InteractionDefinition.OnInteractionInterruptStart // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionInterruptEnd(struct ADBDPlayer* Player, struct UInterruptionDefinition* currentInterruption, struct ADBDPlayer* interruptingPlayer); // Function DeadByDaylight.InteractionDefinition.OnInteractionInterruptEnd // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionInit(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.OnInteractionInit // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionFinished(struct ADBDPlayer* Player, bool hasInteractionStarted); // Function DeadByDaylight.InteractionDefinition.OnInteractionFinished // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionExitTick(struct ADBDPlayer* Player, float DeltaTime); // Function DeadByDaylight.InteractionDefinition.OnInteractionExitTick // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionExitStart(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.OnInteractionExitStart // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionExitEnd(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.OnInteractionExitEnd // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionEnterTick(struct ADBDPlayer* Player, float DeltaTime); // Function DeadByDaylight.InteractionDefinition.OnInteractionEnterTick // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionEnterStart(struct ADBDPlayer* Player, float actualSnapTime); // Function DeadByDaylight.InteractionDefinition.OnInteractionEnterStart // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionEnterEnd(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.OnInteractionEnterEnd // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionCancelled(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.OnInteractionCancelled // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractionAnimNotifyEvent(struct FName NotifyId, struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.OnInteractionAnimNotifyEvent // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	bool IsSupportedCharacterType(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.IsSupportedCharacterType // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5541410
	bool IsInterruptionPossible(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee, struct UInterruptionDefinition* interruption); // Function DeadByDaylight.InteractionDefinition.IsInterruptionPossible // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x55412f0
	bool IsInteractionUsingOffering(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.IsInteractionUsingOffering // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x5541250
	bool IsInteractionPossibleClient(struct ADBDPlayer* Player, enum class EInputInteractionType interactionType); // Function DeadByDaylight.InteractionDefinition.IsInteractionPossibleClient // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x5541180
	bool IsInteractionPossibleBP(struct ADBDPlayer* Player, enum class EInputInteractionType interactionType); // Function DeadByDaylight.InteractionDefinition.IsInteractionPossibleBP // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x55410b0
	bool IsInteractionPossible(struct ADBDPlayer* Player, enum class EInputInteractionType interactionType, bool performClientCheck, bool performHeightCheck, bool isBotPredictionCheck); // Function DeadByDaylight.InteractionDefinition.IsInteractionPossible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540ee0
	bool IsInteractionDone(struct ADBDPlayer* Player, enum class EInputInteractionType interactionType); // Function DeadByDaylight.InteractionDefinition.IsInteractionDone // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x5540e10
	bool IsInteractableInPlayerView(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.IsInteractableInPlayerView // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540d70
	bool IsInputPressed(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.IsInputPressed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540cd0
	bool IsCharacterFacingInteractorDirection(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.IsCharacterFacingInteractorDirection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540c30
	bool IsCancelable(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.IsCancelable // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x5540b90
	void InteractionInterruptedDelegate__DelegateSignature(); // DelegateFunction DeadByDaylight.InteractionDefinition.InteractionInterruptedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void InteractionFinishedDelegate__DelegateSignature(); // DelegateFunction DeadByDaylight.InteractionDefinition.InteractionFinishedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void InteractionEnteredDelegate__DelegateSignature(struct ADBDPlayer* Player); // DelegateFunction DeadByDaylight.InteractionDefinition.InteractionEnteredDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	struct FAnimationMontageDescriptor GetUpdateMontage(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetUpdateMontage // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5540ad0
	float GetUpdateAnimationPlayRate(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetUpdateAnimationPlayRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540a30
	struct FMontagePlaybackDefinition GetUpdateAnimationPlayBackDefinition(struct ADBDPlayer* Player, bool Follower); // Function DeadByDaylight.InteractionDefinition.GetUpdateAnimationPlayBackDefinition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540920
	float GetSnapTimeAtStart(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetSnapTimeAtStart // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540880
	float GetSnapTime(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetSnapTime // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55407e0
	struct FName GetSnapSocketName(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetSnapSocketName // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x5540730
	struct FVector GetSnapPointPositionAtStart(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetSnapPointPositionAtStart // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540680
	struct FVector GetSnapPointPosition(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetSnapPointPosition // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55405d0
	float GetSnapDistanceAtStart(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetSnapDistanceAtStart // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540530
	float GetSnapDistance(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetSnapDistance // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5540490
	struct FVector GetSlashableRelativeLocation(); // Function DeadByDaylight.InteractionDefinition.GetSlashableRelativeLocation // (Native|Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x5540450
	enum class EInputInteractionType GetSecondaryActionInputType(struct UObject* WorldContextObject); // Function DeadByDaylight.InteractionDefinition.GetSecondaryActionInputType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55403b0
	struct FRotator GetRotationToSnapPointAtStart(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetRotationToSnapPointAtStart // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540300
	struct FRotator GetRotationToSnapPoint(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetRotationToSnapPoint // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5540250
	struct ADBDPlayer* GetPlayerDependency(struct ADBDPlayer* interactingPlayer); // Function DeadByDaylight.InteractionDefinition.GetPlayerDependency // (Native|Event|Public|BlueprintEvent) // @ game+0x55401b0
	struct TArray<struct UInterruptionDefinition*> GetInterruptionDefinitions(); // Function DeadByDaylight.InteractionDefinition.GetInterruptionDefinitions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5540120
	struct UInteractor* GetInteractor(); // Function DeadByDaylight.InteractionDefinition.GetInteractor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55400f0
	float GetInteractionTimeMultiplier(struct ADBDPlayer* Character); // Function DeadByDaylight.InteractionDefinition.GetInteractionTimeMultiplier // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x5540050
	float GetInteractionTime(struct ADBDPlayer* Character); // Function DeadByDaylight.InteractionDefinition.GetInteractionTime // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553ffb0
	struct FString GetInteractionText(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetInteractionText // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x553fed0
	float GetInteractionExitTime(struct ADBDPlayer* Character); // Function DeadByDaylight.InteractionDefinition.GetInteractionExitTime // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x553fe30
	struct FText GetInteractionDescriptionText(); // Function DeadByDaylight.InteractionDefinition.GetInteractionDescriptionText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553fe00
	struct AInteractable* GetInteractable(); // Function DeadByDaylight.InteractionDefinition.GetInteractable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553fdd0
	struct FVector GetFocalPointPosition(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetFocalPointPosition // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x553fd20
	struct FAnimationMontageDescriptor GetExitMontage(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetExitMontage // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x553fc60
	float GetExitAnimationPlayRate(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetExitAnimationPlayRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553fbc0
	struct FMontagePlaybackDefinition GetExitAnimationPlayBackDefinition(struct ADBDPlayer* Player, bool Follower); // Function DeadByDaylight.InteractionDefinition.GetExitAnimationPlayBackDefinition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553fab0
	struct FAnimationMontageDescriptor GetEnterMontage(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetEnterMontage // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x553f9f0
	struct FMontagePlaybackDefinition GetEnterAnimationPlayBackDefinition(struct ADBDPlayer* Player, bool Follower); // Function DeadByDaylight.InteractionDefinition.GetEnterAnimationPlayBackDefinition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553f8e0
	float GetChargePercent(); // Function DeadByDaylight.InteractionDefinition.GetChargePercent // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553f8a0
	bool GetAllowNavigation(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetAllowNavigation // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x553f800
	struct FVector GetActualSnapPointPositionAtStart(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetActualSnapPointPositionAtStart // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x553f750
	struct FVector GetActualSnapPointPosition(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetActualSnapPointPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x553f6a0
	struct TArray<struct AActor*> GetActorsToIgnoreOverlap(); // Function DeadByDaylight.InteractionDefinition.GetActorsToIgnoreOverlap // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x553f620
	float GetActorHeightDelta(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.GetActorHeightDelta // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553f580
	float GetActionSpeedMultiplier(struct ADBDPlayer* Character); // Function DeadByDaylight.InteractionDefinition.GetActionSpeedMultiplier // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553f4e0
	bool DoesPlayerHaveClearPath(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.DoesPlayerHaveClearPath // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553f440
	void CompleteCharge(struct ADBDPlayer* Character); // Function DeadByDaylight.InteractionDefinition.CompleteCharge // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x553f3b0
	enum class EInteractionComparisonPriority ComparePriorityToInteraction(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.InteractionDefinition.ComparePriorityToInteraction // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x553f310
	bool CanOverrideInteraction(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.InteractionDefinition.CanOverrideInteraction // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x553f270
	float CalculateSnapTimeForConstantSpeed(struct ADBDPlayer* Player, float Speed); // Function DeadByDaylight.InteractionDefinition.CalculateSnapTimeForConstantSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553f1a0
	float CalculateSnapTimeForConstantMaxNormalMovementSpeed(struct ADBDPlayer* Player, float speedBoost); // Function DeadByDaylight.InteractionDefinition.CalculateSnapTimeForConstantMaxNormalMovementSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553f0d0
	void Authority_OnInteractionAuthorized(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDefinition.Authority_OnInteractionAuthorized // (BlueprintAuthorityOnly|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void AttachToZone(struct UPrimitiveComponent* zone); // Function DeadByDaylight.InteractionDefinition.AttachToZone // (Final|Native|Public|BlueprintCallable) // @ game+0x553f040
	void AttachToInteractor(struct UInteractor* Interactor); // Function DeadByDaylight.InteractionDefinition.AttachToInteractor // (Final|Native|Public|BlueprintCallable) // @ game+0x553efb0
	void AddMutuallyExclusiveInteraction(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.InteractionDefinition.AddMutuallyExclusiveInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x553ef20
	void AddDisablingTags(struct FGameplayTag tagToAdd); // Function DeadByDaylight.InteractionDefinition.AddDisablingTags // (Final|Native|Public|BlueprintCallable) // @ game+0x553ee80
};

// Class DeadByDaylight.ChargeableInteractionDefinition
// Size: 0x760 (Inherited: 0x630)
struct UChargeableInteractionDefinition : UInteractionDefinition {
	char pad_630[0x18]; // 0x630(0x18)
	struct FMulticastInlineDelegate SkillCheckResponseAestheticDelegate; // 0x648(0x10)
	struct FMulticastInlineDelegate SkillCheckResponseAuthorityDelegate; // 0x658(0x10)
	bool StopInteractionOnChargeComplete; // 0x668(0x01)
	bool HasProgressivelyHarderSkillChecks; // 0x669(0x01)
	char pad_66A[0x2]; // 0x66a(0x02)
	float ProgressiveDifficultyModifier; // 0x66c(0x04)
	enum class EChargeableInteractionBarType ProgressBarType; // 0x670(0x01)
	char pad_671[0x7]; // 0x671(0x07)
	struct TArray<float> ProgressPips; // 0x678(0x10)
	bool HideProgressBar; // 0x688(0x01)
	bool ShowItemIcon; // 0x689(0x01)
	char pad_68A[0x6]; // 0x68a(0x06)
	struct UChargeableComponent* _chargeableComponent; // 0x690(0x08)
	float _tutorialChargeableMultiplier; // 0x698(0x04)
	char pad_69C[0x54]; // 0x69c(0x54)
	bool ShowSpeedProficiencyForMultipleInteractors; // 0x6f0(0x01)
	char pad_6F1[0x7]; // 0x6f1(0x07)
	struct FGameplayTagContainer _interactionSpecificActionSpeedTags; // 0x6f8(0x20)
	struct FGameplayTagContainer _interactionSpecificActionSpeedMultiplicativeTags; // 0x718(0x20)
	struct FGameplayTagContainer _interactionSpecificActionDurationAdditiveTags; // 0x738(0x20)
	char pad_758[0x8]; // 0x758(0x08)

	bool ShouldShowSpeedProficiencyForMultipleInteractors(); // Function DeadByDaylight.ChargeableInteractionDefinition.ShouldShowSpeedProficiencyForMultipleInteractors // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a6e90
	void SetTutorialChargeableMultiplier(float multiplierValue); // Function DeadByDaylight.ChargeableInteractionDefinition.SetTutorialChargeableMultiplier // (Final|Native|Public|BlueprintCallable) // @ game+0x54a6e10
	void SetSpeedBase(float speedBase); // Function DeadByDaylight.ChargeableInteractionDefinition.SetSpeedBase // (Final|Native|Public|BlueprintCallable) // @ game+0x54a6d90
	void SetSecondsToCharge(float SecondsToCharge); // Function DeadByDaylight.ChargeableInteractionDefinition.SetSecondsToCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x54a6d10
	void SetChargeableComponent(struct UChargeableComponent* ChargeableComponent, bool isNullAllowed); // Function DeadByDaylight.ChargeableInteractionDefinition.SetChargeableComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x54a6b40
	void OnSkillCheckResponseAuthorityBP(struct ADBDPlayer* Player, bool success, bool Bonus, bool hadInput, enum class ESkillCheckCustomType Type); // Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAuthorityBP // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnSkillCheckResponseAuthority(bool success, bool Bonus, struct ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, enum class ESkillCheckCustomType Type); // Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAuthority // (Native|Protected) // @ game+0x54a6940
	void OnSkillCheckResponseAestheticBP(struct ADBDPlayer* Player, bool success, bool Bonus, bool hadInput, enum class ESkillCheckCustomType Type); // Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAestheticBP // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnSkillCheckResponseAesthetic(bool success, bool Bonus, struct ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, enum class ESkillCheckCustomType Type); // Function DeadByDaylight.ChargeableInteractionDefinition.OnSkillCheckResponseAesthetic // (Native|Protected) // @ game+0x54a6740
	void OnInteractionCompletionStateChanged(struct ADBDPlayer* Player, bool complete); // Function DeadByDaylight.ChargeableInteractionDefinition.OnInteractionCompletionStateChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	bool IsChargeComplete(struct ADBDPlayer* currentlyInteractingPlayer); // Function DeadByDaylight.ChargeableInteractionDefinition.IsChargeComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a6560
	bool HasSkillCheckHappened(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.HasSkillCheckHappened // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a6410
	float GetTunableValue(struct FName TunableValueID, float defaultValue); // Function DeadByDaylight.ChargeableInteractionDefinition.GetTunableValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a6270
	float GetSuccessProbability(); // Function DeadByDaylight.ChargeableInteractionDefinition.GetSuccessProbability // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54a6180
	float GetSkillCheckProbability(struct ADBDPlayer* interactingPlayer); // Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckProbability // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a60e0
	float GetSkillCheckFailureTimePenalty(); // Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckFailureTimePenalty // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x54a60a0
	float GetSkillCheckFailurePercentPenalty(struct ADBDPlayer* Player); // Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckFailurePercentPenalty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a6000
	float GetSkillCheckDifficulityModifier(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckDifficulityModifier // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54a5f60
	float GetSkillCheckCharge(struct ADBDPlayer* Player, bool success, bool Bonus, enum class ESkillCheckCustomType Type); // Function DeadByDaylight.ChargeableInteractionDefinition.GetSkillCheckCharge // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x54a5dd0
	int32_t GetPipsPassed(); // Function DeadByDaylight.ChargeableInteractionDefinition.GetPipsPassed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a5d00
	float GetPerkMultiplier(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.GetPerkMultiplier // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54a5c30
	float GetMultiplicativeLuckBonus(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.GetMultiplicativeLuckBonus // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54a5b60
	float GetMaxCharge(); // Function DeadByDaylight.ChargeableInteractionDefinition.GetMaxCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a5b30
	float GetItemEfficiencyModifier(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.GetItemEfficiencyModifier // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54a5a60
	float GetInteractionChargeSpeedMultiplier(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.GetInteractionChargeSpeedMultiplier // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x4d7fe70
	float GetGoodSkillCheckSuccessPercentReward(struct ADBDPlayer* Player); // Function DeadByDaylight.ChargeableInteractionDefinition.GetGoodSkillCheckSuccessPercentReward // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a59c0
	float GetChargeSpeedModifier(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.GetChargeSpeedModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a5710
	float GetChargeAmountForTime(float DeltaSeconds, struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.GetChargeAmountForTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a5610
	struct UChargeableComponent* GetChargeableComponent(); // Function DeadByDaylight.ChargeableInteractionDefinition.GetChargeableComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a57b0
	float GetBonusSkillCheckZoneSizeModifier(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.GetBonusSkillCheckZoneSizeModifier // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54a5570
	float GetBonusSkillCheckSuccessPercentReward(struct ADBDPlayer* Player); // Function DeadByDaylight.ChargeableInteractionDefinition.GetBonusSkillCheckSuccessPercentReward // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a54d0
	float GetAdditiveLuckBonus(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.GetAdditiveLuckBonus // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54a5430
	float GetAdditiveChargeTimeReductionAsMultiplier(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.GetAdditiveChargeTimeReductionAsMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a5390
	void Authority_ResetCharge(struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.Authority_ResetCharge // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a5100
	void Authority_ChargeWithItem(float DeltaSeconds, struct ACollectable* Item, struct ADBDPlayer* Character); // Function DeadByDaylight.ChargeableInteractionDefinition.Authority_ChargeWithItem // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a4fc0
	void Authority_AddCharge(float DeltaSeconds, struct ADBDPlayer* Character, bool isChargeFromItem); // Function DeadByDaylight.ChargeableInteractionDefinition.Authority_AddCharge // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a4cc0
};

// Class DeadByDaylight.Interactable
// Size: 0x338 (Inherited: 0x230)
struct AInteractable : AActor {
	char pad_230[0x68]; // 0x230(0x68)
	struct UPrimitiveComponent* _singleZone; // 0x298(0x08)
	bool _useSingleZone; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)
	struct TArray<struct UInteractor*> _interactors; // 0x2a8(0x10)
	struct UInteractableTransformOptimizer* _transformOptimizer; // 0x2b8(0x08)
	char pad_2C0[0x20]; // 0x2c0(0x20)
	struct TMap<struct UPrimitiveComponent*, struct FInteractionArray> _zoneToInteractions; // 0x2e0(0x50)
	struct UGameplayTagContainerComponent* _interactableObjectState; // 0x330(0x08)

	void SetSingleZone(struct UPrimitiveComponent* zone); // Function DeadByDaylight.Interactable.SetSingleZone // (Final|Native|Protected|BlueprintCallable) // @ game+0x553bce0
	void SetInteractorsUsable(bool usable, struct UInteractor* exception); // Function DeadByDaylight.Interactable.SetInteractorsUsable // (Final|Native|Public|BlueprintCallable) // @ game+0x553bc10
	void PreInterruptionEvent(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee, struct UInterruptionDefinition* interruption); // Function DeadByDaylight.Interactable.PreInterruptionEvent // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnLevelReadyToPlay_Native(); // Function DeadByDaylight.Interactable.OnLevelReadyToPlay_Native // (Native|Protected) // @ game+0x553b9d0
	void OnLevelReadyToPlay(); // Function DeadByDaylight.Interactable.OnLevelReadyToPlay // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnInteractorLockChanged(bool locked, struct ADBDPlayer* interactingPlayer); // Function DeadByDaylight.Interactable.OnInteractorLockChanged // (Final|Native|Private) // @ game+0x553b900
	bool IsInterruptionPossible(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee, struct UInteractor* Interactor, struct UInteractionDefinition* definition, struct UInterruptionDefinition* interruption); // Function DeadByDaylight.Interactable.IsInterruptionPossible // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x553b2d0
	bool IsInteractionDone(struct ADBDPlayer* Player, struct UInteractor* Interactor, struct UInteractionDefinition* definition, enum class EInputInteractionType interactionType); // Function DeadByDaylight.Interactable.IsInteractionDone // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x553b170
	bool IsInteractingWith(struct ADBDPlayer* Player); // Function DeadByDaylight.Interactable.IsInteractingWith // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553b0d0
	bool HasAnOngoingInteraction(); // Function DeadByDaylight.Interactable.HasAnOngoingInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553ad10
	struct ADBDPlayer* GetPlayerOwner(); // Function DeadByDaylight.Interactable.GetPlayerOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553ace0
	struct UGameplayTagContainerComponent* GetObjectState(); // Function DeadByDaylight.Interactable.GetObjectState // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553ac70
	struct TArray<struct UInteractor*> GetInteractors(); // Function DeadByDaylight.Interactable.GetInteractors // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553abf0
	struct TArray<struct ADBDPlayer*> GetInteractingPlayersRaw(); // Function DeadByDaylight.Interactable.GetInteractingPlayersRaw // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553ab70
	struct FVector GetFocalPointPosition(struct ADBDPlayer* Player, struct UInteractionDefinition* definition); // Function DeadByDaylight.Interactable.GetFocalPointPosition // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x553a940
	void AuthorityRequestCancelOngoingInteractions(bool onlyOnHitCancelableInteractions); // Function DeadByDaylight.Interactable.AuthorityRequestCancelOngoingInteractions // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x553a5b0
	struct TArray<struct ADBDPlayer*> Authority_GetInteractingPlayers(); // Function DeadByDaylight.Interactable.Authority_GetInteractingPlayers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553a670
	void AttachEveryInteractionToZone(struct UPrimitiveComponent* zone); // Function DeadByDaylight.Interactable.AttachEveryInteractionToZone // (Final|Native|Public|BlueprintCallable) // @ game+0x553a520
};

// Class DeadByDaylight.OutlineUpdateStrategy
// Size: 0xc0 (Inherited: 0xb8)
struct UOutlineUpdateStrategy : UActorComponent {
	struct UDBDOutlineComponent* _outlineComponent; // 0xb8(0x08)
};

// Class DeadByDaylight.GameplayModifierContainer
// Size: 0x218 (Inherited: 0xf8)
struct UGameplayModifierContainer : UBaseModifierContainer {
	char pad_F8[0x90]; // 0xf8(0x90)
	struct FModifierTickableConditionReplicatedData _tickableConditionsData; // 0x188(0x18)
	struct TArray<struct FName> _tags; // 0x1a0(0x10)
	bool UseApplyFunction; // 0x1b0(0x01)
	bool BroadcastStatusView; // 0x1b1(0x01)
	char pad_1B2[0x2]; // 0x1b2(0x02)
	struct FName StatusViewID; // 0x1b4(0x0c)
	bool _autoInitializeOnBeginPlay; // 0x1c0(0x01)
	bool _canOptimizeTickActivation; // 0x1c1(0x01)
	char pad_1C2[0x46]; // 0x1c2(0x46)
	struct UTimerObject* _activationTimer; // 0x208(0x08)
	char pad_210[0x8]; // 0x210(0x08)

	void UpdateIsApplicable(); // Function DeadByDaylight.GameplayModifierContainer.UpdateIsApplicable // (Final|Native|Public|BlueprintCallable) // @ game+0x552bcd0
	void UnlistenToDispatcherGameEvent(struct FGameplayTag EventType); // Function DeadByDaylight.GameplayModifierContainer.UnlistenToDispatcherGameEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x552bae0
	void UnlistenToAllDispatcherGameEvents(); // Function DeadByDaylight.GameplayModifierContainer.UnlistenToAllDispatcherGameEvents // (Final|Native|Protected|BlueprintCallable) // @ game+0x552baa0
	void SetUseApplyFunction(bool Use); // Function DeadByDaylight.GameplayModifierContainer.SetUseApplyFunction // (Final|Native|Public|BlueprintCallable) // @ game+0x552ba10
	void SetModifierValue(struct FGameplayTag Type, float GameplayModifierValue); // Function DeadByDaylight.GameplayModifierContainer.SetModifierValue // (Final|Native|Public|BlueprintCallable) // @ game+0x552b890
	void SetFlag(struct FGameplayTag flag, bool flagValue); // Function DeadByDaylight.GameplayModifierContainer.SetFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x552b7a0
	void RemoveModifier(struct FGameplayTag Type); // Function DeadByDaylight.GameplayModifierContainer.RemoveModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x552b700
	void RemoveAllModifiers(); // Function DeadByDaylight.GameplayModifierContainer.RemoveAllModifiers // (Final|Native|Public|BlueprintCallable) // @ game+0x552b6e0
	void RemoveAllFlags(); // Function DeadByDaylight.GameplayModifierContainer.RemoveAllFlags // (Final|Native|Public|BlueprintCallable) // @ game+0x552b6c0
	void OnRep_TickableConditionsData(); // Function DeadByDaylight.GameplayModifierContainer.OnRep_TickableConditionsData // (Final|Native|Protected) // @ game+0x552b2d0
	void OnRep_ModifierData(); // Function DeadByDaylight.GameplayModifierContainer.OnRep_ModifierData // (Native|Protected) // @ game+0x552b2b0
	void OnRep_ActivationTimer(); // Function DeadByDaylight.GameplayModifierContainer.OnRep_ActivationTimer // (Final|Native|Private) // @ game+0x552b270
	void OnLevelReadyToPlay(); // Function DeadByDaylight.GameplayModifierContainer.OnLevelReadyToPlay // (Native|Event|Protected|BlueprintEvent) // @ game+0x552b110
	void OnInitialized_Internal(); // Function DeadByDaylight.GameplayModifierContainer.OnInitialized_Internal // (Native|Public) // @ game+0x552b010
	void OnInitialized(); // Function DeadByDaylight.GameplayModifierContainer.OnInitialized // (Native|Event|Public|BlueprintEvent) // @ game+0x552aff0
	void OnGameEventDispatched(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.GameplayModifierContainer.OnGameEventDispatched // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x552ae40
	void OnApplyEnd(); // Function DeadByDaylight.GameplayModifierContainer.OnApplyEnd // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnApplyBegin(); // Function DeadByDaylight.GameplayModifierContainer.OnApplyBegin // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void ListenToDispatcherGameEvent(struct FGameplayTag EventType); // Function DeadByDaylight.GameplayModifierContainer.ListenToDispatcherGameEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x552a7c0
	bool IsStatusViewActive(); // Function DeadByDaylight.GameplayModifierContainer.IsStatusViewActive // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x552a790
	bool IsActivationTimerDone(); // Function DeadByDaylight.GameplayModifierContainer.IsActivationTimerDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a730
	bool IsActivationTimerActive(); // Function DeadByDaylight.GameplayModifierContainer.IsActivationTimerActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a700
	bool HasModifierOfType(struct FGameplayTag Type); // Function DeadByDaylight.GameplayModifierContainer.HasModifierOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a650
	bool HasFlag(struct FGameplayTag flag); // Function DeadByDaylight.GameplayModifierContainer.HasFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a5a0
	float GetRemainingLifetime(); // Function DeadByDaylight.GameplayModifierContainer.GetRemainingLifetime // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x552a560
	float GetPercentageFill(); // Function DeadByDaylight.GameplayModifierContainer.GetPercentageFill // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x552a520
	struct ADBDPlayer* GetOwningPlayer(); // Function DeadByDaylight.GameplayModifierContainer.GetOwningPlayer // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a4f0
	struct UGameplayModifierContainer* GetOriginatingEffect(); // Function DeadByDaylight.GameplayModifierContainer.GetOriginatingEffect // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x552a460
	float GetModifierValue(struct FGameplayTag Type); // Function DeadByDaylight.GameplayModifierContainer.GetModifierValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a3b0
	int32_t GetLevelToDisplay(); // Function DeadByDaylight.GameplayModifierContainer.GetLevelToDisplay // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a380
	enum class EInventoryItemType GetInventoryItemType(); // Function DeadByDaylight.GameplayModifierContainer.GetInventoryItemType // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x482b080
	int32_t GetIconFilePathIndex(); // Function DeadByDaylight.GameplayModifierContainer.GetIconFilePathIndex // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x552a350
	float GetActivationTimerRemainingTime(); // Function DeadByDaylight.GameplayModifierContainer.GetActivationTimerRemainingTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a320
	float GetActivationTimerPercentRemaining(); // Function DeadByDaylight.GameplayModifierContainer.GetActivationTimerPercentRemaining // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a2f0
	float GetActivationTimerElapsedTimePercent(); // Function DeadByDaylight.GameplayModifierContainer.GetActivationTimerElapsedTimePercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a2c0
	float GetActivationTimerElapsedTime(); // Function DeadByDaylight.GameplayModifierContainer.GetActivationTimerElapsedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a290
	float GetActivationTimerDuration(); // Function DeadByDaylight.GameplayModifierContainer.GetActivationTimerDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a260
	void FireActiveStatusViewEvent(struct FName StatusViewID, struct FName uniqueSourceID, struct FStatusViewSource StatusViewSource); // Function DeadByDaylight.GameplayModifierContainer.FireActiveStatusViewEvent // (Final|Native|Protected|BlueprintCallable|Const) // @ game+0x5529e00
	void Authority_TriggerActivationTimer(float activationTime); // Function DeadByDaylight.GameplayModifierContainer.Authority_TriggerActivationTimer // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5529d80
	void Authority_SetActivationTimerPaused(bool paused); // Function DeadByDaylight.GameplayModifierContainer.Authority_SetActivationTimerPaused // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5529bd0
	void Authority_InstantiateGameplayModifierConditions(); // Function DeadByDaylight.GameplayModifierContainer.Authority_InstantiateGameplayModifierConditions // (Final|Native|Public|BlueprintCallable) // @ game+0x5529aa0
	void Authority_ClearActivationTimer(); // Function DeadByDaylight.GameplayModifierContainer.Authority_ClearActivationTimer // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5529a80
	void Apply(float DeltaTime); // Function DeadByDaylight.GameplayModifierContainer.Apply // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	struct UBaseModifierCondition* AddCondition(struct UBaseModifierCondition* conditionType); // Function DeadByDaylight.GameplayModifierContainer.AddCondition // (Final|Native|Public|BlueprintCallable) // @ game+0x55297e0
};

// Class DeadByDaylight.StatusEffect
// Size: 0x350 (Inherited: 0x218)
struct UStatusEffect : UGameplayModifierContainer {
	char pad_218[0x48]; // 0x218(0x48)
	struct FGameplayModifierData ModifierData; // 0x260(0x30)
	bool shouldDisplay; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	float customParam; // 0x294(0x04)
	bool _removeOnRemainingLifetimeEnded; // 0x298(0x01)
	bool BroadcastAsStatusEffectWhenApplicable; // 0x299(0x01)
	bool BroadcastAsStatusEffectByActivationTimer; // 0x29a(0x01)
	bool BroadcastAsStatusEffectWhenLifeRemains; // 0x29b(0x01)
	bool BroadcastAsStatusEffectByFunction; // 0x29c(0x01)
	bool BroadcastAsStatusEffectAlways; // 0x29d(0x01)
	bool BroadcastOriginatorGameEventNotificationWhenFirstApplicable; // 0x29e(0x01)
	bool ShouldHideStatusEffectIconForOriginatingPlayer; // 0x29f(0x01)
	bool _forceActivationTimerDisplay; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)
	struct FStatusEffectInitializationData _statusInitializationData; // 0x2a8(0x28)
	char pad_2D0[0x38]; // 0x2d0(0x38)
	struct TArray<struct TSoftClassPtr<UObject>> _nonStackingEffects; // 0x308(0x10)
	char pad_318[0x38]; // 0x318(0x38)

	bool ShouldDisplayStatusEffectIcon(); // Function DeadByDaylight.StatusEffect.ShouldDisplayStatusEffectIcon // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x55b43f0
	void SetStatusEffectIconPercentage(float value); // Function DeadByDaylight.StatusEffect.SetStatusEffectIconPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x55b42d0
	void SetShouldDisplay(bool On); // Function DeadByDaylight.StatusEffect.SetShouldDisplay // (Final|Native|Public|BlueprintCallable) // @ game+0x55b4240
	void OnShouldOriginatingPlayerChange(); // Function DeadByDaylight.StatusEffect.OnShouldOriginatingPlayerChange // (Native|Event|Protected|BlueprintEvent) // @ game+0x55b3f90
	void OnShouldDisplayChanged(bool CurrentValue); // Function DeadByDaylight.StatusEffect.OnShouldDisplayChanged // (Native|Event|Protected|BlueprintEvent) // @ game+0x55b3f00
	void OnRep_StatusInitializationData(); // Function DeadByDaylight.StatusEffect.OnRep_StatusInitializationData // (Final|Native|Private) // @ game+0x55b3ee0
	void OnRep_ShouldOriginatingPlayerChange(); // Function DeadByDaylight.StatusEffect.OnRep_ShouldOriginatingPlayerChange // (Final|Native|Protected) // @ game+0x55b3ec0
	void OnRep_ShouldDisplay(); // Function DeadByDaylight.StatusEffect.OnRep_ShouldDisplay // (Final|Native|Protected) // @ game+0x55b3ea0
	void Multicast_SetRemainingLifetimeInitialized(bool remainingLifetimeInitialized); // Function DeadByDaylight.StatusEffect.Multicast_SetRemainingLifetimeInitialized // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x55b3c60
	void Multicast_SetRemainingLifetime(float lifetime); // Function DeadByDaylight.StatusEffect.Multicast_SetRemainingLifetime // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x55b3bd0
	bool IsOriginatorHooked(); // Function DeadByDaylight.StatusEffect.IsOriginatorHooked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3b70
	bool IsOriginatorAlive(); // Function DeadByDaylight.StatusEffect.IsOriginatorAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3b40
	bool IsKillerInOriginatorRange(float AdditiveRangeModifier); // Function DeadByDaylight.StatusEffect.IsKillerInOriginatorRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3ab0
	bool IsInOriginatorRange(); // Function DeadByDaylight.StatusEffect.IsInOriginatorRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3a80
	void InitializeLifetime(float lifetime); // Function DeadByDaylight.StatusEffect.InitializeLifetime // (Final|Native|Public|BlueprintCallable) // @ game+0x55b3920
	enum class EStatusEffectType GetStatusEffectType(); // Function DeadByDaylight.StatusEffect.GetStatusEffectType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5544cf0
	float GetStatusEffectCooldownRate(); // Function DeadByDaylight.StatusEffect.GetStatusEffectCooldownRate // (Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3610
	bool GetShouldDisplay(); // Function DeadByDaylight.StatusEffect.GetShouldDisplay // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x5545920
	struct ADBDPlayer* GetOriginatingPlayer(); // Function DeadByDaylight.StatusEffect.GetOriginatingPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3590
	float GetLifetimeDuration(); // Function DeadByDaylight.StatusEffect.GetLifetimeDuration // (Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3520
	float GetCustomParam(); // Function DeadByDaylight.StatusEffect.GetCustomParam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3500
	void FireActiveStatusEffectEvent(float Percentage, int32_t levelToDisplay); // Function DeadByDaylight.StatusEffect.FireActiveStatusEffectEvent // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x55b3430
	void BroadcastOriginatorGameEventNotification(); // Function DeadByDaylight.StatusEffect.BroadcastOriginatorGameEventNotification // (Final|Native|Protected|BlueprintCallable) // @ game+0x55b3200
	void BroadcastGameEventNotification(struct FGameplayNotificationData notificationData, bool addToHistory); // Function DeadByDaylight.StatusEffect.BroadcastGameEventNotification // (Final|Native|Protected|BlueprintCallable) // @ game+0x55b3010
	void Authority_SetRemainingLifetime(float lifetime); // Function DeadByDaylight.StatusEffect.Authority_SetRemainingLifetime // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55b2f80
	void Authority_RemoveSelf(); // Function DeadByDaylight.StatusEffect.Authority_RemoveSelf // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55b2f60
	void Authority_OnOriginatingPlayerEndPlay(struct AActor* Actor, enum class EEndPlayReason EndPlayReason); // Function DeadByDaylight.StatusEffect.Authority_OnOriginatingPlayerEndPlay // (Final|Native|Private) // @ game+0x55b2e90
	void Authority_EndSelf(); // Function DeadByDaylight.StatusEffect.Authority_EndSelf // (BlueprintAuthorityOnly|Native|Event|Public|BlueprintEvent) // @ game+0x55b2e70
};

// Class DeadByDaylight.QuestEventEvaluatorBase
// Size: 0xb8 (Inherited: 0x30)
struct UQuestEventEvaluatorBase : UObject {
	char pad_30[0x20]; // 0x30(0x20)
	struct ADBDPlayer* _dbdPlayer; // 0x50(0x08)
	char pad_58[0xa]; // 0x58(0x0a)
	enum class EConditionNeedsType _conditionNeedsType; // 0x62(0x01)
	char pad_63[0x5]; // 0x63(0x05)
	struct TArray<struct UEvaluatorCondition*> _evaluatorConditionsClass; // 0x68(0x10)
	struct TArray<struct UEvaluatorCondition*> _evaluatorConditions; // 0x78(0x10)
	char pad_88[0x30]; // 0x88(0x30)

	void OnGameEvent(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.QuestEventEvaluatorBase.OnGameEvent // (Native|Protected|HasOutParms) // @ game+0x5588b40
};

// Class DeadByDaylight.EvaluatorCondition
// Size: 0x48 (Inherited: 0x30)
struct UEvaluatorCondition : UObject {
	enum class EConditionSubject _conditionSubject; // 0x30(0x01)
	char pad_31[0x17]; // 0x31(0x17)
};

// Class DeadByDaylight.SpecialBehaviourInteractable
// Size: 0x378 (Inherited: 0x338)
struct ASpecialBehaviourInteractable : AInteractable {
	char pad_338[0x30]; // 0x338(0x30)
	struct TWeakObjectPtr<struct ADBDPlayerState> _specialBehaviourOwner; // 0x368(0x08)
	char pad_370[0x8]; // 0x370(0x08)

	void OnRep_SpecialBehaviourOwner(); // Function DeadByDaylight.SpecialBehaviourInteractable.OnRep_SpecialBehaviourOwner // (Final|Native|Private) // @ game+0x55ad230
};

// Class DeadByDaylight.SourceBasedOutlineUpdateStrategy
// Size: 0x138 (Inherited: 0xc0)
struct USourceBasedOutlineUpdateStrategy : UOutlineUpdateStrategy {
	struct FLinearColor _defaultColorForSurvivor; // 0xc0(0x10)
	struct FLinearColor _defaultColorForSlasher; // 0xd0(0x10)
	char pad_E0[0x58]; // 0xe0(0x58)

	void ResetReveal(); // Function DeadByDaylight.SourceBasedOutlineUpdateStrategy.ResetReveal // (Final|Native|Public|BlueprintCallable) // @ game+0x55ad2e0
	void RemoveRevealSource(struct UObject* Source); // Function DeadByDaylight.SourceBasedOutlineUpdateStrategy.RemoveRevealSource // (Final|Native|Public|BlueprintCallable) // @ game+0x55ad250
	void ChangeDefaultColorForSurvivor(struct FLinearColor NewColor); // Function DeadByDaylight.SourceBasedOutlineUpdateStrategy.ChangeDefaultColorForSurvivor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x55abb50
	void ChangeDefaultColorForSlasher(struct FLinearColor NewColor); // Function DeadByDaylight.SourceBasedOutlineUpdateStrategy.ChangeDefaultColorForSlasher // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x55abac0
	void AddTimedReveal(struct UObject* Source, struct FLinearColor HighlightColor, int32_t Priority, struct TArray<struct ADBDPlayer*>& affectedCharacters, float Duration); // Function DeadByDaylight.SourceBasedOutlineUpdateStrategy.AddTimedReveal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x55ab900
	void AddTimedAndRangedReveal(struct UObject* Source, struct AActor* SourceActor, struct FLinearColor HighlightColor, int32_t Priority, struct TArray<struct ADBDPlayer*>& affectedCharacters, float Duration, float Range); // Function DeadByDaylight.SourceBasedOutlineUpdateStrategy.AddTimedAndRangedReveal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x55ab6b0
	void AddRevealWithOptions(struct UObject* Source, struct FLinearColor HighlightColor, int32_t Priority, struct TArray<struct ADBDPlayer*>& affectedCharacters, struct FRevealOptions Options); // Function DeadByDaylight.SourceBasedOutlineUpdateStrategy.AddRevealWithOptions // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x55ab4a0
	void AddReveal(struct UObject* Source, struct FLinearColor HighlightColor, int32_t Priority, struct TArray<struct ADBDPlayer*>& affectedCharacters); // Function DeadByDaylight.SourceBasedOutlineUpdateStrategy.AddReveal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x55ab310
	void AddRangedReveal(struct UObject* Source, struct AActor* SourceActor, struct FLinearColor HighlightColor, int32_t Priority, struct TArray<struct ADBDPlayer*>& affectedCharacters, float Range); // Function DeadByDaylight.SourceBasedOutlineUpdateStrategy.AddRangedReveal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x55ab100
};

// Class DeadByDaylight.SpecialBehaviourIterativeWeightAdjustmentStrategy
// Size: 0x30 (Inherited: 0x30)
struct USpecialBehaviourIterativeWeightAdjustmentStrategy : UObject {
};

// Class DeadByDaylight.DefaultOutlineUpdateStrategy
// Size: 0xe0 (Inherited: 0xc0)
struct UDefaultOutlineUpdateStrategy : UOutlineUpdateStrategy {
	struct FLinearColor _revealedColorToSurvivor; // 0xc0(0x10)
	struct FLinearColor _revealedColorToKiller; // 0xd0(0x10)
};

// Class DeadByDaylight.ActorNavMovementComponent
// Size: 0x168 (Inherited: 0x140)
struct UActorNavMovementComponent : UNavMovementComponent {
	struct AActor* _owningActor; // 0x140(0x08)
	struct UPathFollowingComponent* _pathFollowingComponent; // 0x148(0x08)
	char bPositionCorrected : 1; // 0x150(0x01)
	char pad_150_1 : 7; // 0x150(0x01)
	char pad_151[0x3]; // 0x151(0x03)
	float _maxSpeed; // 0x154(0x04)
	float _acceleration; // 0x158(0x04)
	float _deceleration; // 0x15c(0x04)
	float _brakingDeceleration; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)

	void SetMaxSpeed(float MaxSpeed); // Function DeadByDaylight.ActorNavMovementComponent.SetMaxSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x545fd40
	void SetDeceleration(float Deceleration); // Function DeadByDaylight.ActorNavMovementComponent.SetDeceleration // (Final|Native|Public|BlueprintCallable) // @ game+0x545fb30
	void SetAcceleration(float Acceleration); // Function DeadByDaylight.ActorNavMovementComponent.SetAcceleration // (Final|Native|Public|BlueprintCallable) // @ game+0x545fab0
	struct AActor* GetOwningActor(); // Function DeadByDaylight.ActorNavMovementComponent.GetOwningActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x545eb40
};

// Class DeadByDaylight.AbstractAnalyticsManager
// Size: 0x38 (Inherited: 0x38)
struct UAbstractAnalyticsManager : UGameInstanceSubsystem {
};

// Class DeadByDaylight.ArmIKSensorComponent
// Size: 0x138 (Inherited: 0xb8)
struct UArmIKSensorComponent : UActorComponent {
	struct USkeletalMeshComponent* _mesh; // 0xb8(0x08)
	struct TMap<enum class EArm, struct FArmIKSensorDatum> _arms; // 0xc0(0x50)
	float _capsuleRadius; // 0x110(0x04)
	float _capsuleHalfHeight; // 0x114(0x04)
	float _traceLength; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct UCameraComponent* _owningCamera; // 0x120(0x08)
	char pad_128[0x10]; // 0x128(0x10)
};

// Class DeadByDaylight.DBDAttack
// Size: 0x390 (Inherited: 0xb8)
struct UDBDAttack : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	enum class EAttackType _attackType; // 0xd0(0x01)
	bool _useMontage; // 0xd1(0x01)
	enum class EDetectionZone _damageZone; // 0xd2(0x01)
	enum class EDetectionZone _lockZone; // 0xd3(0x01)
	enum class EDetectionZone _obstructionZone; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
	struct FStatProperty _maxAccelerationMultiplier; // 0xd8(0x88)
	bool _onlyApplyAccelerationMultiplierWhenWalking; // 0x160(0x01)
	char pad_161[0x7]; // 0x161(0x07)
	struct FDBDAttackTargetTracker _targetTracker; // 0x168(0xb8)
	struct TMap<enum class EAttackSubstate, struct UDBDAttackSubstate*> _stateClasses; // 0x220(0x50)
	struct TArray<struct ACharacter*> _localAlreadyHitTargets; // 0x270(0x10)
	struct TArray<struct ADBDPlayer*> _hitTargets; // 0x280(0x10)
	struct TSet<struct ADBDPlayer*> _targetsAwaitingServerValidation; // 0x290(0x50)
	char pad_2E0[0x30]; // 0x2e0(0x30)
	struct TMap<enum class EAttackSubstate, struct UDBDAttackSubstate*> _states; // 0x310(0x50)
	char pad_360[0x27]; // 0x360(0x27)
	enum class EHitValidatorConfigName _hitValidationConfigName; // 0x387(0x01)
	char pad_388[0x8]; // 0x388(0x08)

	void Server_RequestStateChange(enum class EAttackSubstate State); // Function DeadByDaylight.DBDAttack.Server_RequestStateChange // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c3e40
	void Server_HitTarget(struct ADBDPlayer* Target, float TargetLocationTimestamp, struct FActionPredictionKey PredictionKey); // Function DeadByDaylight.DBDAttack.Server_HitTarget // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x54c3d30
	void Server_HitDestroyableActorAttackableComponent(struct UAttackableComponent* AttackableComponent); // Function DeadByDaylight.DBDAttack.Server_HitDestroyableActorAttackableComponent // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54c3ca0
	void Server_ClearTargets(); // Function DeadByDaylight.DBDAttack.Server_ClearTargets // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x4aa7040
	void Multicast_SendPostHitTargetData(struct ADBDPlayer* owningKiller, struct ADBDPlayer* Target, struct FPostAttackData attackData); // Function DeadByDaylight.DBDAttack.Multicast_SendPostHitTargetData // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54c39e0
	void Multicast_RequestStateChange(enum class EAttackSubstate State); // Function DeadByDaylight.DBDAttack.Multicast_RequestStateChange // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54c3960
	void Multicast_HitTarget(struct ADBDPlayer* Target, bool hitCosmeticOnly); // Function DeadByDaylight.DBDAttack.Multicast_HitTarget // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54c3890
	void Multicast_HitAttackableComponent(struct UAttackableComponent* AttackableComponent); // Function DeadByDaylight.DBDAttack.Multicast_HitAttackableComponent // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54c3800
	void Multicast_ClearTargets(); // Function DeadByDaylight.DBDAttack.Multicast_ClearTargets // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x4af1ac0
	void Local_OnMovementChanged(struct ACharacter* Character, enum class EMovementMode PrevMovementMode, char PreviousCustomMode); // Function DeadByDaylight.DBDAttack.Local_OnMovementChanged // (Final|Native|Protected) // @ game+0x54c3620
	void Client_ReceiveHitResult(struct ADBDPlayer* Target, bool IsValid, struct FActionPredictionKey PredictionKey); // Function DeadByDaylight.DBDAttack.Client_ReceiveHitResult // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x54c3130
	void Client_ReceiveAttackSubstateRequestResult(struct FAttackSubstateRequestResult Result); // Function DeadByDaylight.DBDAttack.Client_ReceiveAttackSubstateRequestResult // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x54c3090
};

// Class DeadByDaylight.DBDAttackSubstate
// Size: 0x118 (Inherited: 0x30)
struct UDBDAttackSubstate : UObject {
	struct FStatProperty _duration; // 0x30(0x88)
	struct UCurveFloat* _speedCurve; // 0xb8(0x08)
	struct FName _montage; // 0xc0(0x0c)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct UCurveFloat* _currentCurve; // 0xd0(0x08)
	char pad_D8[0x40]; // 0xd8(0x40)
};

// Class DeadByDaylight.DBDAttackOpenSubstate
// Size: 0x118 (Inherited: 0x118)
struct UDBDAttackOpenSubstate : UDBDAttackSubstate {
};

// Class DeadByDaylight.DBDAttackHittingSubstate
// Size: 0x1a0 (Inherited: 0x118)
struct UDBDAttackHittingSubstate : UDBDAttackSubstate {
	struct FStatProperty _hittingPercentDamageBegin; // 0x118(0x88)
};

// Class DeadByDaylight.DBDAttackSuccessSubstate
// Size: 0x118 (Inherited: 0x118)
struct UDBDAttackSuccessSubstate : UDBDAttackSubstate {
};

// Class DeadByDaylight.DBDAttackMissSubstate
// Size: 0x118 (Inherited: 0x118)
struct UDBDAttackMissSubstate : UDBDAttackSubstate {
};

// Class DeadByDaylight.DBDAttackObstructSubstate
// Size: 0x118 (Inherited: 0x118)
struct UDBDAttackObstructSubstate : UDBDAttackSubstate {
};

// Class DeadByDaylight.DBDAIController
// Size: 0x638 (Inherited: 0x340)
struct ADBDAIController : AAIController {
	float DefaultSightRange; // 0x340(0x04)
	float CloakedTargetSightRange; // 0x344(0x04)
	struct TMap<enum class EAIDifficultyLevel, int32_t> AIDifficultyMaxPlayerRanks; // 0x348(0x50)
	char pad_398[0x10]; // 0x398(0x10)
	float RotateCameraOnStationaryWaitTime; // 0x3a8(0x04)
	float RotateCameraOnStationaryDegreePerSecond; // 0x3ac(0x04)
	char pad_3B0[0x20]; // 0x3b0(0x20)
	struct APawn* _aiPawn; // 0x3d0(0x08)
	struct APawn* _lastAiPawn; // 0x3d8(0x08)
	struct TMap<struct UObject*, float> _contextualPathSpeedFactors; // 0x3e0(0x50)
	struct UObject* _objOverridingDefaultNavigationFilter; // 0x430(0x08)
	struct UNavigationQueryFilter* _originalDefaultNavigationFilter; // 0x438(0x08)
	char pad_440[0x18]; // 0x440(0x18)
	struct TMap<enum class EPawnInputPressTypes, struct UObject*> _inputLocks; // 0x458(0x50)
	struct UObject* _movementLock; // 0x4a8(0x08)
	char pad_4B0[0x188]; // 0x4b0(0x188)

	void UseItemRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.UseItemRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bec80
	void StruggleRequest(struct UObject* requester, float Input); // Function DeadByDaylight.DBDAIController.StruggleRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54beb90
	bool SetCharacterMovement(enum class ECharacterMovementTypes movementTypes, struct UObject* requester); // Function DeadByDaylight.DBDAIController.SetCharacterMovement // (Final|Native|Public|BlueprintCallable) // @ game+0x54beaa0
	void Server_SetAIPlayerRank(int32_t PlayerRank); // Function DeadByDaylight.DBDAIController.Server_SetAIPlayerRank // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x54be9e0
	void SecondAttackRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.SecondAttackRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54be8c0
	void SecondaryActionRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.SecondaryActionRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54be950
	void RunRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.RunRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54be830
	void InteractRequestRelease(struct UObject* requester); // Function DeadByDaylight.DBDAIController.InteractRequestRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x54bdb40
	void InteractRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.InteractRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54be190
	void Gesture04Request(struct UObject* requester); // Function DeadByDaylight.DBDAIController.Gesture04Request // (Final|Native|Public|BlueprintCallable) // @ game+0x54be000
	void Gesture03Request(struct UObject* requester); // Function DeadByDaylight.DBDAIController.Gesture03Request // (Final|Native|Public|BlueprintCallable) // @ game+0x54bdf70
	void Gesture02Request(struct UObject* requester); // Function DeadByDaylight.DBDAIController.Gesture02Request // (Final|Native|Public|BlueprintCallable) // @ game+0x54bdee0
	void Gesture01Request(struct UObject* requester); // Function DeadByDaylight.DBDAIController.Gesture01Request // (Final|Native|Public|BlueprintCallable) // @ game+0x54bde50
	void FastInteractRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.FastInteractRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bdd80
	void EndUseItemRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.EndUseItemRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bdcf0
	void EndSecondAttackRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.EndSecondAttackRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bdc60
	void EndRunRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.EndRunRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bdbd0
	void EndInteractRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.EndInteractRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bdb40
	void EndFastInteractRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.EndFastInteractRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bdab0
	void EndDropItemRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.EndDropItemRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bda20
	void EndActionRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.EndActionRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bd990
	void EndAbilityTwoRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.EndAbilityTwoRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bd900
	void DropItemRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.DropItemRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bd870
	void CancelMinigameRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.CancelMinigameRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bd7c0
	void AttackRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.AttackRequest // (Native|Public|BlueprintCallable) // @ game+0x54bd6b0
	void ActionRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.ActionRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bd240
	void AbilityTwoRequest(struct UObject* requester); // Function DeadByDaylight.DBDAIController.AbilityTwoRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x54bd1b0
};

// Class DeadByDaylight.DBDAIUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDAIUtilities : UBlueprintFunctionLibrary {

	void SetCanEverAffectNavigation(struct UActorComponent* Component, bool affectNavigation); // Function DeadByDaylight.DBDAIUtilities.SetCanEverAffectNavigation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54c3ec0
	struct UNavigationPath* FindPathWithAgentRadiusToActorSynchronously(struct UObject* WorldContextObject, struct FVector& pathStart, struct AActor* GoalActor, float AgentRadius, float tetherDistance, struct AActor* pathfindingContext, struct UNavigationQueryFilter* FilterClass); // Function DeadByDaylight.DBDAIUtilities.FindPathWithAgentRadiusToActorSynchronously // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x54c3250
	bool DrawDebugAIPerception(); // Function DeadByDaylight.DBDAIUtilities.DrawDebugAIPerception // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x479ec60
	bool DrawDebugAINavigationFilter(); // Function DeadByDaylight.DBDAIUtilities.DrawDebugAINavigationFilter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x479ec60
	bool DrawDebugAINavigation(); // Function DeadByDaylight.DBDAIUtilities.DrawDebugAINavigation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x479ec60
};

// Class DeadByDaylight.Perk
// Size: 0x3c8 (Inherited: 0x218)
struct UPerk : UGameplayModifierContainer {
	char pad_218[0x60]; // 0x218(0x60)
	struct FGameplayModifierData PerkLevelData[0x3]; // 0x278(0x90)
	char pad_308[0x30]; // 0x308(0x30)
	struct UBasePerkIconStrategy* PerkIconStrategyClass; // 0x338(0x08)
	struct FMulticastInlineDelegate OnTokenCountChangedBP; // 0x340(0x10)
	char pad_350[0x30]; // 0x350(0x30)
	bool _isUsable; // 0x380(0x01)
	bool _keepImposedStatusEffectsOnEndPlay; // 0x381(0x01)
	bool BroadcastWhenApplicable; // 0x382(0x01)
	bool BroadcastOnTimer; // 0x383(0x01)
	bool BroadcastCooldownTimer; // 0x384(0x01)
	bool BroadcastInactiveCooldownTimer; // 0x385(0x01)
	bool BroadcastAlways; // 0x386(0x01)
	bool SetInactiveDuringCooldown; // 0x387(0x01)
	struct UBasePerkIconStrategy* _perkIconStrategy; // 0x388(0x08)
	struct FPerkInitializationData _perkInitializationData; // 0x390(0x08)
	char pad_398[0x4]; // 0x398(0x04)
	int32_t _tokenCount; // 0x39c(0x04)
	int32_t _maxTokenCount; // 0x3a0(0x04)
	enum class EPerkTokenSoundStrategy _tokenSoundStrategy; // 0x3a4(0x01)
	char pad_3A5[0x3]; // 0x3a5(0x03)
	struct UTimerObject* _cooldownTimer; // 0x3a8(0x08)
	char pad_3B0[0x8]; // 0x3b0(0x08)
	struct UTimerObject* _hudIconTimer; // 0x3b8(0x08)
	struct UInteractionDefinition* _activatableInteraction; // 0x3c0(0x08)

	void SetIsUsable(bool value); // Function DeadByDaylight.Perk.SetIsUsable // (Final|Native|Public|BlueprintCallable) // @ game+0x5577cb0
	void OnRep_TokenCount(int32_t oldCount); // Function DeadByDaylight.Perk.OnRep_TokenCount // (Final|Native|Private) // @ game+0x5577910
	void OnRep_PerkInitializationData(); // Function DeadByDaylight.Perk.OnRep_PerkInitializationData // (Final|Native|Private) // @ game+0x55778f0
	void OnRep_IsUsable(); // Function DeadByDaylight.Perk.OnRep_IsUsable // (Final|Native|Private|Const) // @ game+0x55778d0
	void OnRep_CooldownTimer(); // Function DeadByDaylight.Perk.OnRep_CooldownTimer // (Final|Native|Private|Const) // @ game+0x55778b0
	bool IsHudIconTimerDone(); // Function DeadByDaylight.Perk.IsHudIconTimerDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5577730
	bool IsCooldownTimerDone(); // Function DeadByDaylight.Perk.IsCooldownTimerDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5577700
	int32_t GetTokenCount(); // Function DeadByDaylight.Perk.GetTokenCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e46b0
	int32_t GetPerkLevel(); // Function DeadByDaylight.Perk.GetPerkLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55767b0
	struct UBasePerkIconStrategy* GetPerkIconStrategy(); // Function DeadByDaylight.Perk.GetPerkIconStrategy // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576780
	int32_t GetMaxTokenCount(); // Function DeadByDaylight.Perk.GetMaxTokenCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576450
	bool GetIsUsable(); // Function DeadByDaylight.Perk.GetIsUsable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576420
	float GetHudIconTimerElapsedTimePercent(); // Function DeadByDaylight.Perk.GetHudIconTimerElapsedTimePercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55763f0
	struct FGameplayModifierData GetGameplayModifierData(); // Function DeadByDaylight.Perk.GetGameplayModifierData // (Native|Public|BlueprintCallable) // @ game+0x55762c0
	struct UTimerObject* GetCooldownTimer(); // Function DeadByDaylight.Perk.GetCooldownTimer // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576290
	void FireActivePerkEvent(float Percentage, int32_t chargeCount); // Function DeadByDaylight.Perk.FireActivePerkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x5575b80
	void Authority_TriggerHudIconTimer(float Duration); // Function DeadByDaylight.Perk.Authority_TriggerHudIconTimer // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575b00
	void Authority_TriggerCooldownTimer(float cooldownTime); // Function DeadByDaylight.Perk.Authority_TriggerCooldownTimer // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575a80
	void Authority_SetTokenCount(int32_t value); // Function DeadByDaylight.Perk.Authority_SetTokenCount // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575910
	void Authority_SetMaxTokenCount(int32_t value); // Function DeadByDaylight.Perk.Authority_SetMaxTokenCount // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575880
	void Authority_SetIsUsable(bool value); // Function DeadByDaylight.Perk.Authority_SetIsUsable // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55757f0
	void Authority_IncrementToken(); // Function DeadByDaylight.Perk.Authority_IncrementToken // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575650
	void Authority_DecrementToken(); // Function DeadByDaylight.Perk.Authority_DecrementToken // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575060
};

// Class DeadByDaylight.TotemBoundPerk
// Size: 0x420 (Inherited: 0x3c8)
struct UTotemBoundPerk : UPerk {
	char pad_3C8[0x18]; // 0x3c8(0x18)
	enum class ETotemState TotemBoundState; // 0x3e0(0x01)
	bool _doNotBindToTotemOnInit; // 0x3e1(0x01)
	char pad_3E2[0x6]; // 0x3e2(0x06)
	struct TArray<struct ATotem*> _boundTotems; // 0x3e8(0x10)
	struct TArray<struct ATotem*> _local_boundTotems; // 0x3f8(0x10)
	struct TArray<struct ATotem*> _authorityPrevTotemActors; // 0x408(0x10)
	int32_t _numTotemsToBind; // 0x418(0x04)
	char pad_41C[0x4]; // 0x41c(0x04)

	void OnRep_BoundTotems(); // Function DeadByDaylight.TotemBoundPerk.OnRep_BoundTotems // (Final|Native|Private) // @ game+0x55c8a10
	struct TArray<struct ATotem*> GetTotems(); // Function DeadByDaylight.TotemBoundPerk.GetTotems // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c8560
	float GetSquaredDistanceToOwner(struct AActor* Survivor); // Function DeadByDaylight.TotemBoundPerk.GetSquaredDistanceToOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c8460
	struct TArray<struct ATotem*> GetBoundTotems(); // Function DeadByDaylight.TotemBoundPerk.GetBoundTotems // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c8210
	void Authority_UnbindFromTotem(struct ATotem* aTotemActor); // Function DeadByDaylight.TotemBoundPerk.Authority_UnbindFromTotem // (Native|Public) // @ game+0x4ceef10
	bool Authority_BindToDullTotems(bool allowAdditionalBoundTotems); // Function DeadByDaylight.TotemBoundPerk.Authority_BindToDullTotems // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55c7610
};

// Class DeadByDaylight.GameplayModifierCondition
// Size: 0xd0 (Inherited: 0xd0)
struct UGameplayModifierCondition : UBaseModifierCondition {

	void SetOwningGameplayModifier(struct UGameplayModifierContainer* OwningGameplayModifier); // Function DeadByDaylight.GameplayModifierCondition.SetOwningGameplayModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x552b980
	void OnOwningGameplayModifierSet(); // Function DeadByDaylight.GameplayModifierCondition.OnOwningGameplayModifierSet // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	bool IsApplicable(); // Function DeadByDaylight.GameplayModifierCondition.IsApplicable // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x552a760
	struct ADBDPlayer* GetOwningPlayer(); // Function DeadByDaylight.GameplayModifierCondition.GetOwningPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a4c0
	struct UGameplayModifierContainer* GetOwningGameplayModifier(); // Function DeadByDaylight.GameplayModifierCondition.GetOwningGameplayModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552a490
};

// Class DeadByDaylight.ItemModifier
// Size: 0x278 (Inherited: 0x218)
struct UItemModifier : UGameplayModifierContainer {
	struct FGameplayModifierData ModifierData; // 0x218(0x30)
	char pad_248[0x30]; // 0x248(0x30)

	void HandleIncreaseMaxCharge(); // Function DeadByDaylight.ItemModifier.HandleIncreaseMaxCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x554a360
	void HandleIncreaseItemCount(); // Function DeadByDaylight.ItemModifier.HandleIncreaseItemCount // (Final|Native|Public|BlueprintCallable) // @ game+0x554a340
	void HandleIncreaseCharge(); // Function DeadByDaylight.ItemModifier.HandleIncreaseCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x554a320
	float GetItemMaxEnergy(); // Function DeadByDaylight.ItemModifier.GetItemMaxEnergy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x554a2f0
	float GetItemEnergy(); // Function DeadByDaylight.ItemModifier.GetItemEnergy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x554a2c0
	int32_t GetItemCount(); // Function DeadByDaylight.ItemModifier.GetItemCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x554a290
	struct ACollectable* GetBaseItem(); // Function DeadByDaylight.ItemModifier.GetBaseItem // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x554a260
	void AuthoritySetItemMaxEnergy(float energy); // Function DeadByDaylight.ItemModifier.AuthoritySetItemMaxEnergy // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x554a1a0
	void AuthoritySetItemEnergy(float energy); // Function DeadByDaylight.ItemModifier.AuthoritySetItemEnergy // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x554a120
	void AuthoritySetItemCount(int32_t itemCount); // Function DeadByDaylight.ItemModifier.AuthoritySetItemCount // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x554a090
};

// Class DeadByDaylight.ItemAddon
// Size: 0x2b8 (Inherited: 0x278)
struct UItemAddon : UItemModifier {
	struct ACollectable* BaseItemType; // 0x278(0x08)
	bool _needsSetup; // 0x280(0x01)
	char pad_281[0x1f]; // 0x281(0x1f)
	int32_t _tokenCount; // 0x2a0(0x04)
	int32_t _maxTokenCount; // 0x2a4(0x04)
	struct FItemAddonInitializationData _addonInitializationData; // 0x2a8(0x02)
	char pad_2AA[0xe]; // 0x2aa(0x0e)

	void SetUpAddon(); // Function DeadByDaylight.ItemAddon.SetUpAddon // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnRep_TokenCount(int32_t oldCount); // Function DeadByDaylight.ItemAddon.OnRep_TokenCount // (Final|Native|Private) // @ game+0x5545d60
	void OnRep_AddonInitializationData(); // Function DeadByDaylight.ItemAddon.OnRep_AddonInitializationData // (Final|Native|Private) // @ game+0x5545d40
	void OnPostItemAddonsCreation(struct ADBDPlayer* Player, struct ACollectable* Item); // Function DeadByDaylight.ItemAddon.OnPostItemAddonsCreation // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void Multicast_SetBaseItem(struct ACollectable* baseItem); // Function DeadByDaylight.ItemAddon.Multicast_SetBaseItem // (Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate) // @ game+0x5545bf0
	void Multicast_AddAddonToItem(struct ACollectable* Item); // Function DeadByDaylight.ItemAddon.Multicast_AddAddonToItem // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x55198a0
	bool IsSecondaryAction(); // Function DeadByDaylight.ItemAddon.IsSecondaryAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5545950
	bool IsReadyForSetUp(); // Function DeadByDaylight.ItemAddon.IsReadyForSetUp // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x5545920
	int32_t GetTokenCount(); // Function DeadByDaylight.ItemAddon.GetTokenCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5545450
	int32_t GetMaxTokenCount(); // Function DeadByDaylight.ItemAddon.GetMaxTokenCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5545420
	void DebugPrintStats(); // Function DeadByDaylight.ItemAddon.DebugPrintStats // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void Authority_SetTokenCount(int32_t value); // Function DeadByDaylight.ItemAddon.Authority_SetTokenCount // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5544a40
	void Authority_SetMaxTokenCount(int32_t value); // Function DeadByDaylight.ItemAddon.Authority_SetMaxTokenCount // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55449b0
	void Authority_OnCollectablePickedUp(struct ADBDPlayer* Player); // Function DeadByDaylight.ItemAddon.Authority_OnCollectablePickedUp // (Native|Event|Public|BlueprintEvent) // @ game+0x5544920
	void Authority_OnCollectableDropped(struct ADBDPlayer* Player); // Function DeadByDaylight.ItemAddon.Authority_OnCollectableDropped // (Native|Event|Public|BlueprintEvent) // @ game+0x5544890
	void Authority_IncrementToken(); // Function DeadByDaylight.ItemAddon.Authority_IncrementToken // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5544870
	void Authority_DecrementToken(); // Function DeadByDaylight.ItemAddon.Authority_DecrementToken // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5544820
	void Authority_ApplyMetaModifiers(); // Function DeadByDaylight.ItemAddon.Authority_ApplyMetaModifiers // (Final|Native|Private) // @ game+0x5544800
};

// Class DeadByDaylight.Collectable
// Size: 0x4c8 (Inherited: 0x338)
struct ACollectable : AInteractable {
	char pad_338[0x48]; // 0x338(0x48)
	bool DisplayUsePercent; // 0x380(0x01)
	enum class EAtlantaItemProgressionBarEnum ProgressBar; // 0x381(0x01)
	bool OverrideItemIndex; // 0x382(0x01)
	char pad_383[0x1]; // 0x383(0x01)
	int32_t OverridenItemIndex; // 0x384(0x04)
	bool StrafeOnUse; // 0x388(0x01)
	bool VisibleWhenEquipped; // 0x389(0x01)
	bool StopRunningOnUse; // 0x38a(0x01)
	enum class EItemHandPosition HandPosition; // 0x38b(0x01)
	bool DisableArmOverrideDuringInteractions; // 0x38c(0x01)
	bool HasUseInteraction; // 0x38d(0x01)
	enum class ECollectableCategory category; // 0x38e(0x01)
	char pad_38F[0x1]; // 0x38f(0x01)
	struct FName ItemId; // 0x390(0x0c)
	bool FromPlayerSpawn; // 0x39c(0x01)
	char pad_39D[0x3]; // 0x39d(0x03)
	struct UItemModifier* BaseItemModifier; // 0x3a0(0x08)
	struct UItemModifier* ItemModifier1; // 0x3a8(0x08)
	struct UItemModifier* ItemModifier2; // 0x3b0(0x08)
	bool ShouldRegisterToOnSurvivorAdded; // 0x3b8(0x01)
	char pad_3B9[0x67]; // 0x3b9(0x67)
	bool BeingCollected; // 0x420(0x01)
	bool BeingDropped; // 0x421(0x01)
	bool _beingConsumedByEntity; // 0x422(0x01)
	char pad_423[0x5]; // 0x423(0x05)
	struct UInteractor* _itemInteractor; // 0x428(0x08)
	struct UDBDSkeletalMeshComponentBudgeted* _mesh; // 0x430(0x08)
	enum class EInputInteractionType _displayedInputType; // 0x438(0x01)
	bool _isKeyPromptForceDisabled; // 0x439(0x01)
	bool _isBoundToFirstCollector; // 0x43a(0x01)
	bool _isCursedItem; // 0x43b(0x01)
	bool _isSpecialItem; // 0x43c(0x01)
	bool _useInventoryCount; // 0x43d(0x01)
	char pad_43E[0x1a]; // 0x43e(0x1a)
	struct USceneComponent* _placementOrigin; // 0x458(0x08)
	char pad_460[0x10]; // 0x460(0x10)
	struct ADBDPlayer* _collector; // 0x470(0x08)
	struct ADBDPlayer* _firstCollector; // 0x478(0x08)
	enum class ECollectableState _state; // 0x480(0x01)
	char pad_481[0x7]; // 0x481(0x07)
	struct TArray<struct UItemAddon*> _itemAddons; // 0x488(0x10)
	struct TArray<struct UItemModifier*> _itemModifiers; // 0x498(0x10)
	int32_t _itemCount; // 0x4a8(0x04)
	enum class EAttachToSocketNameEnum _attachToSocketName; // 0x4ac(0x01)
	enum class EInventoryType _collectInInventoryType; // 0x4ad(0x01)
	char pad_4AE[0x2]; // 0x4ae(0x02)
	struct FGameplayTag _stateTagForCollector; // 0x4b0(0x0c)
	enum class ELoadoutItemType _itemType; // 0x4bc(0x01)
	bool _discardOnDrop; // 0x4bd(0x01)
	bool _discardWhenConsumed; // 0x4be(0x01)
	bool _disableAttachmentReplication; // 0x4bf(0x01)
	char pad_4C0[0x2]; // 0x4c0(0x02)
	bool _isInUse; // 0x4c2(0x01)
	bool _aimOnUse; // 0x4c3(0x01)
	char pad_4C4[0x4]; // 0x4c4(0x04)

	void SetVisibilityEvent(bool Visibility); // Function DeadByDaylight.Collectable.SetVisibilityEvent // (Native|Event|Protected|BlueprintEvent) // @ game+0x54ae4c0
	void SetItemInteractor(struct UInteractor* Interactor); // Function DeadByDaylight.Collectable.SetItemInteractor // (Final|Native|Public|BlueprintCallable) // @ game+0x54ae310
	void SetIsKeyPromptForceDisabled(bool IsKeyPromptForceDisabled); // Function DeadByDaylight.Collectable.SetIsKeyPromptForceDisabled // (Final|Native|Public) // @ game+0x54ae280
	void SetDisplayedInputType(enum class EInputInteractionType displayedInputType); // Function DeadByDaylight.Collectable.SetDisplayedInputType // (Final|Native|Public) // @ game+0x54ae0e0
	void SetCount(int32_t Count); // Function DeadByDaylight.Collectable.SetCount // (Final|Native|Public|BlueprintCallable) // @ game+0x54ae050
	void OnUseReleased(struct ADBDPlayer* collector); // Function DeadByDaylight.Collectable.OnUseReleased // (Native|Event|Protected|BlueprintEvent) // @ game+0x5482030
	void OnUse(); // Function DeadByDaylight.Collectable.OnUse // (Native|Event|Protected|BlueprintEvent) // @ game+0x3d13470
	void OnRep_State(); // Function DeadByDaylight.Collectable.OnRep_State // (Final|Native|Private) // @ game+0x54adc80
	void OnRep_Collector(struct ADBDPlayer* oldCollector); // Function DeadByDaylight.Collectable.OnRep_Collector // (Final|Native|Private) // @ game+0x54adb70
	void OnPostItemAddonsCreation(struct ADBDPlayer* Player); // Function DeadByDaylight.Collectable.OnPostItemAddonsCreation // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnDropped(struct ADBDPlayer* droppingPlayer); // Function DeadByDaylight.Collectable.OnDropped // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x54ada50
	void OnCustomizationChanged(); // Function DeadByDaylight.Collectable.OnCustomizationChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnCollectorSetBPDelegate__DelegateSignature(struct ADBDPlayer* Player); // DelegateFunction DeadByDaylight.Collectable.OnCollectorSetBPDelegate__DelegateSignature // (Public|Delegate) // @ game+0x5e02c90
	void OnCollectorSetBP__DelegateSignature(struct ADBDPlayer* Player); // DelegateFunction DeadByDaylight.Collectable.OnCollectorSetBP__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnCollectorSet(struct ADBDPlayer* collector); // Function DeadByDaylight.Collectable.OnCollectorSet // (Native|Event|Protected|BlueprintEvent) // @ game+0x54ad9c0
	void OnAddonsRemoved(struct TArray<struct UItemAddon*>& addons); // Function DeadByDaylight.Collectable.OnAddonsRemoved // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void OnAddonsAdded(struct TArray<struct UItemAddon*>& addons); // Function DeadByDaylight.Collectable.OnAddonsAdded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void OnActivateDissolveItem(); // Function DeadByDaylight.Collectable.OnActivateDissolveItem // (BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Multicast_UseReleased(struct ADBDPlayer* collector); // Function DeadByDaylight.Collectable.Multicast_UseReleased // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x54ad930
	void Multicast_Use(); // Function DeadByDaylight.Collectable.Multicast_Use // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x3dad370
	void Multicast_RemoveItemAddon(struct UItemAddon* addon); // Function DeadByDaylight.Collectable.Multicast_RemoveItemAddon // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54ad8a0
	void Multicast_RemoveAllAddons(); // Function DeadByDaylight.Collectable.Multicast_RemoveAllAddons // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54ad880
	void Multicast_Dropped(struct ADBDPlayer* droppedBy, struct FVector Location, struct FRotator Rotation, enum class EItemDropType itemDropType); // Function DeadByDaylight.Collectable.Multicast_Dropped // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x54ad540
	void Multicast_Collected(struct ADBDPlayer* collector, enum class EInventoryType inventoryType); // Function DeadByDaylight.Collectable.Multicast_Collected // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x54ad2e0
	void Local_Dropped_Location(struct ADBDPlayer* droppedBy, struct FVector& Location, struct FRotator& Rotation); // Function DeadByDaylight.Collectable.Local_Dropped_Location // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x54ad1b0
	bool IsStored(); // Function DeadByDaylight.Collectable.IsStored // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ad180
	bool IsSpecialItem(); // Function DeadByDaylight.Collectable.IsSpecialItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ad150
	bool IsRechargeable(); // Function DeadByDaylight.Collectable.IsRechargeable // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x54ad120
	bool IsPickable(); // Function DeadByDaylight.Collectable.IsPickable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ad0f0
	bool IsOnGround(); // Function DeadByDaylight.Collectable.IsOnGround // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ad0c0
	bool IsLocallyControlled(); // Function DeadByDaylight.Collectable.IsLocallyControlled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ad090
	bool IsKeyPromptForceDisabled(); // Function DeadByDaylight.Collectable.IsKeyPromptForceDisabled // (Final|Native|Public|Const) // @ game+0x54ad060
	bool IsInSearchable(); // Function DeadByDaylight.Collectable.IsInSearchable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ad030
	bool IsEquipped(); // Function DeadByDaylight.Collectable.IsEquipped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54acfd0
	bool IsCursedItem(); // Function DeadByDaylight.Collectable.IsCursedItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54acfa0
	bool IsCountDisplayForced(); // Function DeadByDaylight.Collectable.IsCountDisplayForced // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x54acf70
	bool IsCollected(); // Function DeadByDaylight.Collectable.IsCollected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54acf40
	bool HasGameplayModifierFlag(struct FGameplayTag modifierFlag); // Function DeadByDaylight.Collectable.HasGameplayModifierFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ace90
	float GetUsePercentLeft(); // Function DeadByDaylight.Collectable.GetUsePercentLeft // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54acdf0
	float GetModifierSum(struct FGameplayTag modifierType, float defaultValue); // Function DeadByDaylight.Collectable.GetModifierSum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54acbd0
	float GetModifierMax(struct FGameplayTag modifierType, float defaultValue); // Function DeadByDaylight.Collectable.GetModifierMax // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54acad0
	struct UInteractor* GetItemInteractor(); // Function DeadByDaylight.Collectable.GetItemInteractor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54aca60
	char GetItemIconIndex(); // Function DeadByDaylight.Collectable.GetItemIconIndex // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x54aca30
	struct TArray<struct UItemAddon*> GetItemAddons(); // Function DeadByDaylight.Collectable.GetItemAddons // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ac9f0
	struct FString GetIconFilePath(); // Function DeadByDaylight.Collectable.GetIconFilePath // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ac990
	enum class EInputInteractionType GetDisplayedInputType(); // Function DeadByDaylight.Collectable.GetDisplayedInputType // (Final|Native|Public|Const) // @ game+0x54ac920
	int32_t GetCount(); // Function DeadByDaylight.Collectable.GetCount // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54ac8f0
	struct ADBDPlayer* GetCollector(); // Function DeadByDaylight.Collectable.GetCollector // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ac8c0
	void DebugPrintStats(); // Function DeadByDaylight.Collectable.DebugPrintStats // (Native|Event|Public|BlueprintEvent) // @ game+0x54ac7c0
	bool CanUse(struct ADBDPlayer* Player); // Function DeadByDaylight.Collectable.CanUse // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54ac700
	bool CanBeDropped(struct ADBDPlayer* dropper); // Function DeadByDaylight.Collectable.CanBeDropped // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54ac660
	bool CanBeCollected(struct ADBDPlayer* collector, bool assumeWillDropItem); // Function DeadByDaylight.Collectable.CanBeCollected // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54ac580
	void CallOnCollectorSetBP(struct FDelegate Callback); // Function DeadByDaylight.Collectable.CallOnCollectorSetBP // (Final|Native|Public|BlueprintCallable) // @ game+0x54ac4d0
	void BP_OnSurvivorAdded(struct ACamperPlayer* Survivor); // Function DeadByDaylight.Collectable.BP_OnSurvivorAdded // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void Authority_UseReleased(); // Function DeadByDaylight.Collectable.Authority_UseReleased // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54ac470
	void Authority_Use(); // Function DeadByDaylight.Collectable.Authority_Use // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x3d13490
	void Authority_RemoveItemAddon(struct UItemAddon* addon); // Function DeadByDaylight.Collectable.Authority_RemoveItemAddon // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54ac3e0
	void Authority_OnConsumed(bool forceDiscard); // Function DeadByDaylight.Collectable.Authority_OnConsumed // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54ac220
	void Authority_OnCollectorEndPlay(struct AActor* Actor, enum class EEndPlayReason EndPlayReason); // Function DeadByDaylight.Collectable.Authority_OnCollectorEndPlay // (Final|Native|Private) // @ game+0x54ac150
	void Authority_Discard(); // Function DeadByDaylight.Collectable.Authority_Discard // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54ac0a0
	bool Authority_AddItemAddon(struct UItemAddon* addon); // Function DeadByDaylight.Collectable.Authority_AddItemAddon // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54ac000
};

// Class DeadByDaylight.DBDGameState
// Size: 0x8e0 (Inherited: 0x2a8)
struct ADBDGameState : AGameState {
	char pad_2A8[0x30]; // 0x2a8(0x30)
	struct FMulticastInlineDelegate OnEscapeDoorActivated; // 0x2d8(0x10)
	char pad_2E8[0xa8]; // 0x2e8(0xa8)
	enum class EIntroState IntroState; // 0x390(0x01)
	char pad_391[0x7]; // 0x391(0x07)
	struct FMulticastInlineDelegate OnKillerIntroCompletePercentChanged; // 0x398(0x10)
	struct FMulticastInlineDelegate OnLightingGenerated; // 0x3a8(0x10)
	char pad_3B8[0x30]; // 0x3b8(0x30)
	struct USpecialEventGameplaySpawnerComponent* _specialEventGameplaySpawnerComponent; // 0x3e8(0x08)
	struct USpecialBehaviourGameplaySpawnerComponent* _specialBehaviourGameplaySpawnerComponent; // 0x3f0(0x08)
	struct FMulticastInlineDelegate AuthorityOnAllPlayerLoaded; // 0x3f8(0x10)
	char pad_408[0x18]; // 0x408(0x18)
	struct FMulticastInlineDelegate OnActivatedGeneratorCountChangedDynamic; // 0x420(0x10)
	struct FMulticastInlineDelegate OnSlasherSet; // 0x430(0x10)
	char pad_440[0x18]; // 0x440(0x18)
	struct FMulticastInlineDelegate OnObsessionChanged; // 0x458(0x10)
	int32_t SecondsLeftInLobby; // 0x468(0x04)
	char pad_46C[0x34]; // 0x46c(0x34)
	struct ASlasherPlayer* Slasher; // 0x4a0(0x08)
	struct URenderingFeaturesSequencer* _renderingSequencer; // 0x4a8(0x08)
	char pad_4B0[0x48]; // 0x4b0(0x48)
	int32_t _camperHookedInBasementCount; // 0x4f8(0x04)
	char pad_4FC[0x8]; // 0x4fc(0x08)
	enum class EServerUseNetAsyncLoading _useNetAsyncLoading; // 0x504(0x01)
	bool _gameLevelLoadingStarted; // 0x505(0x01)
	char pad_506[0x2]; // 0x506(0x02)
	struct FBuiltLevelData _builtLevelData; // 0x508(0xb0)
	struct FOfferingData _levelOfferings; // 0x5b8(0x18)
	struct AClipManager* _clipManager; // 0x5d0(0x08)
	struct FGuid _sessionId; // 0x5d8(0x10)
	struct FGuid _lobbyId; // 0x5e8(0x10)
	int32_t _activatedGeneratorCount; // 0x5f8(0x04)
	int32_t _requiredActivatedGeneratorCount; // 0x5fc(0x04)
	bool _escapeDoorActivated; // 0x600(0x01)
	bool _escapeDoorOpened; // 0x601(0x01)
	bool _isHatchOpen; // 0x602(0x01)
	bool _levelReadyToPlay; // 0x603(0x01)
	bool _playerDistributionReady; // 0x604(0x01)
	bool _usingWeakenedMechanic; // 0x605(0x01)
	char pad_606[0x2]; // 0x606(0x02)
	int32_t _survivorLeft; // 0x608(0x04)
	char pad_60C[0x4]; // 0x60c(0x04)
	struct TArray<struct AMeatHook*> _meatHooks; // 0x610(0x10)
	struct TArray<struct ASearchable*> _searchables; // 0x620(0x10)
	struct TArray<struct AGenerator*> _generators; // 0x630(0x10)
	struct TArray<struct AEscapeDoor*> _escapeDoors; // 0x640(0x10)
	struct TArray<struct AHatch*> _hatches; // 0x650(0x10)
	struct TArray<struct AReverseBearTrapRemover*> _reverseBearTrapRemovers; // 0x660(0x10)
	struct TArray<struct ABaseTrap*> _baseTraps; // 0x670(0x10)
	struct TArray<struct APallet*> _pallets; // 0x680(0x10)
	struct TArray<struct AWindow*> _windows; // 0x690(0x10)
	struct TArray<struct ALocker*> _lockers; // 0x6a0(0x10)
	struct TArray<struct ABreakableBase*> _breakableWalls; // 0x6b0(0x10)
	struct TArray<struct ATotem*> _totems; // 0x6c0(0x10)
	struct FBoxSphereBounds _mapBoxSphereBounds; // 0x6d0(0x1c)
	struct FBoxSphereBounds _basementBoxSphereBounds; // 0x6ec(0x1c)
	char pad_708[0x1c]; // 0x708(0x1c)
	int32_t _camperEscapedThroughHatch; // 0x724(0x04)
	struct ACamperPlayer* _obsessionTarget; // 0x728(0x08)
	bool _cachedObsessionEscaped; // 0x730(0x01)
	char pad_731[0x7]; // 0x731(0x07)
	int8_t _numberOfSurvivorsKilledOrSacrificed; // 0x738(0x01)
	char pad_739[0x7]; // 0x739(0x07)
	struct TArray<struct AInteractable*> _traps; // 0x740(0x10)
	struct TArray<struct UDBDDangerPredictionComponent*> _dangerPredictionObjects; // 0x750(0x10)
	char pad_760[0x8]; // 0x760(0x08)
	struct FGamePresetData _gamePresetData; // 0x768(0x90)
	bool _gameLevelLoaded; // 0x7f8(0x01)
	bool _gameLevelCreated; // 0x7f9(0x01)
	bool _gameLevelEnded; // 0x7fa(0x01)
	bool _gameTimedOut; // 0x7fb(0x01)
	enum class EEndGameReason _gameEndedReason; // 0x7fc(0x01)
	bool _isLoadoutFrozen; // 0x7fd(0x01)
	char pad_7FE[0x2]; // 0x7fe(0x02)
	struct UEndGameStateComponent* _endGameState; // 0x800(0x08)
	struct UScourgeHookManagerComponent* _scourgeHookManager; // 0x808(0x08)
	struct UActorPairQueryEvaluatorComponent* _actorPairQueryEvaluatorComponent; // 0x810(0x08)
	char pad_818[0x8]; // 0x818(0x08)
	struct UCharacterCollection* _characterCollection; // 0x820(0x08)
	struct UCollectableCollection* _collectableCollection; // 0x828(0x08)
	struct UServerTimeProviderComponent* _serverTimeProvider; // 0x830(0x08)
	struct UInGameAssetPreloaderComponent* _inGameAssetPreloaderComponent; // 0x838(0x08)
	struct UOnScreenDebugComponent* _onScreenDebugComponent; // 0x840(0x08)
	char pad_848[0x28]; // 0x848(0x28)
	struct FDateTime _matchStartTime; // 0x870(0x08)
	bool _isServerDedicated; // 0x878(0x01)
	char pad_879[0x3]; // 0x879(0x03)
	int32_t _maxSurvivorCount; // 0x87c(0x04)
	struct FString _serverBuildVersion; // 0x880(0x10)
	struct FString _serverContentVersion; // 0x890(0x10)
	struct FString _serverSessionId; // 0x8a0(0x10)
	struct FString _serverRegion; // 0x8b0(0x10)
	struct FString _serverMatchId; // 0x8c0(0x10)
	float _introDuration; // 0x8d0(0x04)
	bool _leaveSpectateRequested; // 0x8d4(0x01)
	char pad_8D5[0xb]; // 0x8d5(0x0b)

	void UpdateInGamePallets(); // Function DeadByDaylight.DBDGameState.UpdateInGamePallets // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x54df4c0
	void UnregisterFromIntroCompleteAndLevelReadyToPlay(struct UObject* inObject); // Function DeadByDaylight.DBDGameState.UnregisterFromIntroCompleteAndLevelReadyToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x54df430
	void SortOfferings(); // Function DeadByDaylight.DBDGameState.SortOfferings // (Final|Native|Public) // @ game+0x54df410
	void SetPlayersReadyToStart(bool playersReadyToStart); // Function DeadByDaylight.DBDGameState.SetPlayersReadyToStart // (Final|Native|Public|BlueprintCallable) // @ game+0x54df380
	void SetKillerIntroCompletedNormalized(float completedAmount); // Function DeadByDaylight.DBDGameState.SetKillerIntroCompletedNormalized // (Final|Native|Public|BlueprintCallable) // @ game+0x54df270
	void SetGameLevelEnded(enum class EEndGameReason endGameReason); // Function DeadByDaylight.DBDGameState.SetGameLevelEnded // (Final|Native|Public) // @ game+0x54df1f0
	void SetDisplayMapName(bool Display); // Function DeadByDaylight.DBDGameState.SetDisplayMapName // (Final|Native|Public|BlueprintCallable) // @ game+0x54df160
	void SetBuiltLevelData(struct FBuiltLevelData& BuiltLevelData); // Function DeadByDaylight.DBDGameState.SetBuiltLevelData // (Final|Native|Public|HasOutParms) // @ game+0x54df090
	void Server_UpdateGameRole(); // Function DeadByDaylight.DBDGameState.Server_UpdateGameRole // (Final|Native|Public) // @ game+0x54df070
	void ResetGameLevelStatus(); // Function DeadByDaylight.DBDGameState.ResetGameLevelStatus // (Final|Native|Public) // @ game+0x54df050
	void RemoveTrap(struct AInteractable* toRemove); // Function DeadByDaylight.DBDGameState.RemoveTrap // (Final|Native|Public|BlueprintCallable) // @ game+0x54defc0
	void RemoveDangerPredictionObject(struct UDBDDangerPredictionComponent* toRemove); // Function DeadByDaylight.DBDGameState.RemoveDangerPredictionObject // (Final|Native|Public|BlueprintCallable) // @ game+0x54def30
	void OnSlasherSetMultiDelegate__DelegateSignature(struct ASlasherPlayer* SlasherPlayer); // DelegateFunction DeadByDaylight.DBDGameState.OnSlasherSetMultiDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnRep_UseNetAsyncLoading(); // Function DeadByDaylight.DBDGameState.OnRep_UseNetAsyncLoading // (Final|Native|Private) // @ game+0x54dee80
	void OnRep_SurvivorLeft(int32_t oldValue); // Function DeadByDaylight.DBDGameState.OnRep_SurvivorLeft // (Final|Native|Private) // @ game+0x54dedf0
	void OnRep_SessionId(); // Function DeadByDaylight.DBDGameState.OnRep_SessionId // (Final|Native|Private) // @ game+0x54dedd0
	void OnRep_SecondsLeftInLobby(int32_t oldValue); // Function DeadByDaylight.DBDGameState.OnRep_SecondsLeftInLobby // (Final|Native|Private) // @ game+0x54ded40
	void OnRep_RequiredActivatedGeneratorCount(int32_t oldRequiredActivatedGeneratorCount); // Function DeadByDaylight.DBDGameState.OnRep_RequiredActivatedGeneratorCount // (Final|Native|Private) // @ game+0x54decb0
	void OnRep_OnLevelReadyToPlay(); // Function DeadByDaylight.DBDGameState.OnRep_OnLevelReadyToPlay // (Final|Native|Private) // @ game+0x54dec90
	void OnRep_OnGameLevelCreated(); // Function DeadByDaylight.DBDGameState.OnRep_OnGameLevelCreated // (Final|Native|Private) // @ game+0x54dec70
	void OnRep_ObsessionTarget(struct ACamperPlayer* previousObsessionTarget); // Function DeadByDaylight.DBDGameState.OnRep_ObsessionTarget // (Final|Native|Private) // @ game+0x54debe0
	void OnRep_NumberOfSurvivorsKilledOrSacrificed(int8_t oldValue); // Function DeadByDaylight.DBDGameState.OnRep_NumberOfSurvivorsKilledOrSacrificed // (Final|Native|Private) // @ game+0x54deb60
	void OnRep_LobbyId(); // Function DeadByDaylight.DBDGameState.OnRep_LobbyId // (Final|Native|Private) // @ game+0x54deb40
	void OnRep_HatchOpened(bool oldValue); // Function DeadByDaylight.DBDGameState.OnRep_HatchOpened // (Final|Native|Private) // @ game+0x54deab0
	void OnRep_GamePresetData(); // Function DeadByDaylight.DBDGameState.OnRep_GamePresetData // (Final|Native|Private) // @ game+0x54dea90
	void OnRep_GameLevelLoadingStarted(bool oldValue); // Function DeadByDaylight.DBDGameState.OnRep_GameLevelLoadingStarted // (Final|Native|Private) // @ game+0x54dea00
	void OnRep_EscapeDoorActivated(bool oldValue); // Function DeadByDaylight.DBDGameState.OnRep_EscapeDoorActivated // (Final|Native|Private) // @ game+0x54de970
	void OnRep_BuildLevelData(); // Function DeadByDaylight.DBDGameState.OnRep_BuildLevelData // (Final|Native|Private) // @ game+0x54de950
	void OnRep_ActivatedGeneratorCount(int32_t oldValue); // Function DeadByDaylight.DBDGameState.OnRep_ActivatedGeneratorCount // (Final|Native|Private) // @ game+0x54de8c0
	void OnPlayerGameStateChangedAddIfKilled(struct ADBDPlayerState* PlayerState, enum class EGameState GameState); // Function DeadByDaylight.DBDGameState.OnPlayerGameStateChangedAddIfKilled // (Final|Native|Private) // @ game+0x54de7f0
	void OnLevelReadyToPlayDelegate__DelegateSignature(); // DelegateFunction DeadByDaylight.DBDGameState.OnLevelReadyToPlayDelegate__DelegateSignature // (Public|Delegate) // @ game+0x5e02c90
	void OnIntroCompleteDelegate__DelegateSignature(); // DelegateFunction DeadByDaylight.DBDGameState.OnIntroCompleteDelegate__DelegateSignature // (Public|Delegate) // @ game+0x5e02c90
	void Multicast_UpdateCharacterFromGamePreset(struct ADBDPlayerState_Menu* playerState_Menu, struct FGamePresetData GamePresetData); // Function DeadByDaylight.DBDGameState.Multicast_UpdateCharacterFromGamePreset // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54de530
	void Multicast_SetServerLeftGame(bool hasServerLeftGame); // Function DeadByDaylight.DBDGameState.Multicast_SetServerLeftGame // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54de4a0
	void Multicast_SetLostServerConnection(bool hasLostServerConnection); // Function DeadByDaylight.DBDGameState.Multicast_SetLostServerConnection // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54de410
	void Multicast_SetGameLevelLoaded(bool gameLevelLoaded); // Function DeadByDaylight.DBDGameState.Multicast_SetGameLevelLoaded // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54de380
	void Multicast_SetGameLevelEnded(enum class EEndGameReason endGameReason); // Function DeadByDaylight.DBDGameState.Multicast_SetGameLevelEnded // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54de300
	void Multicast_SetGameEnded(bool hasServerLeftGame); // Function DeadByDaylight.DBDGameState.Multicast_SetGameEnded // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54de270
	void Multicast_SetBuiltLevelData(struct FBuiltLevelData BuiltLevelData); // Function DeadByDaylight.DBDGameState.Multicast_SetBuiltLevelData // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54de1b0
	void Multicast_SendHVSPlusState(bool Enabled); // Function DeadByDaylight.DBDGameState.Multicast_SendHVSPlusState // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54de120
	void Multicast_SendEnsureToClients(struct FString ensure); // Function DeadByDaylight.DBDGameState.Multicast_SendEnsureToClients // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54de080
	void Multicast_OnGameStarted(); // Function DeadByDaylight.DBDGameState.Multicast_OnGameStarted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54de060
	void Multicast_BroadcastOnLevelLoadingTimeOutClientEvent(); // Function DeadByDaylight.DBDGameState.Multicast_BroadcastOnLevelLoadingTimeOutClientEvent // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54de040
	bool IsPlayerDistributionReady(); // Function DeadByDaylight.DBDGameState.IsPlayerDistributionReady // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ddf80
	bool IsOnePlayerLeft(); // Function DeadByDaylight.DBDGameState.IsOnePlayerLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ddf50
	bool IsOfferingReceived(); // Function DeadByDaylight.DBDGameState.IsOfferingReceived // (Final|Native|Public|Const) // @ game+0x54ddf20
	bool IsObsessionTargetAliveInLevel(); // Function DeadByDaylight.DBDGameState.IsObsessionTargetAliveInLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x54ddef0
	bool IsObsessionTargetAlive(); // Function DeadByDaylight.DBDGameState.IsObsessionTargetAlive // (Final|Native|Public|BlueprintCallable) // @ game+0x54ddec0
	bool IsLightingGenerated(); // Function DeadByDaylight.DBDGameState.IsLightingGenerated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ddea0
	bool IsLevelSetupDone(); // Function DeadByDaylight.DBDGameState.IsLevelSetupDone // (Final|Native|Public|Const) // @ game+0x54dde70
	bool IsLevelReadyToPlay(); // Function DeadByDaylight.DBDGameState.IsLevelReadyToPlay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dde50
	bool IsIntroCompleted(); // Function DeadByDaylight.DBDGameState.IsIntroCompleted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dde20
	bool IsHatchVisible(); // Function DeadByDaylight.DBDGameState.IsHatchVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dddf0
	bool IsEscapeRequirementCompleted(); // Function DeadByDaylight.DBDGameState.IsEscapeRequirementCompleted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dddc0
	bool IsEscapeDoorOpen(); // Function DeadByDaylight.DBDGameState.IsEscapeDoorOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ddd60
	bool IsEscapeDoorActivated(); // Function DeadByDaylight.DBDGameState.IsEscapeDoorActivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ddd30
	void IntroCompleted(); // Function DeadByDaylight.DBDGameState.IntroCompleted // (Final|Native|Public|BlueprintCallable) // @ game+0x54ddd10
	struct TArray<struct AInteractable*> GetTraps(); // Function DeadByDaylight.DBDGameState.GetTraps // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ddc40
	struct TArray<struct ATotem*> GetTotems(); // Function DeadByDaylight.DBDGameState.GetTotems // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ddbb0
	int32_t GetSurvivorLeft(); // Function DeadByDaylight.DBDGameState.GetSurvivorLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ddb90
	struct USpecialEventGameplaySpawnerComponent* GetSpecialEventGameplaySpawnerComponent(); // Function DeadByDaylight.DBDGameState.GetSpecialEventGameplaySpawnerComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ddb60
	struct TArray<struct FSelectedOffering> GetSelectedOfferings(); // Function DeadByDaylight.DBDGameState.GetSelectedOfferings // (Final|Native|Public|Const) // @ game+0x54ddb30
	bool GetSelectedOffering(int32_t index, struct FSelectedOffering& SelectedOffering); // Function DeadByDaylight.DBDGameState.GetSelectedOffering // (Final|Native|Public|HasOutParms|Const) // @ game+0x54dda40
	int32_t GetRequiredActivatedGeneratorCount(); // Function DeadByDaylight.DBDGameState.GetRequiredActivatedGeneratorCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dda10
	int32_t GetRemainingGeneratorsNeeded(); // Function DeadByDaylight.DBDGameState.GetRemainingGeneratorsNeeded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd9e0
	struct ADBDPlayerState* GetPlayerStateByMirrorsID(struct FString ID); // Function DeadByDaylight.DBDGameState.GetPlayerStateByMirrorsID // (Final|Native|Public|Const) // @ game+0x54dd930
	struct ADBDPlayerState* GetPlayerStateByIDString(struct FString ID, bool isReplacementBot); // Function DeadByDaylight.DBDGameState.GetPlayerStateByIDString // (Final|Native|Public|Const) // @ game+0x54dd840
	bool GetPlayersReadyToStart(); // Function DeadByDaylight.DBDGameState.GetPlayersReadyToStart // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dcf20
	void GetPlayerRoleCounts(int32_t& survivorCount, int32_t& killerCount, int32_t& spectatorCount); // Function DeadByDaylight.DBDGameState.GetPlayerRoleCounts // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd700
	struct ACamperPlayer* GetObsessionTarget(); // Function DeadByDaylight.DBDGameState.GetObsessionTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd6e0
	int32_t GetNumberOfOtherActiveSurvivors(struct ADBDPlayer* exception); // Function DeadByDaylight.DBDGameState.GetNumberOfOtherActiveSurvivors // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd640
	int32_t GetNumberOfActiveSurvivors(); // Function DeadByDaylight.DBDGameState.GetNumberOfActiveSurvivors // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd610
	struct FName GetMapThemeName(); // Function DeadByDaylight.DBDGameState.GetMapThemeName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd5d0
	struct ADBDPlayer* GetLocalPlayerPawn(); // Function DeadByDaylight.DBDGameState.GetLocalPlayerPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd5a0
	struct APawn* GetLocalPlayerBasePawn(); // Function DeadByDaylight.DBDGameState.GetLocalPlayerBasePawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd570
	struct TSoftObjectPtr<UAkAudioBank> GetLevelThemeAudioSoundBankAssetPtr(); // Function DeadByDaylight.DBDGameState.GetLevelThemeAudioSoundBankAssetPtr // (Final|Native|Public|Const) // @ game+0x54dd500
	struct FBuiltLevelData GetLevelData(); // Function DeadByDaylight.DBDGameState.GetLevelData // (Final|Native|Public|Const) // @ game+0x54dd4d0
	float GetKillerIntroCompletedNormalized(); // Function DeadByDaylight.DBDGameState.GetKillerIntroCompletedNormalized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd4b0
	struct ASlasherPlayer* GetKiller(); // Function DeadByDaylight.DBDGameState.GetKiller // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd480
	bool GetIsGameEnded(); // Function DeadByDaylight.DBDGameState.GetIsGameEnded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd450
	struct TArray<struct AWindow*> GetInGameWindows(); // Function DeadByDaylight.DBDGameState.GetInGameWindows // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd3c0
	struct TArray<struct ASearchable*> GetInGameSearchables(); // Function DeadByDaylight.DBDGameState.GetInGameSearchables // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd330
	struct TArray<struct AReverseBearTrapRemover*> GetInGameReverseBearTrapRemovers(); // Function DeadByDaylight.DBDGameState.GetInGameReverseBearTrapRemovers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd2a0
	struct TArray<struct APallet*> GetInGamePallets(); // Function DeadByDaylight.DBDGameState.GetInGamePallets // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd210
	struct TArray<struct AMeatHook*> GetInGameMeatHooks(); // Function DeadByDaylight.DBDGameState.GetInGameMeatHooks // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd180
	struct TArray<struct AHatch*> GetInGameHatches(); // Function DeadByDaylight.DBDGameState.GetInGameHatches // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd0f0
	struct TArray<struct AGenerator*> GetInGameGenerators(); // Function DeadByDaylight.DBDGameState.GetInGameGenerators // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dd060
	struct TArray<struct AEscapeDoor*> GetInGameEscapeDoors(); // Function DeadByDaylight.DBDGameState.GetInGameEscapeDoors // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dcfd0
	struct TArray<struct ABaseTrap*> GetInGameBaseTraps(); // Function DeadByDaylight.DBDGameState.GetInGameBaseTraps // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dcf40
	bool GetGameLevelLoadingStarted(); // Function DeadByDaylight.DBDGameState.GetGameLevelLoadingStarted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dcf20
	bool GetGameLevelLoaded(); // Function DeadByDaylight.DBDGameState.GetGameLevelLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dcf00
	struct UEndGameStateComponent* GetEndGameStateComponent(); // Function DeadByDaylight.DBDGameState.GetEndGameStateComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dced0
	struct TArray<struct UDBDDangerPredictionComponent*> GetDangerPredictionObjects(bool isObjectDynamic); // Function DeadByDaylight.DBDGameState.GetDangerPredictionObjects // (Final|Native|Public|BlueprintCallable) // @ game+0x54dce10
	struct UCollectableCollection* GetCollectableCollection(); // Function DeadByDaylight.DBDGameState.GetCollectableCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7c30
	struct UCharacterCollection* GetCharacterCollection(); // Function DeadByDaylight.DBDGameState.GetCharacterCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dcde0
	struct TArray<struct UDBDDangerPredictionComponent*> GetAllDangerPredictionObjects(); // Function DeadByDaylight.DBDGameState.GetAllDangerPredictionObjects // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dcdb0
	void CallOnSlasherSet(struct FDelegate Callback); // Function DeadByDaylight.DBDGameState.CallOnSlasherSet // (Final|Native|Public|BlueprintCallable) // @ game+0x54dcd00
	void CallOnLevelReadyToPlay(struct FDelegate Callback); // Function DeadByDaylight.DBDGameState.CallOnLevelReadyToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x54dcc50
	void CallOnIntroComplete(struct FDelegate Callback); // Function DeadByDaylight.DBDGameState.CallOnIntroComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x54dcba0
	void BroadcastOnSetBuildLevelData(); // Function DeadByDaylight.DBDGameState.BroadcastOnSetBuildLevelData // (Final|Native|Public) // @ game+0x54dcb80
	void Authority_SignalEscapeDoorActivated(bool newEscapeDoorActivated); // Function DeadByDaylight.DBDGameState.Authority_SignalEscapeDoorActivated // (Final|Native|Public|BlueprintCallable) // @ game+0x54dcaf0
	void Authority_SetSurvivorLeft(int32_t survivorRemaining); // Function DeadByDaylight.DBDGameState.Authority_SetSurvivorLeft // (Final|Native|Public) // @ game+0x54dca60
	void Authority_SetObsessionTarget(struct ACamperPlayer* obsessionTarget); // Function DeadByDaylight.DBDGameState.Authority_SetObsessionTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x54dc9d0
	void Authority_SetLevelReadyToPlay(); // Function DeadByDaylight.DBDGameState.Authority_SetLevelReadyToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x54dc9b0
	void Authority_SetHatchOpen(bool OPENED); // Function DeadByDaylight.DBDGameState.Authority_SetHatchOpen // (Final|Native|Public|BlueprintCallable) // @ game+0x54dc920
	void Authority_SetGameStarted(); // Function DeadByDaylight.DBDGameState.Authority_SetGameStarted // (Final|Native|Public) // @ game+0x54dc900
	void Authority_SetGameSelectedOffering(struct TArray<struct FSelectedOffering>& offerings); // Function DeadByDaylight.DBDGameState.Authority_SetGameSelectedOffering // (Final|Native|Public|HasOutParms) // @ game+0x54dc850
	void Authority_SetGameLevelLoaded(); // Function DeadByDaylight.DBDGameState.Authority_SetGameLevelLoaded // (Final|Native|Public) // @ game+0x54dc830
	void Authority_SetGameLevelEnded(enum class EEndGameReason endGameReason); // Function DeadByDaylight.DBDGameState.Authority_SetGameLevelEnded // (Final|Native|Public) // @ game+0x54dc7b0
	void Authority_SetGameLevelCreated(); // Function DeadByDaylight.DBDGameState.Authority_SetGameLevelCreated // (Final|Native|Public) // @ game+0x54dc790
	void Authority_SetEscapeDoorOpened(bool OPENED); // Function DeadByDaylight.DBDGameState.Authority_SetEscapeDoorOpened // (Final|Native|Public|BlueprintCallable) // @ game+0x54dc700
	void Authority_SetAllPlayerLoaded(); // Function DeadByDaylight.DBDGameState.Authority_SetAllPlayerLoaded // (Final|Native|Public) // @ game+0x54dc6e0
	void Authority_EvaluateObsessionTarget(struct ADBDPlayer* potentialTarget); // Function DeadByDaylight.DBDGameState.Authority_EvaluateObsessionTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x54dc650
	void Authority_EscapeThroughHatch(); // Function DeadByDaylight.DBDGameState.Authority_EscapeThroughHatch // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54dc630
	void Authority_EnableObsession(); // Function DeadByDaylight.DBDGameState.Authority_EnableObsession // (Final|Native|Public|BlueprintCallable) // @ game+0x54dc610
	void Authority_DeactivateAI(); // Function DeadByDaylight.DBDGameState.Authority_DeactivateAI // (Final|Native|Public) // @ game+0x54dc5f0
	void AddTrap(struct AInteractable* toAdd); // Function DeadByDaylight.DBDGameState.AddTrap // (Final|Native|Public|BlueprintCallable) // @ game+0x54dc530
	void AddDangerPredictionObject(struct UDBDDangerPredictionComponent* toAdd); // Function DeadByDaylight.DBDGameState.AddDangerPredictionObject // (Final|Native|Public|BlueprintCallable) // @ game+0x54dc4a0
};

// Class DeadByDaylight.AttackableComponent
// Size: 0xb8 (Inherited: 0xb8)
struct UAttackableComponent : UActorComponent {
};

// Class DeadByDaylight.PresentationItemProgressComponent
// Size: 0xc0 (Inherited: 0xb8)
struct UPresentationItemProgressComponent : UActorComponent {
	char pad_B8[0x8]; // 0xb8(0x08)
};

// Class DeadByDaylight.MapSpecificGameStateComponent
// Size: 0xb8 (Inherited: 0xb8)
struct UMapSpecificGameStateComponent : UActorComponent {
};

// Class DeadByDaylight.ScreenIndicatorWorldMarkerComponent
// Size: 0x230 (Inherited: 0x220)
struct UScreenIndicatorWorldMarkerComponent : USceneComponent {
	enum class EHudScreenIndicatorType HudScreenIndicatorType; // 0x218(0x01)
	struct FFloatRange VisibleDistanceRange; // 0x21c(0x10)
};

// Class DeadByDaylight.SurvivorCollectableOutlineUpdateStrategy
// Size: 0xe0 (Inherited: 0xc0)
struct USurvivorCollectableOutlineUpdateStrategy : UOutlineUpdateStrategy {
	struct FLinearColor _outlineColor; // 0xc0(0x10)
	struct FLinearColor _nearlyConsumedColor; // 0xd0(0x10)
};

// Class DeadByDaylight.DBDEmblem
// Size: 0x108 (Inherited: 0xb8)
struct UDBDEmblem : UActorComponent {
	float _points; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct TArray<struct FProgressionPoints> _progressionPoints; // 0xc0(0x10)
	struct FDataTableRowHandle _definition; // 0xd0(0x18)
	char pad_E8[0x20]; // 0xe8(0x20)

	void Client_FinalizeReplication(float Points, struct TArray<struct FProgressionPoints> ProgressionPoints); // Function DeadByDaylight.DBDEmblem.Client_FinalizeReplication // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x54d5dc0
};

// Class DeadByDaylight.AbstractGameFlowHandler
// Size: 0x38 (Inherited: 0x38)
struct UAbstractGameFlowHandler : UGameInstanceSubsystem {
};

// Class DeadByDaylight.AchievementHelper
// Size: 0x30 (Inherited: 0x30)
struct UAchievementHelper : UObject {
};

// Class DeadByDaylight.ActionButton
// Size: 0x5a8 (Inherited: 0x338)
struct UActionButton : UMobileBaseUserWidget {
	struct FSlateBrush DefaultImage; // 0x338(0x90)
	struct UImage* IconImage; // 0x3c8(0x08)
	struct UImage* ToggleSmokeImage; // 0x3d0(0x08)
	struct UButton* Button; // 0x3d8(0x08)
	float DefaultOpacity; // 0x3e0(0x04)
	float ToggledOpacity; // 0x3e4(0x04)
	float DisabledOpacity; // 0x3e8(0x04)
	char pad_3EC[0x4]; // 0x3ec(0x04)
	struct FSlateBrush Normal; // 0x3f0(0x90)
	struct FSlateBrush Toggled; // 0x480(0x90)
	struct FSlateBrush Disabled; // 0x510(0x90)
	enum class EActionButtonState _currentState; // 0x5a0(0x01)
	enum class EActionButtonState _previousState; // 0x5a1(0x01)
	char pad_5A2[0x6]; // 0x5a2(0x06)

	void SetState(enum class EActionButtonState State); // Function DeadByDaylight.ActionButton.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x545ff80
	void SetSlateBrush(struct FSlateBrush& InBrush); // Function DeadByDaylight.ActionButton.SetSlateBrush // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x545fe70
	void SetPreviousState(); // Function DeadByDaylight.ActionButton.SetPreviousState // (Final|Native|Protected|BlueprintCallable) // @ game+0x545fdc0
	void SetIcon(struct FSlateBrush SlateBrush); // Function DeadByDaylight.ActionButton.SetIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x545fc40
	void PlayBecameAvailableAnimation(); // Function DeadByDaylight.ActionButton.PlayBecameAvailableAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.BasePerkIconStrategy
// Size: 0x38 (Inherited: 0x30)
struct UBasePerkIconStrategy : UObject {
	char pad_30[0x8]; // 0x30(0x08)

	bool GetIsRechargeableActive(struct UPerk* Perk); // Function DeadByDaylight.BasePerkIconStrategy.GetIsRechargeableActive // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5481c90
	bool GetIsRechargeable(struct UPerk* Perk); // Function DeadByDaylight.BasePerkIconStrategy.GetIsRechargeable // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5481bf0
	float GetDisplayPercent(struct UPerk* Perk); // Function DeadByDaylight.BasePerkIconStrategy.GetDisplayPercent // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5481b20
};

// Class DeadByDaylight.ActivationAndTimerIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActivationAndTimerIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActivationTimerElapsedCooldownElapsedIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActivationTimerElapsedCooldownElapsedIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActivationTimerElapsedCooldownRemainingIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActivationTimerElapsedCooldownRemainingIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActivationTimerElapsedIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActivationTimerElapsedIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActivationTimerIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActivationTimerIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActivationTimerRemainingCooldownElapsedIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActivationTimerRemainingCooldownElapsedIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActivationTimerRemainingPercentIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActivationTimerRemainingPercentIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActiveOnTimerOrApplicablePerkIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActiveOnTimerOrApplicablePerkIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActiveOnTimerPerkIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActiveOnTimerPerkIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActiveWhenApplicableAndEnabledPerkIconStrategy
// Size: 0x40 (Inherited: 0x38)
struct UActiveWhenApplicableAndEnabledPerkIconStrategy : UBasePerkIconStrategy {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class DeadByDaylight.ActiveWhenApplicableAndNotCampingPerkIconStrategy
// Size: 0x40 (Inherited: 0x38)
struct UActiveWhenApplicableAndNotCampingPerkIconStrategy : UBasePerkIconStrategy {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class DeadByDaylight.ActiveWhenApplicablePerkIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActiveWhenApplicablePerkIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActiveWhenKOdAndCooldownTimerPerkIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UActiveWhenKOdAndCooldownTimerPerkIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ActorClipperComponent
// Size: 0x138 (Inherited: 0xb8)
struct UActorClipperComponent : UActorComponent {
	struct USphereComponent* Shape; // 0xb8(0x08)
	struct TMap<struct AActor*, struct FClippedActor> _clippedActors; // 0xc0(0x50)
	struct TWeakObjectPtr<struct UPrimitiveCollection> _clippables; // 0x110(0x08)
	char pad_118[0x20]; // 0x118(0x20)

	void SetPrimitiveCollection(struct UPrimitiveCollection* clippables); // Function DeadByDaylight.ActorClipperComponent.SetPrimitiveCollection // (Final|Native|Public|BlueprintCallable) // @ game+0x545fde0
	void OnOwnerLocallyObservedChanged(bool locallyObserved); // Function DeadByDaylight.ActorClipperComponent.OnOwnerLocallyObservedChanged // (Final|Native|Private) // @ game+0x545fa00
	void OnCameraChanged(enum class EDBDCameraSocketID socketId); // Function DeadByDaylight.ActorClipperComponent.OnCameraChanged // (Final|Native|Private) // @ game+0x545f760
};

// Class DeadByDaylight.ActorComponentExt
// Size: 0x30 (Inherited: 0x30)
struct UActorComponentExt : UBlueprintFunctionLibrary {

	bool IsLocallyObserved(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.IsLocallyObserved // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545f600
	bool IsLocallyControlled(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.IsLocallyControlled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545f530
	bool HasAuthority(struct UActorComponent* ActorComponent); // Function DeadByDaylight.ActorComponentExt.HasAuthority // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545f3e0
	struct AActor* GetValidatedOwner(struct UActorComponent* ActorComponent); // Function DeadByDaylight.ActorComponentExt.GetValidatedOwner // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545f350
	struct ACamperPlayer* GetOwningSurvivorChecked(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.GetOwningSurvivorChecked // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545f280
	struct ACamperPlayer* GetOwningSurvivor(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.GetOwningSurvivor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545f1b0
	struct ADBDPlayer* GetOwningPlayerInHierarchy(struct UActorComponent* ActorComponent); // Function DeadByDaylight.ActorComponentExt.GetOwningPlayerInHierarchy // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545f120
	struct ADBDPlayer* GetOwningPlayerChecked(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.GetOwningPlayerChecked // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545f050
	struct ADBDPlayer* GetOwningPlayer(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.GetOwningPlayer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545ef80
	struct APawn* GetOwningPawnChecked(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.GetOwningPawnChecked // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545eeb0
	struct APawn* GetOwningPawn(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.GetOwningPawn // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545ede0
	struct ASlasherPlayer* GetOwningKiller(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.GetOwningKiller // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545ed10
	struct ACharacter* GetOwningCharacterChecked(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.GetOwningCharacterChecked // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545ec40
	struct ACharacter* GetOwningCharacter(struct UActorComponent* ActorComponent, bool recursiveSearch); // Function DeadByDaylight.ActorComponentExt.GetOwningCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x545eb70
};

// Class DeadByDaylight.ActorDependency
// Size: 0xc8 (Inherited: 0xb8)
struct UActorDependency : UActorComponent {
	struct TArray<struct FDependency> Dependencies; // 0xb8(0x10)
};

// Class DeadByDaylight.ActorDetectorComponent
// Size: 0xe0 (Inherited: 0xb8)
struct UActorDetectorComponent : UActorComponent {
	struct FMulticastInlineDelegate OnActorDetected; // 0xb8(0x10)
	struct TArray<struct UObject*> CollectedTypes; // 0xc8(0x10)
	struct UPrimitiveComponent* _primitive; // 0xd8(0x08)

	void SetDetectionPrimitive(struct UPrimitiveComponent* Primitive); // Function DeadByDaylight.ActorDetectorComponent.SetDetectionPrimitive // (Final|Native|Public|BlueprintCallable) // @ game+0x545fbb0
	void OnOverlapEnter(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.ActorDetectorComponent.OnOverlapEnter // (Final|Native|Protected|HasOutParms) // @ game+0x545f7e0
};

// Class DeadByDaylight.ActorKnowledgeCollection
// Size: 0x108 (Inherited: 0xb8)
struct UActorKnowledgeCollection : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	struct TArray<struct AActor*> _actors; // 0xd0(0x10)
	struct TArray<struct AActor*> _previousActors; // 0xe0(0x10)
	bool _available; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
	struct ACharacter* _possessor; // 0xf8(0x08)
	enum class EKnowledgeSharingType _sharing; // 0x100(0x01)
	char pad_101[0x7]; // 0x101(0x07)

	void OnRep_Actors(); // Function DeadByDaylight.ActorKnowledgeCollection.OnRep_Actors // (Final|Native|Private) // @ game+0x545fa90
	void Local_SetAvailable(bool value); // Function DeadByDaylight.ActorKnowledgeCollection.Local_SetAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x545f6d0
	bool IsAvailable(struct ACharacter* Character); // Function DeadByDaylight.ActorKnowledgeCollection.IsAvailable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x545f470
	bool Contains(struct AActor* Actor); // Function DeadByDaylight.ActorKnowledgeCollection.Contains // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x545ea80
	void Authority_SetSharingType(enum class EKnowledgeSharingType value); // Function DeadByDaylight.ActorKnowledgeCollection.Authority_SetSharingType // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x545e9e0
	void Authority_SetPossessor(struct ACharacter* possessor); // Function DeadByDaylight.ActorKnowledgeCollection.Authority_SetPossessor // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x545e950
	void Authority_SetAvailable(bool value); // Function DeadByDaylight.ActorKnowledgeCollection.Authority_SetAvailable // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x545e8c0
	void Authority_Remove(struct AActor* Actor); // Function DeadByDaylight.ActorKnowledgeCollection.Authority_Remove // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x545e830
	void Authority_Empty(); // Function DeadByDaylight.ActorKnowledgeCollection.Authority_Empty // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x545e810
	void Authority_Append(struct TArray<struct AActor*>& Actors); // Function DeadByDaylight.ActorKnowledgeCollection.Authority_Append // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x545e760
	bool Authority_Add(struct AActor* Actor); // Function DeadByDaylight.ActorKnowledgeCollection.Authority_Add // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x545e6c0
};

// Class DeadByDaylight.ActorSpawner
// Size: 0x2f0 (Inherited: 0x220)
struct UActorSpawner : USceneComponent {
	char pad_220[0x8]; // 0x220(0x08)
	enum class EGameplayElementType Type; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)
	struct TSoftClassPtr<UObject> Visualization; // 0x230(0x30)
	bool ActivatedByDefault; // 0x260(0x01)
	char pad_261[0x7]; // 0x261(0x07)
	struct TArray<struct FActorSpawnerProperties> ActivatedSceneElement; // 0x268(0x10)
	struct TArray<struct FActorSpawnerProperties> DeactivatedSceneElement; // 0x278(0x10)
	float Weight; // 0x288(0x04)
	int32_t SpawnCountMax; // 0x28c(0x04)
	int32_t SpawnPriorityTier; // 0x290(0x04)
	char pad_294[0x4]; // 0x294(0x04)
	struct TArray<struct FName> TagsToBePassedOverToActor; // 0x298(0x10)
	bool AttachSpawnedActorToAttachedSocket; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)
	struct FMulticastInlineDelegate OnAsyncActorSpawned; // 0x2b0(0x10)
	char pad_2C0[0x8]; // 0x2c0(0x08)
	bool WeightInfluenceable; // 0x2c8(0x01)
	bool WeightInfluencer; // 0x2c9(0x01)
	char pad_2CA[0x2]; // 0x2ca(0x02)
	float Cost; // 0x2cc(0x04)
	struct UObject* _toSpawn; // 0x2d0(0x08)
	char pad_2D8[0x8]; // 0x2d8(0x08)
	struct TWeakObjectPtr<struct AActor> _spawnedActorOnAuthority; // 0x2e0(0x08)
	char pad_2E8[0x8]; // 0x2e8(0x08)

	bool UseActivatedElement(); // Function DeadByDaylight.ActorSpawner.UseActivatedElement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5460000
	bool IsEnabled(); // Function DeadByDaylight.ActorSpawner.IsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x545f510
	void EditorForceSpawnVisualization(); // Function DeadByDaylight.ActorSpawner.EditorForceSpawnVisualization // (Final|Native|Public|BlueprintCallable) // @ game+0x545eb20
	void AuthoritySelect(bool Selected); // Function DeadByDaylight.ActorSpawner.AuthoritySelect // (Final|Native|Public|BlueprintCallable) // @ game+0x545e630
	struct AActor* AuthorityGetSpawnedActor(); // Function DeadByDaylight.ActorSpawner.AuthorityGetSpawnedActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x545e600
	void Authority_SpawnActorAsyncEvent(); // Function DeadByDaylight.ActorSpawner.Authority_SpawnActorAsyncEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x545ea60
};

// Class DeadByDaylight.ObjectRandomizer
// Size: 0x230 (Inherited: 0x220)
struct UObjectRandomizer : USceneComponent {
	struct TArray<struct UActorSpawner*> Spawners; // 0x218(0x10)
	int32_t MinPopulation; // 0x228(0x04)
	int32_t MaxPopulation; // 0x22c(0x04)
};

// Class DeadByDaylight.ActorSpawnerRandomizer
// Size: 0x250 (Inherited: 0x230)
struct UActorSpawnerRandomizer : UObjectRandomizer {
	struct TArray<struct FSpawnerElement> ActivatedSpawnerContentLists; // 0x230(0x10)
	struct TArray<struct FSpawnerElement> DeactivatedSpawnerContentLists; // 0x240(0x10)
};

// Class DeadByDaylight.ActorVariationSpawner
// Size: 0x270 (Inherited: 0x220)
struct UActorVariationSpawner : USceneComponent {
	struct TSoftClassPtr<UObject> Visualization; // 0x218(0x30)
	struct TArray<struct FActorVariationElements> Variations; // 0x248(0x10)
	struct UObject* _toSpawn; // 0x260(0x08)
	char pad_268[0x8]; // 0x268(0x08)
};

// Class DeadByDaylight.AIBotsManager
// Size: 0x70 (Inherited: 0x38)
struct UAIBotsManager : UGameInstanceSubsystem {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class DeadByDaylight.AICharacterBehaviourData
// Size: 0x30 (Inherited: 0x30)
struct UAICharacterBehaviourData : UObject {
};

// Class DeadByDaylight.AICharacterBehaviour
// Size: 0x58 (Inherited: 0x30)
struct UAICharacterBehaviour : UObject {
	char pad_30[0x28]; // 0x30(0x28)

	void Update(float DeltaTime); // Function DeadByDaylight.AICharacterBehaviour.Update // (Native|Public) // @ game+0x48e0450
	void Stop(); // Function DeadByDaylight.AICharacterBehaviour.Stop // (Native|Public) // @ game+0x45f6400
	void Start(); // Function DeadByDaylight.AICharacterBehaviour.Start // (Native|Public) // @ game+0x54651c0
	void SetEnable(bool enable); // Function DeadByDaylight.AICharacterBehaviour.SetEnable // (Final|Native|Public) // @ game+0x5465130
	void Resume(); // Function DeadByDaylight.AICharacterBehaviour.Resume // (Native|Public) // @ game+0x46a27c0
	void Pause(); // Function DeadByDaylight.AICharacterBehaviour.Pause // (Native|Public) // @ game+0x46a27a0
	bool IsEnabled(); // Function DeadByDaylight.AICharacterBehaviour.IsEnabled // (Final|Native|Public|Const) // @ game+0x4634ce0
};

// Class DeadByDaylight.AICharacterBehaviourInteractWithActor
// Size: 0x90 (Inherited: 0x58)
struct UAICharacterBehaviourInteractWithActor : UAICharacterBehaviour {
	struct ADBDPlayer* _aiPlayer; // 0x58(0x08)
	struct ADBDAIPlayerController* _aiPlayerController; // 0x60(0x08)
	struct UAICharacterBehaviourInteractWithActorData* _behaviourData; // 0x68(0x08)
	char pad_70[0x20]; // 0x70(0x20)

	void OnMovementFinished(struct FAIRequestID RequestID, enum class EPathFollowingResult Result); // Function DeadByDaylight.AICharacterBehaviourInteractWithActor.OnMovementFinished // (Final|Native|Private) // @ game+0x5464c40
};

// Class DeadByDaylight.AICharacterBehaviourDropPallet
// Size: 0x98 (Inherited: 0x90)
struct UAICharacterBehaviourDropPallet : UAICharacterBehaviourInteractWithActor {
	struct APallet* _targetPallet; // 0x90(0x08)
};

// Class DeadByDaylight.AICharacterBehaviourInteractWithActorData
// Size: 0x50 (Inherited: 0x30)
struct UAICharacterBehaviourInteractWithActorData : UAICharacterBehaviourData {
	struct AActor* TargetActor; // 0x30(0x08)
	char pad_38[0x10]; // 0x38(0x10)
	enum class ECharacterMovementTypes characterMovementType; // 0x48(0x01)
	bool usePathfinding; // 0x49(0x01)
	char pad_4A[0x6]; // 0x4a(0x06)

	void WatchGameEventTypes(struct TArray<struct FGameplayTag> gameEventTypes); // Function DeadByDaylight.AICharacterBehaviourInteractWithActorData.WatchGameEventTypes // (Final|Native|Public|BlueprintCallable) // @ game+0x5465420
	void WatchGameEventType(struct FGameplayTag gameEventType); // Function DeadByDaylight.AICharacterBehaviourInteractWithActorData.WatchGameEventType // (Final|Native|Public|BlueprintCallable) // @ game+0x5465380
	void Init(struct AActor* Actor, enum class ECharacterMovementTypes characterMovementType, bool usePathfinding); // Function DeadByDaylight.AICharacterBehaviourInteractWithActorData.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x5464050
};

// Class DeadByDaylight.AICharacterBehaviourInteractWithHook
// Size: 0x98 (Inherited: 0x90)
struct UAICharacterBehaviourInteractWithHook : UAICharacterBehaviourInteractWithActor {
	struct AMeatHook* _targetHook; // 0x90(0x08)
};

// Class DeadByDaylight.AICharacterEscapeCarriedData
// Size: 0x38 (Inherited: 0x30)
struct UAICharacterEscapeCarriedData : UAICharacterBehaviourData {
	bool _preventWiggleSuccess; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)

	void Init(bool preventWiggleSuccess); // Function DeadByDaylight.AICharacterEscapeCarriedData.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x5464170
};

// Class DeadByDaylight.AICharacterEscapeCarried
// Size: 0x68 (Inherited: 0x58)
struct UAICharacterEscapeCarried : UAICharacterBehaviour {
	struct ACamperPlayer* _camperPlayer; // 0x58(0x08)
	struct UAICharacterEscapeCarriedData* _behaviourData; // 0x60(0x08)
};

// Class DeadByDaylight.CharacterEvasionBehaviourData
// Size: 0x50 (Inherited: 0x30)
struct UCharacterEvasionBehaviourData : UAICharacterBehaviourData {
	struct AActor* _hunter; // 0x30(0x08)
	struct TArray<struct AActor*> _escapePoints; // 0x38(0x10)
	float _minEscapeDist; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)

	void Init(struct AActor* Hunter, struct TArray<struct AActor*> escapePoints, float minEscapeDist); // Function DeadByDaylight.CharacterEvasionBehaviourData.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x5464840
};

// Class DeadByDaylight.AICharacterEvasionBehaviour
// Size: 0x80 (Inherited: 0x58)
struct UAICharacterEvasionBehaviour : UAICharacterBehaviour {
	struct ADBDPlayer* _prey; // 0x58(0x08)
	struct ADBDAIPlayerController* _preyAIController; // 0x60(0x08)
	struct AActor* _currentEscapePoint; // 0x68(0x08)
	struct UCharacterEvasionBehaviourData* _characterEvasionData; // 0x70(0x08)
	char pad_78[0x8]; // 0x78(0x08)

	void EscapeDestinationReached(struct FAIRequestID RequestID, enum class EPathFollowingResult Result); // Function DeadByDaylight.AICharacterEvasionBehaviour.EscapeDestinationReached // (Final|Native|Private) // @ game+0x5463f80
};

// Class DeadByDaylight.AICharacterHideInLockerBehaviourData
// Size: 0x40 (Inherited: 0x30)
struct UAICharacterHideInLockerBehaviourData : UAICharacterBehaviourData {
	struct ALocker* TargetLocker; // 0x30(0x08)
	enum class ECharacterMovementTypes characterMovementType; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)

	void Init(struct ALocker* Locker, enum class ECharacterMovementTypes characterMovementType); // Function DeadByDaylight.AICharacterHideInLockerBehaviourData.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x5464200
};

// Class DeadByDaylight.AICharacterHideInLockerBehaviour
// Size: 0x90 (Inherited: 0x58)
struct UAICharacterHideInLockerBehaviour : UAICharacterBehaviour {
	struct ADBDPlayer* _aiPlayer; // 0x58(0x08)
	struct ADBDAIPlayerController* _aiPlayerController; // 0x60(0x08)
	char pad_68[0x18]; // 0x68(0x18)
	struct UAICharacterHideInLockerBehaviourData* _characterHideInLockerData; // 0x80(0x08)
	char pad_88[0x8]; // 0x88(0x08)

	void OnMovementFinished(struct FAIRequestID RequestID, enum class EPathFollowingResult Result); // Function DeadByDaylight.AICharacterHideInLockerBehaviour.OnMovementFinished // (Final|Native|Private) // @ game+0x5464d10
};

// Class DeadByDaylight.AICharacterRepairGeneratorBehaviourData
// Size: 0x40 (Inherited: 0x30)
struct UAICharacterRepairGeneratorBehaviourData : UAICharacterBehaviourData {
	struct AGenerator* _generator; // 0x30(0x08)
	enum class ECharacterMovementTypes _characterMovementType; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)

	void Init(struct AGenerator* Generator, enum class ECharacterMovementTypes characterMovementType); // Function DeadByDaylight.AICharacterRepairGeneratorBehaviourData.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x54642d0
};

// Class DeadByDaylight.AICharacterRepairGeneratorBehaviour
// Size: 0x98 (Inherited: 0x58)
struct UAICharacterRepairGeneratorBehaviour : UAICharacterBehaviour {
	char pad_58[0x10]; // 0x58(0x10)
	struct ADBDPlayer* _aiPlayer; // 0x68(0x08)
	struct ADBDAIPlayerController* _aiPlayerController; // 0x70(0x08)
	struct UInteractor* _targetInteractor; // 0x78(0x08)
	struct UAICharacterRepairGeneratorBehaviourData* _characterRepairGeneratorData; // 0x80(0x08)
	char pad_88[0x10]; // 0x88(0x10)

	void OnMovementFinished(struct FAIRequestID RequestID, enum class EPathFollowingResult Result); // Function DeadByDaylight.AICharacterRepairGeneratorBehaviour.OnMovementFinished // (Final|Native|Private) // @ game+0x5464de0
	void OnGeneratorRepairedEventHandler(bool isAutoCompleted); // Function DeadByDaylight.AICharacterRepairGeneratorBehaviour.OnGeneratorRepairedEventHandler // (Final|Native|Private) // @ game+0x5464bb0
};

// Class DeadByDaylight.AIHealAllyBehaviourData
// Size: 0x38 (Inherited: 0x30)
struct UAIHealAllyBehaviourData : UAICharacterBehaviourData {
	struct ACamperPlayer* _targetAlly; // 0x30(0x08)

	void Init(struct ACamperPlayer* allyToHealTarget); // Function DeadByDaylight.AIHealAllyBehaviourData.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x5464470
};

// Class DeadByDaylight.AIHealAllyBehaviour
// Size: 0x80 (Inherited: 0x58)
struct UAIHealAllyBehaviour : UAICharacterBehaviour {
	struct UAIHealAllyBehaviourData* _behaviourData; // 0x58(0x08)
	struct ADBDAIPlayerController* _aiController; // 0x60(0x08)
	struct ADBDPlayer* _aiPlayer; // 0x68(0x08)
	char pad_70[0x10]; // 0x70(0x10)

	void TargetPositionReached(struct FAIRequestID RequestID, enum class EPathFollowingResult Result); // Function DeadByDaylight.AIHealAllyBehaviour.TargetPositionReached // (Final|Native|Private) // @ game+0x54651e0
	void Init(struct ADBDPlayer* Character, struct UAICharacterBehaviourData* behaviourData); // Function DeadByDaylight.AIHealAllyBehaviour.Init // (Native|Public) // @ game+0x54643a0
};

// Class DeadByDaylight.AimableInterface
// Size: 0x30 (Inherited: 0x30)
struct UAimableInterface : UInterface {
};

// Class DeadByDaylight.AimAssistComponent
// Size: 0xe8 (Inherited: 0xb8)
struct UAimAssistComponent : UActorComponent {
	char pad_B8[0x30]; // 0xb8(0x30)
};

// Class DeadByDaylight.AimingCrosshairComponent
// Size: 0x100 (Inherited: 0xb8)
struct UAimingCrosshairComponent : UActorComponent {
	char pad_B8[0x48]; // 0xb8(0x48)

	void Server_SetCosmetics(enum class EAimingCrosshairState aimingCrosshairState, float Progress); // Function DeadByDaylight.AimingCrosshairComponent.Server_SetCosmetics // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x5465060
	void Multicast_SetCosmetics(enum class EAimingCrosshairState aimingCrosshairState, float Progress); // Function DeadByDaylight.AimingCrosshairComponent.Multicast_SetCosmetics // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5464ae0
};

// Class DeadByDaylight.AIMoveToInteractData
// Size: 0x48 (Inherited: 0x30)
struct UAIMoveToInteractData : UAICharacterBehaviourData {
	struct AActor* _interactActor; // 0x30(0x08)
	struct AActor* _targetPositionActor; // 0x38(0x08)
	enum class ECharacterMovementTypes _characterMovementTypes; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)

	void Init(struct AActor* interactActor, enum class ECharacterMovementTypes characterMovementTypes, struct AActor* targetPositionActor); // Function DeadByDaylight.AIMoveToInteractData.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x5464500
};

// Class DeadByDaylight.AIMoveToInteract
// Size: 0x70 (Inherited: 0x58)
struct UAIMoveToInteract : UAICharacterBehaviour {
	struct UAIMoveToInteractData* _aiMoveToInteractData; // 0x58(0x08)
	struct ADBDAIPlayerController* _aiController; // 0x60(0x08)
	char pad_68[0x8]; // 0x68(0x08)

	void InteractionPointReached(struct FAIRequestID RequestID, enum class EPathFollowingResult Result); // Function DeadByDaylight.AIMoveToInteract.InteractionPointReached // (Final|Native|Private) // @ game+0x5464a10
	void Init(struct ADBDPlayer* Character, struct UAICharacterBehaviourData* behaviourData); // Function DeadByDaylight.AIMoveToInteract.Init // (Native|Public) // @ game+0x54643a0
};

// Class DeadByDaylight.AIMoveToPositionData
// Size: 0x40 (Inherited: 0x30)
struct UAIMoveToPositionData : UAICharacterBehaviourData {
	struct AActor* _positionActor; // 0x30(0x08)
	enum class ECharacterMovementTypes _movementType; // 0x38(0x01)
	bool _usePathfinding; // 0x39(0x01)
	char pad_3A[0x6]; // 0x3a(0x06)

	void Init(struct AActor* positionActor, enum class ECharacterMovementTypes movementType, bool usePathfinding); // Function DeadByDaylight.AIMoveToPositionData.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x5464610
};

// Class DeadByDaylight.AIMoveToPosition
// Size: 0x70 (Inherited: 0x58)
struct UAIMoveToPosition : UAICharacterBehaviour {
	struct UAIMoveToPositionData* _aiBehaviourData; // 0x58(0x08)
	struct ADBDAIPlayerController* _aiController; // 0x60(0x08)
	char pad_68[0x8]; // 0x68(0x08)

	void TargetPositionReached(struct FAIRequestID RequestID, enum class EPathFollowingResult Result); // Function DeadByDaylight.AIMoveToPosition.TargetPositionReached // (Final|Native|Private) // @ game+0x54652b0
	void Init(struct ADBDPlayer* Character, struct UAICharacterBehaviourData* behaviourData); // Function DeadByDaylight.AIMoveToPosition.Init // (Native|Public) // @ game+0x54643a0
};

// Class DeadByDaylight.AIPointOfInterestTargetInterface
// Size: 0x30 (Inherited: 0x30)
struct UAIPointOfInterestTargetInterface : UInterface {
};

// Class DeadByDaylight.AISenseConfig_PointOfInterest
// Size: 0x60 (Inherited: 0x50)
struct UAISenseConfig_PointOfInterest : UAISenseConfig {
	struct UAISense_PointOfInterest* Implementation; // 0x50(0x08)
	float MinGeneratorRepairSoundRange; // 0x58(0x04)
	float MaxGeneratorRepairSoundRange; // 0x5c(0x04)
};

// Class DeadByDaylight.AISense_PointOfInterest
// Size: 0xa0 (Inherited: 0x90)
struct UAISense_PointOfInterest : UAISense {
	struct TArray<struct AActor*> _sources; // 0x90(0x10)
};

// Class DeadByDaylight.AISenseConfig_Trail
// Size: 0x68 (Inherited: 0x50)
struct UAISenseConfig_Trail : UAISenseConfig {
	struct UAISense_Trail* Implementation; // 0x50(0x08)
	float MaxRange; // 0x58(0x04)
	float PeripheralVisionAngleDegrees; // 0x5c(0x04)
	struct FAISenseAffiliationFilter DetectionByAffiliation; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
};

// Class DeadByDaylight.AISenseEvent_Trail
// Size: 0x60 (Inherited: 0x30)
struct UAISenseEvent_Trail : UAISenseEvent {
	struct FAITrailEvent Event; // 0x30(0x30)
};

// Class DeadByDaylight.AISense_Trail
// Size: 0xf0 (Inherited: 0x90)
struct UAISense_Trail : UAISense {
	struct TArray<struct FAITrailEvent> Events; // 0x90(0x10)
	char pad_A0[0x50]; // 0xa0(0x50)

	void ReportTrailEvent(struct UObject* worldContextObj, struct FVector Location, struct AActor* Instigator, struct FGameplayTag IgnoreOnPerkTag, float lifetime); // Function DeadByDaylight.AISense_Trail.ReportTrailEvent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x5464eb0
};

// Class DeadByDaylight.AISlasherChaseAndAttackBehaviourData
// Size: 0x40 (Inherited: 0x30)
struct UAISlasherChaseAndAttackBehaviourData : UAICharacterBehaviourData {
	struct ACamperPlayer* _targetSurvivor; // 0x30(0x08)
	float _sqrtAttackRangeDistance; // 0x38(0x04)
	float _sqrtMaxTargetPositionDiff; // 0x3c(0x04)

	void Init(struct ACamperPlayer* TargetSurvivor, float attackRangeDistance, float locationDistance); // Function DeadByDaylight.AISlasherChaseAndAttackBehaviourData.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x5464730
};

// Class DeadByDaylight.AISlasherChaseAndAttackBehaviour
// Size: 0x80 (Inherited: 0x58)
struct UAISlasherChaseAndAttackBehaviour : UAICharacterBehaviour {
	struct UAISlasherChaseAndAttackBehaviourData* _behaviourData; // 0x58(0x08)
	struct ASlasherPlayer* _slasherPlayer; // 0x60(0x08)
	struct ADBDAIPlayerController* _slasherAIPlayerController; // 0x68(0x08)
	char pad_70[0x10]; // 0x70(0x10)
};

// Class DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviourData
// Size: 0x38 (Inherited: 0x30)
struct UAISlasherMoveToGrabSurvivorBehaviourData : UAICharacterBehaviourData {
	struct ACamperPlayer* _targetSurvivor; // 0x30(0x08)

	void Init(struct ACamperPlayer* TargetSurvivor); // Function DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviourData.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x5464470
};

// Class DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviour
// Size: 0x80 (Inherited: 0x58)
struct UAISlasherMoveToGrabSurvivorBehaviour : UAICharacterBehaviour {
	struct UAISlasherMoveToGrabSurvivorBehaviourData* _behaviourData; // 0x58(0x08)
	struct ASlasherPlayer* _slasherPlayer; // 0x60(0x08)
	struct ADBDAIPlayerController* _slasherAIPlayerController; // 0x68(0x08)
	char pad_70[0x10]; // 0x70(0x10)
};

// Class DeadByDaylight.ScreenBase
// Size: 0x120 (Inherited: 0x30)
struct UScreenBase : UObject {
	bool isAnimationDone; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct UGFxObject* ScreenObject; // 0x38(0x08)
	struct UScreenController* _screenController; // 0x40(0x08)
	char pad_48[0xd8]; // 0x48(0xd8)

	void SetFadesOut(bool fadesOut); // Function DeadByDaylight.ScreenBase.SetFadesOut // (Final|Native|Public|Const) // @ game+0x55951a0
	void OnTextInputMouseClicked(bool IsPassword); // Function DeadByDaylight.ScreenBase.OnTextInputMouseClicked // (Final|Native|Public) // @ game+0x46a2400
	void OnStart(); // Function DeadByDaylight.ScreenBase.OnStart // (Final|Native|Public) // @ game+0x5595180
	void OnNavKey(struct FString navKey); // Function DeadByDaylight.ScreenBase.OnNavKey // (Final|Native|Public) // @ game+0x55950c0
	void OnHideVirtualKeyboardRequested(); // Function DeadByDaylight.ScreenBase.OnHideVirtualKeyboardRequested // (Final|Native|Public) // @ game+0x4032ad0
	void OnEscape(); // Function DeadByDaylight.ScreenBase.OnEscape // (Final|Native|Public) // @ game+0x55950a0
	void OnBack(); // Function DeadByDaylight.ScreenBase.OnBack // (Final|Native|Public) // @ game+0x5594fb0
	void OnAnyKey(float Code); // Function DeadByDaylight.ScreenBase.OnAnyKey // (Final|Native|Public) // @ game+0x5594f30
	void OnAnimationUpdate(int32_t isAnimationDone); // Function DeadByDaylight.ScreenBase.OnAnimationUpdate // (Final|Native|Public) // @ game+0x5594ea0
	void BroadcastOnHighlightedElementClickedEvent(struct FName onBoardingID); // Function DeadByDaylight.ScreenBase.BroadcastOnHighlightedElementClickedEvent // (Final|Native|Public) // @ game+0x5594dd0
};

// Class DeadByDaylight.AlertsScreen
// Size: 0x138 (Inherited: 0x120)
struct UAlertsScreen : UScreenBase {
	char pad_120[0x18]; // 0x120(0x18)

	void RewardAlertSequenceCompleted(); // Function DeadByDaylight.AlertsScreen.RewardAlertSequenceCompleted // (Final|Native|Private|Const) // @ game+0x546c3f0
};

// Class DeadByDaylight.AlwaysVisiblePerkIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UAlwaysVisiblePerkIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.Gate
// Size: 0x248 (Inherited: 0x230)
struct AGate : AActor {
	struct TArray<float> InteractionInputs; // 0x230(0x10)
	float InteractionOutput; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
};

// Class DeadByDaylight.AndGate
// Size: 0x248 (Inherited: 0x248)
struct AAndGate : AGate {
};

// Class DeadByDaylight.AnimationFollowerActor
// Size: 0x298 (Inherited: 0x230)
struct AAnimationFollowerActor : AActor {
	struct UDBDSkeletalMeshComponentBudgeted* _skeletalMeshComponent; // 0x230(0x08)
	struct UAnimationMontageSlave* _montageFollower; // 0x238(0x08)
	struct UMontagePlayer* _montagePlayer; // 0x240(0x08)
	char pad_248[0x50]; // 0x248(0x50)

	void OnMontageStopped(struct FAnimationMontageDescriptor ID); // Function DeadByDaylight.AnimationFollowerActor.OnMontageStopped // (Final|Native|Private) // @ game+0x546c1d0
	void OnMontageStarted(struct FAnimationMontageDescriptor ID, float Rate); // Function DeadByDaylight.AnimationFollowerActor.OnMontageStarted // (Final|Native|Private) // @ game+0x546bf50
	void OnMontageEnd(struct FAnimationMontageDescriptor Montage, bool interrupted); // Function DeadByDaylight.AnimationFollowerActor.OnMontageEnd // (Final|Native|Private) // @ game+0x546be00
	void NativeOnMontageStopped(struct FAnimationMontageDescriptor ID); // Function DeadByDaylight.AnimationFollowerActor.NativeOnMontageStopped // (Native|Protected) // @ game+0x546bcf0
	void NativeOnMontageStarted(struct FAnimationMontageDescriptor ID, float Rate); // Function DeadByDaylight.AnimationFollowerActor.NativeOnMontageStarted // (Native|Protected) // @ game+0x546bbb0
	void NativeOnMontageEnded(struct FAnimationMontageDescriptor Montage, bool interrupted); // Function DeadByDaylight.AnimationFollowerActor.NativeOnMontageEnded // (Native|Protected) // @ game+0x546ba60
	void Cosmetic_OnMontageStopped(); // Function DeadByDaylight.AnimationFollowerActor.Cosmetic_OnMontageStopped // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void Cosmetic_OnMontageStarted(); // Function DeadByDaylight.AnimationFollowerActor.Cosmetic_OnMontageStarted // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.AnimationMontageSlave
// Size: 0xc8 (Inherited: 0xb8)
struct UAnimationMontageSlave : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)

	void SetMontagePlayer(struct UMontagePlayer* MontagePlayer); // Function DeadByDaylight.AnimationMontageSlave.SetMontagePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x546c4a0
	void SetLeader(struct UMontagePlayer* Leader); // Function DeadByDaylight.AnimationMontageSlave.SetLeader // (Final|Native|Public|BlueprintCallable) // @ game+0x546c410
	void OnMontageStopped(struct FAnimationMontageDescriptor ID); // Function DeadByDaylight.AnimationMontageSlave.OnMontageStopped // (Final|Native|Private) // @ game+0x546c2e0
	void OnMontageStarted(struct FAnimationMontageDescriptor ID, float Rate); // Function DeadByDaylight.AnimationMontageSlave.OnMontageStarted // (Final|Native|Private) // @ game+0x546c090
};

// Class DeadByDaylight.AnimNotifyState_HideCustomizationAttachments
// Size: 0x40 (Inherited: 0x38)
struct UAnimNotifyState_HideCustomizationAttachments : UAnimNotifyState {
	enum class ECustomizationCategory category; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class DeadByDaylight.AnimTagProvider
// Size: 0x30 (Inherited: 0x30)
struct UAnimTagProvider : UInterface {
};

// Class DeadByDaylight.ApplicableActivationTimerElapsedIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UApplicableActivationTimerElapsedIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ApplicableActivationTimerRemainingCooldownElapsedIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UApplicableActivationTimerRemainingCooldownElapsedIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ApplicableActivationTimerRemainingIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UApplicableActivationTimerRemainingIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ApplicableAndStealthRatioIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UApplicableAndStealthRatioIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ApplicableCooldownPerkIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UApplicableCooldownPerkIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.BasePopupScreen
// Size: 0x120 (Inherited: 0x120)
struct UBasePopupScreen : UScreenBase {
};

// Class DeadByDaylight.GenericPopupScreen
// Size: 0x140 (Inherited: 0x120)
struct UGenericPopupScreen : UBasePopupScreen {
	struct UUMGGenericPopup* _popup; // 0x120(0x08)
	char pad_128[0x18]; // 0x128(0x18)

	void OnChoiceSelected(int32_t selectedButtonType); // Function DeadByDaylight.GenericPopupScreen.OnChoiceSelected // (Final|Native|Private) // @ game+0x55350a0
};

// Class DeadByDaylight.ArchivePassPurchasePopupScreen
// Size: 0x140 (Inherited: 0x140)
struct UArchivePassPurchasePopupScreen : UGenericPopupScreen {
};

// Class DeadByDaylight.ArchivesHelper
// Size: 0x30 (Inherited: 0x30)
struct UArchivesHelper : UObject {
};

// Class DeadByDaylight.ArchivesManager
// Size: 0x70 (Inherited: 0x38)
struct UArchivesManager : UGameInstanceSubsystem {
	char pad_38[0x20]; // 0x38(0x20)
	struct UArchiveStoriesContainer* _storiesContainer; // 0x58(0x08)
	struct UArchiveVignettesContainer* _vignettesContainer; // 0x60(0x08)
	struct URewardTrackContainer* _rewardTrackContainer; // 0x68(0x08)
};

// Class DeadByDaylight.ArchivesSpecialBehavioursHelper
// Size: 0x30 (Inherited: 0x30)
struct UArchivesSpecialBehavioursHelper : UObject {
};

// Class DeadByDaylight.ArchiveStoriesContainer
// Size: 0x448 (Inherited: 0x30)
struct UArchiveStoriesContainer : UObject {
	char pad_30[0x2b8]; // 0x30(0x2b8)
	struct URewardTrackContainer* _rewardTrackContainer; // 0x2e8(0x08)
	char pad_2F0[0xc8]; // 0x2f0(0xc8)
	struct UWalletHandler* _wallet; // 0x3b8(0x08)
	struct UArchiveVignettesContainer* _vignettesContainer; // 0x3c0(0x08)
	char pad_3C8[0x80]; // 0x3c8(0x80)
};

// Class DeadByDaylight.ArchiveTierPurchasePopupScreen
// Size: 0x158 (Inherited: 0x140)
struct UArchiveTierPurchasePopupScreen : UGenericPopupScreen {
	char pad_140[0x18]; // 0x140(0x18)

	void OnConfirmPurchase(int32_t tiersToPurchaseNumber); // Function DeadByDaylight.ArchiveTierPurchasePopupScreen.OnConfirmPurchase // (Final|Native|Private) // @ game+0x5472a10
};

// Class DeadByDaylight.ArchiveVignettesContainer
// Size: 0x108 (Inherited: 0x30)
struct UArchiveVignettesContainer : UObject {
	char pad_30[0xd8]; // 0x30(0xd8)
};

// Class DeadByDaylight.ArchiveWidgetScreen
// Size: 0x150 (Inherited: 0x120)
struct UArchiveWidgetScreen : UScreenBase {
	char pad_120[0x30]; // 0x120(0x30)

	void OnRewardsButtonClick(); // Function DeadByDaylight.ArchiveWidgetScreen.OnRewardsButtonClick // (Final|Native|Private) // @ game+0x5472b70
	void OnQuestsButtonClick(); // Function DeadByDaylight.ArchiveWidgetScreen.OnQuestsButtonClick // (Final|Native|Private) // @ game+0x546c3f0
};

// Class DeadByDaylight.AspectRatioComponentUtilities
// Size: 0x30 (Inherited: 0x30)
struct UAspectRatioComponentUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.AssetLibrary
// Size: 0xb0 (Inherited: 0x30)
struct UAssetLibrary : UObject {
	char pad_30[0x8]; // 0x30(0x08)
	struct UObjectLibrary* _objectLibrary; // 0x38(0x08)
	char pad_40[0x64]; // 0x40(0x64)
	float SecondsDelayBetweenBatch; // 0xa4(0x04)
	char pad_A8[0x8]; // 0xa8(0x08)
};

// Class DeadByDaylight.AssetLibraryManager
// Size: 0x100 (Inherited: 0x30)
struct UAssetLibraryManager : UObject {
	char pad_30[0x10]; // 0x30(0x10)
	struct UObject* _worldContextObject; // 0x40(0x08)
	struct TMap<int32_t, struct UCharacterItemsAssetLibrary*> _characterItemsAssetLibrary; // 0x48(0x50)
	struct UIniAssetLibrary* _globalAssetLibrary; // 0x98(0x08)
	struct UMenuAssetLibrary* _menuAssetLibrary; // 0xa0(0x08)
	struct UGameAssetLibrary* _gameAssetLibrary; // 0xa8(0x08)
	struct UTutorialAssetLibrary* _tutorialAssetLibrary; // 0xb0(0x08)
	char pad_B8[0x8]; // 0xb8(0x08)
	struct Ushopmanager* _shopManager; // 0xc0(0x08)
	char pad_C8[0x10]; // 0xc8(0x10)
	struct TArray<struct FAssetLibraryLoader> _loadingList; // 0xd8(0x10)
	int32_t CharacterItemsAssetLoadCountPerChunk; // 0xe8(0x04)
	int32_t BlindPackAssetLoadCountPerChunk; // 0xec(0x04)
	int32_t MenuAssetLoadCountPerChunk; // 0xf0(0x04)
	int32_t GlobalAssetLoadCountPerChunk; // 0xf4(0x04)
	int32_t GameAssetLoadCountPerChunk; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
};

// Class DeadByDaylight.AssetUtilities
// Size: 0x30 (Inherited: 0x30)
struct UAssetUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.AtlantaCustomGameUtilities
// Size: 0x30 (Inherited: 0x30)
struct UAtlantaCustomGameUtilities : UBlueprintFunctionLibrary {

	bool IsInCustomGameLobby(struct UDBDGameInstance* GameInstance); // Function DeadByDaylight.AtlantaCustomGameUtilities.IsInCustomGameLobby // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54728f0
	bool IsCustomGameEnabled(); // Function DeadByDaylight.AtlantaCustomGameUtilities.IsCustomGameEnabled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54728c0
};

// Class DeadByDaylight.BaseTooltipWidget
// Size: 0x370 (Inherited: 0x338)
struct UBaseTooltipWidget : UMobileBaseUserWidget {
	struct UTextBlock* TitleLabel; // 0x338(0x08)
	struct UCanvasPanel* TooltipContainer; // 0x340(0x08)
	struct UUMGHtmlRichText* DescriptionLabel; // 0x348(0x08)
	struct UButton* CloseButton; // 0x350(0x08)
	char pad_358[0x10]; // 0x358(0x10)
	struct UAkAudioEvent* TooltipOpeningSound; // 0x368(0x08)

	void OnQuitButtonClicked(); // Function DeadByDaylight.BaseTooltipWidget.OnQuitButtonClicked // (Final|Native|Protected) // @ game+0x481faf0
};

// Class DeadByDaylight.AtlantaCustomizationTooltipWidget
// Size: 0x388 (Inherited: 0x370)
struct UAtlantaCustomizationTooltipWidget : UBaseTooltipWidget {
	struct UImage* SmokeImage; // 0x370(0x08)
	struct UUMGCustomizationTooltipHeaderWidget* Header; // 0x378(0x08)
	struct UUMGCustomizationTooltipContentWidget* Content; // 0x380(0x08)
};

// Class DeadByDaylight.AtlantaDeepLinkSubsystem
// Size: 0x60 (Inherited: 0x38)
struct UAtlantaDeepLinkSubsystem : UGameInstanceSubsystem {
	char pad_38[0x28]; // 0x38(0x28)
};

// Class DeadByDaylight.DisplayStand
// Size: 0x3b0 (Inherited: 0x230)
struct ADisplayStand : AActor {
	char pad_230[0x18]; // 0x230(0x18)
	struct AActor* _currentActorDisplayed; // 0x248(0x08)
	char pad_250[0x8]; // 0x250(0x08)
	struct UObject* _currentActorDisplayedClass; // 0x258(0x08)
	struct UObject* _nextActorToDisplayClass; // 0x260(0x08)
	char pad_268[0x28]; // 0x268(0x28)
	struct TMap<struct UObject*, struct FTransform> _offsetByClass; // 0x290(0x50)
	struct TMap<struct UObject*, bool> _enableRotationByClass; // 0x2e0(0x50)
	struct TSoftClassPtr<UObject> _defaultCharmClassDisplayable; // 0x330(0x30)
	char pad_360[0x39]; // 0x360(0x39)
	bool _useOffsetMenuAnimations; // 0x399(0x01)
	bool _displayDummyCharacter; // 0x39a(0x01)
	char pad_39B[0x1]; // 0x39b(0x01)
	struct FCharacterDropdown _characterDropdown; // 0x39c(0x08)
	char pad_3A4[0xc]; // 0x3a4(0x0c)

	void OnCurrentActorDestroyed(struct AActor* DestroyedActor); // Function DeadByDaylight.DisplayStand.OnCurrentActorDestroyed // (Final|Native|Private) // @ game+0x5519a80
	void BlockRotation(bool shouldBlockRotation); // Function DeadByDaylight.DisplayStand.BlockRotation // (Final|Native|Public) // @ game+0x5519420
};

// Class DeadByDaylight.AtlantaDisplayStand
// Size: 0x3c0 (Inherited: 0x3b0)
struct AAtlantaDisplayStand : ADisplayStand {
	enum class EAtlantaDisplayStandPosition StandPosition; // 0x3a8(0x01)
	struct USceneComponent* SurvivorPositionMarker; // 0x3b0(0x08)
	struct USceneComponent* KillerPositionMarker; // 0x3b8(0x08)
};

// Class DeadByDaylight.AtlantaEventsTemplateDataAsset
// Size: 0x88 (Inherited: 0x38)
struct UAtlantaEventsTemplateDataAsset : UPrimaryDataAsset {
	struct TMap<enum class EEventsType, struct UUMGAtlantaBaseEventsTemplate*> Data; // 0x38(0x50)
};

// Class DeadByDaylight.AtlantaFriendsListScreenUMG
// Size: 0x1a0 (Inherited: 0x120)
struct UAtlantaFriendsListScreenUMG : UScreenBase {
	char pad_120[0x78]; // 0x120(0x78)
	struct UUMGAtlantaFriendListScreen* _atlantaFriendListScreen; // 0x198(0x08)

	void HandleResearchButtonClicked(struct FText& searchInput); // Function DeadByDaylight.AtlantaFriendsListScreenUMG.HandleResearchButtonClicked // (Final|Native|Protected|HasOutParms) // @ game+0x54727f0
	void HandleClosedButtonClicked(); // Function DeadByDaylight.AtlantaFriendsListScreenUMG.HandleClosedButtonClicked // (Final|Native|Protected) // @ game+0x54727d0
};

// Class DeadByDaylight.AtlantaHudDirectionalStick
// Size: 0x380 (Inherited: 0x338)
struct UAtlantaHudDirectionalStick : UMobileBaseUserWidget {
	struct UCanvasPanel* JoystickAnimationPanel; // 0x338(0x08)
	struct UCanvasPanel* ContainerToRotate; // 0x340(0x08)
	struct UCanvasPanel* ArrowsContainer; // 0x348(0x08)
	struct UImage* JoystickLockImage; // 0x350(0x08)
	struct UImage* JoystickOn; // 0x358(0x08)
	struct UCanvasPanel* AutoRunContainer; // 0x360(0x08)
	bool _isMovementLockAnimationActive; // 0x368(0x01)
	char pad_369[0x17]; // 0x369(0x17)

	void SetMovementLockAnimationStatus(bool value); // Function DeadByDaylight.AtlantaHudDirectionalStick.SetMovementLockAnimationStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x5472b90
};

// Class DeadByDaylight.AtlantaHudLookBackJoystick
// Size: 0x340 (Inherited: 0x338)
struct UAtlantaHudLookBackJoystick : UMobileBaseUserWidget {
	struct UGridPanel* TutorialAnimContainer; // 0x338(0x08)
};

// Class DeadByDaylight.AtlantaHudPowerAttackJoystick
// Size: 0x388 (Inherited: 0x338)
struct UAtlantaHudPowerAttackJoystick : UMobileBaseUserWidget {
	char pad_338[0x8]; // 0x338(0x08)
	struct UCanvasPanel* AnimationContainer; // 0x340(0x08)
	struct FName _availableAnimationName; // 0x348(0x0c)
	struct FName _fadeOutAnimationName; // 0x354(0x0c)
	struct FName _tutoStartAnimationName; // 0x360(0x0c)
	struct FName _tutoLoopAnimationName; // 0x36c(0x0c)
	struct UImage* Icon; // 0x378(0x08)
	char pad_380[0x8]; // 0x380(0x08)

	void OnFinishedTutorialAnimationIn(); // Function DeadByDaylight.AtlantaHudPowerAttackJoystick.OnFinishedTutorialAnimationIn // (Final|Native|Protected) // @ game+0x5472ac0
	void OnFinishedAvailableAnimation(); // Function DeadByDaylight.AtlantaHudPowerAttackJoystick.OnFinishedAvailableAnimation // (Final|Native|Protected) // @ game+0x5472aa0
};

// Class DeadByDaylight.LobbyLevel
// Size: 0x2c0 (Inherited: 0x238)
struct ALobbyLevel : ALevelScriptActor {
	char pad_238[0x48]; // 0x238(0x48)
	struct TArray<struct ADisplayStand*> _registeredDisplayStands; // 0x280(0x10)
	enum class EWorldFlowEvent LobbyLoadedEvent; // 0x290(0x01)
	char pad_291[0x2f]; // 0x291(0x2f)

	void OnShopSubLevelLoaded(); // Function DeadByDaylight.LobbyLevel.OnShopSubLevelLoaded // (Final|Native|Private) // @ game+0x5556d80
	void OnLobbySubLevelLoaded(); // Function DeadByDaylight.LobbyLevel.OnLobbySubLevelLoaded // (Final|Native|Private) // @ game+0x5556d40
	void OnAdditionalSubLevelsLoaded(); // Function DeadByDaylight.LobbyLevel.OnAdditionalSubLevelsLoaded // (Final|Native|Private) // @ game+0x5556d20
};

// Class DeadByDaylight.AtlantaLobbyLevel
// Size: 0x300 (Inherited: 0x2c0)
struct AAtlantaLobbyLevel : ALobbyLevel {
	char pad_2C0[0x10]; // 0x2c0(0x10)
	struct FLightingChannels ForefrontLightingChannel; // 0x2d0(0x01)
	struct FLightingChannels BackgroundLightingChannel; // 0x2d1(0x01)
	char pad_2D2[0x6]; // 0x2d2(0x06)
	struct AAtlantaOfflineLobbyCamera* _offlineLobbyCamera; // 0x2d8(0x08)
	struct AActor* _roleSelectionLobbyCameraPosition; // 0x2e0(0x08)
	struct AActor* _characterSelectionLobbyCameraPosition; // 0x2e8(0x08)
	struct AActor* _loadoutSelectionLobbyCameraPosition; // 0x2f0(0x08)
	char pad_2F8[0x8]; // 0x2f8(0x08)

	void OnFrontPawnSpawned(struct AActor* forefrontPawn); // Function DeadByDaylight.AtlantaLobbyLevel.OnFrontPawnSpawned // (Final|Native|Private) // @ game+0x5472ae0
	void OnBackPawnSpawned(struct AActor* backgroundPawn); // Function DeadByDaylight.AtlantaLobbyLevel.OnBackPawnSpawned // (Final|Native|Private) // @ game+0x5472980
};

// Class DeadByDaylight.AtlantaNavigationScreen
// Size: 0x128 (Inherited: 0x120)
struct UAtlantaNavigationScreen : UScreenBase {
	struct UUMGAtlantaNavigationScreen* _umgScreen; // 0x120(0x08)
};

// Class DeadByDaylight.AtlantaObjectiveWidget
// Size: 0x3a0 (Inherited: 0x338)
struct UAtlantaObjectiveWidget : UMobileBaseUserWidget {
	struct UTextBlock* ObjectiveLabel; // 0x338(0x08)
	char pad_340[0x54]; // 0x340(0x54)
	float _totalFadeOutTime; // 0x394(0x04)
	int32_t _polynomialOrder; // 0x398(0x04)
	char pad_39C[0x4]; // 0x39c(0x04)
};

// Class DeadByDaylight.AtlantaOfflineLobbyCamera
// Size: 0x7d0 (Inherited: 0x7c0)
struct AAtlantaOfflineLobbyCamera : ACameraActor {
	float ZCameraPositionOffsetMultiplier; // 0x7c0(0x04)
	char pad_7C4[0x4]; // 0x7c4(0x04)
	float _kDefaultAspectRatio; // 0x7c8(0x04)
	char pad_7CC[0x4]; // 0x7cc(0x04)

	void SetCameraRotation(struct FRotator rotationVector); // Function DeadByDaylight.AtlantaOfflineLobbyCamera.SetCameraRotation // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x5e02c90
	void SetCameraPosition(struct FVector positionVector); // Function DeadByDaylight.AtlantaOfflineLobbyCamera.SetCameraPosition // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.AtlantaPartyFlowHandler
// Size: 0x278 (Inherited: 0x30)
struct UAtlantaPartyFlowHandler : UObject {
	char pad_30[0x248]; // 0x30(0x248)

	void DisplayPartyFlowHandlerInfo(); // Function DeadByDaylight.AtlantaPartyFlowHandler.DisplayPartyFlowHandlerInfo // (Final|Native|Private) // @ game+0x5477940
};

// Class DeadByDaylight.AtlantaPartyFlowUtilities
// Size: 0x30 (Inherited: 0x30)
struct UAtlantaPartyFlowUtilities : UObject {

	bool IsCurrentPlayerInParty(); // Function DeadByDaylight.AtlantaPartyFlowUtilities.IsCurrentPlayerInParty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5478010
	bool IsCurrentPlayerAloneInParty(); // Function DeadByDaylight.AtlantaPartyFlowUtilities.IsCurrentPlayerAloneInParty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5477fe0
};

// Class DeadByDaylight.AtlantaInstalledContent
// Size: 0x50 (Inherited: 0x30)
struct UAtlantaInstalledContent : UObject {
	char pad_30[0x20]; // 0x30(0x20)

	bool Mount(int32_t PakOrder, struct FString MountPoint); // Function DeadByDaylight.AtlantaInstalledContent.Mount // (Final|Native|Public|BlueprintCallable) // @ game+0x5478040
	float GetInstalledContentSize(); // Function DeadByDaylight.AtlantaInstalledContent.GetInstalledContentSize // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477c40
	float GetFreeDiskSpace(); // Function DeadByDaylight.AtlantaInstalledContent.GetFreeDiskSpace // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477ae0
};

// Class DeadByDaylight.AtlantaPendingContent
// Size: 0x90 (Inherited: 0x50)
struct UAtlantaPendingContent : UAtlantaInstalledContent {
	char pad_50[0x40]; // 0x50(0x40)

	void StartInstall(struct FDelegate OnSucceeded, struct FDelegate OnFailed); // Function DeadByDaylight.AtlantaPendingContent.StartInstall // (Final|Native|Public|BlueprintCallable) // @ game+0x5478980
	float GetTotalDownloadedSize(); // Function DeadByDaylight.AtlantaPendingContent.GetTotalDownloadedSize // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477d50
	float GetRequiredDiskSpace(); // Function DeadByDaylight.AtlantaPendingContent.GetRequiredDiskSpace // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477ca0
	bool GetIsDownloading(); // Function DeadByDaylight.AtlantaPendingContent.GetIsDownloading // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477c70
	float GetInstallProgress(); // Function DeadByDaylight.AtlantaPendingContent.GetInstallProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477b10
	struct FText GetDownloadStatusText(); // Function DeadByDaylight.AtlantaPendingContent.GetDownloadStatusText // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477a40
	float GetDownloadSpeed(); // Function DeadByDaylight.AtlantaPendingContent.GetDownloadSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477a10
	float GetDownloadSize(); // Function DeadByDaylight.AtlantaPendingContent.GetDownloadSize // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54779e0
};

// Class DeadByDaylight.AtlantaPatchingLibrary
// Size: 0x30 (Inherited: 0x30)
struct UAtlantaPatchingLibrary : UBlueprintFunctionLibrary {

	void RequestContent(struct FString RemoteManifestURL, struct FString CloudURL, struct FString InstallDirectory, struct FDelegate OnSucceeded, struct FDelegate OnFailed, struct UAtlantaPendingContent* MobilePendingContent); // Function DeadByDaylight.AtlantaPatchingLibrary.RequestContent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5478350
	void PrintPakLocations(); // Function DeadByDaylight.AtlantaPatchingLibrary.PrintPakLocations // (Final|Native|Static|Public) // @ game+0x5478330
	bool HasActiveWiFiConnection(); // Function DeadByDaylight.AtlantaPatchingLibrary.HasActiveWiFiConnection // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477ec0
	struct TArray<struct FString> GetSupportedPlatformNames(); // Function DeadByDaylight.AtlantaPatchingLibrary.GetSupportedPlatformNames // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477cd0
	struct UAtlantaInstalledContent* GetInstalledContent(struct FString InstallDirectory, struct FString ManifestFilename); // Function DeadByDaylight.AtlantaPatchingLibrary.GetInstalledContent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477b40
	struct FString GetActiveDeviceProfileName(); // Function DeadByDaylight.AtlantaPatchingLibrary.GetActiveDeviceProfileName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5477960
};

// Class DeadByDaylight.AtlantaPromptWidget
// Size: 0x3a0 (Inherited: 0x338)
struct UAtlantaPromptWidget : UMobileBaseUserWidget {
	struct UTextBlock* PromptLabel; // 0x338(0x08)
	char pad_340[0x10]; // 0x340(0x10)
	struct TMap<enum class EPromptType, struct FString> AudioCues; // 0x350(0x50)
};

// Class DeadByDaylight.AtlantaRitualsManager
// Size: 0xc8 (Inherited: 0x30)
struct UAtlantaRitualsManager : UObject {
	struct TWeakObjectPtr<struct UDBDGameInstance> _gameInstance; // 0x30(0x08)
	char pad_38[0x90]; // 0x38(0x90)
};

// Class DeadByDaylight.AtlantaRitualsScreen
// Size: 0x188 (Inherited: 0x120)
struct UAtlantaRitualsScreen : UScreenBase {
	struct UUMGAtlantaRitualsScreen* _umgScreen; // 0x120(0x08)
	char pad_128[0x60]; // 0x128(0x60)

	void OnRefreshRitual(); // Function DeadByDaylight.AtlantaRitualsScreen.OnRefreshRitual // (Final|Native|Private) // @ game+0x54781e0
	void OnExitRequested(); // Function DeadByDaylight.AtlantaRitualsScreen.OnExitRequested // (Final|Native|Private) // @ game+0x54781c0
	void OnClaimRewards(int32_t ritualId); // Function DeadByDaylight.AtlantaRitualsScreen.OnClaimRewards // (Final|Native|Private) // @ game+0x5478130
};

// Class DeadByDaylight.AtlantaRoleSelectionScreen
// Size: 0x128 (Inherited: 0x120)
struct UAtlantaRoleSelectionScreen : UScreenBase {
	struct UUMGRoleSelectionScreen* _umgScreen; // 0x120(0x08)
};

// Class DeadByDaylight.AtlantaSaveGame
// Size: 0x60 (Inherited: 0x30)
struct UAtlantaSaveGame : USaveGame {
	struct FString SaveSlotName; // 0x30(0x10)
	uint32_t UserIndex; // 0x40(0x04)
	struct FName LastGenericLoadingImageId; // 0x44(0x0c)
	struct FName LastSpecificLoadingImageId; // 0x50(0x0c)
	bool IsLastSpecificImage; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
};

// Class DeadByDaylight.AtlantaSkillCheckWidget
// Size: 0x3c8 (Inherited: 0x338)
struct UAtlantaSkillCheckWidget : UMobileBaseUserWidget {
	struct UCanvasPanel* SkillCheckArea; // 0x338(0x08)
	struct UImage* HitArea; // 0x340(0x08)
	struct UImage* Hit; // 0x348(0x08)
	struct UImage* OrangeSmoke; // 0x350(0x08)
	struct UImage* BonusArea; // 0x358(0x08)
	struct UImage* StartMarker; // 0x360(0x08)
	struct UImage* EndMarker; // 0x368(0x08)
	struct UCanvasPanel* HitAreaContainer; // 0x370(0x08)
	struct UCanvasPanel* BonusAreaContainer; // 0x378(0x08)
	struct UCanvasPanel* HitAreaStartMarkerContainer; // 0x380(0x08)
	struct UCanvasPanel* HitAreaEndMarkerContainer; // 0x388(0x08)
	struct UCanvasPanel* MarkerContainer; // 0x390(0x08)
	struct FLinearColor HexColor; // 0x398(0x10)
	struct FLinearColor DefaultColor; // 0x3a8(0x10)
	bool _isPlayAnimation; // 0x3b8(0x01)
	char pad_3B9[0x3]; // 0x3b9(0x03)
	float PathCoveredAngle; // 0x3bc(0x04)
	char pad_3C0[0x8]; // 0x3c0(0x08)

	void SetHexed(bool IsHexed); // Function DeadByDaylight.AtlantaSkillCheckWidget.SetHexed // (Final|Native|Public|BlueprintCallable) // @ game+0x5478710
	void SetActive(bool Active); // Function DeadByDaylight.AtlantaSkillCheckWidget.SetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x5478680
	void OnIsActiveChanged(bool IsActive); // Function DeadByDaylight.AtlantaSkillCheckWidget.OnIsActiveChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	bool IsActive(); // Function DeadByDaylight.AtlantaSkillCheckWidget.IsActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5477ef0
};

// Class DeadByDaylight.AtlantaTooltipManager
// Size: 0x68 (Inherited: 0x30)
struct UAtlantaTooltipManager : UObject {
	struct UBaseTooltipWidget* _activeTooltip; // 0x30(0x08)
	struct UUMGCloseTooltipWidget* _closeTooltipWidget; // 0x38(0x08)
	char pad_40[0x28]; // 0x40(0x28)

	void TryCloseActiveTooltipWithWidget(); // Function DeadByDaylight.AtlantaTooltipManager.TryCloseActiveTooltipWithWidget // (Final|Native|Private) // @ game+0x5478b00
	bool TryCloseActiveTooltip(); // Function DeadByDaylight.AtlantaTooltipManager.TryCloseActiveTooltip // (Final|Native|Public) // @ game+0x5478aa0
};

// Class DeadByDaylight.AtlantaTooltipUtilities
// Size: 0x30 (Inherited: 0x30)
struct UAtlantaTooltipUtilities : UObject {

	bool TryCloseActiveTooltip(); // Function DeadByDaylight.AtlantaTooltipUtilities.TryCloseActiveTooltip // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5478ad0
};

// Class DeadByDaylight.TutorialLevel
// Size: 0x278 (Inherited: 0x238)
struct ATutorialLevel : ALevelScriptActor {
	bool _tutorialStarted; // 0x238(0x01)
	char pad_239[0x3f]; // 0x239(0x3f)

	void StartTutorial(); // Function DeadByDaylight.TutorialLevel.StartTutorial // (Native|Public|BlueprintCallable) // @ game+0x55cddb0
	void SetHandledTutorialStep(enum class ETutorialStep tutorialStep); // Function DeadByDaylight.TutorialLevel.SetHandledTutorialStep // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd970
	void RemoveObjective(struct FName ObjectiveId); // Function DeadByDaylight.TutorialLevel.RemoveObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd430
	void OnTutorialStepUpdated(enum class ETutorialStep tutorialStep); // Function DeadByDaylight.TutorialLevel.OnTutorialStepUpdated // (Final|Native|Protected) // @ game+0x55cd370
	void OnNotificationDismissed(struct FName notificationId); // Function DeadByDaylight.TutorialLevel.OnNotificationDismissed // (Final|Native|Protected) // @ game+0x55cd2d0
	void HandleTutorialStepReached(); // Function DeadByDaylight.TutorialLevel.HandleTutorialStepReached // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void HandleNotificationDismissed(struct FName notificationId); // Function DeadByDaylight.TutorialLevel.HandleNotificationDismissed // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void DisplayNotification(struct FName notificationId, float Time); // Function DeadByDaylight.TutorialLevel.DisplayNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x55ccc40
	void DisplayBlockingNotification(struct FName notificationId); // Function DeadByDaylight.TutorialLevel.DisplayBlockingNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x55ccba0
	void CompleteObjective(struct FName ObjectiveId); // Function DeadByDaylight.TutorialLevel.CompleteObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x55cc990
	void AddObjective(struct FName ObjectiveId); // Function DeadByDaylight.TutorialLevel.AddObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x55cc830
};

// Class DeadByDaylight.AtlantaTutorialLevel
// Size: 0x328 (Inherited: 0x278)
struct AAtlantaTutorialLevel : ATutorialLevel {
	char pad_278[0xb0]; // 0x278(0xb0)

	void StartCameraFadeIn(); // Function DeadByDaylight.AtlantaTutorialLevel.StartCameraFadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x5478960
	void SetTutorialElements(); // Function DeadByDaylight.AtlantaTutorialLevel.SetTutorialElements // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetTutorialElement(struct FString elementKey, struct AActor* elementToSet); // Function DeadByDaylight.AtlantaTutorialLevel.SetTutorialElement // (Final|Native|Public|BlueprintCallable) // @ game+0x5478830
	void SetLocallyControlledPlayer(struct ADBDPlayer* locallyControllerPlayer); // Function DeadByDaylight.AtlantaTutorialLevel.SetLocallyControlledPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x54787a0
	void SetAIEscapePoints(struct TArray<struct AActor*> escapePoints); // Function DeadByDaylight.AtlantaTutorialLevel.SetAIEscapePoints // (Final|Native|Public|BlueprintCallable) // @ game+0x5478590
	void OnTutorialStarted(); // Function DeadByDaylight.AtlantaTutorialLevel.OnTutorialStarted // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnTriggerBeginOverlapActor(struct FString triggerID, struct AActor* overlappingActor); // Function DeadByDaylight.AtlantaTutorialLevel.OnTriggerBeginOverlapActor // (Final|Native|Public|BlueprintCallable) // @ game+0x5478200
	bool IsActorInLineOfSight(struct ADBDAIPlayerController* aiPlayerController, struct APlayerController* PlayerController); // Function DeadByDaylight.AtlantaTutorialLevel.IsActorInLineOfSight // (Final|Native|Public|BlueprintCallable) // @ game+0x5477f10
	void HandleCanStartTutorialChanged(bool canStartTutorial); // Function DeadByDaylight.AtlantaTutorialLevel.HandleCanStartTutorialChanged // (Final|Native|Private) // @ game+0x5477e30
	struct AActor* GetTutorialElement(struct FString elementKey); // Function DeadByDaylight.AtlantaTutorialLevel.GetTutorialElement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5477d80
};

// Class DeadByDaylight.AtlantaTutorialObjectiveManager
// Size: 0x50 (Inherited: 0x30)
struct UAtlantaTutorialObjectiveManager : UObject {
	struct TArray<struct UAtlantaObjectiveWidget*> _objectivesList; // 0x30(0x10)
	struct UVerticalBox* _objectivesContainer; // 0x40(0x08)
	char pad_48[0x8]; // 0x48(0x08)
};

// Class DeadByDaylight.AtlantaTutorialPlayerHudController
// Size: 0x78 (Inherited: 0x30)
struct UAtlantaTutorialPlayerHudController : UObject {
	char pad_30[0x48]; // 0x30(0x48)

	void ShowHudComponent(enum class EHudComponent hudComponentToShow); // Function DeadByDaylight.AtlantaTutorialPlayerHudController.ShowHudComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x547d050
	void SetVirtualJoystickInputEnabled(bool enable); // Function DeadByDaylight.AtlantaTutorialPlayerHudController.SetVirtualJoystickInputEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x547c9f0
	void HideHudComponent(enum class EHudComponent hudComponentToHide); // Function DeadByDaylight.AtlantaTutorialPlayerHudController.HideHudComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x547be20
};

// Class DeadByDaylight.StateMachine
// Size: 0x130 (Inherited: 0xb8)
struct UStateMachine : UActorComponent {
	char pad_B8[0x9]; // 0xb8(0x09)
	bool _enableJoinInProgress; // 0xc1(0x01)
	char pad_C2[0x56]; // 0xc2(0x56)
	struct TArray<uint16_t> _netStateIDStackInitial; // 0x118(0x10)
	char pad_128[0x8]; // 0x128(0x08)

	void Server_SetStateStack(struct TArray<uint16_t> netStateIDStack); // Function DeadByDaylight.StateMachine.Server_SetStateStack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x55b4180
	void NetIDStackChanged(); // Function DeadByDaylight.StateMachine.NetIDStackChanged // (Final|Native|Private) // @ game+0x55b3db0
	void Multicast_SetStateStack(struct TArray<uint16_t> netStateIDStack); // Function DeadByDaylight.StateMachine.Multicast_SetStateStack // (Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate) // @ game+0x55b3cf0
};

// Class DeadByDaylight.AtlantaTutorialStateMachine
// Size: 0x130 (Inherited: 0x130)
struct UAtlantaTutorialStateMachine : UStateMachine {

	void OnBlockingNotificationDismissed(struct FName blockingNotificationID); // Function DeadByDaylight.AtlantaTutorialStateMachine.OnBlockingNotificationDismissed // (Final|Native|Private) // @ game+0x547c290
};

// Class DeadByDaylight.AtlantaUtilities
// Size: 0x30 (Inherited: 0x30)
struct UAtlantaUtilities : UBlueprintFunctionLibrary {

	bool ShouldUseQuickRoleSwitch(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseQuickRoleSwitch // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547d020
	bool ShouldUseOfflineMatchHistory(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseOfflineMatchHistory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cff0
	bool ShouldUseAtlantaUI(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaUI // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cfc0
	bool ShouldUseAtlantaStreamVideo(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaStreamVideo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cf90
	bool ShouldUseAtlantaRituals(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaRituals // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cf60
	bool ShouldUseAtlantaRank(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaRank // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cf30
	bool ShouldUseAtlantaQualitySettings(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaQualitySettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cf00
	bool ShouldUseAtlantaPurchasableOperations(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaPurchasableOperations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547ced0
	bool ShouldUseAtlantaOutlines(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaOutlines // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cea0
	bool ShouldUseAtlantaMatchmaking(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaMatchmaking // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547ce70
	bool ShouldUseAtlantaLighting(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaLighting // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547ce40
	bool ShouldUseAtlantaKrakenContentVersion(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaKrakenContentVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547ce10
	bool ShouldUseAtlantaItemAvailability(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaItemAvailability // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cde0
	bool ShouldUseAtlantaHudEditor(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaHudEditor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x479ec60
	bool ShouldUseAtlantaHudAttackJoystick(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaHudAttackJoystick // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x479ec60
	bool ShouldUseAtlantaGameplayValues(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaGameplayValues // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cdb0
	bool ShouldUseAtlantaFriendList(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaFriendList // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cd80
	bool ShouldUseAtlantaFreeTickets(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaFreeTickets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cd50
	bool ShouldUseAtlantaFixedMaps(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaFixedMaps // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cd20
	bool ShouldUseAtlantaFearMarket(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaFearMarket // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547ccf0
	bool ShouldUseAtlantaEntity(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaEntity // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547ccc0
	bool ShouldUseAtlantaDreamworldFX(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaDreamworldFX // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cc90
	bool ShouldUseAtlantaDailyRewards(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaDailyRewards // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cc60
	bool ShouldUseAtlantaCustomizedHudSettings(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCustomizedHudSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cc30
	bool ShouldUseAtlantaCurrencies(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCurrencies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cc00
	bool ShouldUseAtlantaContent(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaContent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cbd0
	bool ShouldUseAtlantaCharacterProgression(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCharacterProgression // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cba0
	bool ShouldUseAtlantaCDNPatching(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCDNPatching // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cb40
	bool ShouldUseAtlantaCDNBucketChangelist(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCDNBucketChangelist // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cb10
	bool ShouldUseAtlantaCatalog(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaCatalog // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cb70
	bool ShouldUseAtlantaBundleFilterRules(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaBundleFilterRules // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x479ec60
	bool ShouldUseAtlantaBloodweb(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaBloodweb // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cae0
	bool ShouldUseAtlantaBackendBloodMarketData(); // Function DeadByDaylight.AtlantaUtilities.ShouldUseAtlantaBackendBloodMarketData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547cab0
	bool ShouldSupportMultipleActiveActivatablePerks(); // Function DeadByDaylight.AtlantaUtilities.ShouldSupportMultipleActiveActivatablePerks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547ca80
	bool SetImageSlateBrush(struct UImage* Image, struct FSlateBrush& Brush, bool bMatchSize); // Function DeadByDaylight.AtlantaUtilities.SetImageSlateBrush // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x547c840
	void SetImageBrushFromSpritePath(struct UImage* Image, struct FString Path); // Function DeadByDaylight.AtlantaUtilities.SetImageBrushFromSpritePath // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x547c770
	void SetImageBrushFromPath(struct UImage* Image, struct FString Path, bool bMatchSize); // Function DeadByDaylight.AtlantaUtilities.SetImageBrushFromPath // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x547c650
	void SetImageBrush(struct UImage* Image, struct UTexture2D* Asset, bool bMatchSize); // Function DeadByDaylight.AtlantaUtilities.SetImageBrush // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x547c550
	void SetButtonStyle(struct UButton* Button, struct FSlateBrush& Brush); // Function DeadByDaylight.AtlantaUtilities.SetButtonStyle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x547c400
	struct FString SecondsToStringWithoutDecimals(int32_t Seconds); // Function DeadByDaylight.AtlantaUtilities.SecondsToStringWithoutDecimals // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547c330
	struct FSlateBrush MakeBrushFromTexture(struct UTexture2D* Texture); // Function DeadByDaylight.AtlantaUtilities.MakeBrushFromTexture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x547c180
	struct FSlateBrush MakeBrushFromSprite(struct UPaperSprite* Sprite); // Function DeadByDaylight.AtlantaUtilities.MakeBrushFromSprite // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x547c070
	struct UTexture2D* LoadTextureByAsset(struct FString Path); // Function DeadByDaylight.AtlantaUtilities.LoadTextureByAsset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x547bfd0
	bool IsTutorialEditorDebuggingEnabled(); // Function DeadByDaylight.AtlantaUtilities.IsTutorialEditorDebuggingEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547bfa0
	bool IsPlayerInteractingWithActor(struct ADBDPlayer* Player, struct AActor* Actor); // Function DeadByDaylight.AtlantaUtilities.IsPlayerInteractingWithActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x547bed0
	bool IsInAtlantaTutorialLevel(); // Function DeadByDaylight.AtlantaUtilities.IsInAtlantaTutorialLevel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547bea0
	struct FString GetStoreVersion(); // Function DeadByDaylight.AtlantaUtilities.GetStoreVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547bda0
	struct UPaperSprite* GetSpriteFromPath(struct FString fullDbPathToImage, struct FString constantDbPathToImageFolder, struct FString constantPathToSpriteFolder); // Function DeadByDaylight.AtlantaUtilities.GetSpriteFromPath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547bc50
	struct UPaperSprite* GetSpriteFromFullPath(struct FString fullSpritePath); // Function DeadByDaylight.AtlantaUtilities.GetSpriteFromFullPath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547bbb0
	struct FText GetPlayerRoleTextUppercase(enum class EPlayerRole PlayerRole); // Function DeadByDaylight.AtlantaUtilities.GetPlayerRoleTextUppercase // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547bad0
	struct FText GetPlayerRoleText(enum class EPlayerRole PlayerRole); // Function DeadByDaylight.AtlantaUtilities.GetPlayerRoleText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b9f0
	struct FColor GetPaintColorByRarity(enum class EItemRarity Rarity); // Function DeadByDaylight.AtlantaUtilities.GetPaintColorByRarity // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x547b960
	struct FText GetOfferingCategoryText(enum class EOfferingCategory OfferingCategory); // Function DeadByDaylight.AtlantaUtilities.GetOfferingCategoryText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b880
	struct UPaperSprite* GetMapSpriteFromPath(struct FString mapSpritePath); // Function DeadByDaylight.AtlantaUtilities.GetMapSpriteFromPath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b7e0
	struct FText GetItemRarityText(enum class EItemRarity Rarity); // Function DeadByDaylight.AtlantaUtilities.GetItemRarityText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b700
	struct FText GetItemAvailabilityText(enum class EItemAvailability Availability); // Function DeadByDaylight.AtlantaUtilities.GetItemAvailabilityText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b620
	struct UTexture2D* GetIconImageByPath(struct FString IconPath); // Function DeadByDaylight.AtlantaUtilities.GetIconImageByPath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b580
	struct FText GetEmblemQualityText(enum class EEmblemQuality EmblemQuality); // Function DeadByDaylight.AtlantaUtilities.GetEmblemQualityText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b4a0
	struct FColor GetEmblemColorByQuality(enum class EEmblemQuality EmblemQuality); // Function DeadByDaylight.AtlantaUtilities.GetEmblemColorByQuality // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x547b410
	struct FText GetDifficultyLevelText(enum class EAIDifficultyLevel difficultyLevel); // Function DeadByDaylight.AtlantaUtilities.GetDifficultyLevelText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b330
	struct UInteractionDefinition* GetCurrentOrAvailableInteractionOfType(struct ADBDPlayer* Player, enum class EInputInteractionType interactionInputType); // Function DeadByDaylight.AtlantaUtilities.GetCurrentOrAvailableInteractionOfType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b260
	struct UInteractionDefinition* GetCurrentInteractionOfType(struct ADBDPlayer* Player, enum class EInputInteractionType interactionInputType); // Function DeadByDaylight.AtlantaUtilities.GetCurrentInteractionOfType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b190
	struct UInteractionDefinition* GetCurrentInteraction(struct ADBDPlayer* Player); // Function DeadByDaylight.AtlantaUtilities.GetCurrentInteraction // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b100
	struct FString GetCurrencyUITexturePath(enum class ECurrencyType CurrencyType); // Function DeadByDaylight.AtlantaUtilities.GetCurrencyUITexturePath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547b030
	struct FSlateColor GetCurrencyColor(enum class ECurrencyType CurrencyType); // Function DeadByDaylight.AtlantaUtilities.GetCurrencyColor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547af70
	float GetControlsTunableByRole(enum class EPlayerRole PlayerRole, struct FName tunableValueName); // Function DeadByDaylight.AtlantaUtilities.GetControlsTunableByRole // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x547ae80
	float GetControlsTunable(struct FName tunableValueName); // Function DeadByDaylight.AtlantaUtilities.GetControlsTunable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x547ade0
	struct FColor GetBackgroundColorByRarity(enum class EItemRarity Rarity); // Function DeadByDaylight.AtlantaUtilities.GetBackgroundColorByRarity // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x547ad50
	struct UInteractionDefinition* GetAvailableInteractionOfType(struct ADBDPlayer* Player, enum class EInputInteractionType interactionInputType); // Function DeadByDaylight.AtlantaUtilities.GetAvailableInteractionOfType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x547ac80
	struct FText GetAlantaInteractionDescriptionText(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.AtlantaUtilities.GetAlantaInteractionDescriptionText // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x547ab90
};

// Class DeadByDaylight.AtlCookedMaps
// Size: 0x48 (Inherited: 0x38)
struct UAtlCookedMaps : UPrimaryDataAsset {
	struct TArray<struct FAtlCookedMapDescription> Descriptions; // 0x38(0x10)
};

// Class DeadByDaylight.AttackTypeEventComponent
// Size: 0xd0 (Inherited: 0xb8)
struct UAttackTypeEventComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
};

// Class DeadByDaylight.AudioFXComponent
// Size: 0x128 (Inherited: 0xb8)
struct UAudioFXComponent : UActorComponent {
	struct UPrimitiveComponent* _audioAmbientDetector; // 0xb8(0x08)
	char pad_C0[0x68]; // 0xc0(0x68)

	void SetAudioAmbientDetector(struct UPrimitiveComponent* audioAmbientDetector); // Function DeadByDaylight.AudioFXComponent.SetAudioAmbientDetector // (Final|Native|Public|BlueprintCallable) // @ game+0x5482800
	void OnLocallyObservedChanged(bool locallyObserved); // Function DeadByDaylight.AudioFXComponent.OnLocallyObservedChanged // (Final|Native|Private) // @ game+0x54822e0
	void OnDeafenCompleted(); // Function DeadByDaylight.AudioFXComponent.OnDeafenCompleted // (Final|Native|Private) // @ game+0x54821a0
	void Multicast_Deafen(float Duration); // Function DeadByDaylight.AudioFXComponent.Multicast_Deafen // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5481e10
	void Authority_Deafen(float Duration); // Function DeadByDaylight.AudioFXComponent.Authority_Deafen // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5481830
};

// Class DeadByDaylight.AudioMultipleEmitterActor
// Size: 0x248 (Inherited: 0x230)
struct AAudioMultipleEmitterActor : AActor {
	struct UAudioMultipleEmitterComponent* AudioMultiEmitter; // 0x230(0x08)
	struct TArray<struct AActor*> EmitterActors; // 0x238(0x10)
};

// Class DeadByDaylight.AudioMultipleEmitterComponent
// Size: 0x490 (Inherited: 0x480)
struct UAudioMultipleEmitterComponent : UAkComponent {
	struct TArray<struct UActorComponent*> EmitterActorsComponents; // 0x478(0x10)
};

// Class DeadByDaylight.AuthoritativeMovementComponent
// Size: 0x118 (Inherited: 0xb8)
struct UAuthoritativeMovementComponent : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)
	struct TArray<struct ACharacter*> _charactersToPush; // 0xc8(0x10)
	struct TArray<struct ACharacter*> _stopIgnoreCharacterOnEndOverlap; // 0xd8(0x10)
	char pad_E8[0x8]; // 0xe8(0x08)
	struct UCapsuleComponent* _pawnDetector; // 0xf0(0x08)
	struct TArray<struct ACharacter*> _authoritativeIgnoreOverlapCharacters; // 0xf8(0x10)
	struct TArray<struct ACharacter*> _previousAuthoritativeIgnoreOverlapCharacters; // 0x108(0x10)

	void SetPawnDetector(struct UCapsuleComponent* pawnDetector); // Function DeadByDaylight.AuthoritativeMovementComponent.SetPawnDetector // (Final|Native|Public|BlueprintCallable) // @ game+0x5482910
	void OnRep_AuthoritativeIgnoreOverlapCharacters(); // Function DeadByDaylight.AuthoritativeMovementComponent.OnRep_AuthoritativeIgnoreOverlapCharacters // (Final|Native|Private) // @ game+0x54826f0
	void OnPawnDetectorOverlapExit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DeadByDaylight.AuthoritativeMovementComponent.OnPawnDetectorOverlapExit // (Final|Native|Protected) // @ game+0x5482590
	void OnPawnDetectorOverlapEnter(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.AuthoritativeMovementComponent.OnPawnDetectorOverlapEnter // (Final|Native|Protected|HasOutParms) // @ game+0x5482370
};

// Class DeadByDaylight.AutomaticLeanComponent
// Size: 0x370 (Inherited: 0xb8)
struct UAutomaticLeanComponent : UActorComponent {
	struct FMulticastInlineDelegate OnLeanStateChanged; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnPotentialLeanStateChanged; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnCanInitiateLeanChanged; // 0xd8(0x10)
	struct FSocketOrBoneCache _cameraIdleLocation; // 0xe8(0x60)
	struct FSocketOrBoneCache _cameraLeftLeanLocation; // 0x148(0x60)
	struct FSocketOrBoneCache _cameraRightLeanLocation; // 0x1a8(0x60)
	struct FSocketOrBoneCache _cameraCrouchLocation; // 0x208(0x60)
	struct FSocketOrBoneCache _cameraCrouchLeftLeanLocation; // 0x268(0x60)
	struct FSocketOrBoneCache _cameraCrouchRightLeanLocation; // 0x2c8(0x60)
	float _middleSphereTraceLength; // 0x328(0x04)
	float _sideSphereTraceLength; // 0x32c(0x04)
	float _sphereTraceRadius; // 0x330(0x04)
	float _standingTraceHeightOffset; // 0x334(0x04)
	float _crouchingTraceHeightOffset; // 0x338(0x04)
	float _sideTraceOffset; // 0x33c(0x04)
	float _maxCameraDistance; // 0x340(0x04)
	float _maxCameraAngle; // 0x344(0x04)
	bool _debugMode; // 0x348(0x01)
	enum class ELeanState _leanState; // 0x349(0x01)
	char pad_34A[0x26]; // 0x34a(0x26)

	void Server_SetLeanState(enum class ELeanState leanState); // Function DeadByDaylight.AutomaticLeanComponent.Server_SetLeanState // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x5482750
	void OnRep_LeanState(); // Function DeadByDaylight.AutomaticLeanComponent.OnRep_LeanState // (Final|Native|Private) // @ game+0x5482710
	void OnPotentialLeanStateChanged__DelegateSignature(enum class ELeanState leanState); // DelegateFunction DeadByDaylight.AutomaticLeanComponent.OnPotentialLeanStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnLeanStateChanged__DelegateSignature(enum class ELeanState leanState); // DelegateFunction DeadByDaylight.AutomaticLeanComponent.OnLeanStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnCanInitiateLeanChanged__DelegateSignature(bool canInitiate); // DelegateFunction DeadByDaylight.AutomaticLeanComponent.OnCanInitiateLeanChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void Local_Unlean(); // Function DeadByDaylight.AutomaticLeanComponent.Local_Unlean // (Final|Native|Public|BlueprintCallable) // @ game+0x5481df0
	void Local_Lean(); // Function DeadByDaylight.AutomaticLeanComponent.Local_Lean // (Final|Native|Public|BlueprintCallable) // @ game+0x5481dd0
	bool IsLeaning(); // Function DeadByDaylight.AutomaticLeanComponent.IsLeaning // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5481da0
	enum class ELeanState GetPotentialLeanState(); // Function DeadByDaylight.AutomaticLeanComponent.GetPotentialLeanState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5481d80
	enum class ELeanState GetLeanState(); // Function DeadByDaylight.AutomaticLeanComponent.GetLeanState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5481d30
	float GetAvailableDistanceInFrontOfCamera(); // Function DeadByDaylight.AutomaticLeanComponent.GetAvailableDistanceInFrontOfCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5481b00
	bool CanInitiateLean(); // Function DeadByDaylight.AutomaticLeanComponent.CanInitiateLean // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54818b0
};

// Class DeadByDaylight.AutoQualityAdjuster
// Size: 0x258 (Inherited: 0x230)
struct AAutoQualityAdjuster : AActor {
	float TargetResolutionScale; // 0x230(0x04)
	float MinimumMS; // 0x234(0x04)
	float MaximumMS; // 0x238(0x04)
	float ScaleIncreaseRate; // 0x23c(0x04)
	float ScaleDecreaseRate; // 0x240(0x04)
	float MinimumAllowableScale; // 0x244(0x04)
	char pad_248[0x10]; // 0x248(0x10)
};

// Class DeadByDaylight.BaseBloodwebContentAdapter
// Size: 0x60 (Inherited: 0x30)
struct UBaseBloodwebContentAdapter : UObject {
	struct UBloodwebTunables* _bloodwebTunables; // 0x30(0x08)
	struct UBloodwebEntity* _entity; // 0x38(0x08)
	struct TScriptInterface<IDBDBloodwebDefinitionBase> _bloodwebDefinition; // 0x40(0x10)
	char pad_50[0x10]; // 0x50(0x10)
};

// Class DeadByDaylight.BackendBloodwebContentAdapter
// Size: 0x118 (Inherited: 0x60)
struct UBackendBloodwebContentAdapter : UBaseBloodwebContentAdapter {
	char pad_60[0xb0]; // 0x60(0xb0)
	struct UBloodwebGenerator* _bloodwebBuilder; // 0x110(0x08)
};

// Class DeadByDaylight.BackendCinematicContainer
// Size: 0xf0 (Inherited: 0x30)
struct UBackendCinematicContainer : UObject {
	char pad_30[0xc0]; // 0x30(0xc0)
};

// Class DeadByDaylight.BackendLoadoutManager
// Size: 0xd8 (Inherited: 0x38)
struct UBackendLoadoutManager : UGameInstanceSubsystem {
	char pad_38[0xa0]; // 0x38(0xa0)
};

// Class DeadByDaylight.BannerDataProcessor
// Size: 0x80 (Inherited: 0x30)
struct UBannerDataProcessor : UObject {
	char pad_30[0x50]; // 0x30(0x50)
};

// Class DeadByDaylight.BaseCameraTargetingStrategy
// Size: 0x50 (Inherited: 0x30)
struct UBaseCameraTargetingStrategy : UObject {
	char pad_30[0x8]; // 0x30(0x08)
	float _maxFreeAngle; // 0x38(0x04)
	float _maxInputRotation; // 0x3c(0x04)
	float _interpolationSpeed; // 0x40(0x04)
	float _interpolationSpeedOutsideFreeMoveZone; // 0x44(0x04)
	struct AActor* _target; // 0x48(0x08)
};

// Class DeadByDaylight.BaseEscapeThroughHatch
// Size: 0x630 (Inherited: 0x630)
struct UBaseEscapeThroughHatch : UInteractionDefinition {

	struct AHatch* GetHatch(); // Function DeadByDaylight.BaseEscapeThroughHatch.GetHatch // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x5481bc0
};

// Class DeadByDaylight.BaseHitValidationConfigurator
// Size: 0xc0 (Inherited: 0xb8)
struct UBaseHitValidationConfigurator : UActorComponent {
	char pad_B8[0x8]; // 0xb8(0x08)
};

// Class DeadByDaylight.BaseIndicatorWidget
// Size: 0x380 (Inherited: 0x338)
struct UBaseIndicatorWidget : UMobileBaseUserWidget {
	struct UCanvasPanel* _safeZonePanel; // 0x338(0x08)
	struct UCanvasPanelSlot* _canvasPanelSlot; // 0x340(0x08)
	float RadiusMultiplier; // 0x348(0x04)
	char pad_34C[0x4]; // 0x34c(0x04)
	struct UCanvasPanel* IndicatorPanel; // 0x350(0x08)
	struct UCanvasPanel* Indicator; // 0x358(0x08)
	struct UImage* ArrowImage; // 0x360(0x08)
	char pad_368[0x18]; // 0x368(0x18)

	void OnOutAnimationFinished(); // Function DeadByDaylight.BaseIndicatorWidget.OnOutAnimationFinished // (Final|Native|Protected) // @ game+0x4850070
};

// Class DeadByDaylight.KillerProjectile
// Size: 0x338 (Inherited: 0x2b8)
struct AKillerProjectile : APhysicsBasedProjectile {
	char pad_2B8[0x48]; // 0x2b8(0x48)
	struct FGameplayTag _killerProjectileAttemptGameEventTag; // 0x300(0x0c)
	char pad_30C[0x4]; // 0x30c(0x04)
	struct UHitValidatorConfigurator* _hitValidatorConfigurator; // 0x310(0x08)
	struct UHitValidatorComponent* _hitValidatorComponent; // 0x318(0x08)
	enum class EHitValidatorConfigName _hitValidationConfigName; // 0x320(0x01)
	char pad_321[0x17]; // 0x321(0x17)

	void SetActiveSlashable(bool Active); // Function DeadByDaylight.KillerProjectile.SetActiveSlashable // (Final|Native|Public|BlueprintCallable) // @ game+0x554f810
	struct UPrimitiveComponent* GetPlayerPrimitiveComponent(); // Function DeadByDaylight.KillerProjectile.GetPlayerPrimitiveComponent // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x554f1b0
	struct ASlasherPlayer* GetLaunchingKiller(); // Function DeadByDaylight.KillerProjectile.GetLaunchingKiller // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x554f120
};

// Class DeadByDaylight.BaseLinkedVomitProjectile
// Size: 0x3a8 (Inherited: 0x338)
struct ABaseLinkedVomitProjectile : AKillerProjectile {
	bool _useSplashDamage; // 0x338(0x01)
	bool _passThroughSurvivors; // 0x339(0x01)
	char pad_33A[0x6]; // 0x33a(0x06)
	struct UPoolableProjectileComponent* _poolableProjectile; // 0x340(0x08)
	struct FMulticastInlineDelegate OnDeactivateOrLaunch; // 0x348(0x10)
	struct UParticleSystemComponent* _vomitTrail; // 0x358(0x08)
	struct USplineMeshComponent* _splineMesh; // 0x360(0x08)
	struct USphereComponent* _splashDamageSphere; // 0x368(0x08)
	struct UAkComponent* _akAudioVomitProjectile; // 0x370(0x08)
	struct UParticleSystem* _vomitSplashCamper; // 0x378(0x08)
	struct UParticleSystem* _vomitSplash; // 0x380(0x08)
	struct UAkAudioEvent* _akAudioEventAudioEventVomitSplash; // 0x388(0x08)
	struct FVector2D _minDecalSize; // 0x390(0x08)
	struct FVector2D _maxDecalSize; // 0x398(0x08)
	bool _isSuperVomit; // 0x3a0(0x01)
	char pad_3A1[0x7]; // 0x3a1(0x07)

	void OnLinkedVomitProjectileDeactivate__DelegateSignature(); // DelegateFunction DeadByDaylight.BaseLinkedVomitProjectile.OnLinkedVomitProjectileDeactivate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnAffectSurvivor(struct ACamperPlayer* CamperPlayer); // Function DeadByDaylight.BaseLinkedVomitProjectile.OnAffectSurvivor // (Native|Event|Protected|BlueprintEvent) // @ game+0x5482030
	void OnAffectInteractable(struct AInteractable* Interactable, struct USceneComponent* HitComponent); // Function DeadByDaylight.BaseLinkedVomitProjectile.OnAffectInteractable // (Native|Event|Protected|BlueprintEvent) // @ game+0x5481f60
	void NativeExplode(struct FImpactInfo& ImpactInfo); // Function DeadByDaylight.BaseLinkedVomitProjectile.NativeExplode // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x5481ea0
};

// Class DeadByDaylight.BaseLockerItem
// Size: 0x248 (Inherited: 0x230)
struct ABaseLockerItem : AActor {
	struct ALocker* _owningLocker; // 0x230(0x08)
	char pad_238[0x4]; // 0x238(0x04)
	struct FVector _adjustedRelativePosition; // 0x23c(0x0c)

	void OnRep_OwningLocker(); // Function DeadByDaylight.BaseLockerItem.OnRep_OwningLocker // (Final|Native|Protected) // @ game+0x5482730
	void AdjustPositionOnLocker(); // Function DeadByDaylight.BaseLockerItem.AdjustPositionOnLocker // (Final|Native|Private) // @ game+0x5481810
};

// Class DeadByDaylight.BaseSky
// Size: 0x398 (Inherited: 0x230)
struct ABaseSky : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	bool AdjustCullDistance; // 0x238(0x01)
	char pad_239[0x3]; // 0x239(0x03)
	float IBLContributionMultiplier; // 0x23c(0x04)
	struct FLinearColor ProbesTintColor; // 0x240(0x10)
	float ProbesSaturationValue; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct FBHVRPerDetailModeFloat ASMDepthBias; // 0x258(0xa0)
	struct FBHVRPerDetailModeFloat ASMDepthAttenuation; // 0x2f8(0xa0)

	void ToggleLightingChange(bool toggleOn, struct FName ThemeName); // Function DeadByDaylight.BaseSky.ToggleLightingChange // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetProbesTint(struct FLinearColor InColor, float inSaturation); // Function DeadByDaylight.BaseSky.SetProbesTint // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x54829a0
	void SetCullDistance(float NewCullDistance); // Function DeadByDaylight.BaseSky.SetCullDistance // (Final|Native|Protected|BlueprintCallable) // @ game+0x5482890
	void OnFadeEnd(struct AActor* Other); // Function DeadByDaylight.BaseSky.OnFadeEnd // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5482250
	void OnFadeBegin(struct AActor* Other); // Function DeadByDaylight.BaseSky.OnFadeBegin // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x54821c0
	void OnAlphaChanged(float newAlpha, struct AActor* Other); // Function DeadByDaylight.BaseSky.OnAlphaChanged // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x54820c0
	struct UPostProcessComponent* GetPostprocessComponent(); // Function DeadByDaylight.BaseSky.GetPostprocessComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5481d50
	void CopyComponentsSettingsFromSource(struct UStaticMeshComponent* moonMesh, struct UDirectionalLightComponent* shadowLight, struct UDirectionalLightComponent* godRayLight, struct USkyLightComponent* SkyLight, struct UExponentialHeightFogComponent* HeightFog, struct UPostProcessComponent* postProcess, struct UObject* sourceBaseSkyClass); // Function DeadByDaylight.BaseSky.CopyComponentsSettingsFromSource // (Final|Native|Public|BlueprintCallable) // @ game+0x54818e0
};

// Class DeadByDaylight.BaseTrap
// Size: 0x4d0 (Inherited: 0x4c8)
struct ABaseTrap : ACollectable {
	bool _isTrapSet; // 0x4c8(0x01)
	char pad_4C9[0x7]; // 0x4c9(0x07)

	void SetIsTrapSet(bool value); // Function DeadByDaylight.BaseTrap.SetIsTrapSet // (Native|Public|BlueprintCallable) // @ game+0x5487840
	bool IsTrapSet(); // Function DeadByDaylight.BaseTrap.IsTrapSet // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5487540
};

// Class DeadByDaylight.BearTrapOutlineUpdateStrategy
// Size: 0xf8 (Inherited: 0xc0)
struct UBearTrapOutlineUpdateStrategy : UOutlineUpdateStrategy {
	struct FLinearColor UnrevealedColor; // 0xc0(0x10)
	struct FLinearColor RevealedColorToSurvivor; // 0xd0(0x10)
	struct UCurveLinearColor* KillerOutlineFadeCurve; // 0xe0(0x08)
	char pad_E8[0x8]; // 0xe8(0x08)
	struct UMapActorComponent* _owningBearTrapMapActorComponent; // 0xf0(0x08)

	void SetOwningBearTrapMapActorComponent(struct UMapActorComponent* MapActorComponent); // Function DeadByDaylight.BearTrapOutlineUpdateStrategy.SetOwningBearTrapMapActorComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x54878d0
};

// Class DeadByDaylight.BlessedVignetteController
// Size: 0xc8 (Inherited: 0xb8)
struct UBlessedVignetteController : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)

	void OnDeactivateBlessedVignette(); // Function DeadByDaylight.BlessedVignetteController.OnDeactivateBlessedVignette // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnActivateBlessedVignette(); // Function DeadByDaylight.BlessedVignetteController.OnActivateBlessedVignette // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.BlindableBaseComponent
// Size: 0x240 (Inherited: 0xb8)
struct UBlindableBaseComponent : UActorComponent {
	char pad_B8[0x90]; // 0xb8(0x90)
	bool _isBlinded; // 0x148(0x01)
	char pad_149[0x7]; // 0x149(0x07)
	struct FTagStateBool _isBeingBlinded; // 0x150(0x30)
	struct UChargeableComponent* _chargeableComponent; // 0x180(0x08)
	struct TMap<struct AActor*, struct TScriptInterface<IBlindingEffectorInterface>> _authority_blindingEffectors; // 0x188(0x50)
	char pad_1D8[0x68]; // 0x1d8(0x68)

	void SetChargeable(struct UChargeableComponent* value); // Function DeadByDaylight.BlindableBaseComponent.SetChargeable // (Final|Native|Public|BlueprintCallable) // @ game+0x54877b0
	void OnRep_IsBlinded(); // Function DeadByDaylight.BlindableBaseComponent.OnRep_IsBlinded // (Final|Native|Private) // @ game+0x5487770
	void OnChargeableCompletionPercentChanged(struct UChargeableComponent* ChargeableComponent, float TotalPercentComplete); // Function DeadByDaylight.BlindableBaseComponent.OnChargeableCompletionPercentChanged // (Final|Native|Private) // @ game+0x5487590
	bool IsBlinded(); // Function DeadByDaylight.BlindableBaseComponent.IsBlinded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x4696d50
	void Authority_RemoveBlindingEffector(struct TScriptInterface<IBlindingEffectorInterface> effector); // Function DeadByDaylight.BlindableBaseComponent.Authority_RemoveBlindingEffector // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54873e0
	void Authority_Blinded(enum class EBlindType blindType, float BlindnessDuration, struct AActor* effectorActor); // Function DeadByDaylight.BlindableBaseComponent.Authority_Blinded // (Native|Public|BlueprintCallable) // @ game+0x54872d0
	void Authority_AddBlindingEffector(struct TScriptInterface<IBlindingEffectorInterface> effector); // Function DeadByDaylight.BlindableBaseComponent.Authority_AddBlindingEffector // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5486ef0
};

// Class DeadByDaylight.BlindableComponent
// Size: 0x248 (Inherited: 0x240)
struct UBlindableComponent : UBlindableBaseComponent {
	char pad_240[0x8]; // 0x240(0x08)
};

// Class DeadByDaylight.BlindingEffectorInterface
// Size: 0x30 (Inherited: 0x30)
struct UBlindingEffectorInterface : UInterface {
};

// Class DeadByDaylight.BlindingFXComponent
// Size: 0x108 (Inherited: 0xb8)
struct UBlindingFXComponent : UActorComponent {
	char pad_B8[0x14]; // 0xb8(0x14)
	struct FName _blindnessIntensityParameter; // 0xcc(0x0c)
	struct UCurveFloat* _blindnessMaterialCurve; // 0xd8(0x08)
	struct UCurveFloat* _blindnessCurve; // 0xe0(0x08)
	struct UPostProcessComponent* _postProcess; // 0xe8(0x08)
	struct UMaterialInstanceDynamic* _postProcessMaterial; // 0xf0(0x08)
	char pad_F8[0x10]; // 0xf8(0x10)

	void SetPostProcessMaterial(struct UMaterialInstanceDynamic* value); // Function DeadByDaylight.BlindingFXComponent.SetPostProcessMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x54879f0
	void SetPostProcess(struct UPostProcessComponent* value); // Function DeadByDaylight.BlindingFXComponent.SetPostProcess // (Final|Native|Public|BlueprintCallable) // @ game+0x5487960
};

// Class DeadByDaylight.BlockElement
// Size: 0xa8 (Inherited: 0x30)
struct UBlockElement : UObject {
	struct TWeakObjectPtr<struct UObject> _source; // 0x30(0x08)
	struct TSet<struct TWeakObjectPtr<struct ADBDPlayer>> _affectedPlayers; // 0x38(0x50)
	char pad_88[0x20]; // 0x88(0x20)
};

// Class DeadByDaylight.BlockableComponent
// Size: 0x100 (Inherited: 0xb8)
struct UBlockableComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	struct FBlockableReplicatedDatum _replicatedDatum; // 0xd0(0x20)
	struct TArray<struct UBlockElement*> _blockElements; // 0xf0(0x10)

	void OnRep_ReplicatedDatum(); // Function DeadByDaylight.BlockableComponent.OnRep_ReplicatedDatum // (Final|Native|Private|Const) // @ game+0x5487790
	void Authority_RemoveBlock(struct UObject* Source); // Function DeadByDaylight.BlockableComponent.Authority_RemoveBlock // (Final|Native|Public|BlueprintCallable) // @ game+0x5487480
	void Authority_AddTimedBlock(struct UObject* Source, float Duration, struct TSet<struct ADBDPlayer*>& affectedPlayers); // Function DeadByDaylight.BlockableComponent.Authority_AddTimedBlock // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x5487110
	void Authority_AddBlock(struct UObject* Source, struct TSet<struct ADBDPlayer*>& affectedPlayers); // Function DeadByDaylight.BlockableComponent.Authority_AddBlock // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x5486f90
};

// Class DeadByDaylight.BloodDecalEffectIntensity
// Size: 0x50 (Inherited: 0x38)
struct UBloodDecalEffectIntensity : UDataAsset {
	struct FColor IntensifyBloodColor; // 0x38(0x04)
	struct FColor IntensifyBloodColor2; // 0x3c(0x04)
	struct FColor IntensifyBloodColorEmissive; // 0x40(0x04)
	float IntensifyBloodColorEmissiveMinimumIntensity; // 0x44(0x04)
	float IntensifyBloodColorEmissiveMaximumIntensity; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class DeadByDaylight.BloodDecalEffect
// Size: 0x118 (Inherited: 0x38)
struct UBloodDecalEffect : UDataAsset {
	struct UCurveFloat* AnimationTimelineCurve; // 0x38(0x08)
	struct UCurveFloat* DestroyTimelineCurve; // 0x40(0x08)
	struct TArray<struct UTexture2D*> Textures; // 0x48(0x10)
	struct TArray<struct UTexture2D*> Normals; // 0x58(0x10)
	bool EnableVisualEffects; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UBloodDecalEffectIntensity* BloodDecalEffectIntensity; // 0x70(0x08)
	float ColorInterpolationSpeed; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct UMaterialInterface* DefalultDecalMaterial; // 0x80(0x08)
	char pad_88[0x90]; // 0x88(0x90)
};

// Class DeadByDaylight.Bloodlust
// Size: 0x488 (Inherited: 0x350)
struct UBloodlust : UStatusEffect {
	struct UCurveFloat* BloodlustCurve; // 0x350(0x08)
	char pad_358[0x20]; // 0x358(0x20)
	float _bloodlustTime; // 0x378(0x04)
	char pad_37C[0x2c]; // 0x37c(0x2c)
	struct TArray<struct FGameplayTag> _bloodlustResettingGameEvents; // 0x3a8(0x10)
	char pad_3B8[0xd0]; // 0x3b8(0xd0)

	void OnRep_BloodlustTime(float oldBloodlustTime); // Function DeadByDaylight.Bloodlust.OnRep_BloodlustTime // (Final|Native|Private) // @ game+0x54876f0
	void OnChaseStartedEvent(struct ADBDPlayer* chasedPlayer); // Function DeadByDaylight.Bloodlust.OnChaseStartedEvent // (Final|Native|Private) // @ game+0x5487660
	void OnAllChaseEndedEvent(); // Function DeadByDaylight.Bloodlust.OnAllChaseEndedEvent // (Final|Native|Private) // @ game+0x5487570
	float GetBloodlustTime(); // Function DeadByDaylight.Bloodlust.GetBloodlustTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5487510
	void DBD_SetBloodlust(int32_t Amount, bool enableDecay); // Function DeadByDaylight.Bloodlust.DBD_SetBloodlust // (Final|Exec|Native|Public) // @ game+0x46a2510
};

// Class DeadByDaylight.BloodTrailSettings
// Size: 0x1a0 (Inherited: 0x38)
struct UBloodTrailSettings : UDataAsset {
	float _initialDelay; // 0x38(0x04)
	int32_t _numBloodDropsPerBloodPool; // 0x3c(0x04)
	float _bloodDropsInterval; // 0x40(0x04)
	bool _randomlyRotateBloodDrops; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
	float _bloodDropsRandomScatter; // 0x48(0x04)
	enum class ETraceTypeQuery _bloodTraceChannel; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	struct UBloodDecalEffect* _bloodDecalEffect; // 0x50(0x08)
	struct FBHVRPerDetailModeInt _decalPoolSize; // 0x58(0xa0)
	float _recycleThresholdPercentage; // 0xf8(0x04)
	float _recycleDistancePercentage; // 0xfc(0x04)
	struct FBHVRPerDetailModeInt _maxOverlapping; // 0x100(0xa0)
};

// Class DeadByDaylight.BloodTrailComponent
// Size: 0x240 (Inherited: 0xb8)
struct UBloodTrailComponent : UActorComponent {
	struct UBloodTrailSettings* _bloodTrailSettings; // 0xb8(0x08)
	char pad_C0[0x80]; // 0xc0(0x80)
	struct TMap<struct UDBDDecalComponent*, struct FBloodDecal> _bloodDecals; // 0x140(0x50)
	struct UBloodDecalEffect* _bloodDecalEffect; // 0x190(0x08)
	char pad_198[0x90]; // 0x198(0x90)
	struct UDecalSpawner* _decalSpawner; // 0x228(0x08)
	char pad_230[0x10]; // 0x230(0x10)

	void ConditionalStartBleeding(); // Function DeadByDaylight.BloodTrailComponent.ConditionalStartBleeding // (Native|Public|BlueprintCallable) // @ game+0x4aa7040
};

// Class DeadByDaylight.BloodwebTunables
// Size: 0x38 (Inherited: 0x30)
struct UBloodwebTunables : UObject {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class DeadByDaylight.BloodwebBackendTunables
// Size: 0xa8 (Inherited: 0x38)
struct UBloodwebBackendTunables : UBloodwebTunables {
	char pad_38[0x70]; // 0x38(0x70)
};

// Class DeadByDaylight.BloodwebClientTunables
// Size: 0x38 (Inherited: 0x38)
struct UBloodwebClientTunables : UBloodwebTunables {
};

// Class DeadByDaylight.BloodwebDistribution
// Size: 0x328 (Inherited: 0x30)
struct UBloodwebDistribution : UObject {
	char pad_30[0x10]; // 0x30(0x10)
	struct UDBDDesignTunables* _designTunables; // 0x40(0x08)
	struct UBloodwebTunables* _bloodwebTunables; // 0x48(0x08)
	char pad_50[0x2d8]; // 0x50(0x2d8)
};

// Class DeadByDaylight.BloodwebEntity
// Size: 0x78 (Inherited: 0x30)
struct UBloodwebEntity : UObject {
	char pad_30[0x8]; // 0x30(0x08)
	struct UDBDGameInstance* _gameInstance; // 0x38(0x08)
	struct UBloodwebTunables* _bloodwebTunables; // 0x40(0x08)
	struct TScriptInterface<IDBDBloodwebDefinitionBase> _bloodwebDefinition; // 0x48(0x10)
	char pad_58[0x20]; // 0x58(0x20)
};

// Class DeadByDaylight.BloodwebGenerator
// Size: 0x100 (Inherited: 0x30)
struct UBloodwebGenerator : UObject {
	char pad_30[0xc]; // 0x30(0x0c)
	struct FRandomStream _randomizationStream; // 0x3c(0x08)
	char pad_44[0x4]; // 0x44(0x04)
	struct TArray<struct FString> _selectedNodes; // 0x48(0x10)
	struct TArray<struct FName> _selectedContent; // 0x58(0x10)
	char pad_68[0x48]; // 0x68(0x48)
	struct TScriptInterface<IDBDBloodwebDefinitionBase> _bloodwebDefinition; // 0xb0(0x10)
	struct UDBDDesignTunables* _designTunables; // 0xc0(0x08)
	struct UBloodwebTunables* _bloodwebTunables; // 0xc8(0x08)
	float _alternativePathOccurenceFactor; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct UBloodwebDistribution* _dataDistribution; // 0xd8(0x08)
	struct UBloodwebSettings* _bloodwebSettings; // 0xe0(0x08)
	char pad_E8[0x18]; // 0xe8(0x18)
};

// Class DeadByDaylight.BloodwebHandler
// Size: 0x98 (Inherited: 0x30)
struct UBloodwebHandler : UObject {
	char pad_30[0x68]; // 0x30(0x68)
};

// Class DeadByDaylight.BloodwebManager
// Size: 0x200 (Inherited: 0x30)
struct UBloodwebManager : UObject {
	char pad_30[0x60]; // 0x30(0x60)
	struct UBloodwebGenerator* _bloodwebBuilderClass; // 0x90(0x08)
	struct UDBDGameInstance* _gameInstance; // 0x98(0x08)
	struct UDBDDesignTunables* _designTunables; // 0xa0(0x08)
	struct UBaseBloodwebContentAdapter* _bloodWebContentAdapter; // 0xa8(0x08)
	struct UBloodwebHandler* _bloodwebHandler; // 0xb0(0x08)
	struct UBloodwebPathfinder* _bloodwebPathfinder; // 0xb8(0x08)
	char pad_C0[0x140]; // 0xc0(0x140)

	void Init(struct UDBDGameInstance* GameInstance, struct UDBDDesignTunables* Tunables); // Function DeadByDaylight.BloodwebManager.Init // (Final|Native|Public) // @ game+0x548b670
};

// Class DeadByDaylight.BloodwebPathfinder
// Size: 0x50 (Inherited: 0x30)
struct UBloodwebPathfinder : UObject {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class DeadByDaylight.BloodwebSettings
// Size: 0x48 (Inherited: 0x38)
struct UBloodwebSettings : UDataAsset {
	struct TArray<struct FName> _duplicableItems; // 0x38(0x10)
};

// Class DeadByDaylight.BlueprintDebugUtilities
// Size: 0x30 (Inherited: 0x30)
struct UBlueprintDebugUtilities : UBlueprintFunctionLibrary {

	void EnsureOnConditionWithMessage(bool Condition, struct FString ensureMessage); // Function DeadByDaylight.BlueprintDebugUtilities.EnsureOnConditionWithMessage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x548b590
	void EnsureFalseWithMessage(struct FString ensureMessage); // Function DeadByDaylight.BlueprintDebugUtilities.EnsureFalseWithMessage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x4b76a30
};

// Class DeadByDaylight.BlueprintPlatformUtilities
// Size: 0x30 (Inherited: 0x30)
struct UBlueprintPlatformUtilities : UBlueprintFunctionLibrary {

	int32_t ToInteger(struct FDBDPerPlatformInt& PerPlatformInt, struct UObject* objectInWorld); // Function DeadByDaylight.BlueprintPlatformUtilities.ToInteger // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x548b820
	float ToFloat(struct FDBDPerPlatformFloat& PerPlatformFloat, struct UObject* objectInWorld); // Function DeadByDaylight.BlueprintPlatformUtilities.ToFloat // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x548b740
};

// Class DeadByDaylight.BonusPointEventsManager
// Size: 0xe8 (Inherited: 0x30)
struct UBonusPointEventsManager : UObject {
	char pad_30[0xb8]; // 0x30(0xb8)
};

// Class DeadByDaylight.Tile
// Size: 0x348 (Inherited: 0x230)
struct ATile : AActor {
	bool RerunConstructionScript; // 0x230(0x01)
	char pad_231[0x3]; // 0x231(0x03)
	int32_t MinimumSpacing; // 0x234(0x04)
	int32_t MaximumSpacing; // 0x238(0x04)
	bool DiagonalSpacing; // 0x23c(0x01)
	bool TypeSpacing; // 0x23d(0x01)
	char pad_23E[0x2]; // 0x23e(0x02)
	int32_t MaximumCount; // 0x240(0x04)
	struct FVector2D Dimension; // 0x244(0x08)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct TArray<enum class EscapeStrategyType> AvailableEscapeTypes; // 0x250(0x10)
	enum class ETileType Type; // 0x260(0x01)
	enum class EDensity Density; // 0x261(0x01)
	enum class EPathType Path; // 0x262(0x01)
	char pad_263[0x1]; // 0x263(0x01)
	int32_t Number; // 0x264(0x04)
	bool PlaceHolder; // 0x268(0x01)
	bool Replacement; // 0x269(0x01)
	char pad_26A[0x2]; // 0x26a(0x02)
	int32_t SpawnPriorityTier; // 0x26c(0x04)
	float Weight; // 0x270(0x04)
	struct FVector2D Coord; // 0x274(0x08)
	enum class EQuadrantSpawnType QuadrantSpawnType; // 0x27c(0x01)
	enum class EBasementType BasementType; // 0x27d(0x01)
	char pad_27E[0x2]; // 0x27e(0x02)
	struct TArray<struct UTileSpawnPoint*> SpawnPointsCache; // 0x280(0x10)
	struct TArray<struct UObjectRandomizer*> ObjectRandomizersCache; // 0x290(0x10)
	struct TArray<struct UActorSpawner*> ActorSpawnersCache; // 0x2a0(0x10)
	struct TArray<struct UActorVariationSpawner*> ActorVariationSpawnersCache; // 0x2b0(0x10)
	char pad_2C0[0x7c]; // 0x2c0(0x7c)
	struct FRandomStream SharedTileRandomizer; // 0x33c(0x08)
	bool _initialized; // 0x344(0x01)
	char pad_345[0x3]; // 0x345(0x03)

	void OnSetSpawnObject(struct UTileSpawnPoint* TileSpawnPoint, struct AActor* spawnedObject); // Function DeadByDaylight.Tile.OnSetSpawnObject // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnRep_Initialized(bool oldValue); // Function DeadByDaylight.Tile.OnRep_Initialized // (Final|Native|Protected) // @ game+0x55c3eb0
	void OnAllTileSpawned(); // Function DeadByDaylight.Tile.OnAllTileSpawned // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void InitOnSpawned(); // Function DeadByDaylight.Tile.InitOnSpawned // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.BorderTile
// Size: 0x368 (Inherited: 0x348)
struct ABorderTile : ATile {
	struct TArray<struct FBorderElements> Borders; // 0x348(0x10)
	struct UMapData* _map; // 0x358(0x08)
	char pad_360[0x8]; // 0x360(0x08)
};

// Class DeadByDaylight.BreakableBase
// Size: 0x360 (Inherited: 0x338)
struct ABreakableBase : AInteractable {
	struct UBoxComponent* _breakableCollision; // 0x338(0x08)
	enum class EBreakableState _state; // 0x340(0x01)
	char pad_341[0x7]; // 0x341(0x07)
	struct UAkComponent* _akAudioBreakable; // 0x348(0x08)
	struct UAkAudioEvent* _akAudioBreakEvent; // 0x350(0x08)
	struct USceneComponent* _rootComponent; // 0x358(0x08)

	void PlayAudioBreakable(); // Function DeadByDaylight.BreakableBase.PlayAudioBreakable // (Final|Native|Public|BlueprintCallable) // @ game+0x54912f0
	bool IsUnbroken(); // Function DeadByDaylight.BreakableBase.IsUnbroken // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490970
	void ExplodeVfxSfx(struct FVector ImpulseDir); // Function DeadByDaylight.BreakableBase.ExplodeVfxSfx // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x5e02c90
	void Explode(struct ADBDPlayer* Player); // Function DeadByDaylight.BreakableBase.Explode // (Final|Native|Public|BlueprintCallable) // @ game+0x5490440
};

// Class DeadByDaylight.BreakableWallOutlineUpdateStrategy
// Size: 0x138 (Inherited: 0x138)
struct UBreakableWallOutlineUpdateStrategy : USourceBasedOutlineUpdateStrategy {
};

// Class DeadByDaylight.BubbleIndicator
// Size: 0x238 (Inherited: 0x230)
struct ABubbleIndicator : AActor {
	float _lifetime; // 0x230(0x04)
	bool _displayToLocallyObserved; // 0x234(0x01)
	bool _isInRange; // 0x235(0x01)
	bool _isPreSpawned; // 0x236(0x01)
	char pad_237[0x1]; // 0x237(0x01)

	void SetSilhouette(struct UStaticMesh* StaticMesh); // Function DeadByDaylight.BubbleIndicator.SetSilhouette // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void DeactivateBubble(); // Function DeadByDaylight.BubbleIndicator.DeactivateBubble // (Final|Native|Protected|BlueprintCallable) // @ game+0x54903e0
	void ActivateBubbleFX(float Duration); // Function DeadByDaylight.BubbleIndicator.ActivateBubbleFX // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.BubbleIndicatorNotifier
// Size: 0x30 (Inherited: 0x30)
struct UBubbleIndicatorNotifier : UBlueprintFunctionLibrary {

	void SpawnBubbleIndicator(struct UObject* WorldContextObject, struct ABubbleIndicator* bubbleIndicatorBP, struct FTransform Transform, bool TriggerLoudNoise, bool spawnOnKillerSideOnly, float lifetime, struct UStaticMesh* silhouetteStaticMesh, float audibleRange); // Function DeadByDaylight.BubbleIndicatorNotifier.SpawnBubbleIndicator // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x5491720
	struct ABubbleIndicator* PreSpawnBubbleIndicator(struct UObject* WorldContextObject, struct ABubbleIndicator* bubbleIndicatorBP, struct UStaticMesh* silhouetteStaticMesh); // Function DeadByDaylight.BubbleIndicatorNotifier.PreSpawnBubbleIndicator // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x54913a0
	void ActivateBubbleIndicator(struct UObject* WorldContextObject, struct ABubbleIndicator* BubbleIndicator, struct FTransform Transform, bool TriggerLoudNoise, float lifetime, float audibleRange); // Function DeadByDaylight.BubbleIndicatorNotifier.ActivateBubbleIndicator // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x548f320
};

// Class DeadByDaylight.CameraAttachmentComponent
// Size: 0x168 (Inherited: 0xb8)
struct UCameraAttachmentComponent : UActorComponent {
	struct USceneComponent* _anchor; // 0xb8(0x08)
	char pad_C0[0x10]; // 0xc0(0x10)
	struct FCameraAttachment _defaultCameraAttachment; // 0xd0(0x18)
	struct FCameraAttachment _currentCameraAttachment; // 0xe8(0x18)
	char pad_100[0x68]; // 0x100(0x68)

	void Reset(); // Function DeadByDaylight.CameraAttachmentComponent.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x54914a0
	bool IsAttached(); // Function DeadByDaylight.CameraAttachmentComponent.IsAttached // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54907f0
	void Detach(); // Function DeadByDaylight.CameraAttachmentComponent.Detach // (Final|Native|Public|BlueprintCallable) // @ game+0x5490400
};

// Class DeadByDaylight.CameraFadeComponent
// Size: 0xf0 (Inherited: 0xb8)
struct UCameraFadeComponent : UActorComponent {
	char pad_B8[0x38]; // 0xb8(0x38)

	void OnFadedOut(); // Function DeadByDaylight.CameraFadeComponent.OnFadedOut // (Final|Native|Public|BlueprintCallable) // @ game+0x54911c0
	void OnFadedIn(); // Function DeadByDaylight.CameraFadeComponent.OnFadedIn // (Final|Native|Public|BlueprintCallable) // @ game+0x54911a0
	enum class ECameraFadeState GetCameraFadeState(); // Function DeadByDaylight.CameraFadeComponent.GetCameraFadeState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54904d0
};

// Class DeadByDaylight.CameraHandlerComponent
// Size: 0x1a8 (Inherited: 0xb8)
struct UCameraHandlerComponent : UActorComponent {
	char pad_B8[0x20]; // 0xb8(0x20)
	struct TMap<enum class EDBDCameraSocketID, struct AActor*> _cameraMap; // 0xd8(0x50)
	enum class EDBDCameraSocketID _delayedSocketID; // 0x128(0x01)
	enum class EDBDCameraSocketID _currentSocketID; // 0x129(0x01)
	char pad_12A[0x47]; // 0x12a(0x47)
	bool _manualZoomAllowPerkModifiers; // 0x171(0x01)
	char pad_172[0x6]; // 0x172(0x06)
	struct UCurveFloat* _manualZoomCurveFloat; // 0x178(0x08)
	struct FName _cameraAttachmentSocket; // 0x180(0x0c)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct USceneComponent* _cameraAttachmentComponent; // 0x190(0x08)
	char pad_198[0x8]; // 0x198(0x08)
	bool _isFOVSystemActive; // 0x1a0(0x01)
	char pad_1A1[0x7]; // 0x1a1(0x07)

	void SetSocketID(enum class EDBDCameraSocketID Mode); // Function DeadByDaylight.CameraHandlerComponent.SetSocketID // (Final|Native|Public|BlueprintCallable) // @ game+0x5491670
	void SetAttachmentComponent(struct USceneComponent* attachmentComponent); // Function DeadByDaylight.CameraHandlerComponent.SetAttachmentComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x54914c0
	void PlayVFXOnCurrentCamera(struct UParticleSystemComponent* Component); // Function DeadByDaylight.CameraHandlerComponent.PlayVFXOnCurrentCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x5491310
	enum class EDBDCameraSocketID GetSocketID(); // Function DeadByDaylight.CameraHandlerComponent.GetSocketID // (Final|Native|Public|BlueprintCallable) // @ game+0x5490680
	float GetDesiredFOV(); // Function DeadByDaylight.CameraHandlerComponent.GetDesiredFOV // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54905c0
	struct AActor* GetCurrentCamera(); // Function DeadByDaylight.CameraHandlerComponent.GetCurrentCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x5490500
	void AddCameraToSocket(enum class EDBDCameraSocketID Mode, struct AActor* Camera); // Function DeadByDaylight.CameraHandlerComponent.AddCameraToSocket // (Final|Native|Public|BlueprintCallable) // @ game+0x548f560
};

// Class DeadByDaylight.CameraOffsetController
// Size: 0x108 (Inherited: 0xb8)
struct UCameraOffsetController : UActorComponent {
	char pad_B8[0x50]; // 0xb8(0x50)
};

// Class DeadByDaylight.CamperBloodTrailComponent
// Size: 0x270 (Inherited: 0x240)
struct UCamperBloodTrailComponent : UBloodTrailComponent {
	struct UPerkManager* _camperPerkManager; // 0x240(0x08)
	char pad_248[0x28]; // 0x248(0x28)

	void OnDamageStateChanged(enum class ECamperDamageState oldDamageState, enum class ECamperDamageState CurrentDamageState); // Function DeadByDaylight.CamperBloodTrailComponent.OnDamageStateChanged // (Final|Native|Private) // @ game+0x5491090
};

// Class DeadByDaylight.CharacterDreamworldComponent
// Size: 0x138 (Inherited: 0xb8)
struct UCharacterDreamworldComponent : UActorComponent {
	struct FMulticastInlineDelegate DreamStateChanged; // 0xb8(0x10)
	struct AActor* _mobileDreamworldPostProcessClass; // 0xc8(0x08)
	struct FTagStateBool _isInDreamworld; // 0xd0(0x30)
	struct APostProcessUpdate* _mobileDreamworldPostProcess; // 0x100(0x08)
	char pad_108[0x30]; // 0x108(0x30)

	bool ShouldShowVignette(); // Function DeadByDaylight.CharacterDreamworldComponent.ShouldShowVignette // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a1fd0
	void OnRep_IsInDreamworld(); // Function DeadByDaylight.CharacterDreamworldComponent.OnRep_IsInDreamworld // (Final|Native|Private) // @ game+0x54a1d30
	bool IsInDreamworld(); // Function DeadByDaylight.CharacterDreamworldComponent.IsInDreamworld // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a18f0
	struct ADBDPlayer* GetLocallyObservedOrLocalCharacter(struct UObject* WorldContextObject); // Function DeadByDaylight.CharacterDreamworldComponent.GetLocallyObservedOrLocalCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54a10c0
	void FireWakeUpScoreEvent(struct ADBDPlayer* Instigator); // Function DeadByDaylight.CharacterDreamworldComponent.FireWakeUpScoreEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x54a0390
	void Authority_SetIsInDreamworld(bool NewValue, bool isScripted); // Function DeadByDaylight.CharacterDreamworldComponent.Authority_SetIsInDreamworld // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x4aec730
};

// Class DeadByDaylight.CamperDreamworldComponent
// Size: 0x228 (Inherited: 0x138)
struct UCamperDreamworldComponent : UCharacterDreamworldComponent {
	struct FMulticastInlineDelegate OnCamperTriggeredDreamTrap; // 0x138(0x10)
	struct UStatusEffect* _survivorDreamWorldStatusEffect; // 0x148(0x08)
	struct FSurvivorSleepiness _survivorSleepiness; // 0x150(0x08)
	float _sleepinessProtectionRemainingDuration; // 0x158(0x04)
	float _sleepGainPerSecond; // 0x15c(0x04)
	char pad_160[0x4]; // 0x160(0x04)
	int32_t _wakeUpByOtherCount; // 0x164(0x04)
	bool _showKiller; // 0x168(0x01)
	char pad_169[0x7]; // 0x169(0x07)
	struct FFastTimer _killerGlimpseDurationTimer; // 0x170(0x30)
	char pad_1A0[0x10]; // 0x1a0(0x10)
	struct FFastTimer _killerGlimpseCooldownTimer; // 0x1b0(0x30)
	char pad_1E0[0x10]; // 0x1e0(0x10)
	float _glimpseMinDistance; // 0x1f0(0x04)
	float _glimpseMaxDistance; // 0x1f4(0x04)
	float _killerGlimpseCooldown; // 0x1f8(0x04)
	float _killerGlimpseDuration; // 0x1fc(0x04)
	int32_t _wakeUpBySkillCheckCount; // 0x200(0x04)
	int32_t _fellAsleepCount; // 0x204(0x04)
	bool _forcedAsleep; // 0x208(0x01)
	char pad_209[0x7]; // 0x209(0x07)
	struct AWakerObject* _linkedWaker; // 0x210(0x08)
	bool _useScriptedKillerVisibility; // 0x218(0x01)
	char pad_219[0x7]; // 0x219(0x07)
	bool _showKillerInstantly; // 0x220(0x01)
	char pad_221[0x7]; // 0x221(0x07)

	bool ShouldLookSleepyToLocalPlayer(); // Function DeadByDaylight.CamperDreamworldComponent.ShouldLookSleepyToLocalPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54916f0
	void SetScriptedKillerVisibility(bool useScriptedKillerVisibility); // Function DeadByDaylight.CamperDreamworldComponent.SetScriptedKillerVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x54915e0
	void OnRep_ShowKiller(); // Function DeadByDaylight.CamperDreamworldComponent.OnRep_ShowKiller // (Final|Native|Private) // @ game+0x54912d0
	void Local_SetShowKiller(bool showKiller, bool instantly); // Function DeadByDaylight.CamperDreamworldComponent.Local_SetShowKiller // (Final|Native|Public|BlueprintCallable) // @ game+0x54909a0
	void InitializeTunableValues(struct ASlasherPlayer* killer); // Function DeadByDaylight.CamperDreamworldComponent.InitializeTunableValues // (Final|Native|Private) // @ game+0x5490760
	void HandleShowKillerChanged(bool showKiller, bool instantly); // Function DeadByDaylight.CamperDreamworldComponent.HandleShowKillerChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	int32_t GetWakeUpByOtherCount(); // Function DeadByDaylight.CamperDreamworldComponent.GetWakeUpByOtherCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54906b0
	bool CanWakeUpBySkillCheck(); // Function DeadByDaylight.CamperDreamworldComponent.CanWakeUpBySkillCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54903b0
	bool CanWakeUp(); // Function DeadByDaylight.CamperDreamworldComponent.CanWakeUp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490380
	void BroadcastCamperTriggeredDreamTrap(struct AActor* dreamObject); // Function DeadByDaylight.CamperDreamworldComponent.BroadcastCamperTriggeredDreamTrap // (Final|Native|Public|BlueprintCallable) // @ game+0x5490230
	void Authority_WakeUpByWakerObject(); // Function DeadByDaylight.CamperDreamworldComponent.Authority_WakeUpByWakerObject // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5490210
	void Authority_WakeUpByOther(struct ADBDPlayer* Instigator); // Function DeadByDaylight.CamperDreamworldComponent.Authority_WakeUpByOther // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5490180
	void Authority_WakeUpByHook(); // Function DeadByDaylight.CamperDreamworldComponent.Authority_WakeUpByHook // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5490160
	void Authority_SpawnDreamworldStatusEffect(); // Function DeadByDaylight.CamperDreamworldComponent.Authority_SpawnDreamworldStatusEffect // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|Const) // @ game+0x5490140
	void Authority_PutAsleep(); // Function DeadByDaylight.CamperDreamworldComponent.Authority_PutAsleep // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5490000
	void Authority_OnAttacked(); // Function DeadByDaylight.CamperDreamworldComponent.Authority_OnAttacked // (Final|Native|Private) // @ game+0x548fd50
	void Authority_HandleSkillCheckFailure(bool wakeUpEveryoneInteracting, struct ADBDPlayer* Instigator); // Function DeadByDaylight.CamperDreamworldComponent.Authority_HandleSkillCheckFailure // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x548f920
	int32_t Authority_GetWakeUpBySkillCheckCount(); // Function DeadByDaylight.CamperDreamworldComponent.Authority_GetWakeUpBySkillCheckCount // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x548f8f0
	int32_t Authority_GetFellAsleepCount(); // Function DeadByDaylight.CamperDreamworldComponent.Authority_GetFellAsleepCount // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x548f8c0
};

// Class DeadByDaylight.CamperEndGameComponent
// Size: 0x118 (Inherited: 0xb8)
struct UCamperEndGameComponent : UActorComponent {
	char pad_B8[0x48]; // 0xb8(0x48)
	struct AEndGameEntity* _endGameEntityClass; // 0x100(0x08)
	char pad_108[0x4]; // 0x108(0x04)
	float _delayBeforeSacrifice; // 0x10c(0x04)
	bool _readyToBeSacrificed; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)

	void OnEndGameSacrificeEnd(); // Function DeadByDaylight.CamperEndGameComponent.OnEndGameSacrificeEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x5491180
	void OnDelayBeforeSacrificeEnd(); // Function DeadByDaylight.CamperEndGameComponent.OnDelayBeforeSacrificeEnd // (Final|Native|Private) // @ game+0x5491160
	bool GetSacrificedByEndGame(); // Function DeadByDaylight.CamperEndGameComponent.GetSacrificedByEndGame // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490650
};

// Class DeadByDaylight.CamperExposerInstance
// Size: 0x260 (Inherited: 0x230)
struct ACamperExposerInstance : AActor {
	bool IsInterior; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
	struct FString _audioAgravationLevelRtpc; // 0x238(0x10)
	char pad_248[0x18]; // 0x248(0x18)

	void StartSpawnSequence(bool withRandomDelay); // Function DeadByDaylight.CamperExposerInstance.StartSpawnSequence // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5491a80
	void StartExitSequence(bool withRandomDelay); // Function DeadByDaylight.CamperExposerInstance.StartExitSequence // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x54919f0
	void SetIsInteriorBP(bool interior); // Function DeadByDaylight.CamperExposerInstance.SetIsInteriorBP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void ExitSequenceComplete(); // Function DeadByDaylight.CamperExposerInstance.ExitSequenceComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x5490420
};

// Class DeadByDaylight.CamperHealthComponent
// Size: 0x2f0 (Inherited: 0xb8)
struct UCamperHealthComponent : UActorComponent {
	struct FMulticastInlineDelegate OnHealedDelegate; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnInjuredBleedoutStarted; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnInjuredBleedoutEnded; // 0xd8(0x10)
	struct FMulticastInlineDelegate OnInjuredBleedoutKO; // 0xe8(0x10)
	char pad_F8[0x30]; // 0xf8(0x30)
	struct FMulticastInlineDelegate OnDamageStateChanged; // 0x128(0x10)
	struct FMulticastInlineDelegate OnDamageStateChangedCosmetic; // 0x138(0x10)
	char pad_148[0x18]; // 0x148(0x18)
	struct FDBDTunableRowHandle _bleedoutBaseDuration; // 0x160(0x28)
	struct FTagStateBool _inInjuredBleedOut; // 0x188(0x30)
	struct FDBDTimer _bleedOutTimer; // 0x1b8(0x28)
	bool _canBleedout; // 0x1e0(0x01)
	char pad_1E1[0x7]; // 0x1e1(0x07)
	struct TArray<struct UInteractionDefinition*> _pauseInjuredBleedoutTimerInteractions; // 0x1e8(0x10)
	int32_t _currentHealthStateCount; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)
	int32_t _numHealthyHeals; // 0x200(0x04)
	char pad_204[0x4]; // 0x204(0x04)
	struct FDBDTimer _dyingTimer; // 0x208(0x28)
	char pad_230[0x8]; // 0x230(0x08)
	struct UChargeableComponent* _healFromDyingChargeable; // 0x238(0x08)
	struct UChargeableComponent* _healFromInjuredChargeable; // 0x240(0x08)
	struct UChargeableComponent* _mendChargeable; // 0x248(0x08)
	struct ADBDPlayer* _injuredBleedoutInstigator; // 0x250(0x08)
	char pad_258[0x98]; // 0x258(0x98)

	void SetCanBleedout(bool canBleedout); // Function DeadByDaylight.CamperHealthComponent.SetCanBleedout // (Final|Native|Public|BlueprintCallable) // @ game+0x5491550
	void OnRep_InInjuredBleedOut(); // Function DeadByDaylight.CamperHealthComponent.OnRep_InInjuredBleedOut // (Final|Native|Private) // @ game+0x54912b0
	void OnImmobilizedStateChanged(enum class EImmobilizedState oldImmobilizeState, enum class EImmobilizedState newImmobilizeState); // Function DeadByDaylight.CamperHealthComponent.OnImmobilizedStateChanged // (Final|Native|Private) // @ game+0x54911e0
	void OnDamageStateChangedCosmetic__DelegateSignature(); // DelegateFunction DeadByDaylight.CamperHealthComponent.OnDamageStateChangedCosmetic__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void Multicast_SetHealthType(enum class EHealthType healthType); // Function DeadByDaylight.CamperHealthComponent.Multicast_SetHealthType // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5491010
	void Multicast_SetHealthStateFromDamageState(enum class ECamperDamageState damageState, bool FireScoreEvent); // Function DeadByDaylight.CamperHealthComponent.Multicast_SetHealthStateFromDamageState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5490f30
	void Multicast_SetDamageState(enum class ECamperDamageState damageState, bool FireScoreEvent, bool sacrificed); // Function DeadByDaylight.CamperHealthComponent.Multicast_SetDamageState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5490e10
	void Multicast_SetCurrentHealthStateCount(int32_t newHealth, bool FireScoreEvent); // Function DeadByDaylight.CamperHealthComponent.Multicast_SetCurrentHealthStateCount // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5490d40
	void Multicast_OnSurvivorGainedHealthStateByOthersEvents(bool healedFromKO, struct ADBDPlayer* healedSurvivor, struct TArray<struct ADBDPlayer*> Healers, struct TArray<bool> healedSurvivorFarEnoughAway); // Function DeadByDaylight.CamperHealthComponent.Multicast_OnSurvivorGainedHealthStateByOthersEvents // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5490bb0
	void Multicast_OnInjuredBleedoutKO(struct ADBDPlayer* injuredBleedoutInstigator); // Function DeadByDaylight.CamperHealthComponent.Multicast_OnInjuredBleedoutKO // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5490b20
	void Multicast_OnHealed(struct FCamperHealResult healResult); // Function DeadByDaylight.CamperHealthComponent.Multicast_OnHealed // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x5490a70
	bool IsKO(); // Function DeadByDaylight.CamperHealthComponent.IsKO // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490940
	bool IsInjuredBleedoutTimerExpired(); // Function DeadByDaylight.CamperHealthComponent.IsInjuredBleedoutTimerExpired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490910
	bool IsInjured(); // Function DeadByDaylight.CamperHealthComponent.IsInjured // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54908e0
	bool IsInInjuredBleedout(); // Function DeadByDaylight.CamperHealthComponent.IsInInjuredBleedout // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54908b0
	bool IsHealthy(); // Function DeadByDaylight.CamperHealthComponent.IsHealthy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490880
	bool IsDyingTimerExpired(); // Function DeadByDaylight.CamperHealthComponent.IsDyingTimerExpired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490850
	bool IsDead(); // Function DeadByDaylight.CamperHealthComponent.IsDead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490820
	void IncreaseHPSlotSize(float percent); // Function DeadByDaylight.CamperHealthComponent.IncreaseHPSlotSize // (Final|Native|Public|BlueprintCallable) // @ game+0x54906e0
	float GetPercentInjuredBleedoutTimer(); // Function DeadByDaylight.CamperHealthComponent.GetPercentInjuredBleedoutTimer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490620
	float GetPercentDyingTimer(); // Function DeadByDaylight.CamperHealthComponent.GetPercentDyingTimer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54905f0
	enum class ECamperDamageState GetDamageState(); // Function DeadByDaylight.CamperHealthComponent.GetDamageState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490590
	float GetCurrentTotalHealthBarPercent(); // Function DeadByDaylight.CamperHealthComponent.GetCurrentTotalHealthBarPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490560
	struct UChargeableComponent* GetCurrentHPSlot(); // Function DeadByDaylight.CamperHealthComponent.GetCurrentHPSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x5490530
	bool CanHealSelf(); // Function DeadByDaylight.CamperHealthComponent.CanHealSelf // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490350
	bool CanBeHealedFromInjured(); // Function DeadByDaylight.CamperHealthComponent.CanBeHealedFromInjured // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54902f0
	bool CanBeHealed(); // Function DeadByDaylight.CamperHealthComponent.CanBeHealed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54902c0
	bool CanBecomeHealthy(); // Function DeadByDaylight.CamperHealthComponent.CanBecomeHealthy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5490320
	void Authority_SetDamageState(enum class ECamperDamageState damageState, bool FireScoreEvent, bool sacrificed); // Function DeadByDaylight.CamperHealthComponent.Authority_SetDamageState // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5490020
	void Authority_OnSurvivorRemoved(struct ACamperPlayer* Survivor); // Function DeadByDaylight.CamperHealthComponent.Authority_OnSurvivorRemoved // (Final|Native|Private) // @ game+0x548ff70
	void Authority_OnMendChargeCompletionStateChanged(bool complete, struct TArray<struct AActor*>& instigators); // Function DeadByDaylight.CamperHealthComponent.Authority_OnMendChargeCompletionStateChanged // (Final|Native|Protected|HasOutParms) // @ game+0x548fe70
	void Authority_OnHealthBarCharged(bool complete, struct TArray<struct AActor*>& instigators); // Function DeadByDaylight.CamperHealthComponent.Authority_OnHealthBarCharged // (Final|Native|Public|HasOutParms) // @ game+0x548fd70
	void Authority_MendTryGrantScoresOnChargeApplied(float individualChargeAmount, float totalChargeAmount, struct AActor* chargeInstigator, bool wasCoop, float DeltaTime); // Function DeadByDaylight.CamperHealthComponent.Authority_MendTryGrantScoresOnChargeApplied // (Final|Native|Protected) // @ game+0x548fba0
	void Authority_HealTryGrantScoresOnChargeApplied(float individualChargeAmount, float totalChargeAmount, struct AActor* chargeInstigator, bool wasCoop, float DeltaTime); // Function DeadByDaylight.CamperHealthComponent.Authority_HealTryGrantScoresOnChargeApplied // (Final|Native|Protected) // @ game+0x548f9f0
	void Authority_EndInjuredBleedout(); // Function DeadByDaylight.CamperHealthComponent.Authority_EndInjuredBleedout // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x548f8a0
	void Authority_ApplyDoubleDamage(struct AActor* damageSource, struct ACharacter* damagePlayerOwner); // Function DeadByDaylight.CamperHealthComponent.Authority_ApplyDoubleDamage // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x548f7d0
	void Authority_ApplyDeepWound(struct AActor* damageSource, struct ACharacter* damagePlayerOwner); // Function DeadByDaylight.CamperHealthComponent.Authority_ApplyDeepWound // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x548f700
	void Authority_ApplyDamage(struct AActor* damageSource, struct ACharacter* damagePlayerOwner); // Function DeadByDaylight.CamperHealthComponent.Authority_ApplyDamage // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x548f630
};

// Class DeadByDaylight.PlayerInteractable
// Size: 0x370 (Inherited: 0x338)
struct APlayerInteractable : AInteractable {
	struct UPrimitiveComponent* _mainInteractionZone; // 0x338(0x08)
	struct UInteractor* _selfInteractionsInteractor; // 0x340(0x08)
	struct USceneComponent* _rootComponent; // 0x348(0x08)
	char pad_350[0x20]; // 0x350(0x20)

	void InitInteractable(struct ADBDPlayer* Player); // Function DeadByDaylight.PlayerInteractable.InitInteractable // (Native|Event|Protected|BlueprintEvent) // @ game+0x557c4e0
};

// Class DeadByDaylight.CamperInteractable
// Size: 0x460 (Inherited: 0x370)
struct ACamperInteractable : APlayerInteractable {
	char pad_370[0x8]; // 0x370(0x08)
	struct TArray<struct UInteractor*> HealingInteractors; // 0x378(0x10)
	struct TArray<struct UChargeableInteractionDefinition*> _healInteractions; // 0x388(0x10)
	struct UChargeableComponent* _killCharge; // 0x398(0x08)
	struct UChargeableComponent* _snapOutOfItCharge; // 0x3a0(0x08)
	struct UChargeableComponent* _wakeUpCharge; // 0x3a8(0x08)
	struct UChargeableComponent* _crowDismissCharge; // 0x3b0(0x08)
	struct UActivatorComponent* _activator; // 0x3b8(0x08)
	char pad_3C0[0x68]; // 0x3c0(0x68)
	struct UInteractor* _killInteractor; // 0x428(0x08)
	struct UBoxComponent* _killInteractionZone; // 0x430(0x08)
	struct USphereComponent* _killHealthyInteractionZone; // 0x438(0x08)
	struct UInteractor* _healingInteractor1; // 0x440(0x08)
	char pad_448[0x18]; // 0x448(0x18)

	void UpdateTargetHPSlot(); // Function DeadByDaylight.CamperInteractable.UpdateTargetHPSlot // (Final|Native|Private) // @ game+0x5497200
	void SetKillInteraction(struct UInteractionDefinition* killInteraction); // Function DeadByDaylight.CamperInteractable.SetKillInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x5497030
	void ServerMoveOut(); // Function DeadByDaylight.CamperInteractable.ServerMoveOut // (Final|Net|Native|Event|Private|NetServer|NetValidate) // @ game+0x5496d60
	struct UInteractor* GetSlasherInteractor(); // Function DeadByDaylight.CamperInteractable.GetSlasherInteractor // (Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	struct ACamperPlayer* GetOwningSurvivor(); // Function DeadByDaylight.CamperInteractable.GetOwningSurvivor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495700
};

// Class DeadByDaylight.CamperMaterialHelperController
// Size: 0x140 (Inherited: 0xb8)
struct UCamperMaterialHelperController : UActorComponent {
	char pad_B8[0x78]; // 0xb8(0x78)
	struct TArray<struct FManagedMaterialGroup> _managedGroups; // 0x130(0x10)

	void RemoveGroupsBySource(struct UObject* Source); // Function DeadByDaylight.CamperMaterialHelperController.RemoveGroupsBySource // (Final|Native|Public|BlueprintCallable) // @ game+0x5496bf0
	void AddManagedWithCondition(struct UObject* Source, struct FString Group, struct FDelegate& Condition); // Function DeadByDaylight.CamperMaterialHelperController.AddManagedWithCondition // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x5494960
	void AddManagedGroup(struct UObject* Source, struct FString Group); // Function DeadByDaylight.CamperMaterialHelperController.AddManagedGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x5494880
};

// Class DeadByDaylight.DBDCharacterMovementComponent
// Size: 0xe30 (Inherited: 0xb10)
struct UDBDCharacterMovementComponent : UCharacterMovementComponent {
	char pad_B10[0x18]; // 0xb10(0x18)
	float ProjectedWallSlidingFactor; // 0xb28(0x04)
	float RandomInputFrontMultiplier; // 0xb2c(0x04)
	float RandomInputSideMultiplier; // 0xb30(0x04)
	float RandomInputBackMultiplier; // 0xb34(0x04)
	char pad_B38[0x90]; // 0xb38(0x90)
	bool _forceUseDropStaggerFix; // 0xbc8(0x01)
	char pad_BC9[0x1f]; // 0xbc9(0x1f)
	struct TArray<struct UCurveFloat*> _maxSpeedMultiplierCurvesToRemoveOnTheServer; // 0xbe8(0x10)
	char pad_BF8[0x1a0]; // 0xbf8(0x1a0)
	struct UBaseCharacterVelocityAdditiveStrategy* _velocityAdditiveStrategy; // 0xd98(0x08)
	struct UBaseInputAccelerationConstraintStrategy* _inputAccelerationConstraintStrategy; // 0xda0(0x08)
	struct UBaseCharacterRotationStrategy* _rotationStrategy; // 0xda8(0x08)
	struct AActor* _lookAtTarget; // 0xdb0(0x08)
	char pad_DB8[0x78]; // 0xdb8(0x78)

	void Server_StopMontage(float Timestamp, struct FMontageStopDefinition MontageStopDefinition); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_StopMontage // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c94a0
	void Server_StartSnapping(float Timestamp, struct FSnappingData Data, int32_t snappingCallCount); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_StartSnapping // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c9340
	void Server_SetStopSnapping(float Timestamp, bool snapToFinalDestination); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_SetStopSnapping // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c9260
	void Server_SetMaxSpeedOverride(float Timestamp, float value, bool isSet, int32_t maxSpeedOverrideCallCount); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_SetMaxSpeedOverride // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c90f0
	void Server_SetMaxSpeedMultiplierScalar(float Timestamp, float value); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_SetMaxSpeedMultiplierScalar // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c9020
	void Server_SetMaxAcceleration(float Timestamp, float value); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_SetMaxAcceleration // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c8f50
	void Server_SetIgnorePawnCollisionOverride(float Timestamp, bool isIgnoringPawnCollision, int32_t ignoringCollisionCallCount); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_SetIgnorePawnCollisionOverride // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c8e30
	void Server_SetGroundFriction(float Timestamp, float value); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_SetGroundFriction // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c8d60
	void Server_SetAdditiveMaxSpeedScalar(float Timestamp, float value); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_SetAdditiveMaxSpeedScalar // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c8c90
	void Server_ReplicateControlRotation(char ClientRoll, uint32_t View); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_ReplicateControlRotation // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x54c8bc0
	void Server_RemoveMaxSpeedMovementCurve(float Timestamp, uint32_t curveNetId, enum class EMovementCurveType movementCurveType); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_RemoveMaxSpeedMovementCurve // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c8ab0
	void Server_PlayMontage(float Timestamp, struct FMontagePlaybackDefinition MontagePlaybackDefinition); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_PlayMontage // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c89a0
	void Server_Launch(float Timestamp, struct FVector LaunchVelocity, int32_t launchCallCount); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_Launch // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults) // @ game+0x54c8870
	void Server_AddMaxSpeedMovementCurve(float Timestamp, uint32_t curveNetId, float Duration, float startOffset, enum class EMovementCurveType movementCurveType); // Function DeadByDaylight.DBDCharacterMovementComponent.Server_AddMaxSpeedMovementCurve // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54c86d0
	void OnPreMontageStop(struct FMontageStopDefinition montageDefinition, struct UAnimMontage* Montage); // Function DeadByDaylight.DBDCharacterMovementComponent.OnPreMontageStop // (Final|Native|Private) // @ game+0x54c8580
	void OnMontageStarted(struct FMontagePlaybackDefinition& montageDefinition, struct UAnimMontage* Montage); // Function DeadByDaylight.DBDCharacterMovementComponent.OnMontageStarted // (Final|Native|Private|HasOutParms) // @ game+0x54c8480
	void DBD_SimulateHack_LocalSurvivorMaxSpeedMultiplierUsingServerRPC(float maxSpeedMultiplier); // Function DeadByDaylight.DBDCharacterMovementComponent.DBD_SimulateHack_LocalSurvivorMaxSpeedMultiplierUsingServerRPC // (Final|Exec|Native|Private) // @ game+0x46a2490
	void DBD_SimulateHack_LocalLaunch(float xVelocity, float yVelocity, float zVelocity); // Function DeadByDaylight.DBDCharacterMovementComponent.DBD_SimulateHack_LocalLaunch // (Final|Exec|Native|Private) // @ game+0x54c7b10
	void Client_TeleportTo(struct FVector_NetQuantize100 Location, struct FYawAndPitchRotator_NetQuantize32 Rotation); // Function DeadByDaylight.DBDCharacterMovementComponent.Client_TeleportTo // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x54c7a20
	void Client_Stop(); // Function DeadByDaylight.DBDCharacterMovementComponent.Client_Stop // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x54c7a00
	void Client_PreventMovement(bool value); // Function DeadByDaylight.DBDCharacterMovementComponent.Client_PreventMovement // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x54c7970
};

// Class DeadByDaylight.CamperMovementComponent
// Size: 0xec0 (Inherited: 0xe30)
struct UCamperMovementComponent : UDBDCharacterMovementComponent {
	char pad_E30[0x18]; // 0xe30(0x18)
	float MaxCrawlSpeed; // 0xe48(0x04)
	float MaxRunSpeed; // 0xe4c(0x04)
	struct FRotator _defaultRotationRate; // 0xe50(0x0c)
	struct FRotator _rotationRateWhileCrawling; // 0xe5c(0x0c)
	struct UCurveFloat* _dropStaggerDuration; // 0xe68(0x08)
	struct UCurveFloat* _dropStaggerMaxSpeed; // 0xe70(0x08)
	char pad_E78[0x48]; // 0xe78(0x48)

	void OnCamperHealthStateChanged(enum class ECamperDamageState oldDamageState, enum class ECamperDamageState CurrentDamageState); // Function DeadByDaylight.CamperMovementComponent.OnCamperHealthStateChanged // (Final|Native|Public) // @ game+0x54962b0
	struct FRotator GetRotationRateWhileCrawling(); // Function DeadByDaylight.CamperMovementComponent.GetRotationRateWhileCrawling // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495790
	float GetDropStaggerTimeLeft(); // Function DeadByDaylight.CamperMovementComponent.GetDropStaggerTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495300
	struct FRotator GetDefaultRotationRate(); // Function DeadByDaylight.CamperMovementComponent.GetDefaultRotationRate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54952c0
	void DBD_SurvivorMaxSpeedMultiplier(float maxSpeedMultiplier); // Function DeadByDaylight.CamperMovementComponent.DBD_SurvivorMaxSpeedMultiplier // (Final|Exec|Native|Private) // @ game+0x46a2490
	void DBD_SimulateHack_LocalSurvivorMaxSpeedMultiplier(float maxSpeedMultiplier); // Function DeadByDaylight.CamperMovementComponent.DBD_SimulateHack_LocalSurvivorMaxSpeedMultiplier // (Final|Exec|Native|Private) // @ game+0x46a2490
	void Client_Debug_SetSurvivorMaxSpeedMultiplier(float maxSpeedMultiplier); // Function DeadByDaylight.CamperMovementComponent.Client_Debug_SetSurvivorMaxSpeedMultiplier // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x5494cf0
};

// Class DeadByDaylight.DBDBasePlayer
// Size: 0x580 (Inherited: 0x4d0)
struct ADBDBasePlayer : ACharacter {
	struct FMulticastInlineDelegate OnCustomizationChanged; // 0x4d0(0x10)
	struct FGameplayTagContainer _semanticGameplayTags; // 0x4e0(0x20)
	struct UBaseGroundDetectorComponent* _leftFootGroundDetector; // 0x500(0x08)
	struct UBaseGroundDetectorComponent* _rightFootGroundDetector; // 0x508(0x08)
	struct UBaseGroundDetectorComponent* _leftFrontFootGroundDetector; // 0x510(0x08)
	struct UBaseGroundDetectorComponent* _rightFrontFootGroundDetector; // 0x518(0x08)
	char pad_520[0x8]; // 0x520(0x08)
	int32_t _characterIndex; // 0x528(0x04)
	char pad_52C[0x54]; // 0x52c(0x54)

	bool TeleportWithClothHandling(struct FVector& Location, struct FRotator& Rotation, bool checkCollisions); // Function DeadByDaylight.DBDBasePlayer.TeleportWithClothHandling // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x54c96e0
	void Multicast_SwapCosmetics(struct FName cosmeticId); // Function DeadByDaylight.DBDBasePlayer.Multicast_SwapCosmetics // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x54c83d0
	bool GetShowBlindDebugInfo(); // Function DeadByDaylight.DBDBasePlayer.GetShowBlindDebugInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c81b0
	struct FGameplayTagContainer GetSemanticTag(); // Function DeadByDaylight.DBDBasePlayer.GetSemanticTag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c8180
	enum class EPhysicalSurface GetRightFrontFootSurfaceType(); // Function DeadByDaylight.DBDBasePlayer.GetRightFrontFootSurfaceType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c8140
	struct FString GetRightFrontFootAudioSurfaceName(); // Function DeadByDaylight.DBDBasePlayer.GetRightFrontFootAudioSurfaceName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c80c0
	enum class EPhysicalSurface GetRightFootSurfaceType(); // Function DeadByDaylight.DBDBasePlayer.GetRightFootSurfaceType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c8080
	struct FString GetRightFootAudioSurfaceName(); // Function DeadByDaylight.DBDBasePlayer.GetRightFootAudioSurfaceName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c8000
	enum class EPhysicalSurface GetLeftFrontFootSurfaceType(); // Function DeadByDaylight.DBDBasePlayer.GetLeftFrontFootSurfaceType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c7fc0
	struct FString GetLeftFrontFootAudioSurfaceName(); // Function DeadByDaylight.DBDBasePlayer.GetLeftFrontFootAudioSurfaceName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c7f40
	enum class EPhysicalSurface GetLeftFootSurfaceType(); // Function DeadByDaylight.DBDBasePlayer.GetLeftFootSurfaceType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c7f00
	struct FString GetLeftFootAudioSurfaceName(); // Function DeadByDaylight.DBDBasePlayer.GetLeftFootAudioSurfaceName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c7e80
	struct UCustomizedSkeletalMesh* GetCustomizedSkeletalMesh(); // Function DeadByDaylight.DBDBasePlayer.GetCustomizedSkeletalMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54c7e20
	struct UCustomizedAudioComponent* GetCustomizedAudio(); // Function DeadByDaylight.DBDBasePlayer.GetCustomizedAudio // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c7df0
	struct FName GetCharacterName(); // Function DeadByDaylight.DBDBasePlayer.GetCharacterName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c7c90
	int32_t GetCharacterIndex(); // Function DeadByDaylight.DBDBasePlayer.GetCharacterIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c7c60
	struct UAkComponent* GetAudioComponent(); // Function DeadByDaylight.DBDBasePlayer.GetAudioComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c7c30
	void DBD_SwapCosmetics(struct FName cosmeticId); // Function DeadByDaylight.DBDBasePlayer.DBD_SwapCosmetics // (Final|Exec|Native|Protected) // @ game+0x54b5290
};

// Class DeadByDaylight.DBDPlayer
// Size: 0x11a0 (Inherited: 0x580)
struct ADBDPlayer : ADBDBasePlayer {
	char pad_580[0x90]; // 0x580(0x90)
	bool AllowInterrupting; // 0x610(0x01)
	char pad_611[0x3]; // 0x611(0x03)
	float MinFallHeight; // 0x614(0x04)
	char pad_618[0x1]; // 0x618(0x01)
	bool IsInInteractionUpdate; // 0x619(0x01)
	bool IsInteractionChargeCompleted; // 0x61a(0x01)
	char pad_61B[0x1]; // 0x61b(0x01)
	float PitchLimitLower; // 0x61c(0x04)
	float PitchLimitUpper; // 0x620(0x04)
	struct FVector StrafingOffset; // 0x624(0x0c)
	float PelvisHeight; // 0x630(0x04)
	float PelvisHeightForPounceOnStandingCamper; // 0x634(0x04)
	float PelvisHeightForPounceOnCrouchingCamper; // 0x638(0x04)
	char pad_63C[0x34]; // 0x63c(0x34)
	struct FMulticastInlineDelegate Authority_OnAttackedDelegate; // 0x670(0x10)
	struct FMulticastInlineDelegate OnDamageTargetDelegate; // 0x680(0x10)
	struct FMulticastInlineDelegate OnSensed; // 0x690(0x10)
	struct FMulticastInlineDelegate OnAnimNotify_Pickup; // 0x6a0(0x10)
	struct FMulticastInlineDelegate OnAnimNotify_Release; // 0x6b0(0x10)
	struct FMulticastInlineDelegate Authority_OnSecondaryActionInput; // 0x6c0(0x10)
	struct FMulticastInlineDelegate OnFirstPersonModeChanged; // 0x6d0(0x10)
	struct FMulticastInlineDelegate OnDreamworldComponentSet; // 0x6e0(0x10)
	struct FMulticastInlineDelegate OnForwardInputLockedChanged; // 0x6f0(0x10)
	struct USpringArmComponent* CameraBoom; // 0x700(0x08)
	char pad_708[0x30]; // 0x708(0x30)
	bool ForceSkillChecks; // 0x738(0x01)
	char pad_739[0x7]; // 0x739(0x07)
	struct FTransform IKLeftHandTransform; // 0x740(0x30)
	struct FTransform IKRightHandTransform; // 0x770(0x30)
	float CameraResetSpeed; // 0x7a0(0x04)
	char pad_7A4[0x4]; // 0x7a4(0x04)
	float AverageSpeedBufferTime; // 0x7a8(0x04)
	float AlmostCurrentSpeedBufferTime; // 0x7ac(0x04)
	struct UCurveFloat* GamepadYawCurve; // 0x7b0(0x08)
	struct UCurveFloat* GamepadPitchCurve; // 0x7b8(0x08)
	struct UCurveFloat* GamepadSettingToYawRateCurve; // 0x7c0(0x08)
	struct UCurveFloat* GamepadSettingToPitchRateCurve; // 0x7c8(0x08)
	struct UCurveFloat* JoyconSettingToYawRateCurve; // 0x7d0(0x08)
	struct UCurveFloat* JoyconSettingToPitchRateCurve; // 0x7d8(0x08)
	struct FMulticastInlineDelegate OnIsCrouchedChanged; // 0x7e0(0x10)
	struct FMulticastInlineDelegate OnRunningAndMovingChanged; // 0x7f0(0x10)
	char pad_800[0x20]; // 0x800(0x20)
	struct FMulticastInlineDelegate OnLocallyObservedChangedForPlayer; // 0x820(0x10)
	struct UCameraComponent* Camera; // 0x830(0x08)
	struct UMaterialHelper* MaterialHelper; // 0x838(0x08)
	char pad_840[0x30]; // 0x840(0x30)
	struct APlayerInteractable* Interactable; // 0x870(0x08)
	char pad_878[0x18]; // 0x878(0x18)
	struct UCharacterInventoryComponent* _characterInventoryComponent; // 0x890(0x08)
	struct FName CarryJointName; // 0x898(0x0c)
	float _pitchOffsetForInteractionPriority; // 0x8a4(0x04)
	struct UBoxOcclusionQueryComponent* _renderedPixelCounter; // 0x8a8(0x08)
	struct UBoxComponent* _standingOcclusionBox; // 0x8b0(0x08)
	struct UBoxComponent* _crouchingOcclusionBox; // 0x8b8(0x08)
	struct UActivatorComponent* _activator; // 0x8c0(0x08)
	bool IsInteracting; // 0x8c8(0x01)
	char pad_8C9[0x3]; // 0x8c9(0x03)
	float _aiCanBeSeenTestCrouchScale; // 0x8cc(0x04)
	float _aiCanBeSeenTestRightOffset; // 0x8d0(0x04)
	float _aiCanBeSeenTestHighOffset; // 0x8d4(0x04)
	float _aiCanBeSeenTestLowOffset; // 0x8d8(0x04)
	float ClearPathTestRadiusMultiplier; // 0x8dc(0x04)
	float ClearPathTestHeightMultiplier; // 0x8e0(0x04)
	float LocationClearTestRadiusMultiplier; // 0x8e4(0x04)
	float LocationClearTestHeightMultiplier; // 0x8e8(0x04)
	float ClearPathTestStepHeight; // 0x8ec(0x04)
	float MouseTurnSpeedMultiplier; // 0x8f0(0x04)
	float MouseLookUpSpeedMultiplier; // 0x8f4(0x04)
	struct USoundCue* DeathSound; // 0x8f8(0x08)
	enum class ECamperState CurrentCamperState; // 0x900(0x01)
	char pad_901[0x3]; // 0x901(0x03)
	struct FName CollectableAttachPoint; // 0x904(0x0c)
	struct UStateMachine* _stateMachine; // 0x910(0x08)
	struct UPlayerInteractionHandler* _interactionHandler; // 0x918(0x08)
	struct UMontagePlayer* _montagePlayer; // 0x920(0x08)
	struct UPerkManager* _perkManager; // 0x928(0x08)
	struct UDBDPlayerData* _playerData; // 0x930(0x08)
	struct APlayerInteractable* _interactable; // 0x938(0x08)
	char pad_940[0x50]; // 0x940(0x50)
	struct ADBDPlayer* _carryingPlayer; // 0x990(0x08)
	char pad_998[0x8]; // 0x998(0x08)
	struct ADBDPlayer* _interactingPlayer; // 0x9a0(0x08)
	char pad_9A8[0x30]; // 0x9a8(0x30)
	enum class EAttackSubstate _nextAttackSubstate; // 0x9d8(0x01)
	char pad_9D9[0x7]; // 0x9d9(0x07)
	struct TArray<struct ADBDPlayer*> _hitTargets; // 0x9e0(0x10)
	struct UCharacterDreamworldComponent* _dreamworldComponent; // 0x9f0(0x08)
	struct UCharacterChaseVisualComponent* _characterChaseVisualComponent; // 0x9f8(0x08)
	struct UCameraHandlerComponent* _cameraHandlerComponent; // 0xa00(0x08)
	struct UReversibleActionSystemComponent* _reversibleActionSystemComponent; // 0xa08(0x08)
	struct USceneComponent* _itemDropOffPosition; // 0xa10(0x08)
	struct UAIPerceptionStimuliSourceComponent* _perceptionStimuliComponent; // 0xa18(0x08)
	struct TArray<struct AActor*> _ignoreActors; // 0xa20(0x10)
	struct TArray<struct FEffectCameraTypeSettings> EffectCameraTypeSettings; // 0xa30(0x10)
	struct TMap<struct USceneComponent*, bool> _detectionZoneEnabledMap; // 0xa40(0x50)
	char pad_A90[0x30]; // 0xa90(0x30)
	struct UChargeableComponent* _blindingChargeableComponent; // 0xac0(0x08)
	char pad_AC8[0x90]; // 0xac8(0x90)
	bool _shouldUpdateStateMachineDriverOnPossessed; // 0xb58(0x01)
	char pad_B59[0x7]; // 0xb59(0x07)
	struct UBlindableComponent* _blindableComponent; // 0xb60(0x08)
	char pad_B68[0x4]; // 0xb68(0x04)
	float _tutorialChargeableInteractionMultiplier; // 0xb6c(0x04)
	char pad_B70[0x8]; // 0xb70(0x08)
	struct UPollableEventListener* _eventListener; // 0xb78(0x08)
	char pad_B80[0x8]; // 0xb80(0x08)
	struct UChaseComponent* _chaseComponent; // 0xb88(0x08)
	struct UZoneDetectorComponent* _meatHookZoneDetector; // 0xb90(0x08)
	struct UZoneDetectorComponent* _basementZoneDetector; // 0xb98(0x08)
	char pad_BA0[0x40]; // 0xba0(0x40)
	struct FGameplayTagContainer _animGameplayTags; // 0xbe0(0x20)
	char pad_C00[0x58]; // 0xc00(0x58)
	struct UInteractionDefinition* _bookmarkedInteraction; // 0xc58(0x08)
	struct TMap<enum class EDetectionZone, struct UPrimitiveComponent*> _detectionZoneMap; // 0xc60(0x50)
	char pad_CB0[0x60]; // 0xcb0(0x60)
	struct UAuthoritativeMovementComponent* _authoritativeMovementComponent; // 0xd10(0x08)
	char pad_D18[0x308]; // 0xd18(0x308)
	float _screenAspectRatio; // 0x1020(0x04)
	char pad_1024[0x1c]; // 0x1024(0x1c)
	struct UGameplayTagContainerComponent* _objectState; // 0x1040(0x08)
	struct UAudioFXComponent* _audioFXComponent; // 0x1048(0x08)
	struct UPlayerPerspectiveComponent* _playerPerspectiveComponent; // 0x1050(0x08)
	char pad_1058[0x8]; // 0x1058(0x08)
	struct UCharacterSightComponent* _characterSightComponent; // 0x1060(0x08)
	char pad_1068[0x8]; // 0x1068(0x08)
	struct UCharacterSightableComponent* _characterSightableComponent; // 0x1070(0x08)
	char pad_1078[0x10]; // 0x1078(0x10)
	struct UNavigationStateComponent* _navigationStateComponent; // 0x1088(0x08)
	struct UInteractionDetectorComponent* _interactionDetectorComponent; // 0x1090(0x08)
	struct UPrimitivesRegistererComponent* _clippablePrimitivesRegistererComponent; // 0x1098(0x08)
	struct UClippableProviderComponent* _clippableProviderComponent; // 0x10a0(0x08)
	struct UDynamicCapsuleResizerComponent* _dynCapsuleResizer; // 0x10a8(0x08)
	struct UPlayerGameRelevancyComponent* _playerGameRelevancyComponent; // 0x10b0(0x08)
	struct UContextualQuestComponent* _contextualQuestComponent; // 0x10b8(0x08)
	char pad_10C0[0x20]; // 0x10c0(0x20)
	struct UActorComponent* _questEventHandler; // 0x10e0(0x08)
	struct UChargeableProgressProviderComponent* _presentationChargeableProgressComponent; // 0x10e8(0x08)
	char pad_10F0[0x18]; // 0x10f0(0x18)
	struct UCurveFloat* _currentGamepadYawCurve; // 0x1108(0x08)
	struct UCurveFloat* _currentGamepadPitchCurve; // 0x1110(0x08)
	struct ADBDPlayerState* _associatedPlayerStateCache; // 0x1118(0x08)
	struct FOnMovementCacheStruct _onMovementCacheStruct; // 0x1120(0x0c)
	char pad_112C[0x4]; // 0x112c(0x04)
	struct UOtherCharactersVerticalCollisionsHandler* _otherCharactersVerticalCollisionsHandler; // 0x1130(0x08)
	char pad_1138[0x68]; // 0x1138(0x68)

	void UpdateLoadoutFromInventory(); // Function DeadByDaylight.DBDPlayer.UpdateLoadoutFromInventory // (Final|Native|Public|Const) // @ game+0x54f4da0
	bool TryInteractionType(enum class EInputInteractionType interactionInputType, struct ADBDPlayer* requester, bool usingInputPersistence, bool force); // Function DeadByDaylight.DBDPlayer.TryInteractionType // (Final|Native|Public|BlueprintCallable) // @ game+0x54f4c20
	bool TryInteraction(struct UInteractionDefinition* Interaction, struct ADBDPlayer* requester, bool force, bool usingInputPersistence); // Function DeadByDaylight.DBDPlayer.TryInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x54f4aa0
	bool TryFireScoreEvent(enum class EDBDScoreTypes scoreType, float PercentToAward); // Function DeadByDaylight.DBDPlayer.TryFireScoreEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x54f49c0
	void TriggerAnimNotify(enum class EAnimNotifyType animNotifyType); // Function DeadByDaylight.DBDPlayer.TriggerAnimNotify // (Final|Native|Public|BlueprintCallable) // @ game+0x54f4940
	void StopMontage(); // Function DeadByDaylight.DBDPlayer.StopMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x54f4920
	void SnapCharacter(bool snapPosition, struct FVector position, float stopSnapDistance, bool snapRotation, struct FRotator Rotation, float Time, bool useZCoord, bool sweepOnFinalSnap, bool snapRoll); // Function DeadByDaylight.DBDPlayer.SnapCharacter // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x54f4640
	bool ShouldPlayCarryAnim(); // Function DeadByDaylight.DBDPlayer.ShouldPlayCarryAnim // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f4610
	bool ShouldFall(); // Function DeadByDaylight.DBDPlayer.ShouldFall // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f45e0
	void SetShouldPlayCarryAnim(bool ShouldPlayCarryAnim); // Function DeadByDaylight.DBDPlayer.SetShouldPlayCarryAnim // (Final|Native|Public|BlueprintCallable) // @ game+0x54f4550
	void SetReverseMontage(bool Reverse); // Function DeadByDaylight.DBDPlayer.SetReverseMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x54f44c0
	void SetQuestEventHandlerComponent(struct UActorComponent* Component); // Function DeadByDaylight.DBDPlayer.SetQuestEventHandlerComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x54f4430
	void SetItemUseAsToggle(bool value); // Function DeadByDaylight.DBDPlayer.SetItemUseAsToggle // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54f43a0
	void SetForceDisableSkillChecks(bool IsEnabled); // Function DeadByDaylight.DBDPlayer.SetForceDisableSkillChecks // (Final|Native|Public|BlueprintCallable) // @ game+0x54f4310
	void SetFirstPersonVfxsVisibility(bool isFirstPerson); // Function DeadByDaylight.DBDPlayer.SetFirstPersonVfxsVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x54f4280
	void SetFirstPersonModelEnabled(bool Enabled, bool force); // Function DeadByDaylight.DBDPlayer.SetFirstPersonModelEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x54f41b0
	void SetFeetOnGround(bool feetOnGround); // Function DeadByDaylight.DBDPlayer.SetFeetOnGround // (Final|Native|Public|BlueprintCallable) // @ game+0x54f4120
	void SetDetectionZoneEnabled(enum class EDetectionZone detectionZoneID, bool Enabled); // Function DeadByDaylight.DBDPlayer.SetDetectionZoneEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x54f4050
	void SetAnimationCrouchState(bool crouched); // Function DeadByDaylight.DBDPlayer.SetAnimationCrouchState // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetAllowNavigation(bool enable); // Function DeadByDaylight.DBDPlayer.SetAllowNavigation // (Final|Native|Public|BlueprintCallable) // @ game+0x54f3fc0
	void SetAllDetectionZonesEnabled(bool Enabled); // Function DeadByDaylight.DBDPlayer.SetAllDetectionZonesEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x54f3f30
	void Server_UpdateScreenAspectRatio(float value); // Function DeadByDaylight.DBDPlayer.Server_UpdateScreenAspectRatio // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54f3ea0
	void Server_SendSecondaryActionPressed(bool fromCancelRequest); // Function DeadByDaylight.DBDPlayer.Server_SendSecondaryActionPressed // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54f3e10
	void Server_SendItemUseInput(bool Pressed, bool requestItemUse); // Function DeadByDaylight.DBDPlayer.Server_SendItemUseInput // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x54f3d30
	void Server_SendItemDropInput(bool Pressed); // Function DeadByDaylight.DBDPlayer.Server_SendItemDropInput // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x54f3ca0
	void Server_SendInteractionInput(bool Pressed); // Function DeadByDaylight.DBDPlayer.Server_SendInteractionInput // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54f3c10
	void Server_SendFastInteractionInput(bool Pressed); // Function DeadByDaylight.DBDPlayer.Server_SendFastInteractionInput // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54f3b80
	void Server_SendEventAbilityInput(bool Pressed); // Function DeadByDaylight.DBDPlayer.Server_SendEventAbilityInput // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54f3af0
	void Server_SendAbilityTwoInput(bool Pressed); // Function DeadByDaylight.DBDPlayer.Server_SendAbilityTwoInput // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54f3a60
	void Server_SendAbilityInput(bool Pressed); // Function DeadByDaylight.DBDPlayer.Server_SendAbilityInput // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54f39d0
	void Server_GameTimeSync(); // Function DeadByDaylight.DBDPlayer.Server_GameTimeSync // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x54f39b0
	void Server_DebugSetCustomization(struct FEquippedPlayerCustomization Customization); // Function DeadByDaylight.DBDPlayer.Server_DebugSetCustomization // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54f3900
	void Server_Broadcast_DebugPlayMontage(struct FAnimationMontageDescriptor animMontageID, float PlayRate); // Function DeadByDaylight.DBDPlayer.Server_Broadcast_DebugPlayMontage // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x54f37c0
	void ResetPitchScale(float adjustTime); // Function DeadByDaylight.DBDPlayer.ResetPitchScale // (Final|Native|Public|BlueprintCallable) // @ game+0x54f3740
	void ResetCamera(); // Function DeadByDaylight.DBDPlayer.ResetCamera // (Native|Public|BlueprintCallable) // @ game+0x54f3720
	void RemoveStatusEffect(struct UStatusEffect* StatusEffect); // Function DeadByDaylight.DBDPlayer.RemoveStatusEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x54f3690
	struct UAnimMontage* PlayMontage(struct FAnimationMontageDescriptor animMontageID, float PlayRate, bool isFollower); // Function DeadByDaylight.DBDPlayer.PlayMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x54f3500
	void OnRep_Interactable(); // Function DeadByDaylight.DBDPlayer.OnRep_Interactable // (Final|Native|Protected) // @ game+0x54f34e0
	void OnRep_DreamworldComponent(); // Function DeadByDaylight.DBDPlayer.OnRep_DreamworldComponent // (Final|Native|Protected) // @ game+0x54f34c0
	void OnPostProcessInput(); // Function DeadByDaylight.DBDPlayer.OnPostProcessInput // (Final|Native|Private) // @ game+0x54f34a0
	void OnPickupStart(struct ADBDPlayer* Target); // Function DeadByDaylight.DBDPlayer.OnPickupStart // (Native|Public|BlueprintCallable) // @ game+0x54f3410
	void OnPickupEnd(struct ADBDPlayer* Target); // Function DeadByDaylight.DBDPlayer.OnPickupEnd // (Native|Public|BlueprintCallable) // @ game+0x54f3380
	void OnLocallyObservedChanged(); // Function DeadByDaylight.DBDPlayer.OnLocallyObservedChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnLevelReadyToPlay(); // Function DeadByDaylight.DBDPlayer.OnLevelReadyToPlay // (Native|Event|Public|BlueprintEvent) // @ game+0x54f3360
	void OnIsCrouchedChanged__DelegateSignature(bool isCrouched); // DelegateFunction DeadByDaylight.DBDPlayer.OnIsCrouchedChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnIntroCompletedNative(); // Function DeadByDaylight.DBDPlayer.OnIntroCompletedNative // (Native|Protected) // @ game+0x54f3340
	void OnIntroCompleted(); // Function DeadByDaylight.DBDPlayer.OnIntroCompleted // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnInterruptedStart(); // Function DeadByDaylight.DBDPlayer.OnInterruptedStart // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnHudVisibilityChangedNative(bool IsVisible); // Function DeadByDaylight.DBDPlayer.OnHudVisibilityChangedNative // (Native|Protected) // @ game+0x54f32b0
	void OnHudVisibilityChanged(bool IsVisible); // Function DeadByDaylight.DBDPlayer.OnHudVisibilityChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	struct FString OnGetCharacterName(); // Function DeadByDaylight.DBDPlayer.OnGetCharacterName // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x54f3230
	void OnEscapeDoorActivated(); // Function DeadByDaylight.DBDPlayer.OnEscapeDoorActivated // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnCurrentMontageComplete(struct UAnimMontage* MontageAsset, bool interrupted); // Function DeadByDaylight.DBDPlayer.OnCurrentMontageComplete // (Final|Native|Private) // @ game+0x54f3160
	void OnCurrentMontageBlendingOut(struct UAnimMontage* MontageAsset, bool interrupted); // Function DeadByDaylight.DBDPlayer.OnCurrentMontageBlendingOut // (Final|Native|Private) // @ game+0x54f3090
	void OnControllerChanged(struct APawn* Pawn, struct AController* OldController, struct AController* NewController); // Function DeadByDaylight.DBDPlayer.OnControllerChanged // (Final|Native|Private) // @ game+0x54f2f80
	void OnClientRestart(); // Function DeadByDaylight.DBDPlayer.OnClientRestart // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnBlindChargeEmptied(); // Function DeadByDaylight.DBDPlayer.OnBlindChargeEmptied // (Native|Protected) // @ game+0x54f2f60
	void OnAnimInstanceChanged(); // Function DeadByDaylight.DBDPlayer.OnAnimInstanceChanged // (Final|Native|Private) // @ game+0x54f2f40
	void OnAllPlayerLoaded(); // Function DeadByDaylight.DBDPlayer.OnAllPlayerLoaded // (Final|Native|Public) // @ game+0x54f2f20
	void Multicast_SetRunVaultEnabled(bool Enabled); // Function DeadByDaylight.DBDPlayer.Multicast_SetRunVaultEnabled // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f2e90
	void Multicast_SetReverseTraverseEnabled(bool Enabled); // Function DeadByDaylight.DBDPlayer.Multicast_SetReverseTraverseEnabled // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f2e00
	void Multicast_SetInteractingPlayer(struct ADBDPlayer* interactingPlayer); // Function DeadByDaylight.DBDPlayer.Multicast_SetInteractingPlayer // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f2d70
	void Multicast_SetForceAuthoritativeMovement(bool value); // Function DeadByDaylight.DBDPlayer.Multicast_SetForceAuthoritativeMovement // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54f2ce0
	void Multicast_SetEnableCapsuleDynamicResize(bool Enabled); // Function DeadByDaylight.DBDPlayer.Multicast_SetEnableCapsuleDynamicResize // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f2c50
	void Multicast_SetDebugSnapPoint(bool Enabled); // Function DeadByDaylight.DBDPlayer.Multicast_SetDebugSnapPoint // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f2bc0
	void Multicast_SetDebugPrintAvailableInteractions(bool Enabled); // Function DeadByDaylight.DBDPlayer.Multicast_SetDebugPrintAvailableInteractions // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f2b30
	void Multicast_SetDebugCarry(bool Enabled); // Function DeadByDaylight.DBDPlayer.Multicast_SetDebugCarry // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f2aa0
	void Multicast_SetCustomization(struct FEquippedPlayerCustomization Customization); // Function DeadByDaylight.DBDPlayer.Multicast_SetCustomization // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x54f29f0
	void Multicast_SetContinuousPrintDebug(bool Enabled); // Function DeadByDaylight.DBDPlayer.Multicast_SetContinuousPrintDebug // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f2960
	void Multicast_SetAuthoritativeMovement(bool Enabled); // Function DeadByDaylight.DBDPlayer.Multicast_SetAuthoritativeMovement // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f28d0
	void Multicast_ServerResetMeshRelativeOffSet(); // Function DeadByDaylight.DBDPlayer.Multicast_ServerResetMeshRelativeOffSet // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f28b0
	void Multicast_ReplicateController(struct AController* NewController); // Function DeadByDaylight.DBDPlayer.Multicast_ReplicateController // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x54f2820
	void Multicast_LeaveGame(struct FGuid uniqueLeavingPlayerId); // Function DeadByDaylight.DBDPlayer.Multicast_LeaveGame // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x54f2780
	void Multicast_Debug_SetMaxWalkSpeed(float MaxWalkSpeed); // Function DeadByDaylight.DBDPlayer.Multicast_Debug_SetMaxWalkSpeed // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54f26f0
	void Multicast_ConfirmItemDrop(bool Pressed); // Function DeadByDaylight.DBDPlayer.Multicast_ConfirmItemDrop // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x54f2660
	void Multicast_Broadcast_DebugPlayMontage(struct FAnimationMontageDescriptor animMontageID, float PlayRate); // Function DeadByDaylight.DBDPlayer.Multicast_Broadcast_DebugPlayMontage // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x54f2520
	void Local_NotifyMatchEnded(); // Function DeadByDaylight.DBDPlayer.Local_NotifyMatchEnded // (Native|Event|Public|BlueprintEvent) // @ game+0x54f2500
	bool Local_IsInteractionInputPressed(enum class EInputInteractionType interactionType); // Function DeadByDaylight.DBDPlayer.Local_IsInteractionInputPressed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f20d0
	bool K2_SetActorLocationByBottomCapsule(struct FVector NewLocation, bool bSweep, struct FHitResult& SweepHitResult); // Function DeadByDaylight.DBDPlayer.K2_SetActorLocationByBottomCapsule // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x54f2380
	void ItemUseReleased(); // Function DeadByDaylight.DBDPlayer.ItemUseReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x54f2360
	void ItemUsePressed(); // Function DeadByDaylight.DBDPlayer.ItemUsePressed // (Final|Native|Public|BlueprintCallable) // @ game+0x54f2340
	bool IsRunning(); // Function DeadByDaylight.DBDPlayer.IsRunning // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f2310
	bool IsPlayingMontage(struct FAnimationMontageDescriptor animMontageID); // Function DeadByDaylight.DBDPlayer.IsPlayingMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f21f0
	bool IsPlayingAnyMontage(); // Function DeadByDaylight.DBDPlayer.IsPlayingAnyMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f21c0
	bool IsMoving(); // Function DeadByDaylight.DBDPlayer.IsMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f2190
	bool IsLocallyObserved(); // Function DeadByDaylight.DBDPlayer.IsLocallyObserved // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f2160
	bool IsInTerrorRadius(); // Function DeadByDaylight.DBDPlayer.IsInTerrorRadius // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f2040
	bool IsInteractionInputPressed(enum class EInputInteractionType interactionType); // Function DeadByDaylight.DBDPlayer.IsInteractionInputPressed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f20d0
	bool IsInStalkMode(); // Function DeadByDaylight.DBDPlayer.IsInStalkMode // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f2010
	bool IsInsideCloset(); // Function DeadByDaylight.DBDPlayer.IsInsideCloset // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f20a0
	bool IsInParadise(); // Function DeadByDaylight.DBDPlayer.IsInParadise // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1fe0
	bool IsInMeathookZone(); // Function DeadByDaylight.DBDPlayer.IsInMeathookZone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1fb0
	bool IsIncapacitated(); // Function DeadByDaylight.DBDPlayer.IsIncapacitated // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f2070
	bool IsHeadHidden(); // Function DeadByDaylight.DBDPlayer.IsHeadHidden // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1f80
	bool IsExhausted(); // Function DeadByDaylight.DBDPlayer.IsExhausted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1f50
	bool IsCrouchPressed(); // Function DeadByDaylight.DBDPlayer.IsCrouchPressed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1ef0
	bool IsCrouching(); // Function DeadByDaylight.DBDPlayer.IsCrouching // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1f20
	bool IsCloaked(); // Function DeadByDaylight.DBDPlayer.IsCloaked // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1ec0
	bool IsBeingInterrupted(); // Function DeadByDaylight.DBDPlayer.IsBeingInterrupted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1e90
	bool IsAllowedNavigation(); // Function DeadByDaylight.DBDPlayer.IsAllowedNavigation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1e60
	void InteractionInputReleased(); // Function DeadByDaylight.DBDPlayer.InteractionInputReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x54f1e40
	void InteractionInputPressed(); // Function DeadByDaylight.DBDPlayer.InteractionInputPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x54f1e20
	bool HasMoveInput(); // Function DeadByDaylight.DBDPlayer.HasMoveInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1df0
	bool HasDamageImmunity(); // Function DeadByDaylight.DBDPlayer.HasDamageImmunity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1dc0
	bool HasClearPathToTargetWithIgnore(struct FVector targetPosition, struct TArray<struct AActor*>& ignoreActors); // Function DeadByDaylight.DBDPlayer.HasClearPathToTargetWithIgnore // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1cb0
	bool HasClearPathToTargetWithFilter(struct FVector targetPosition, struct AActor* ClassFilter, struct AActor* IgnoreActor); // Function DeadByDaylight.DBDPlayer.HasClearPathToTargetWithFilter // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1b90
	bool HasClearPathToTarget(struct FVector targetPosition); // Function DeadByDaylight.DBDPlayer.HasClearPathToTarget // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1af0
	float GetTunableValue(struct FName Key, float defaultValue, bool warnIfRowMissing); // Function DeadByDaylight.DBDPlayer.GetTunableValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f19c0
	struct ADBDPlayerController* GetSharedPlayerController(); // Function DeadByDaylight.DBDPlayer.GetSharedPlayerController // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x54f1990
	bool GetRunVaultEnabled(); // Function DeadByDaylight.DBDPlayer.GetRunVaultEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1970
	bool GetReverseTraverseEnabled(); // Function DeadByDaylight.DBDPlayer.GetReverseTraverseEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1950
	struct FRotator GetRepControlRotation(); // Function DeadByDaylight.DBDPlayer.GetRepControlRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1910
	enum class EPlayerTeam GetPlayerTeam(); // Function DeadByDaylight.DBDPlayer.GetPlayerTeam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f18e0
	enum class EPlayerRole GetPlayerRole(); // Function DeadByDaylight.DBDPlayer.GetPlayerRole // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f18b0
	struct UPlayerInteractionHandler* GetPlayerInteractionHandler(); // Function DeadByDaylight.DBDPlayer.GetPlayerInteractionHandler // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1880
	struct FRotator GetPlayerDirection(); // Function DeadByDaylight.DBDPlayer.GetPlayerDirection // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1840
	struct ADBDPlayerController* GetPlayerController(); // Function DeadByDaylight.DBDPlayer.GetPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1810
	struct UCameraComponent* GetPlayerCamera(); // Function DeadByDaylight.DBDPlayer.GetPlayerCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f17e0
	struct UPerkManager* GetPerkManager(); // Function DeadByDaylight.DBDPlayer.GetPerkManager // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f17a0
	float GetPercentMovementSpeed(); // Function DeadByDaylight.DBDPlayer.GetPercentMovementSpeed // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1760
	enum class EPawnType GetPawnType(); // Function DeadByDaylight.DBDPlayer.GetPawnType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1730
	struct UOtherCharactersVerticalCollisionsHandler* GetOtherCharactersVerticalCollisionsHandler(); // Function DeadByDaylight.DBDPlayer.GetOtherCharactersVerticalCollisionsHandler // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1710
	struct UGameplayTagContainerComponent* GetObjectState(); // Function DeadByDaylight.DBDPlayer.GetObjectState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f16d0
	struct UNavigationStateComponent* GetNavigationState(); // Function DeadByDaylight.DBDPlayer.GetNavigationState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f16a0
	struct FString GetNameDebugString(); // Function DeadByDaylight.DBDPlayer.GetNameDebugString // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1620
	struct UMontagePlayer* GetMontagePlayer(); // Function DeadByDaylight.DBDPlayer.GetMontagePlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f15f0
	struct FMontagePlaybackDefinition GetMontagePlaybackDefinition(struct FAnimationMontageDescriptor animMontageID, float PlayRate, bool isFollower); // Function DeadByDaylight.DBDPlayer.GetMontagePlaybackDefinition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f13f0
	float GetMontageLength(struct FAnimationMontageDescriptor animMontageID); // Function DeadByDaylight.DBDPlayer.GetMontageLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f12d0
	struct UAnimMontage* GetMontage(struct FAnimationMontageDescriptor animMontageID); // Function DeadByDaylight.DBDPlayer.GetMontage // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f11b0
	float GetMaxSpeed(); // Function DeadByDaylight.DBDPlayer.GetMaxSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1180
	float GetLuck(); // Function DeadByDaylight.DBDPlayer.GetLuck // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1140
	struct TArray<struct UItemModifier*> GetItemModifiers(); // Function DeadByDaylight.DBDPlayer.GetItemModifiers // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f10b0
	struct TArray<struct UItemAddon*> GetItemAddons(); // Function DeadByDaylight.DBDPlayer.GetItemAddons // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f1020
	bool GetIsInterrupting(); // Function DeadByDaylight.DBDPlayer.GetIsInterrupting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0ff0
	bool GetIsInteracting(); // Function DeadByDaylight.DBDPlayer.GetIsInteracting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0fc0
	bool GetIsInFirstPerson(); // Function DeadByDaylight.DBDPlayer.GetIsInFirstPerson // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0f90
	struct FInteractionPlayerProperties GetInteractionPlayerProperties(); // Function DeadByDaylight.DBDPlayer.GetInteractionPlayerProperties // (Final|Native|Public|BlueprintCallable) // @ game+0x54f0f40
	struct UInteractionDetectorComponent* GetInteractionDetectorComponent(); // Function DeadByDaylight.DBDPlayer.GetInteractionDetectorComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0f10
	struct AInteractable* GetInteractable(); // Function DeadByDaylight.DBDPlayer.GetInteractable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0ee0
	float GetGrassEffectRadiusMultiplier(); // Function DeadByDaylight.DBDPlayer.GetGrassEffectRadiusMultiplier // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x54f0ea0
	struct UActorComponent* GetFirstComponentByClass(struct UActorComponent* ComponentClass); // Function DeadByDaylight.DBDPlayer.GetFirstComponentByClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0e00
	struct FVector GetFeetPosition(); // Function DeadByDaylight.DBDPlayer.GetFeetPosition // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0db0
	struct UCharacterDreamworldComponent* GetDreamworldComponent(); // Function DeadByDaylight.DBDPlayer.GetDreamworldComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0d80
	struct UPrimitiveComponent* GetDetectionZone(enum class EDetectionZone detectionZoneID); // Function DeadByDaylight.DBDPlayer.GetDetectionZone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0cf0
	struct ADBDPlayerState* GetDBDPlayerState(); // Function DeadByDaylight.DBDPlayer.GetDBDPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0cc0
	enum class EInteractionAnimation GetCurrentInteractionAnimation(); // Function DeadByDaylight.DBDPlayer.GetCurrentInteractionAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0c90
	struct UInteractionDefinition* GetCurrentInteraction(); // Function DeadByDaylight.DBDPlayer.GetCurrentInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0c60
	struct UChaseComponent* GetChaseComponent(); // Function DeadByDaylight.DBDPlayer.GetChaseComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0c30
	struct UCharacterInventoryComponent* GetCharacterInventoryComponent(); // Function DeadByDaylight.DBDPlayer.GetCharacterInventoryComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0c00
	struct ADBDPlayerCameraManager* GetCameraManager(); // Function DeadByDaylight.DBDPlayer.GetCameraManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0bd0
	struct FVector GetBoneLocation(struct FName Name, enum class EBoneSpaces space); // Function DeadByDaylight.DBDPlayer.GetBoneLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0ac0
	struct UBlindableComponent* GetBlindableComponent(); // Function DeadByDaylight.DBDPlayer.GetBlindableComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0a90
	struct FVector GetAverageVelocity(); // Function DeadByDaylight.DBDPlayer.GetAverageVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0a60
	struct UAuthoritativeMovementComponent* GetAuthoritativeMovementComponent(); // Function DeadByDaylight.DBDPlayer.GetAuthoritativeMovementComponent // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0a20
	struct USceneComponent* GetAttachPoint(struct FName attachPointName); // Function DeadByDaylight.DBDPlayer.GetAttachPoint // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x54f0960
	struct APlayerState* GetAssociatedPlayerState(); // Function DeadByDaylight.DBDPlayer.GetAssociatedPlayerState // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x54f0930
	void GetAnimTags(struct TArray<struct FName>& outTags); // Function DeadByDaylight.DBDPlayer.GetAnimTags // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0880
	struct UAnimInstance* GetAnimInstance(); // Function DeadByDaylight.DBDPlayer.GetAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0850
	struct FVector GetActorLocationFromFeetLocation(struct FVector FeetLocation); // Function DeadByDaylight.DBDPlayer.GetActorLocationFromFeetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f07a0
	struct ADBDPlayer* FindClosestSlashablePlayerInDetectionZone(enum class EDetectionZone detectionZoneID); // Function DeadByDaylight.DBDPlayer.FindClosestSlashablePlayerInDetectionZone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54f0710
	void FastInteractionInputReleased(); // Function DeadByDaylight.DBDPlayer.FastInteractionInputReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x54f06f0
	void FastInteractionInputPressed(); // Function DeadByDaylight.DBDPlayer.FastInteractionInputPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x54f06d0
	void EventAbilityInputReleased(); // Function DeadByDaylight.DBDPlayer.EventAbilityInputReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x54f06b0
	void EventAbilityInputPressed(); // Function DeadByDaylight.DBDPlayer.EventAbilityInputPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x54f0690
	void Dissolve(bool Dissolve); // Function DeadByDaylight.DBDPlayer.Dissolve // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void DetachInteractor(); // Function DeadByDaylight.DBDPlayer.DetachInteractor // (Final|Native|Public|BlueprintCallable) // @ game+0x54f0670
	void DBDUnCrouch(); // Function DeadByDaylight.DBDPlayer.DBDUnCrouch // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x54f04d0
	void DBDCrouch(); // Function DeadByDaylight.DBDPlayer.DBDCrouch // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x54f04b0
	void DBD_ToggleForceAuthoritativeMovement(); // Function DeadByDaylight.DBDPlayer.DBD_ToggleForceAuthoritativeMovement // (Final|Exec|Native|Private) // @ game+0x54f0650
	void DBD_ToggleDebugInteractionInZone(); // Function DeadByDaylight.DBDPlayer.DBD_ToggleDebugInteractionInZone // (Final|Exec|Native|Public) // @ game+0x54f0630
	void DBD_SetMouseTurnSpeedMultiplier(float value); // Function DeadByDaylight.DBDPlayer.DBD_SetMouseTurnSpeedMultiplier // (Final|Exec|Native|Protected) // @ game+0x54f05b0
	void DBD_SetMouseLookUpSpeedMultiplier(float value); // Function DeadByDaylight.DBDPlayer.DBD_SetMouseLookUpSpeedMultiplier // (Final|Exec|Native|Protected) // @ game+0x54f0530
	void DBD_DebugStartInteraction(); // Function DeadByDaylight.DBDPlayer.DBD_DebugStartInteraction // (Final|Exec|Native|Public) // @ game+0x54f0510
	void DBD_CancelInteraction(); // Function DeadByDaylight.DBDPlayer.DBD_CancelInteraction // (Final|Exec|Native|Public|Const) // @ game+0x54f04f0
	void Client_TryInteractionType(enum class EInputInteractionType interactionType, struct ADBDPlayer* requester); // Function DeadByDaylight.DBDPlayer.Client_TryInteractionType // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x54f03e0
	void Client_TryInteraction(struct UInteractionDefinition* Interaction, struct ADBDPlayer* requester, bool force, bool usingInputPersistence); // Function DeadByDaylight.DBDPlayer.Client_TryInteraction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x54f0280
	void Client_SendCancelInteraction(struct UInteractionDefinition* InteractionDefinition); // Function DeadByDaylight.DBDPlayer.Client_SendCancelInteraction // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x54f01f0
	void Client_Debug_PlayerStartSnapping(struct FVector Location, float Duration); // Function DeadByDaylight.DBDPlayer.Client_Debug_PlayerStartSnapping // (Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient) // @ game+0x54f0120
	bool CanInterrupt_BP(); // Function DeadByDaylight.DBDPlayer.CanInterrupt_BP // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x54f0060
	void CancelCarry(bool alsoCancelForOtherPlayer); // Function DeadByDaylight.DBDPlayer.CancelCarry // (Native|Public|BlueprintCallable) // @ game+0x54f0090
	void CameraUpdated(); // Function DeadByDaylight.DBDPlayer.CameraUpdated // (Native|Public|BlueprintCallable) // @ game+0x54f0040
	void Authority_SetDreamworldComponent(struct UCharacterDreamworldComponent* Component); // Function DeadByDaylight.DBDPlayer.Authority_SetDreamworldComponent // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54effb0
	void Authority_RequestStun(enum class EStunType stunType, struct ADBDPlayer* stunner); // Function DeadByDaylight.DBDPlayer.Authority_RequestStun // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54efee0
	struct UStatusEffect* Authority_ImposeStatusEffect_DEPRECATED(struct FName statusEffectID, struct ADBDPlayer* originatingPlayer, float customParam, struct UGameplayModifierContainer* originatingEffect, bool shouldDisplay, float lifetime); // Function DeadByDaylight.DBDPlayer.Authority_ImposeStatusEffect_DEPRECATED // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54efce0
	void Authority_HandleScoreEvent(struct FGameplayTag scoreTypeTag, struct FScoreEventData ScoreEventData); // Function DeadByDaylight.DBDPlayer.Authority_HandleScoreEvent // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54efbc0
	void Authority_EvaluateIfPlayerCanSee(); // Function DeadByDaylight.DBDPlayer.Authority_EvaluateIfPlayerCanSee // (Final|Native|Private|Const) // @ game+0x54efba0
	void AttachInteractor(struct UInteractor* Interactor); // Function DeadByDaylight.DBDPlayer.AttachInteractor // (Final|Native|Public|BlueprintCallable) // @ game+0x54efb10
	void AddDetectionZone(enum class EDetectionZone detectionZoneID, struct UPrimitiveComponent* zone); // Function DeadByDaylight.DBDPlayer.AddDetectionZone // (Final|Native|Public|BlueprintCallable) // @ game+0x54efa40
	void AbilityTwoInputReleased(); // Function DeadByDaylight.DBDPlayer.AbilityTwoInputReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x54efa20
	void AbilityTwoInputPressed(); // Function DeadByDaylight.DBDPlayer.AbilityTwoInputPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x54efa00
	void AbilityInputReleased(); // Function DeadByDaylight.DBDPlayer.AbilityInputReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x54ef9e0
};

// Class DeadByDaylight.CamperPlayer
// Size: 0x1660 (Inherited: 0x11a0)
struct ACamperPlayer : ADBDPlayer {
	char pad_11A0[0x18]; // 0x11a0(0x18)
	struct FMulticastInlineDelegate OnHookedStateChanged; // 0x11b8(0x10)
	struct FMulticastInlineDelegate OnGuidedStateChanged; // 0x11c8(0x10)
	struct FMulticastInlineDelegate OnPickedUpDelegate; // 0x11d8(0x10)
	struct FMulticastInlineDelegate OnPickedUpEndDelegate; // 0x11e8(0x10)
	struct FMulticastInlineDelegate OnHPSlotChanged; // 0x11f8(0x10)
	char pad_1208[0x40]; // 0x1208(0x40)
	struct FMulticastInlineDelegate OnImmobilizeStateChanged; // 0x1248(0x10)
	char pad_1258[0x30]; // 0x1258(0x30)
	struct FMulticastInlineDelegate OnHookEscapeFailedCosmetic; // 0x1288(0x10)
	struct FName ReverseBearTrapAttachSocket; // 0x1298(0x0c)
	bool isBeingDissolved; // 0x12a4(0x01)
	char pad_12A5[0x3]; // 0x12a5(0x03)
	float FootprintAudibleRange; // 0x12a8(0x04)
	char pad_12AC[0x4]; // 0x12ac(0x04)
	struct UStalkedComponent* StalkedComponent; // 0x12b0(0x08)
	float CameraResetToleranceYaw; // 0x12b8(0x04)
	float CameraResetTolerancePitch; // 0x12bc(0x04)
	float CameraRecenterOffsetYaw; // 0x12c0(0x04)
	float CameraRecenterOffsetPitch; // 0x12c4(0x04)
	enum class EGender gender; // 0x12c8(0x01)
	char pad_12C9[0x7]; // 0x12c9(0x07)
	struct UCurveFloat* DropStaggerDuration; // 0x12d0(0x08)
	struct UCurveFloat* DropStaggerMaxSpeed; // 0x12d8(0x08)
	float TimeforDeathWhileCrawling; // 0x12e0(0x04)
	float TimeforDeathWhileHooked; // 0x12e4(0x04)
	float SecondsUntilFootprintTrigger; // 0x12e8(0x04)
	bool TriggerAfflictionHUDIntro; // 0x12ec(0x01)
	char pad_12ED[0x93]; // 0x12ed(0x93)
	struct APlayerController* _storedPlayerController; // 0x1380(0x08)
	struct UCamperStillnessTrackerComponent* _stillnessTracker; // 0x1388(0x08)
	float PartiallyHiddenStillnessThreshold; // 0x1390(0x04)
	char pad_1394[0x4]; // 0x1394(0x04)
	struct AActor* _escape; // 0x1398(0x08)
	struct AActor* _overlappingEscape; // 0x13a0(0x08)
	struct USpherePlayerOverlapComponent* ProximityZone; // 0x13a8(0x08)
	char pad_13B0[0x18]; // 0x13b0(0x18)
	struct UCapsuleComponent* SlashableZone; // 0x13c8(0x08)
	struct UCapsuleComponent* HookSlashableZone; // 0x13d0(0x08)
	struct UCamperSlashableComponent* _camperSlashable; // 0x13d8(0x08)
	struct UMoriableComponent* _moriableComponent; // 0x13e0(0x08)
	float CrouchCapsuleHalfHeight; // 0x13e8(0x04)
	float IKOffsetRightFoot; // 0x13ec(0x04)
	float IKOffsetLeftFoot; // 0x13f0(0x04)
	char pad_13F4[0xc]; // 0x13f4(0x0c)
	struct UDBDPawnSensingComponent* _camperSensor; // 0x1400(0x08)
	struct USurviveTimerScoreEventComponent* _surviveTimerScoreComponent; // 0x1408(0x08)
	char pad_1410[0x18]; // 0x1410(0x18)
	struct TArray<struct ADBDPlayer*> _foundCampers; // 0x1428(0x10)
	struct TArray<struct ADBDPlayer*> _potentialSaviors; // 0x1438(0x10)
	struct UCamperHealthComponent* _healthComponent; // 0x1448(0x08)
	struct UChargeableComponent* _hpSlot01; // 0x1450(0x08)
	struct UChargeableComponent* _hpSlot02; // 0x1458(0x08)
	struct UChargeableComponent* _mendChargeable; // 0x1460(0x08)
	struct UBloodTrailSettings* _bloodTrailSettings; // 0x1468(0x08)
	struct UCamperBloodTrailComponent* _bloodTrailComponent; // 0x1470(0x08)
	struct UCameraAttachmentComponent* _cameraAttachment; // 0x1478(0x08)
	struct UCharmSpawnerComponent* _charmSpawnerComponent; // 0x1480(0x08)
	struct UHookableComponent* _hookableComponent; // 0x1488(0x08)
	struct UHookAntiCampingComponent* _hookAntiCampingComponent; // 0x1490(0x08)
	struct UProtectionHitComponent* _protectionHitComponent; // 0x1498(0x08)
	struct UScreamComponent* _screamComponent; // 0x14a0(0x08)
	struct UCharacterPositionRecorderComponent* _positionRecorder; // 0x14a8(0x08)
	char pad_14B0[0xa5]; // 0x14b0(0xa5)
	bool _lastEscaped; // 0x1555(0x01)
	char pad_1556[0x6]; // 0x1556(0x06)
	bool _runInputPressed; // 0x155c(0x01)
	char pad_155D[0x23]; // 0x155d(0x23)
	bool _trapIndicatorActive; // 0x1580(0x01)
	char pad_1581[0x7]; // 0x1581(0x07)
	struct UCamperEndGameComponent* _camperEndGameComponent; // 0x1588(0x08)
	struct UAkComponent* _noOcclusionAkComponent; // 0x1590(0x08)
	struct UAkComponent* _attenuationAkComponent; // 0x1598(0x08)
	char pad_15A0[0x24]; // 0x15a0(0x24)
	bool _isSkillCheckFailed; // 0x15c4(0x01)
	bool _isBeingSacrificed; // 0x15c5(0x01)
	bool _isWiggleProgressionAllowed; // 0x15c6(0x01)
	char pad_15C7[0x69]; // 0x15c7(0x69)
	struct UMoveComponentToComponent* _meshMover; // 0x1630(0x08)
	struct UCarriedMovementComponent* _carriedMovementComponent; // 0x1638(0x08)
	struct USurvivorHitSprintEffect* _sprintEffect; // 0x1640(0x08)
	char pad_1648[0x18]; // 0x1648(0x18)

	void UpdateHealingTimer(float DeltaTime); // Function DeadByDaylight.CamperPlayer.UpdateHealingTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x5497180
	void TriggerPutDownAnimation(); // Function DeadByDaylight.CamperPlayer.TriggerPutDownAnimation // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void TriggerPickUpAnimation(); // Function DeadByDaylight.CamperPlayer.TriggerPickUpAnimation // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void TriggerAfflictionHUDFeedback(); // Function DeadByDaylight.CamperPlayer.TriggerAfflictionHUDFeedback // (Final|Native|Public|BlueprintCallable) // @ game+0x5497160
	void StopHealingTimer(); // Function DeadByDaylight.CamperPlayer.StopHealingTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x5497140
	void StartHealingTimer(float Time); // Function DeadByDaylight.CamperPlayer.StartHealingTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x54970c0
	void SetVignetteVisible(bool visible); // Function DeadByDaylight.CamperPlayer.SetVignetteVisible // (BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetPlayerExposedVFX(); // Function DeadByDaylight.CamperPlayer.SetPlayerExposedVFX // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetIsSkillCheckFailed(bool isSkillCheckFailed); // Function DeadByDaylight.CamperPlayer.SetIsSkillCheckFailed // (Final|Native|Public|BlueprintCallable) // @ game+0x5496fa0
	void SetBeingCarried(bool IsBeingCarried, struct ADBDPlayer* carrier); // Function DeadByDaylight.CamperPlayer.SetBeingCarried // (Final|Native|Public|BlueprintCallable) // @ game+0x5496ed0
	void Server_SetRunInput(bool Pressed); // Function DeadByDaylight.CamperPlayer.Server_SetRunInput // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x5496e40
	void Server_SetOverlappingEscape(struct AActor* Escape); // Function DeadByDaylight.CamperPlayer.Server_SetOverlappingEscape // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x5496db0
	void RunLocked(bool lock); // Function DeadByDaylight.CamperPlayer.RunLocked // (Final|Native|Public|BlueprintCallable) // @ game+0x5496cd0
	void ResetPotentialSaviors(); // Function DeadByDaylight.CamperPlayer.ResetPotentialSaviors // (Final|Native|Public|BlueprintCallable) // @ game+0x5496ca0
	void ResetCameraAttach(); // Function DeadByDaylight.CamperPlayer.ResetCameraAttach // (Final|Native|Public|BlueprintCallable) // @ game+0x5496c80
	void RemoveReverseBearTrap(); // Function DeadByDaylight.CamperPlayer.RemoveReverseBearTrap // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnUnhooked(); // Function DeadByDaylight.CamperPlayer.OnUnhooked // (Final|Native|Public|BlueprintCallable) // @ game+0x5496bd0
	void OnRep_SprintEffect(); // Function DeadByDaylight.CamperPlayer.OnRep_SprintEffect // (Final|Native|Private) // @ game+0x5496bb0
	void OnRep_RunInputPressed(); // Function DeadByDaylight.CamperPlayer.OnRep_RunInputPressed // (Final|Native|Private) // @ game+0x5496b90
	void OnProximityEntered(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.CamperPlayer.OnProximityEntered // (Final|Native|Private|HasOutParms) // @ game+0x5496970
	void OnPickUpEnter(struct ADBDPlayer* picker, float TransitionTime); // Function DeadByDaylight.CamperPlayer.OnPickUpEnter // (Final|Native|Public|BlueprintCallable) // @ game+0x54968a0
	void OnPickUpDenied(); // Function DeadByDaylight.CamperPlayer.OnPickUpDenied // (Final|Native|Protected|BlueprintCallable) // @ game+0x5496880
	void OnPawnSensed(struct APawn* Pawn); // Function DeadByDaylight.CamperPlayer.OnPawnSensed // (Final|Native|Private) // @ game+0x54967f0
	void OnObsessionChanged(struct ACamperPlayer* newObsession, struct ACamperPlayer* previousObsession); // Function DeadByDaylight.CamperPlayer.OnObsessionChanged // (Final|Native|Public) // @ game+0x5496720
	void OnHpSlotSkillCheckResponseAesthetic(bool success, bool Bonus, struct ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, enum class ESkillCheckCustomType Type, float ChargeChange); // Function DeadByDaylight.CamperPlayer.OnHpSlotSkillCheckResponseAesthetic // (Final|Native|Public|BlueprintCallable) // @ game+0x54964e0
	void OnHookedStateChangedCosmetic(bool hooked); // Function DeadByDaylight.CamperPlayer.OnHookedStateChangedCosmetic // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnHooked(); // Function DeadByDaylight.CamperPlayer.OnHooked // (Final|Native|Public|BlueprintCallable) // @ game+0x54964c0
	void OnFinishedPlaying(); // Function DeadByDaylight.CamperPlayer.OnFinishedPlaying // (Final|Native|Public|BlueprintCallable) // @ game+0x54964a0
	void OnDroppedStart(struct ADBDPlayer* dropper); // Function DeadByDaylight.CamperPlayer.OnDroppedStart // (Final|Native|Public|BlueprintCallable) // @ game+0x5496410
	void OnDroppedEnd(bool clearLeader); // Function DeadByDaylight.CamperPlayer.OnDroppedEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x5496380
	void OnDroppedByBearTrap(); // Function DeadByDaylight.CamperPlayer.OnDroppedByBearTrap // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void Multicast_SetOverlappingEscape(struct AActor* Escape); // Function DeadByDaylight.CamperPlayer.Multicast_SetOverlappingEscape // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x5496220
	void Multicast_SetImmobilized(enum class EImmobilizedState State); // Function DeadByDaylight.CamperPlayer.Multicast_SetImmobilized // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x54961a0
	void Multicast_SetHookEscapeAutoFail(bool Enabled); // Function DeadByDaylight.CamperPlayer.Multicast_SetHookEscapeAutoFail // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x5496110
	void Multicast_SetAuthoritativeMovementFlag(enum class EAuthoritativeMovementFlag flag, bool value); // Function DeadByDaylight.CamperPlayer.Multicast_SetAuthoritativeMovementFlag // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5496030
	void Multicast_RemoveReverseBearTrap(); // Function DeadByDaylight.CamperPlayer.Multicast_RemoveReverseBearTrap // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x5496010
	void Multicast_EscapeItemEvents(bool isItemFromSpawn); // Function DeadByDaylight.CamperPlayer.Multicast_EscapeItemEvents // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x5495f80
	void MakeCamperDisappearBleedOut(); // Function DeadByDaylight.CamperPlayer.MakeCamperDisappearBleedOut // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void MakeCamperDisappear(); // Function DeadByDaylight.CamperPlayer.MakeCamperDisappear // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Local_SetImmobilized(enum class EImmobilizedState State); // Function DeadByDaylight.CamperPlayer.Local_SetImmobilized // (Final|Native|Public|BlueprintCallable) // @ game+0x5495f00
	void Kill(enum class EHealthType healthType); // Function DeadByDaylight.CamperPlayer.Kill // (Final|Native|Public|BlueprintCallable) // @ game+0x5495e80
	bool IsVaulting(); // Function DeadByDaylight.CamperPlayer.IsVaulting // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	bool IsUnintentionallyImmobilized(); // Function DeadByDaylight.CamperPlayer.IsUnintentionallyImmobilized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495e50
	bool IsUnhookingSelf(); // Function DeadByDaylight.CamperPlayer.IsUnhookingSelf // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495e20
	bool IsTrapped(); // Function DeadByDaylight.CamperPlayer.IsTrapped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495df0
	bool IsSacrificed(); // Function DeadByDaylight.CamperPlayer.IsSacrificed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495dc0
	bool IsRunLocked(); // Function DeadByDaylight.CamperPlayer.IsRunLocked // (Final|Native|Public|BlueprintCallable) // @ game+0x5495da0
	bool IsObsessionTarget(); // Function DeadByDaylight.CamperPlayer.IsObsessionTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495d70
	bool IsMovementGuided(); // Function DeadByDaylight.CamperPlayer.IsMovementGuided // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495d40
	bool IsInNeed(); // Function DeadByDaylight.CamperPlayer.IsInNeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495d10
	bool IsInDeathBed(); // Function DeadByDaylight.CamperPlayer.IsInDeathBed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495ce0
	bool IsImmobilized(); // Function DeadByDaylight.CamperPlayer.IsImmobilized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495cb0
	bool IsHooked(); // Function DeadByDaylight.CamperPlayer.IsHooked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495c80
	bool IsHealingTimerExpired(); // Function DeadByDaylight.CamperPlayer.IsHealingTimerExpired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495c50
	bool IsGuidedBySlasher(); // Function DeadByDaylight.CamperPlayer.IsGuidedBySlasher // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495c20
	bool IsEscaped(); // Function DeadByDaylight.CamperPlayer.IsEscaped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495bf0
	bool IsDeadOrInParadise(); // Function DeadByDaylight.CamperPlayer.IsDeadOrInParadise // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495bc0
	bool IsCrawling(); // Function DeadByDaylight.CamperPlayer.IsCrawling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495b90
	bool IsBeingUnhooked(); // Function DeadByDaylight.CamperPlayer.IsBeingUnhooked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495b60
	bool IsBeingPutOnHook(); // Function DeadByDaylight.CamperPlayer.IsBeingPutOnHook // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495b30
	bool IsBeingPutDown(); // Function DeadByDaylight.CamperPlayer.IsBeingPutDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495b00
	bool IsBeingPulledFromCloset(); // Function DeadByDaylight.CamperPlayer.IsBeingPulledFromCloset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495ad0
	bool IsBeingPickedUp(); // Function DeadByDaylight.CamperPlayer.IsBeingPickedUp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495aa0
	bool IsBeingMended(); // Function DeadByDaylight.CamperPlayer.IsBeingMended // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495a70
	bool IsBeingKilled(); // Function DeadByDaylight.CamperPlayer.IsBeingKilled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495a40
	bool IsBeingInteractedWith(); // Function DeadByDaylight.CamperPlayer.IsBeingInteractedWith // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495a10
	bool IsBeingHealed(); // Function DeadByDaylight.CamperPlayer.IsBeingHealed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54959e0
	bool IsBeingEndGameSacrificed(); // Function DeadByDaylight.CamperPlayer.IsBeingEndGameSacrificed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54959b0
	bool IsBeingCarried(); // Function DeadByDaylight.CamperPlayer.IsBeingCarried // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495980
	void Input_ToggleRun(); // Function DeadByDaylight.CamperPlayer.Input_ToggleRun // (Final|Native|Public|BlueprintCallable) // @ game+0x5495960
	void HatchEscapeZoneEntered(struct AActor* Escape); // Function DeadByDaylight.CamperPlayer.HatchEscapeZoneEntered // (Final|Native|Public|BlueprintCallable) // @ game+0x54958d0
	bool HasReverseBearTrap(); // Function DeadByDaylight.CamperPlayer.HasReverseBearTrap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54958a0
	bool HasHitEvents(); // Function DeadByDaylight.CamperPlayer.HasHitEvents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495870
	bool HasGuidedAction(); // Function DeadByDaylight.CamperPlayer.HasGuidedAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495840
	struct UChargeableComponent* GetWiggleChargeable(); // Function DeadByDaylight.CamperPlayer.GetWiggleChargeable // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	struct FRotator GetToAimPointRotation(); // Function DeadByDaylight.CamperPlayer.GetToAimPointRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495800
	float GetStillness(); // Function DeadByDaylight.CamperPlayer.GetStillness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54957d0
	struct AReverseBearTrap* GetReverseBearTrap(); // Function DeadByDaylight.CamperPlayer.GetReverseBearTrap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495760
	float GetPercentHealingTimer(); // Function DeadByDaylight.CamperPlayer.GetPercentHealingTimer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495730
	struct AActor* GetOverlappingEscape(); // Function DeadByDaylight.CamperPlayer.GetOverlappingEscape // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54956e0
	float GetObsessionTargetWeight(); // Function DeadByDaylight.CamperPlayer.GetObsessionTargetWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54956b0
	int32_t GetNumberOfEntityRenderRegions(); // Function DeadByDaylight.CamperPlayer.GetNumberOfEntityRenderRegions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495680
	struct UAkComponent* GetNoOcclusionAudioComponent(); // Function DeadByDaylight.CamperPlayer.GetNoOcclusionAudioComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495650
	struct UAnimationMontageSlave* GetMontageFollower(); // Function DeadByDaylight.CamperPlayer.GetMontageFollower // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x5495620
	struct UMoveComponentToComponent* GetMeshMover(); // Function DeadByDaylight.CamperPlayer.GetMeshMover // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54955f0
	float GetMaxGruntDistance(bool isLocalPlayerKiller); // Function DeadByDaylight.CamperPlayer.GetMaxGruntDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495550
	bool GetIsWiggleProgressionAllowed(); // Function DeadByDaylight.CamperPlayer.GetIsWiggleProgressionAllowed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495520
	bool GetIsSkillCheckFailed(); // Function DeadByDaylight.CamperPlayer.GetIsSkillCheckFailed // (Final|Native|Public|BlueprintCallable) // @ game+0x54954f0
	bool GetIsBeingDissolved(); // Function DeadByDaylight.CamperPlayer.GetIsBeingDissolved // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54954c0
	enum class EImmobilizedState GetImmobilizedState(); // Function DeadByDaylight.CamperPlayer.GetImmobilizedState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495490
	struct UHookAntiCampingComponent* GetHookAntiCampingComponent(); // Function DeadByDaylight.CamperPlayer.GetHookAntiCampingComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495430
	struct UHookableComponent* GetHookableComponent(); // Function DeadByDaylight.CamperPlayer.GetHookableComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495460
	struct UCamperHealthComponent* GetHealthComponent(); // Function DeadByDaylight.CamperPlayer.GetHealthComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495400
	enum class EGuidedState GetGuidedAction(); // Function DeadByDaylight.CamperPlayer.GetGuidedAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54953d0
	struct UDBDClipRegionComponent* GetEntityRenderRegionAtIndex(int32_t InIndex); // Function DeadByDaylight.CamperPlayer.GetEntityRenderRegionAtIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495330
	struct UChaseeCharacterComponent* GetChaseeCharacterComponent(); // Function DeadByDaylight.CamperPlayer.GetChaseeCharacterComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495290
	struct UCamperStillnessTrackerComponent* GetCamperStillnessComponent(); // Function DeadByDaylight.CamperPlayer.GetCamperStillnessComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x5495270
	struct UCameraAttachmentComponent* GetCameraAttachmentComponent(); // Function DeadByDaylight.CamperPlayer.GetCameraAttachmentComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495240
	struct UCamperBloodTrailComponent* GetBloodTrailComponent(); // Function DeadByDaylight.CamperPlayer.GetBloodTrailComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495210
	struct UAkComponent* GetAttenuationAudioComponent(); // Function DeadByDaylight.CamperPlayer.GetAttenuationAudioComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54951e0
	struct TArray<struct UDBDClipRegionComponent*> GetAllEntityRenderRegions(); // Function DeadByDaylight.CamperPlayer.GetAllEntityRenderRegions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495160
	struct FVector GetAimPoint(); // Function DeadByDaylight.CamperPlayer.GetAimPoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495120
	void EventOnDeath(); // Function DeadByDaylight.CamperPlayer.EventOnDeath // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void EscapeTutorial(); // Function DeadByDaylight.CamperPlayer.EscapeTutorial // (Final|Native|Public|BlueprintCallable) // @ game+0x5495100
	void DoSacrificialDissolve(); // Function DeadByDaylight.CamperPlayer.DoSacrificialDissolve // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void DetachFromGuidingPlayer(); // Function DeadByDaylight.CamperPlayer.DetachFromGuidingPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x54950e0
	void DecalBlood_Puddles(); // Function DeadByDaylight.CamperPlayer.DecalBlood_Puddles // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void DBD_SetSurvivorCameraArmLengthCommand(float cameraArmLength); // Function DeadByDaylight.CamperPlayer.DBD_SetSurvivorCameraArmLengthCommand // (Final|Exec|Native|Public) // @ game+0x5495060
	void DBD_SetSurvivorCameraArmLength(float cameraArmLength); // Function DeadByDaylight.CamperPlayer.DBD_SetSurvivorCameraArmLength // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void DBD_SetImmobilized(enum class EImmobilizedState State); // Function DeadByDaylight.CamperPlayer.DBD_SetImmobilized // (Final|Exec|Native|Public) // @ game+0x5494fe0
	void DBD_LeaveParadise(); // Function DeadByDaylight.CamperPlayer.DBD_LeaveParadise // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x5494fc0
	void DBD_ForceRun(bool Forced); // Function DeadByDaylight.CamperPlayer.DBD_ForceRun // (Final|Exec|Native|Public) // @ game+0x5494f30
	void DBD_CheatEscaped(); // Function DeadByDaylight.CamperPlayer.DBD_CheatEscaped // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x5494f10
	float ComputeInteractionSuccessPercentage(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.CamperPlayer.ComputeInteractionSuccessPercentage // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5494e70
	bool ComputeHookEscapeResult(); // Function DeadByDaylight.CamperPlayer.ComputeHookEscapeResult // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5494e40
	bool ComputeBeartrapEscapeResult(); // Function DeadByDaylight.CamperPlayer.ComputeBeartrapEscapeResult // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5494e10
	void Client_OnSlashedOutOfTrap(struct ADBDPlayer* requester); // Function DeadByDaylight.CamperPlayer.Client_OnSlashedOutOfTrap // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x5494d80
	bool CanRushQuietly(); // Function DeadByDaylight.CamperPlayer.CanRushQuietly // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5494cc0
	bool CanBeShocked(); // Function DeadByDaylight.CamperPlayer.CanBeShocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5494c90
	bool CanBePickedUp(); // Function DeadByDaylight.CamperPlayer.CanBePickedUp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5494c60
	bool CanBeKilled(); // Function DeadByDaylight.CamperPlayer.CanBeKilled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5494c30
	void CallOnDroppedByBearTrap(); // Function DeadByDaylight.CamperPlayer.CallOnDroppedByBearTrap // (Final|Native|Public|BlueprintCallable) // @ game+0x5494c10
	void Authority_SetImmobilized(enum class EImmobilizedState State); // Function DeadByDaylight.CamperPlayer.Authority_SetImmobilized // (Final|Native|Public|BlueprintCallable) // @ game+0x5494b90
	void Authority_OnSlashed(struct ADBDPlayer* Attacker); // Function DeadByDaylight.CamperPlayer.Authority_OnSlashed // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5494b00
	void Authority_ApplySprintEffect(); // Function DeadByDaylight.CamperPlayer.Authority_ApplySprintEffect // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5494ae0
	void AttachToGuidingPlayer(); // Function DeadByDaylight.CamperPlayer.AttachToGuidingPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x5494ac0
	void AddBloodDropsToRightHand(); // Function DeadByDaylight.CamperPlayer.AddBloodDropsToRightHand // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void AddBloodDropsToLeftHand(); // Function DeadByDaylight.CamperPlayer.AddBloodDropsToLeftHand // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void AddBloodDrippingToGK_Mori(); // Function DeadByDaylight.CamperPlayer.AddBloodDrippingToGK_Mori // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void AddBloodDecalToGK_Mori(); // Function DeadByDaylight.CamperPlayer.AddBloodDecalToGK_Mori // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void ActivatePlayerExposedVFX(); // Function DeadByDaylight.CamperPlayer.ActivatePlayerExposedVFX // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void ActivateLocalPlayerExposedVFX(); // Function DeadByDaylight.CamperPlayer.ActivateLocalPlayerExposedVFX // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void ActionInputReleased(); // Function DeadByDaylight.CamperPlayer.ActionInputReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x5494860
	void ActionInputPressed(); // Function DeadByDaylight.CamperPlayer.ActionInputPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x5494840
	bool AcceptsHealing(); // Function DeadByDaylight.CamperPlayer.AcceptsHealing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5494810
};

// Class DeadByDaylight.CamperSlashableComponent
// Size: 0x1b0 (Inherited: 0xb8)
struct UCamperSlashableComponent : UActorComponent {
	char pad_B8[0x8]; // 0xb8(0x08)
	struct UCapsuleComponent* _slashableZone; // 0xc0(0x08)
	struct UCapsuleComponent* _hookSlashableZone; // 0xc8(0x08)
	float _standingCapsuleHalfHeight; // 0xd0(0x04)
	float _crouchCapsuleHalfHeight; // 0xd4(0x04)
	struct FGameplayTagContainer _slashableDisablingStateTags; // 0xd8(0x20)
	float _sourceActivationLingerDuration; // 0xf8(0x04)
	char pad_FC[0x34]; // 0xfc(0x34)
	struct USlashableActivationSourceCollection* _slashableActivationSources; // 0x130(0x08)
	char pad_138[0x78]; // 0x138(0x78)

	void SetUseCrouchSlashableCapsule(bool useCrouchCapsule); // Function DeadByDaylight.CamperSlashableComponent.SetUseCrouchSlashableCapsule // (Final|Native|Public|BlueprintCallable) // @ game+0x549c490
	void SetStandingCapsuleHalfHeight(float Height); // Function DeadByDaylight.CamperSlashableComponent.SetStandingCapsuleHalfHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x4d521d0
	void SetSlashableZone(struct UCapsuleComponent* zone); // Function DeadByDaylight.CamperSlashableComponent.SetSlashableZone // (Final|Native|Public|BlueprintCallable) // @ game+0x549c400
	void SetHookSlashableZone(struct UCapsuleComponent* zone); // Function DeadByDaylight.CamperSlashableComponent.SetHookSlashableZone // (Final|Native|Public|BlueprintCallable) // @ game+0x549c370
	void SetCrouchCapsuleHalfHeight(float Height); // Function DeadByDaylight.CamperSlashableComponent.SetCrouchCapsuleHalfHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x549c2f0
};

// Class DeadByDaylight.PlayerStateMachine
// Size: 0x130 (Inherited: 0x130)
struct UPlayerStateMachine : UStateMachine {
};

// Class DeadByDaylight.CamperStateMachine
// Size: 0x130 (Inherited: 0x130)
struct UCamperStateMachine : UPlayerStateMachine {
};

// Class DeadByDaylight.StillnessTrackerComponent
// Size: 0xf0 (Inherited: 0xb8)
struct UStillnessTrackerComponent : UActorComponent {
	float SpeedThreshold; // 0xb8(0x04)
	float DistanceThreshold; // 0xbc(0x04)
	float DistanceDecay; // 0xc0(0x04)
	bool DecayWhileMoving; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	float StillnessThreshhold; // 0xc8(0x04)
	float StillnessTimerLimit; // 0xcc(0x04)
	float DecaySpeedMultiplier; // 0xd0(0x04)
	char pad_D4[0x8]; // 0xd4(0x08)
	struct TWeakObjectPtr<struct ADBDPlayer> _trackedPlayer; // 0xdc(0x08)
	char pad_E4[0xc]; // 0xe4(0x0c)

	void StartTracking(); // Function DeadByDaylight.StillnessTrackerComponent.StartTracking // (Final|Native|Private) // @ game+0x4d8a5b0
};

// Class DeadByDaylight.CamperStillnessTrackerComponent
// Size: 0x150 (Inherited: 0xf0)
struct UCamperStillnessTrackerComponent : UStillnessTrackerComponent {
	float ChickenShitModifier; // 0xf0(0x04)
	float LoudNoiseTime; // 0xf4(0x04)
	char pad_F8[0x10]; // 0xf8(0x10)
	struct TArray<float> ExposerSpawnTimes; // 0x108(0x10)
	struct TArray<float> ExposerDespawnTimes; // 0x118(0x10)
	struct ACamperExposerInstance* _exposerInstanceToSpawn; // 0x128(0x08)
	struct TArray<struct ACamperExposerInstance*> _exposerInstances; // 0x130(0x10)
	struct UExposerInteriorZoneComponent* _interiorZone; // 0x140(0x08)
	char pad_148[0x8]; // 0x148(0x08)

	void OnOverlapExit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DeadByDaylight.CamperStillnessTrackerComponent.OnOverlapExit // (Final|Native|Protected) // @ game+0x549bf40
	void OnOverlapEnter(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.CamperStillnessTrackerComponent.OnOverlapEnter // (Final|Native|Protected|HasOutParms) // @ game+0x549bd20
	void OnLevelReadyToPlay(); // Function DeadByDaylight.CamperStillnessTrackerComponent.OnLevelReadyToPlay // (Final|Native|Protected) // @ game+0x549bc70
	void ExitInteriorZone(struct UExposerInteriorZoneComponent* zone); // Function DeadByDaylight.CamperStillnessTrackerComponent.ExitInteriorZone // (Final|Native|Public|BlueprintCallable) // @ game+0x549afe0
	void EnterInteriorZone(struct UExposerInteriorZoneComponent* zone); // Function DeadByDaylight.CamperStillnessTrackerComponent.EnterInteriorZone // (Final|Native|Public|BlueprintCallable) // @ game+0x549af50
};

// Class DeadByDaylight.CarriedMovementComponent
// Size: 0x160 (Inherited: 0xb8)
struct UCarriedMovementComponent : UActorComponent {
	char pad_B8[0xa8]; // 0xb8(0xa8)
};

// Class DeadByDaylight.CartersSparkComponent
// Size: 0x1a8 (Inherited: 0xb8)
struct UCartersSparkComponent : UActorComponent {
	bool _staticBlastEnabled; // 0xb8(0x01)
	char pad_B9[0x8f]; // 0xb9(0x8f)
	struct TArray<struct ADBDPlayer*> _totallyInsanePlayers; // 0x148(0x10)
	struct ADBDPlayer* _owningPlayer; // 0x158(0x08)
	char pad_160[0x20]; // 0x160(0x20)
	struct FDBDTunableRowHandle _maxMadnessTier; // 0x180(0x28)

	void TriggerStaticBlastCooldown(); // Function DeadByDaylight.CartersSparkComponent.TriggerStaticBlastCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x549c540
	void TriggerShockTherapyCooldown(); // Function DeadByDaylight.CartersSparkComponent.TriggerShockTherapyCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x549c520
	void OnRequestAndBeginInteraction(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.CartersSparkComponent.OnRequestAndBeginInteraction // (Final|Native|Private) // @ game+0x549c0a0
	void Multicast_OnShockTherapyCooldownCheatEntered(); // Function DeadByDaylight.CartersSparkComponent.Multicast_OnShockTherapyCooldownCheatEntered // (Net|NetReliableNative|Event|NetMulticast|Public|NetValidate) // @ game+0x549bab0
	bool IsStaticBlastOnCooldown(); // Function DeadByDaylight.CartersSparkComponent.IsStaticBlastOnCooldown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x549ba80
	bool IsShockTherapyOnCooldown(); // Function DeadByDaylight.CartersSparkComponent.IsShockTherapyOnCooldown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x549ba50
	float GetStaticBlastCooldownPercentElapsed(); // Function DeadByDaylight.CartersSparkComponent.GetStaticBlastCooldownPercentElapsed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x549b9e0
	float GetStaticBlastCooldownDuration(); // Function DeadByDaylight.CartersSparkComponent.GetStaticBlastCooldownDuration // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x549b9b0
	float GetShockTherapyCooldownDuration(); // Function DeadByDaylight.CartersSparkComponent.GetShockTherapyCooldownDuration // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x549b980
	void Authority_RegisterToGameEvents(); // Function DeadByDaylight.CartersSparkComponent.Authority_RegisterToGameEvents // (Final|Native|Private) // @ game+0x549af30
	void Authority_AddTotallyInsaneSurvivor(struct ADBDPlayer* insaneSurvivor); // Function DeadByDaylight.CartersSparkComponent.Authority_AddTotallyInsaneSurvivor // (Final|Native|Public|BlueprintCallable) // @ game+0x549aea0
};

// Class DeadByDaylight.CDNPatchManager
// Size: 0x258 (Inherited: 0x30)
struct UCDNPatchManager : UObject {
	struct FString InstallDirectory; // 0x30(0x10)
	int32_t PakOrder; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct FString PakMountPoint; // 0x48(0x10)
	char pad_58[0x48]; // 0x58(0x48)
	struct TWeakObjectPtr<struct UGameInstance> _gameInstance; // 0xa0(0x08)
	char pad_A8[0xf0]; // 0xa8(0xf0)
	struct UAtlantaPendingContent* _currentContentToInstall; // 0x198(0x08)
	struct TArray<struct FString> _remainingManifestsToInstall; // 0x1a0(0x10)
	struct TMap<struct FString, struct UAtlantaPendingContent*> _contentToInstall; // 0x1b0(0x50)
	char pad_200[0x48]; // 0x200(0x48)
	struct UAtlantaPendingContent* _MobilePendingContent; // 0x248(0x08)
	char pad_250[0x8]; // 0x250(0x08)

	void OnRequestSucceeded(struct UAtlantaPendingContent* pendingContent); // Function DeadByDaylight.CDNPatchManager.OnRequestSucceeded // (Final|Native|Private) // @ game+0x549c260
	void OnRequestFailed(struct FText ErrorText, int32_t ErrorCode); // Function DeadByDaylight.CDNPatchManager.OnRequestFailed // (Final|Native|Private) // @ game+0x549c130
	void OnInstallSucceeded(); // Function DeadByDaylight.CDNPatchManager.OnInstallSucceeded // (Final|Native|Private) // @ game+0x549bc50
	void OnInstallFailed(struct FText ErrorText, int32_t ErrorCode); // Function DeadByDaylight.CDNPatchManager.OnInstallFailed // (Final|Native|Private) // @ game+0x549bb20
};

// Class DeadByDaylight.CharacterChaseVisualComponent
// Size: 0x130 (Inherited: 0xb8)
struct UCharacterChaseVisualComponent : UActorComponent {
	struct FMulticastInlineDelegate OnChaseStartEvent; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnChaseEndEvent; // 0xc8(0x10)
	struct UMaterialHelperUnaffectedStaticMeshComponent* _vignetteMeshComp; // 0xd8(0x08)
	struct FVector _relativeLocation; // 0xe0(0x0c)
	struct FVector _relativeScale; // 0xec(0x0c)
	struct FRotator _relativeRotation; // 0xf8(0x0c)
	float _fovModifyFactor; // 0x104(0x04)
	char pad_108[0x28]; // 0x108(0x28)

	void OnObservedCharacterChange(struct ADBDPlayer* Player); // Function DeadByDaylight.CharacterChaseVisualComponent.OnObservedCharacterChange // (Final|Native|Public) // @ game+0x549bc90
	void OnAllChaseEnd(); // Function DeadByDaylight.CharacterChaseVisualComponent.OnAllChaseEnd // (Final|Native|Public) // @ game+0x549bb00
};

// Class DeadByDaylight.CharacterCollection
// Size: 0x310 (Inherited: 0xb8)
struct UCharacterCollection : UActorComponent {
	char pad_B8[0xc0]; // 0xb8(0xc0)
	struct ASlasherPlayer* _killer; // 0x178(0x08)
	struct TSet<struct ACamperPlayer*> _survivors; // 0x180(0x50)
	struct TSet<struct ADBDPlayer*> _mainDBDPlayers; // 0x1d0(0x50)
	struct TSet<struct ADBDPlayer*> _otherCharacters; // 0x220(0x50)
	struct TSet<struct ACharacter*> _nonPlayableCharacters; // 0x270(0x50)
	struct TSet<struct ACharacter*> _allCharacters; // 0x2c0(0x50)

	struct TSet<struct ACamperPlayer*> GetSurvivors(); // Function DeadByDaylight.CharacterCollection.GetSurvivors // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x549ba10
	struct TSet<struct ADBDPlayer*> GetMainDBDPlayers(); // Function DeadByDaylight.CharacterCollection.GetMainDBDPlayers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x549b7f0
	struct ASlasherPlayer* GetKiller(); // Function DeadByDaylight.CharacterCollection.GetKiller // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x549b730
	struct TArray<struct ADBDPlayer*> GetAllDBDPlayers(); // Function DeadByDaylight.CharacterCollection.GetAllDBDPlayers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x549b1b0
};

// Class DeadByDaylight.CharacterCollectionUtilities
// Size: 0x30 (Inherited: 0x30)
struct UCharacterCollectionUtilities : UBlueprintFunctionLibrary {

	int32_t GetNumberOfInjuredHookedOrDyingSurvivors(struct UObject* WorldContextObject); // Function DeadByDaylight.CharacterCollectionUtilities.GetNumberOfInjuredHookedOrDyingSurvivors // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x549b8f0
	struct ASlasherPlayer* GetKiller(struct UObject* WorldContextObject); // Function DeadByDaylight.CharacterCollectionUtilities.GetKiller // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x549b760
	struct TSet<struct ACamperPlayer*> GetInGameSurvivorsByRef(struct UObject* WorldContextObject); // Function DeadByDaylight.CharacterCollectionUtilities.GetInGameSurvivorsByRef // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x549b6a0
	struct TArray<struct ADBDPlayer*> GetInGameSurvivorsAsPlayers(struct UObject* WorldContextObject); // Function DeadByDaylight.CharacterCollectionUtilities.GetInGameSurvivorsAsPlayers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x549b5d0
	struct TArray<struct ACamperPlayer*> GetInGameSurvivors(struct UObject* WorldContextObject); // Function DeadByDaylight.CharacterCollectionUtilities.GetInGameSurvivors // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x549b500
	struct TArray<struct ADBDPlayer*> GetInGamePlayers(struct UObject* WorldContextObject); // Function DeadByDaylight.CharacterCollectionUtilities.GetInGamePlayers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x549b430
	struct TArray<struct ADBDPlayer*> GetCharactersByPlayerTeam(enum class EPlayerTeam playerTeam, struct UObject* WorldContextObject); // Function DeadByDaylight.CharacterCollectionUtilities.GetCharactersByPlayerTeam // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x549b320
	struct TArray<struct ADBDPlayer*> GetAllDBDPlayers(struct UObject* WorldContextObject); // Function DeadByDaylight.CharacterCollectionUtilities.GetAllDBDPlayers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x549b250
	struct TSet<struct ACharacter*> GetAllCharacters(struct UObject* WorldContextObject); // Function DeadByDaylight.CharacterCollectionUtilities.GetAllCharacters // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x549b070
};

// Class DeadByDaylight.CharacterCollisionsUtilities
// Size: 0x30 (Inherited: 0x30)
struct UCharacterCollisionsUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.CharacterDataSubsystem
// Size: 0x38 (Inherited: 0x38)
struct UCharacterDataSubsystem : UGameInstanceSubsystem {
};

// Class DeadByDaylight.CharacterHelper
// Size: 0x30 (Inherited: 0x30)
struct UCharacterHelper : UObject {

	struct FCharmIdSlot SetCharmSlot(struct ADBDPlayerState* PlayerState, struct FName& CharmId, int32_t slotIndex); // Function DeadByDaylight.CharacterHelper.SetCharmSlot // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x54a1eb0
	struct TArray<struct FOutfitData> GetOutfitsByCharacterID(struct FString characterId); // Function DeadByDaylight.CharacterHelper.GetOutfitsByCharacterID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54a1360
	void GetOutfitComposition(struct FCustomizationItemData& returnHead, struct FCustomizationItemData& returnTorso, struct FCustomizationItemData& returnLegsWeapon, struct FString OutfitId); // Function DeadByDaylight.CharacterHelper.GetOutfitComposition // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x54a1150
	struct TArray<struct FCharacterDescription> GetCharactersByRole(enum class EPlayerRole Role); // Function DeadByDaylight.CharacterHelper.GetCharactersByRole // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54a0cc0
	void GetAllOutfitComponentsOfCharacter(struct TArray<struct FCustomizationItemData>& returnHeads, struct TArray<struct FCustomizationItemData>& returnTorsos, struct TArray<struct FCustomizationItemData>& returnLegsWeapons, struct FString characterId); // Function DeadByDaylight.CharacterHelper.GetAllOutfitComponentsOfCharacter // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x54a0640
	struct TArray<struct FString> GetAllEnabledCharms(); // Function DeadByDaylight.CharacterHelper.GetAllEnabledCharms // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54a0560
};

// Class DeadByDaylight.CharacterInfoScreen
// Size: 0x138 (Inherited: 0x120)
struct UCharacterInfoScreen : UScreenBase {
	char pad_120[0x18]; // 0x120(0x18)

	void OnBackButtonClick(); // Function DeadByDaylight.CharacterInfoScreen.OnBackButtonClick // (Final|Native|Private) // @ game+0x546c3f0
};

// Class DeadByDaylight.CharacterInventoryComponent
// Size: 0x180 (Inherited: 0xb8)
struct UCharacterInventoryComponent : UActorComponent {
	char pad_B8[0x48]; // 0xb8(0x48)
	struct TArray<struct FGameplayTag> _tagsPreventingItemVisibility; // 0x100(0x10)
	char pad_110[0x10]; // 0x110(0x10)
	struct TArray<struct ACollectable*> _inventory; // 0x120(0x10)
	struct TArray<struct UItemAddon*> _generalAddons; // 0x130(0x10)
	struct TArray<struct ACollectable*> _backpackInventory; // 0x140(0x10)
	struct TArray<struct ACollectable*> _localInventory; // 0x150(0x10)
	struct TArray<struct ACollectable*> _localBackpackInventory; // 0x160(0x10)
	struct TArray<struct UItemAddon*> _allAddons; // 0x170(0x10)

	void StoreItem(); // Function DeadByDaylight.CharacterInventoryComponent.StoreItem // (Final|Native|Public|BlueprintCallable) // @ game+0x54a20b0
	struct ACollectable* SpawnAndCollectItem(struct FName ItemId); // Function DeadByDaylight.CharacterInventoryComponent.SpawnAndCollectItem // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a2000
	void OnRep_Inventory(); // Function DeadByDaylight.CharacterInventoryComponent.OnRep_Inventory // (Final|Native|Private) // @ game+0x54a1d10
	void OnRep_GeneralAddons(); // Function DeadByDaylight.CharacterInventoryComponent.OnRep_GeneralAddons // (Final|Native|Private) // @ game+0x54a1cf0
	void OnRep_BackpackInventory(); // Function DeadByDaylight.CharacterInventoryComponent.OnRep_BackpackInventory // (Final|Native|Private) // @ game+0x54a1cd0
	void Multicast_RemoveFromInventory(struct ACollectable* Item, enum class EInventoryType inventoryType); // Function DeadByDaylight.CharacterInventoryComponent.Multicast_RemoveFromInventory // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54a1af0
	void Multicast_MoveItemToOtherSlot(struct ACollectable* itemBeingMoved, enum class EInventoryType targetInventoryType); // Function DeadByDaylight.CharacterInventoryComponent.Multicast_MoveItemToOtherSlot // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54a1a20
	void Multicast_ClearAndDestroyInventory(); // Function DeadByDaylight.CharacterInventoryComponent.Multicast_ClearAndDestroyInventory // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x4af1ac0
	void Multicast_AddToInventory(struct ACollectable* Item, enum class EInventoryType inventoryType); // Function DeadByDaylight.CharacterInventoryComponent.Multicast_AddToInventory // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54a1950
	bool IsUsingAimItem(); // Function DeadByDaylight.CharacterInventoryComponent.IsUsingAimItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a1920
	bool HasStoredItem(); // Function DeadByDaylight.CharacterInventoryComponent.HasStoredItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a18a0
	bool HasMaximumItemCount(struct ACollectable* Item); // Function DeadByDaylight.CharacterInventoryComponent.HasMaximumItemCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a1800
	bool HasItem(enum class EInventoryType inventoryType); // Function DeadByDaylight.CharacterInventoryComponent.HasItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a1770
	bool HasInInventory(struct ACollectable* Item, enum class EInventoryType inventoryType); // Function DeadByDaylight.CharacterInventoryComponent.HasInInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54a16a0
	bool HasEquippedItem(); // Function DeadByDaylight.CharacterInventoryComponent.HasEquippedItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a1670
	struct FName GetItemID(enum class EInventoryType inventoryType); // Function DeadByDaylight.CharacterInventoryComponent.GetItemID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a1020
	int32_t GetItemCountByID(struct FName ItemId); // Function DeadByDaylight.CharacterInventoryComponent.GetItemCountByID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a0f70
	int32_t GetItemCount(); // Function DeadByDaylight.CharacterInventoryComponent.GetItemCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a0f40
	struct ACollectable* GetItem(enum class EInventoryType inventoryType); // Function DeadByDaylight.CharacterInventoryComponent.GetItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a0eb0
	struct ACollectable* GetFirstItemFromInventory(struct ACollectable* Item, enum class EInventoryType inventoryType); // Function DeadByDaylight.CharacterInventoryComponent.GetFirstItemFromInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54a0de0
	struct TArray<struct UItemAddon*> GetAddons(); // Function DeadByDaylight.CharacterInventoryComponent.GetAddons // (Final|Native|Public|BlueprintCallable) // @ game+0x54a04d0
	struct UItemAddon* GetAddon(struct FName AddonID); // Function DeadByDaylight.CharacterInventoryComponent.GetAddon // (Final|Native|Public|BlueprintCallable) // @ game+0x54a0420
	void EquipItem(); // Function DeadByDaylight.CharacterInventoryComponent.EquipItem // (Final|Native|Public|BlueprintCallable) // @ game+0x54a0370
	void Authority_UseInventoryItem(); // Function DeadByDaylight.CharacterInventoryComponent.Authority_UseInventoryItem // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a0350
	void Authority_RemoveFromInventory(struct ACollectable* Item, enum class EInventoryType inventoryType); // Function DeadByDaylight.CharacterInventoryComponent.Authority_RemoveFromInventory // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a0280
	void Authority_Collect(struct ACollectable* Item, enum class EInventoryType inventoryType); // Function DeadByDaylight.CharacterInventoryComponent.Authority_Collect // (Final|Native|Public|BlueprintCallable) // @ game+0x54a01b0
	void Authority_ClearAndDestroyInventory(); // Function DeadByDaylight.CharacterInventoryComponent.Authority_ClearAndDestroyInventory // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a0190
	void Authority_AddToInventory(struct ACollectable* Item, enum class EInventoryType inventoryType); // Function DeadByDaylight.CharacterInventoryComponent.Authority_AddToInventory // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a00c0
};

// Class DeadByDaylight.ItemsAssetLibrary
// Size: 0x120 (Inherited: 0xb0)
struct UItemsAssetLibrary : UAssetLibrary {
	char pad_B0[0x70]; // 0xb0(0x70)
};

// Class DeadByDaylight.CharacterItemsAssetLibrary
// Size: 0x138 (Inherited: 0x120)
struct UCharacterItemsAssetLibrary : UItemsAssetLibrary {
	char pad_120[0x18]; // 0x120(0x18)
};

// Class DeadByDaylight.CharacterPositionRecorderConfigurator
// Size: 0xd8 (Inherited: 0xc0)
struct UCharacterPositionRecorderConfigurator : UBaseHitValidationConfigurator {
	char pad_C0[0x18]; // 0xc0(0x18)
};

// Class DeadByDaylight.CharacterProgressionManager
// Size: 0x38 (Inherited: 0x30)
struct UCharacterProgressionManager : UObject {
	struct TWeakObjectPtr<struct UDBDGameInstance> _gameInstance; // 0x30(0x08)
};

// Class DeadByDaylight.CharacterStatsHandlerComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UCharacterStatsHandlerComponent : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)

	void ReceiveGameEvent(enum class EDBDScoreTypes scoreType, float Amount, struct AActor* Instigator, struct AActor* Target); // Function DeadByDaylight.CharacterStatsHandlerComponent.ReceiveGameEvent // (Final|Native|Public) // @ game+0x54a1d50
	void OnGameEvent(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.CharacterStatsHandlerComponent.OnGameEvent // (Final|Native|Public|HasOutParms) // @ game+0x54a1bc0
	void InitializePreMatchStats(); // Function DeadByDaylight.CharacterStatsHandlerComponent.InitializePreMatchStats // (Final|Native|Private) // @ game+0x54a18d0
};

// Class DeadByDaylight.CharacterStatsUtilities
// Size: 0x30 (Inherited: 0x30)
struct UCharacterStatsUtilities : UObject {
};

// Class DeadByDaylight.DBDEditorActor
// Size: 0x230 (Inherited: 0x230)
struct ADBDEditorActor : AActor {
};

// Class DeadByDaylight.CharacterTool
// Size: 0x380 (Inherited: 0x230)
struct ACharacterTool : ADBDEditorActor {
	struct TArray<struct ATargetPoint*> SpawnLocations; // 0x230(0x10)
	struct FCharacterToolData _customizationData; // 0x240(0x80)
	struct FCharacterToolSpawnParameters _defaultSpawnParams; // 0x2c0(0x03)
	char pad_2C3[0x1]; // 0x2c3(0x01)
	struct FName _powerSocket; // 0x2c4(0x0c)
	enum class EAttachmentRule _powerAttachmentRule; // 0x2d0(0x01)
	bool _muteAudioInPIE; // 0x2d1(0x01)
	bool _isUsingGameSkeleton; // 0x2d2(0x01)
	char pad_2D3[0x5]; // 0x2d3(0x05)
	struct TSoftClassPtr<UObject> _overallLightingClass; // 0x2d8(0x30)
	struct FNamedButton _showHelp; // 0x308(0x18)
	struct TMap<struct ADBDMenuPlayer*, struct FCharacterToolSpawnParameters> _characters; // 0x320(0x50)
	struct AActor* _lighting; // 0x370(0x08)
	char pad_378[0x8]; // 0x378(0x08)
};

// Class DeadByDaylight.CharacterToolAnimation
// Size: 0x2d0 (Inherited: 0x2c0)
struct UCharacterToolAnimation : UAnimInstance {
	struct TArray<struct FCharacterToolItemData> SelectedItems; // 0x2c0(0x10)
};

// Class DeadByDaylight.CharacterUtilities
// Size: 0x30 (Inherited: 0x30)
struct UCharacterUtilities : UBlueprintFunctionLibrary {

	struct FVector GetFeetPositionAtTargetLocation(struct ACharacter* Character, struct FVector& Location); // Function DeadByDaylight.CharacterUtilities.GetFeetPositionAtTargetLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x54a58e0
	struct FVector GetFeetPosition(struct ACharacter* Character); // Function DeadByDaylight.CharacterUtilities.GetFeetPosition // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x54a5840
	struct FVector GetActorLocationFromFeetLocation(struct ACharacter* Character, struct FVector& FeetLocation); // Function DeadByDaylight.CharacterUtilities.GetActorLocationFromFeetLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x54a52b0
};

// Class DeadByDaylight.CharacterXPManager
// Size: 0x110 (Inherited: 0x30)
struct UCharacterXPManager : UObject {
	char pad_30[0x18]; // 0x30(0x18)
	struct TWeakObjectPtr<struct UDBDGameInstance> _gameInstance; // 0x48(0x08)
	char pad_50[0xc0]; // 0x50(0xc0)
};

// Class DeadByDaylight.ChargeableComponent
// Size: 0x328 (Inherited: 0xb8)
struct UChargeableComponent : UActorComponent {
	struct FMulticastInlineDelegate OnInteractionEmptiedEvent; // 0xb8(0x10)
	char pad_C8[0x18]; // 0xc8(0x18)
	struct FMulticastInlineDelegate OnInteractionCompletionStateChanged; // 0xe0(0x10)
	char pad_F0[0x18]; // 0xf0(0x18)
	struct FMulticastInlineDelegate SkillCheckResponseAestheticDelegate; // 0x108(0x10)
	struct FMulticastInlineDelegate SkillCheckResponseAuthorityDelegate; // 0x118(0x10)
	struct FMulticastInlineDelegate ChargeAppliedAuthorityDelegate; // 0x128(0x10)
	struct FMulticastInlineDelegate ChargeableCompletionPercentChangeAuthorityDelegate; // 0x138(0x10)
	struct FMulticastInlineDelegate ChargeableCompletionPercentChangeCosmeticDelegate; // 0x148(0x10)
	struct FMulticastInlineDelegate DechargeBeginDelegate; // 0x158(0x10)
	struct FMulticastInlineDelegate DechargeEndDelegate; // 0x168(0x10)
	bool AllowSkillChecksAtFullCharge; // 0x178(0x01)
	char pad_179[0x7]; // 0x179(0x07)
	struct FString ChargeableComponentID; // 0x180(0x10)
	float DechargeDelay; // 0x190(0x04)
	float StartingChargePercent; // 0x194(0x04)
	struct FSpeedBasedNetSyncedValue _currentCharge; // 0x198(0x38)
	char pad_1D0[0x10]; // 0x1d0(0x10)
	struct FDBDTimer _skillCheckFailurePenaltyTimer; // 0x1e0(0x28)
	struct FDBDTimer _dechargeTimer; // 0x208(0x28)
	struct TArray<struct FChargeData> _chargesThisFrame; // 0x230(0x10)
	struct TArray<struct FChargeData> _redirectedChargesThisFrame; // 0x240(0x10)
	struct TMap<uint32_t, struct UChargeStrategy*> _activeChargeStrategies; // 0x250(0x50)
	struct TArray<struct AActor*> _instigatorsSinceEmpty; // 0x2a0(0x10)
	struct TMap<struct FName, float> _tunableValueMap; // 0x2b0(0x50)
	bool _isCharging; // 0x300(0x01)
	char pad_301[0x7]; // 0x301(0x07)
	struct TArray<int32_t> _playersWhoDidSkillCheck; // 0x308(0x10)
	float _dechargeRate; // 0x318(0x04)
	bool _enableAddCharge; // 0x31c(0x01)
	bool _enableSkillCheckFailurePenalty; // 0x31d(0x01)
	bool _isDecharging; // 0x31e(0x01)
	bool _stopDechargingWhenComplete; // 0x31f(0x01)
	char pad_320[0x8]; // 0x320(0x08)

	void SetSecondsToCharge(float SecondsToCharge); // Function DeadByDaylight.ChargeableComponent.SetSecondsToCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x54a6c90
	void SetDechargeRate(float dechargeRate); // Function DeadByDaylight.ChargeableComponent.SetDechargeRate // (Final|Native|Public|BlueprintCallable) // @ game+0x54a6c10
	void OnRep_CurrentCharge(); // Function DeadByDaylight.ChargeableComponent.OnRep_CurrentCharge // (Final|Native|Private) // @ game+0x4d8a5b0
	void OnCurrentChargeChanged(float value); // Function DeadByDaylight.ChargeableComponent.OnCurrentChargeChanged // (Final|Native|Private) // @ game+0x54a66c0
	void Multicast_SetPermanentCharge(float ChargePercent); // Function DeadByDaylight.ChargeableComponent.Multicast_SetPermanentCharge // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54a6630
	void Multicast_OnEmptied(); // Function DeadByDaylight.ChargeableComponent.Multicast_OnEmptied // (Final|Net|NetReliableNative|Event|NetMulticast|Private|Const) // @ game+0x4aa7040
	void Multicast_OnCompleteChanged(bool COMPLETED); // Function DeadByDaylight.ChargeableComponent.Multicast_OnCompleteChanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private|Const) // @ game+0x4d62570
	bool IsSkillCheckTimePenaltyActive(); // Function DeadByDaylight.ChargeableComponent.IsSkillCheckTimePenaltyActive // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a6600
	bool IsChargeComplete(); // Function DeadByDaylight.ChargeableComponent.IsChargeComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a6530
	void IncreaseMaxCharge(float percent); // Function DeadByDaylight.ChargeableComponent.IncreaseMaxCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x54a64b0
	bool HasPlayerDoneSkillCheck(int32_t playerID); // Function DeadByDaylight.ChargeableComponent.HasPlayerDoneSkillCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a6370
	float GetTunableValue(struct FName TunableValueID); // Function DeadByDaylight.ChargeableComponent.GetTunableValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a61c0
	float GetPlayerCountPenaltyModifier(int32_t PlayerCount); // Function DeadByDaylight.ChargeableComponent.GetPlayerCountPenaltyModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a5d30
	float GetPermanentChargePercent(); // Function DeadByDaylight.ChargeableComponent.GetPermanentChargePercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a5cd0
	float GetPercentComplete(); // Function DeadByDaylight.ChargeableComponent.GetPercentComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a5c00
	float GetMaxCharge(); // Function DeadByDaylight.ChargeableComponent.GetMaxCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a5b00
	float GetCurrentCharge(); // Function DeadByDaylight.ChargeableComponent.GetCurrentCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a5810
	float GetChargingSpeed(); // Function DeadByDaylight.ChargeableComponent.GetChargingSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a57e0
	float GetChargeRemaining(); // Function DeadByDaylight.ChargeableComponent.GetChargeRemaining // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54a56e0
	void Authority_SetEnableSkillCheckFailurePenalty(bool enable); // Function DeadByDaylight.ChargeableComponent.Authority_SetEnableSkillCheckFailurePenalty // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a5220
	void Authority_SetEnableAddCharge(bool enable); // Function DeadByDaylight.ChargeableComponent.Authority_SetEnableAddCharge // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a5190
	void Authority_Reset(); // Function DeadByDaylight.ChargeableComponent.Authority_Reset // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a50e0
	void Authority_ApplyStartingCharge(); // Function DeadByDaylight.ChargeableComponent.Authority_ApplyStartingCharge // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a4fa0
	void Authority_AddChargePercent(float ChargePercent, struct AActor* Instigator, bool BypassSkillCheckFail, bool IsOneTimeIncrease, bool isChargeWithItem); // Function DeadByDaylight.ChargeableComponent.Authority_AddChargePercent // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a4de0
	void Authority_AddCharge(float ChargeAmount, struct AActor* Instigator, bool BypassSkillCheckFail, bool IsOneTimeIncrease, bool isChargeWithItem); // Function DeadByDaylight.ChargeableComponent.Authority_AddCharge // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54a4b00
};

// Class DeadByDaylight.ChargeableProgressProviderComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UChargeableProgressProviderComponent : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class DeadByDaylight.ChargedAttackStateComponent
// Size: 0xc0 (Inherited: 0xb8)
struct UChargedAttackStateComponent : UActorComponent {
	char pad_B8[0x8]; // 0xb8(0x08)

	void SetIsCharging(bool IsCharging); // Function DeadByDaylight.ChargedAttackStateComponent.SetIsCharging // (Final|Native|Public|BlueprintCallable) // @ game+0x54ae1f0
	void SetChargingPercent(float ChargePercent); // Function DeadByDaylight.ChargedAttackStateComponent.SetChargingPercent // (Final|Native|Public|BlueprintCallable) // @ game+0x54adfd0
	bool GetIsCharging(); // Function DeadByDaylight.ChargedAttackStateComponent.GetIsCharging // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ac9d0
	float GetChargingPercent(); // Function DeadByDaylight.ChargedAttackStateComponent.GetChargingPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ac8a0
};

// Class DeadByDaylight.ChargerComponent
// Size: 0x138 (Inherited: 0xb8)
struct UChargerComponent : UActorComponent {
	char pad_B8[0x8]; // 0xb8(0x08)
	struct FString ChargerComponentID; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnChargeStateChange; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnChargePercentChange; // 0xe0(0x10)
	char pad_F0[0x18]; // 0xf0(0x18)
	enum class EEnergyTypeEnum EnergyType; // 0x108(0x01)
	char pad_109[0x3]; // 0x109(0x03)
	float _currentEnergyLevel; // 0x10c(0x04)
	float _maxEnergyLevel; // 0x110(0x04)
	char pad_114[0x24]; // 0x114(0x24)

	void UseEnergy(float Seconds, float energyUseModifier); // Function DeadByDaylight.ChargerComponent.UseEnergy // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54ae630
	void SetNormalizedEnergyLevel(float EnergyLevel); // Function DeadByDaylight.ChargerComponent.SetNormalizedEnergyLevel // (Native|Public|BlueprintCallable) // @ game+0x54ae430
	void SetMaxEnergyLevel(float EnergyLevel); // Function DeadByDaylight.ChargerComponent.SetMaxEnergyLevel // (Native|Public|BlueprintCallable) // @ game+0x54ae3a0
	void SetEnergyLevel(float EnergyLevel); // Function DeadByDaylight.ChargerComponent.SetEnergyLevel // (Native|Public|BlueprintCallable) // @ game+0x54ae160
	void Reset(); // Function DeadByDaylight.ChargerComponent.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x54adfb0
	void OnRep_EnergyLevel(float previousEnergyLevel); // Function DeadByDaylight.ChargerComponent.OnRep_EnergyLevel // (Final|Native|Private) // @ game+0x54adc00
	bool HasCharge(); // Function DeadByDaylight.ChargerComponent.HasCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ace30
	float GetNormalizedEnergyLevel(); // Function DeadByDaylight.ChargerComponent.GetNormalizedEnergyLevel // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54acd80
	float GetMaxEnergyLevel(); // Function DeadByDaylight.ChargerComponent.GetMaxEnergyLevel // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54aca90
	float GetEnergyLevel(); // Function DeadByDaylight.ChargerComponent.GetEnergyLevel // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ac950
};

// Class DeadByDaylight.ChargeStrategy
// Size: 0x48 (Inherited: 0x30)
struct UChargeStrategy : UObject {
	char pad_30[0x10]; // 0x30(0x10)
	bool _shouldApplyRedirectedChargeNormally; // 0x40(0x01)
	bool _shouldBroadcastChargeApplied; // 0x41(0x01)
	bool _shouldApplyModifiersToRedirectedCharge; // 0x42(0x01)
	bool _shouldAllowChargeFromItem; // 0x43(0x01)
	bool _shouldRedirectSkillcheckChargePenalty; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
};

// Class DeadByDaylight.Charm
// Size: 0x278 (Inherited: 0x230)
struct ACharm : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct UDBDSkeletalMeshComponentBudgeted* _skeletalMeshComponent; // 0x238(0x08)
	char pad_240[0x18]; // 0x240(0x18)
	struct AItemVfx* _actorVfx; // 0x258(0x08)
	char pad_260[0x18]; // 0x260(0x18)

	void BeginDestroySequence_Internal(); // Function DeadByDaylight.Charm.BeginDestroySequence_Internal // (Native|Event|Protected|BlueprintEvent) // @ game+0x54ac490
};

// Class DeadByDaylight.CharmAttachable
// Size: 0x30 (Inherited: 0x30)
struct UCharmAttachable : UInterface {
};

// Class DeadByDaylight.CharmAttacher
// Size: 0x268 (Inherited: 0x230)
struct ACharmAttacher : AActor {
	struct FMulticastInlineDelegate OnAttachedOnActor; // 0x230(0x10)
	struct FMulticastInlineDelegate OnCharmAnimationTagsChanged; // 0x240(0x10)
	struct UDBDSkeletalMeshComponentBudgeted* _chain; // 0x250(0x08)
	struct ACharm* _attachedCharm; // 0x258(0x08)
	char pad_260[0x8]; // 0x260(0x08)

	struct USkeletalMeshComponent* GetSkeletalMeshComponentAttachedOn(); // Function DeadByDaylight.CharmAttacher.GetSkeletalMeshComponentAttachedOn // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54acdc0
	struct ACharm* GetAttachedCharm(); // Function DeadByDaylight.CharmAttacher.GetAttachedCharm // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ac880
	struct FCharmAttacherAnimationTweak GetAnimationTweak(); // Function DeadByDaylight.CharmAttacher.GetAnimationTweak // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ac830
	struct AActor* GetActorAttachedOn(); // Function DeadByDaylight.CharmAttacher.GetActorAttachedOn // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ac800
	void DispatchOnCharmAnimationTagsChanged(); // Function DeadByDaylight.CharmAttacher.DispatchOnCharmAnimationTagsChanged // (Final|Native|Private) // @ game+0x54ac7e0
	void BindOnCharmAnimationTagsChanged(); // Function DeadByDaylight.CharmAttacher.BindOnCharmAnimationTagsChanged // (Final|Native|Private) // @ game+0x54ac4b0
};

// Class DeadByDaylight.CharmSpawnerComponent
// Size: 0xe8 (Inherited: 0xb8)
struct UCharmSpawnerComponent : UActorComponent {
	struct FName SocketRootName; // 0xb8(0x0c)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct TArray<struct FCharmSlot> CharmSlots; // 0xc8(0x10)
	struct FVector ScaleCharm; // 0xd8(0x0c)
	int32_t _forcedLOD; // 0xe4(0x04)

	void ReplaceCharmTextures(struct TArray<struct FCharmIdSlot>& Customization); // Function DeadByDaylight.CharmSpawnerComponent.ReplaceCharmTextures // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x54adf00
};

// Class DeadByDaylight.ChaseComponent
// Size: 0x128 (Inherited: 0xb8)
struct UChaseComponent : UActorComponent {
	struct FMulticastInlineDelegate OnChaseStarted; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnChaseEnded; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnAllChaseEnded; // 0xd8(0x10)
	struct FMulticastInlineDelegate OnIsInChaseChanged; // 0xe8(0x10)
	struct FTagStateBool _isInChase; // 0xf8(0x30)

	void OnRep_IsInChase(); // Function DeadByDaylight.ChaseComponent.OnRep_IsInChase // (Native|Protected) // @ game+0x4aa7040
	bool IsInChase(); // Function DeadByDaylight.ChaseComponent.IsInChase // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ad000
};

// Class DeadByDaylight.ChaseeCharacterComponent
// Size: 0x190 (Inherited: 0x128)
struct UChaseeCharacterComponent : UChaseComponent {
	char pad_128[0x8]; // 0x128(0x08)
	float _totalChaseTimeThisMatchDebugReplicated; // 0x130(0x04)
	char pad_134[0x5c]; // 0x134(0x5c)

	void Authority_OnLevelReadyToPlay(); // Function DeadByDaylight.ChaseeCharacterComponent.Authority_OnLevelReadyToPlay // (Final|Native|Private) // @ game+0x54ac3c0
	void Authority_OnGeneratorPercentChanged(struct UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete); // Function DeadByDaylight.ChaseeCharacterComponent.Authority_OnGeneratorPercentChanged // (Final|Native|Private) // @ game+0x54ac2b0
};

// Class DeadByDaylight.ChaserCharacterComponent
// Size: 0x200 (Inherited: 0x128)
struct UChaserCharacterComponent : UChaseComponent {
	char pad_128[0x10]; // 0x128(0x10)
	struct UDBDPawnSensingComponent* _camperSensor; // 0x138(0x08)
	struct TMap<struct ADBDPlayer*, struct FChaseUpdateInfo> _chaseUpdateInfo; // 0x140(0x50)
	struct TArray<struct ADBDPlayer*> _chasedPlayers; // 0x190(0x10)
	struct TArray<struct ADBDPlayer*> _authority_survivorsWhoStunnedKillerByPalletDuringChase; // 0x1a0(0x10)
	char pad_1B0[0x30]; // 0x1b0(0x30)
	struct FGameplayTagContainer _preventChaseTags; // 0x1e0(0x20)

	void OnKillerLocallyObservedChanged(bool locallyObserved); // Function DeadByDaylight.ChaserCharacterComponent.OnKillerLocallyObservedChanged // (Final|Native|Private) // @ game+0x54adae0
	void Multicast_OnChaseStart(struct ACamperPlayer* Survivor); // Function DeadByDaylight.ChaserCharacterComponent.Multicast_OnChaseStart // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54ad7f0
	void Multicast_OnChaseEnd(struct ACamperPlayer* Survivor, struct FChaseUpdateInfo ChaseUpdateInfo); // Function DeadByDaylight.ChaserCharacterComponent.Multicast_OnChaseEnd // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54ad690
	void Multicast_OnAllChaseEnd(); // Function DeadByDaylight.ChaserCharacterComponent.Multicast_OnAllChaseEnd // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x4af1ae0
	void Authority_OnChaseTargetFound(struct APawn* Pawn); // Function DeadByDaylight.ChaserCharacterComponent.Authority_OnChaseTargetFound // (Final|Native|Private) // @ game+0x54ac0c0
};

// Class DeadByDaylight.ChatManager
// Size: 0x250 (Inherited: 0x230)
struct AChatManager : AActor {
	struct UDBDGameInstance* _gameInstance; // 0x230(0x08)
	char pad_238[0x18]; // 0x238(0x18)

	void Multicast_DisplayMessage(struct FString chatIdentifier, int32_t PlayerIndex, struct FString MirrorsId, struct FString Msg); // Function DeadByDaylight.ChatManager.Multicast_DisplayMessage // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54ad3b0
};

// Class DeadByDaylight.ChatSimulator
// Size: 0x50 (Inherited: 0x30)
struct UChatSimulator : UObject {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class DeadByDaylight.CheatUtilities
// Size: 0x30 (Inherited: 0x30)
struct UCheatUtilities : UObject {
};

// Class DeadByDaylight.ChunkingManager
// Size: 0x68 (Inherited: 0x30)
struct UChunkingManager : UObject {
	struct UDBDGameInstance* _gameInstance; // 0x30(0x08)
	char pad_38[0x30]; // 0x38(0x30)
};

// Class DeadByDaylight.CinematicManager
// Size: 0x78 (Inherited: 0x30)
struct UCinematicManager : UObject {
	char pad_30[0x30]; // 0x30(0x30)
	struct TArray<struct FCinematic> _cinematicQueue; // 0x60(0x10)
	struct UBackendCinematicContainer* _backendContainer; // 0x70(0x08)

	void PlaySingle(struct FCinematic& Cinematic); // Function DeadByDaylight.CinematicManager.PlaySingle // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x54add80
	void PlayMultiple(struct TArray<struct FCinematic>& Cinematics); // Function DeadByDaylight.CinematicManager.PlayMultiple // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x54adca0
	bool HasCinematicToPlay(); // Function DeadByDaylight.CinematicManager.HasCinematicToPlay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ace60
	struct FCinematic GetNextCinematicToPlay(); // Function DeadByDaylight.CinematicManager.GetNextCinematicToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x54accd0
	void CancelAllCinematicToPlay(); // Function DeadByDaylight.CinematicManager.CancelAllCinematicToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x54ac7a0
};

// Class DeadByDaylight.ClientBloodwebContentAdapter
// Size: 0x70 (Inherited: 0x60)
struct UClientBloodwebContentAdapter : UBaseBloodwebContentAdapter {
	struct UBloodwebGenerator* _bloodwebBuilder; // 0x60(0x08)
	char pad_68[0x8]; // 0x68(0x08)
};

// Class DeadByDaylight.ClientStartupInitializerInterface
// Size: 0x30 (Inherited: 0x30)
struct UClientStartupInitializerInterface : UInterface {
};

// Class DeadByDaylight.ClipManager
// Size: 0x398 (Inherited: 0x230)
struct AClipManager : AActor {
	struct TArray<struct UDBDClipRegionComponent*> _clippingZones; // 0x230(0x10)
	struct TSet<struct UMeshComponent*> _meshComponents; // 0x240(0x50)
	struct TArray<struct FMaterialOriginalState> _dissolvedMeshes; // 0x290(0x10)
	struct TMap<struct UMaterialInterface*, struct UMaterialInterface*> _normal2dissolve; // 0x2a0(0x50)
	struct TMap<struct UMaterialInterface*, struct FStaticMeshesArrayForClip> _normal2dissolveStaticMeshes; // 0x2f0(0x50)
	struct TMap<struct UMaterialInterface*, struct UMaterialInterface*> _dissolve2normal; // 0x340(0x50)
	struct UDataTable* _sphericalDissolveMaterials; // 0x390(0x08)

	void SphericalDissolveAt(struct FVector Location, float Radius); // Function DeadByDaylight.ClipManager.SphericalDissolveAt // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x54ae550
	void RemoveDissolveMaterials(); // Function DeadByDaylight.ClipManager.RemoveDissolveMaterials // (Final|Native|Public|BlueprintCallable) // @ game+0x54adee0
};

// Class DeadByDaylight.CollectableAudioComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UCollectableAudioComponent : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)

	void PostAudioEvent(struct FString audioCall); // Function DeadByDaylight.CollectableAudioComponent.PostAudioEvent // (Final|Native|Private) // @ game+0x54b5a20
	void PlayerPickedUpCollectable(struct ADBDPlayer* Player); // Function DeadByDaylight.CollectableAudioComponent.PlayerPickedUpCollectable // (Final|Native|Private) // @ game+0x54b5990
	void OnItemDropped(enum class EItemDropType dropType); // Function DeadByDaylight.CollectableAudioComponent.OnItemDropped // (Final|Native|Private) // @ game+0x54b58f0
	void OnChargeEmpty(); // Function DeadByDaylight.CollectableAudioComponent.OnChargeEmpty // (Final|Native|Private) // @ game+0x54b57e0
	void EnableComponent(); // Function DeadByDaylight.CollectableAudioComponent.EnableComponent // (Final|Native|Private) // @ game+0x54b5330
	void AddonConsumed(struct UItemAddon* addon); // Function DeadByDaylight.CollectableAudioComponent.AddonConsumed // (Final|Native|Private) // @ game+0x54b5120
};

// Class DeadByDaylight.CollectableCollection
// Size: 0x100 (Inherited: 0xb8)
struct UCollectableCollection : UActorComponent {
	struct TArray<struct ACollectable*> _collectables; // 0xb8(0x10)
	char pad_C8[0x38]; // 0xc8(0x38)
};

// Class DeadByDaylight.CombinedPartyFriendFacade
// Size: 0x168 (Inherited: 0x30)
struct UCombinedPartyFriendFacade : UObject {
	char pad_30[0x138]; // 0x30(0x138)
};

// Class DeadByDaylight.CombinedSpecialEventDataUtilities
// Size: 0x30 (Inherited: 0x30)
struct UCombinedSpecialEventDataUtilities : UBlueprintFunctionLibrary {

	struct FName GetSpecialMusicState(struct FCombinedSpecialEventData& Data); // Function DeadByDaylight.CombinedSpecialEventDataUtilities.GetSpecialMusicState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x54b55f0
	struct FColor GetObjectOutlineColour(struct FCombinedSpecialEventData& Data); // Function DeadByDaylight.CombinedSpecialEventDataUtilities.GetObjectOutlineColour // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x54b5410
};

// Class DeadByDaylight.CommentatorActorBase
// Size: 0x238 (Inherited: 0x230)
struct ACommentatorActorBase : AActor {
	struct UAkComponent* _audioComponent; // 0x230(0x08)

	void OnAudioStarted(); // Function DeadByDaylight.CommentatorActorBase.OnAudioStarted // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnAudioEnded(); // Function DeadByDaylight.CommentatorActorBase.OnAudioEnded // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.CommentatorAudioData
// Size: 0x98 (Inherited: 0x38)
struct UCommentatorAudioData : UDataAsset {
	struct TMap<enum class ECommentatorContextCode, struct FCommentatorAudioContext> _commentatorAudioContexts; // 0x38(0x50)
	struct ACommentatorActorBase* _commentatorActorClass; // 0x88(0x08)
	struct UCommentatorSpawnStrategy* _commentatorSpawnStrategy; // 0x90(0x08)
};

// Class DeadByDaylight.CommentatorSpawnStrategy
// Size: 0x30 (Inherited: 0x30)
struct UCommentatorSpawnStrategy : UObject {
};

// Class DeadByDaylight.CommentatorSubsystem
// Size: 0xc0 (Inherited: 0x38)
struct UCommentatorSubsystem : UGameInstanceSubsystem {
	char pad_38[0x88]; // 0x38(0x88)

	void OnCommentatorAudioFinished(enum class EAkCallbackType CallbackType, struct UAkCallbackInfo* CallbackInfo); // Function DeadByDaylight.CommentatorSubsystem.OnCommentatorAudioFinished // (Final|Native|Private) // @ game+0x54b5800
	void EnqueueMenuAudioContext(enum class ECommentatorContextCode contextCode); // Function DeadByDaylight.CommentatorSubsystem.EnqueueMenuAudioContext // (Final|Native|Public|BlueprintCallable) // @ game+0x54b5350
	void EnqueueInGameAudioContext(enum class ECommentatorContextCode contextCode); // Function DeadByDaylight.CommentatorSubsystem.EnqueueInGameAudioContext // (Final|Native|Public|BlueprintCallable) // @ game+0x54b5350
};

// Class DeadByDaylight.ConeAroundDirectionCameraStrategy
// Size: 0x58 (Inherited: 0x30)
struct UConeAroundDirectionCameraStrategy : UObject {
	char pad_30[0x18]; // 0x30(0x18)
	float _maxPitchDifference; // 0x48(0x04)
	float _maxYawDifference; // 0x4c(0x04)
	float _maxRollDifference; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class DeadByDaylight.ConnectionStatusSubsystem
// Size: 0x118 (Inherited: 0x38)
struct UConnectionStatusSubsystem : UGameInstanceSubsystem {
	char pad_38[0xe0]; // 0x38(0xe0)
};

// Class DeadByDaylight.ConsentManager
// Size: 0xb0 (Inherited: 0x30)
struct UConsentManager : UObject {
	char pad_30[0x80]; // 0x30(0x80)
};

// Class DeadByDaylight.ConstrainAspectRatioComponent
// Size: 0x170 (Inherited: 0xb8)
struct UConstrainAspectRatioComponent : UActorComponent {
	char pad_B8[0xb8]; // 0xb8(0xb8)

	void SetCinematicMode(bool cinematicMode); // Function DeadByDaylight.ConstrainAspectRatioComponent.SetCinematicMode // (Final|Native|Public|BlueprintCallable) // @ game+0x54b5ac0
	void OnIntroCompleted(); // Function DeadByDaylight.ConstrainAspectRatioComponent.OnIntroCompleted // (Final|Native|Private) // @ game+0x54b58d0
	struct FIntPoint GetCameraConstrainedViewSize(); // Function DeadByDaylight.ConstrainAspectRatioComponent.GetCameraConstrainedViewSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54b53d0
	void DBD_ToggleBlackBars(int32_t Option); // Function DeadByDaylight.ConstrainAspectRatioComponent.DBD_ToggleBlackBars // (Final|Exec|Native|Private) // @ game+0x46a25e0
};

// Class DeadByDaylight.ContainsItemInterface
// Size: 0x30 (Inherited: 0x30)
struct UContainsItemInterface : UInterface {
};

// Class DeadByDaylight.ContentScheduleManager
// Size: 0x140 (Inherited: 0x30)
struct UContentScheduleManager : UObject {
	char pad_30[0x108]; // 0x30(0x108)
	struct UObjectLibrary* _availableMapLibrary; // 0x138(0x08)
};

// Class DeadByDaylight.ContentVersionManager
// Size: 0xf0 (Inherited: 0x38)
struct UContentVersionManager : UGameInstanceSubsystem {
	char pad_38[0xb8]; // 0x38(0xb8)
};

// Class DeadByDaylight.ContextualQuestComponent
// Size: 0xf8 (Inherited: 0xb8)
struct UContextualQuestComponent : UActorComponent {
	char pad_B8[0x28]; // 0xb8(0x28)
	struct TArray<struct FSpecialBehaviourObjectsInfo> _specialBehaviourObjectsInfo; // 0xe0(0x10)
	bool _isInitialized; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)

	void OnSpecialBehaviourSet__DelegateSignature(struct ADBDPlayer* DBDPlayer); // DelegateFunction DeadByDaylight.ContextualQuestComponent.OnSpecialBehaviourSet__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnRep_SpecialBehaviourObjectsInfo(); // Function DeadByDaylight.ContextualQuestComponent.OnRep_SpecialBehaviourObjectsInfo // (Final|Native|Private) // @ game+0x54b5970
	void Authority_DebugRemoveSpecialBehaviour(struct FName ID); // Function DeadByDaylight.ContextualQuestComponent.Authority_DebugRemoveSpecialBehaviour // (Final|Native|Public|BlueprintCallable) // @ game+0x54b5290
	void Authority_DebugAddSpecialBehaviour(struct FName ID, int32_t amountRequired); // Function DeadByDaylight.ContextualQuestComponent.Authority_DebugAddSpecialBehaviour // (Final|Native|Public|BlueprintCallable) // @ game+0x54b51b0
};

// Class DeadByDaylight.ControllerPairingManager
// Size: 0x40 (Inherited: 0x30)
struct UControllerPairingManager : UObject {
	struct TWeakObjectPtr<struct UDBDGameInstance> _gameInstance; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
};

// Class DeadByDaylight.CooldownTimerPerkIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UCooldownTimerPerkIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.CoreCursor
// Size: 0x2a0 (Inherited: 0x298)
struct UCoreCursor : UUserWidget {
	struct UScaleBox* CursorScaleBox; // 0x298(0x08)
};

// Class DeadByDaylight.CoreHudRootWidget
// Size: 0x368 (Inherited: 0x298)
struct UCoreHudRootWidget : UUserWidget {
	struct UOverlay* WidgetContainer; // 0x298(0x08)
	struct UOverlay* OuterContainer; // 0x2a0(0x08)
	struct UOverlay* SpectateContainer; // 0x2a8(0x08)
	struct UScaleBox* ScaleHud; // 0x2b0(0x08)
	float UnfocusedOpacity; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct UCurveFloat* Test4kDpiScalingCurve; // 0x2c0(0x08)
	struct UUserWidget* Test4kDpiCurveClass; // 0x2c8(0x08)
	struct UUserWidget* Test4kDpiCurveWidget; // 0x2d0(0x08)
	struct UUserWidget* EquippedItemWidgetClass; // 0x2d8(0x08)
	struct UUserWidget* EquippedPowerWidgetClass; // 0x2e0(0x08)
	struct UUserWidget* ExternalEffectsWidgetClass; // 0x2e8(0x08)
	struct UUserWidget* HudAlertWidgetClass; // 0x2f0(0x08)
	struct UUserWidget* InteractionProgressWidgetClass; // 0x2f8(0x08)
	struct UUserWidget* InteractionPromptsContainerWidgetClass; // 0x300(0x08)
	struct UUserWidget* ItemInteractionWidgetClass; // 0x308(0x08)
	struct UUserWidget* OfferingInteractionWidgetClass; // 0x310(0x08)
	struct UUserWidget* PerksContainerWidgetClass; // 0x318(0x08)
	struct UUserWidget* PingStatusWidgetClass; // 0x320(0x08)
	struct UUserWidget* PlayerStatusesWidgetClass; // 0x328(0x08)
	struct UUserWidget* ScreenIndicatorWidgetClass; // 0x330(0x08)
	struct UUserWidget* StartSequenceWidgetClass; // 0x338(0x08)
	struct UUserWidget* StatusEffectWidgetClass; // 0x340(0x08)
	struct TArray<struct TScriptInterface<ICoreBaseViewInterface>> _coreBaseViewInterfaces; // 0x348(0x10)
	struct FMulticastInlineDelegate HUDWidgetsFadeOutCompletedDelegate; // 0x358(0x10)

	void SetWidgetsVisibility(bool visible); // Function DeadByDaylight.CoreHudRootWidget.SetWidgetsVisibility // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void FadeOutWidgets(); // Function DeadByDaylight.CoreHudRootWidget.FadeOutWidgets // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void FadeInWidgets(); // Function DeadByDaylight.CoreHudRootWidget.FadeInWidgets // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void ApplyConstrainedAspectRatio(bool isConstrained, float AspectRatio); // Function DeadByDaylight.CoreHudRootWidget.ApplyConstrainedAspectRatio // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.CrossPlatformManager
// Size: 0x38 (Inherited: 0x30)
struct UCrossPlatformManager : UObject {
	bool _crossPlayAllowedByPlatform; // 0x30(0x01)
	bool _crossPlayAllowedByKraken; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class DeadByDaylight.CrossPromotionManager
// Size: 0x60 (Inherited: 0x38)
struct UCrossPromotionManager : UGameInstanceSubsystem {
	char pad_38[0x28]; // 0x38(0x28)
};

// Class DeadByDaylight.GeneratorDrivenActor
// Size: 0x258 (Inherited: 0x230)
struct AGeneratorDrivenActor : AActor {
	float LightPriority; // 0x230(0x04)
	enum class EComponentMobility TargetMobileLightMobility; // 0x234(0x01)
	char pad_235[0x3]; // 0x235(0x03)
	struct TArray<bool> _activated; // 0x238(0x10)
	struct TArray<struct AGenerator*> _generators; // 0x248(0x10)

	void SetSpawnedObject(struct AGenerator* Generator, int32_t generatorId); // Function DeadByDaylight.GeneratorDrivenActor.SetSpawnedObject // (Final|Native|Public|BlueprintCallable) // @ game+0x5535e40
	void OnInitGeneratorDrivenActor(struct AGenerator* Generator, int32_t generatorId); // Function DeadByDaylight.GeneratorDrivenActor.OnInitGeneratorDrivenActor // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnGeneratorRepairedEvent6(bool isAutoCompleted); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent6 // (Final|Native|Private) // @ game+0x5535990
	void OnGeneratorRepairedEvent5(bool isAutoCompleted); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent5 // (Final|Native|Private) // @ game+0x5535900
	void OnGeneratorRepairedEvent4(bool isAutoCompleted); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent4 // (Final|Native|Private) // @ game+0x5535870
	void OnGeneratorRepairedEvent3(bool isAutoCompleted); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent3 // (Final|Native|Private) // @ game+0x55357e0
	void OnGeneratorRepairedEvent2(bool isAutoCompleted); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent2 // (Final|Native|Private) // @ game+0x5535750
	void OnGeneratorRepairedEvent1(bool isAutoCompleted); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent1 // (Final|Native|Private) // @ game+0x55356c0
	void OnGeneratorRepairedEvent0(bool isAutoCompleted); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedEvent0 // (Final|Native|Private) // @ game+0x5535630
	void OnGeneratorRepairedBySurvivorEvent6(struct ADBDPlayer* repairingSurvivor); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent6 // (Final|Native|Private) // @ game+0x55355a0
	void OnGeneratorRepairedBySurvivorEvent5(struct ADBDPlayer* repairingSurvivor); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent5 // (Final|Native|Private) // @ game+0x5535510
	void OnGeneratorRepairedBySurvivorEvent4(struct ADBDPlayer* repairingSurvivor); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent4 // (Final|Native|Private) // @ game+0x5535480
	void OnGeneratorRepairedBySurvivorEvent3(struct ADBDPlayer* repairingSurvivor); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent3 // (Final|Native|Private) // @ game+0x55353f0
	void OnGeneratorRepairedBySurvivorEvent2(struct ADBDPlayer* repairingSurvivor); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent2 // (Final|Native|Private) // @ game+0x5535360
	void OnGeneratorRepairedBySurvivorEvent1(struct ADBDPlayer* repairingSurvivor); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent1 // (Final|Native|Private) // @ game+0x55352d0
	void OnGeneratorRepairedBySurvivorEvent0(struct ADBDPlayer* repairingSurvivor); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivorEvent0 // (Final|Native|Private) // @ game+0x5535240
	void OnGeneratorRepairedBySurvivor(struct ADBDPlayer* repairingSurvivor, int32_t generatorId); // Function DeadByDaylight.GeneratorDrivenActor.OnGeneratorRepairedBySurvivor // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnActivateGeneratorDrivenActor(bool isAutoCompleted, int32_t generatorId); // Function DeadByDaylight.GeneratorDrivenActor.OnActivateGeneratorDrivenActor // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void Multicast_GeneratorRepairedBySurvivor(struct ADBDPlayer* repairingSurvivor, int32_t generatorId); // Function DeadByDaylight.GeneratorDrivenActor.Multicast_GeneratorRepairedBySurvivor // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x5534fd0
	void Multicast_ActivationChecked(bool activated, bool isAutoCompleted, int32_t generatorId); // Function DeadByDaylight.GeneratorDrivenActor.Multicast_ActivationChecked // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x5534eb0
	bool IsValidGeneratorId(int32_t generatorId); // Function DeadByDaylight.GeneratorDrivenActor.IsValidGeneratorId // (Final|Native|Private|Const) // @ game+0x5534de0
	bool IsActivated(int32_t generatorId); // Function DeadByDaylight.GeneratorDrivenActor.IsActivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5534d10
	struct FRandomStream GetSharedTileRandomizer(); // Function DeadByDaylight.GeneratorDrivenActor.GetSharedTileRandomizer // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x5534c70
	void Authority_CheckGeneratorRepairedBySurvivor(struct ADBDPlayer* repairingSurvivor, int32_t generatorId); // Function DeadByDaylight.GeneratorDrivenActor.Authority_CheckGeneratorRepairedBySurvivor // (Final|Native|Public) // @ game+0x5534410
	void Authority_CheckActivation(bool isAutoCompleted, int32_t generatorId); // Function DeadByDaylight.GeneratorDrivenActor.Authority_CheckActivation // (Final|Native|Public) // @ game+0x5534340
};

// Class DeadByDaylight.CrowBomb
// Size: 0x2f0 (Inherited: 0x258)
struct ACrowBomb : AGeneratorDrivenActor {
	float _innerRadius; // 0x258(0x04)
	float _outerRadius; // 0x25c(0x04)
	float _maxTakeoffDelay; // 0x260(0x04)
	int32_t _numCrows; // 0x264(0x04)
	int32_t _crowCenterDistance; // 0x268(0x04)
	int32_t _eliminationSamples; // 0x26c(0x04)
	float _eliminationStddev; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct TSoftClassPtr<UObject> _meshComponentClass; // 0x278(0x30)
	struct TArray<struct UWorldRunawayMeshComponent*> _crows; // 0x2a8(0x10)
	char pad_2B8[0x18]; // 0x2b8(0x18)
	struct USceneComponent* _root; // 0x2d0(0x08)
	struct USceneComponent* _traceStart; // 0x2d8(0x08)
	struct USceneComponent* _traceEnd; // 0x2e0(0x08)
	bool _landed; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)

	void TriggerTakeOff(struct FVector triggerLocation); // Function DeadByDaylight.CrowBomb.TriggerTakeOff // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x54ba030
	void TriggerLand(); // Function DeadByDaylight.CrowBomb.TriggerLand // (Final|Native|Public|BlueprintCallable) // @ game+0x54ba010
};

// Class DeadByDaylight.CurrencyDisplayable
// Size: 0x298 (Inherited: 0x230)
struct ACurrencyDisplayable : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct UDBDSkeletalMeshComponentBudgeted* SkeletalMeshComponent; // 0x238(0x08)
	struct TMap<enum class ECurrencyType, struct USkeletalMesh*> _currencyMeshes; // 0x240(0x50)
	char pad_290[0x8]; // 0x290(0x08)

	void FinishSpawningCurrency(enum class ECurrencyType CurrencyType); // Function DeadByDaylight.CurrencyDisplayable.FinishSpawningCurrency // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void BeginDestroySequence_Internal(); // Function DeadByDaylight.CurrencyDisplayable.BeginDestroySequence_Internal // (Native|Event|Protected|BlueprintEvent) // @ game+0x54ac490
};

// Class DeadByDaylight.CurveFloatNetIdSubsystem
// Size: 0x98 (Inherited: 0x38)
struct UCurveFloatNetIdSubsystem : UGameInstanceSubsystem {
	char pad_38[0x60]; // 0x38(0x60)
};

// Class DeadByDaylight.CustomizationDescription
// Size: 0x48 (Inherited: 0x38)
struct UCustomizationDescription : UDataAsset {
	struct TArray<struct FCustomizedMeshPart> Parts; // 0x38(0x10)
};

// Class DeadByDaylight.CustomizationHelper
// Size: 0x30 (Inherited: 0x30)
struct UCustomizationHelper : UObject {
};

// Class DeadByDaylight.CustomizationPresetController
// Size: 0x30 (Inherited: 0x30)
struct UCustomizationPresetController : UObject {
};

// Class DeadByDaylight.CustomizedAnimationComponent
// Size: 0xd8 (Inherited: 0xb8)
struct UCustomizedAnimationComponent : UActorComponent {
	struct ADBDBasePlayer* _owner; // 0xb8(0x08)
	struct UCustomizedSkeletalMesh* _customizedSkeletalMesh; // 0xc0(0x08)
	struct UAnimInstance* _defaultAnimClass; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)

	void OnCustomizationChanged(); // Function DeadByDaylight.CustomizedAnimationComponent.OnCustomizationChanged // (Final|Native|Private) // @ game+0x54b9c50
};

// Class DeadByDaylight.CustomizedAudioComponent
// Size: 0x218 (Inherited: 0xb8)
struct UCustomizedAudioComponent : UActorComponent {
	struct FMulticastInlineDelegate OnCustomizedAudioSwitchStateChanged; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnOutfitCustomizedAudioStateCollectionChanged; // 0xc8(0x10)
	char pad_D8[0xb0]; // 0xd8(0xb0)
	struct FString AudioCharacterNameDefaultSwitchState; // 0x188(0x10)
	struct FString AudioCharacterSubNameDefaultSwitchState; // 0x198(0x10)
	struct FString AudioCharacterHeadDefaultSwitchState; // 0x1a8(0x10)
	struct FString AudioCharacterClothesDefaultSwitchState; // 0x1b8(0x10)
	struct FString AudioCharacterShoesDefaultSwitchState; // 0x1c8(0x10)
	struct FString AudioCharacterWeaponDefaultSwitchState; // 0x1d8(0x10)
	struct FString AudioCharacterAmbianceDefaultSwitchState; // 0x1e8(0x10)
	struct FString AudioCharacterStateDefaultSwitchState; // 0x1f8(0x10)
	struct FName AudioCharacterDefaultOutfitCollectionState; // 0x208(0x0c)
	char pad_214[0x4]; // 0x214(0x04)

	void OutfitCustomizedAudioChangedDelegate__DelegateSignature(struct FName& outfitAudioStateCollection); // DelegateFunction DeadByDaylight.CustomizedAudioComponent.OutfitCustomizedAudioChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x5e02c90
	struct FName GetOutfitCustomizedAudioCollectionState(); // Function DeadByDaylight.CustomizedAudioComponent.GetOutfitCustomizedAudioCollectionState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54b9b40
	struct FString GetAudioSwitchState(enum class EAudioCustomizationCategory audioCustomizationCategory); // Function DeadByDaylight.CustomizedAudioComponent.GetAudioSwitchState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54b9920
};

// Class DeadByDaylight.CustomizedSkeletalMesh
// Size: 0x430 (Inherited: 0xb8)
struct UCustomizedSkeletalMesh : UActorComponent {
	struct FMulticastInlineDelegate OnMeshSwitchBP; // 0xb8(0x10)
	char pad_C8[0x18]; // 0xc8(0x18)
	struct FMulticastInlineDelegate OnCustomizationReady; // 0xe0(0x10)
	char pad_F0[0x30]; // 0xf0(0x30)
	struct USkinnedMeshComponent* _meshOwner; // 0x120(0x08)
	char pad_128[0x8]; // 0x128(0x08)
	struct TSet<enum class ECustomizationCategory> _ignoredItemCategories; // 0x130(0x50)
	struct TArray<struct USkeletalMeshComponent*> _cosmeticPiecesMesh; // 0x180(0x10)
	struct TMap<enum class ECustomizationCategory, struct USkeletalMeshComponent*> _cosmeticPiecesMeshPerCategory; // 0x190(0x50)
	struct TArray<struct USkeletalMeshComponent*> _slaves; // 0x1e0(0x10)
	struct TMap<enum class ECustomizationCategory, struct AItemVfx*> _itemVfxs; // 0x1f0(0x50)
	char pad_240[0xa0]; // 0x240(0xa0)
	int32_t _characterIdOverride; // 0x2e0(0x04)
	char pad_2E4[0x5c]; // 0x2e4(0x5c)
	struct TMap<enum class ECustomizationCategory, struct FCosmeticPieceMeshLoadingData> _cosmeticPieceMeshesBeingLoaded; // 0x340(0x50)
	char pad_390[0xa0]; // 0x390(0xa0)

	void SetVfxsVisibility(enum class ECustomizationCategory category, bool visible); // Function DeadByDaylight.CustomizedSkeletalMesh.SetVfxsVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x54b9f40
	void SetMeshVisibility(bool visible); // Function DeadByDaylight.CustomizedSkeletalMesh.SetMeshVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x54b9eb0
	void SetMeshOwner(struct USkinnedMeshComponent* Mesh); // Function DeadByDaylight.CustomizedSkeletalMesh.SetMeshOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x54b9e20
	void SetCastShadow(bool CastShadow); // Function DeadByDaylight.CustomizedSkeletalMesh.SetCastShadow // (Final|Native|Public|BlueprintCallable) // @ game+0x54b9d90
	void SetAllVfxsVisibility(bool visible); // Function DeadByDaylight.CustomizedSkeletalMesh.SetAllVfxsVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x54b9d00
	void SetAllAccessoriesVisibility(bool visible); // Function DeadByDaylight.CustomizedSkeletalMesh.SetAllAccessoriesVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x54b9c70
	void OnMeshSwitchEventBP__DelegateSignature(enum class ECustomizationCategory category, struct USkeletalMeshComponent* Mesh); // DelegateFunction DeadByDaylight.CustomizedSkeletalMesh.OnMeshSwitchEventBP__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnCustomizationReadyBP__DelegateSignature(); // DelegateFunction DeadByDaylight.CustomizedSkeletalMesh.OnCustomizationReadyBP__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	bool HasValidCustomization(); // Function DeadByDaylight.CustomizedSkeletalMesh.HasValidCustomization // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54b9c10
	struct USkeletalMeshComponent* GetSkeletalMesh(enum class ECustomizationCategory category); // Function DeadByDaylight.CustomizedSkeletalMesh.GetSkeletalMesh // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54b9b80
	struct USkinnedMeshComponent* GetMeshOwner(); // Function DeadByDaylight.CustomizedSkeletalMesh.GetMeshOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x54b9b10
	struct TArray<struct FName> GetCurrentCustomizationItems(); // Function DeadByDaylight.CustomizedSkeletalMesh.GetCurrentCustomizationItems // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54b9a90
	struct TArray<struct USkeletalMeshComponent*> GetComponents(); // Function DeadByDaylight.CustomizedSkeletalMesh.GetComponents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54b9a00
	void CopyCustomization(struct UCustomizedSkeletalMesh* CopyFrom); // Function DeadByDaylight.CustomizedSkeletalMesh.CopyCustomization // (Final|Native|Public|BlueprintCallable) // @ game+0x54b9890
	bool Contains(struct TArray<struct FName> itemIds); // Function DeadByDaylight.CustomizedSkeletalMesh.Contains // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54b9790
	void ClearAllVfxs(); // Function DeadByDaylight.CustomizedSkeletalMesh.ClearAllVfxs // (Final|Native|Public|BlueprintCallable) // @ game+0x54b9770
};

// Class DeadByDaylight.CustomWidgetWrapperInitializer
// Size: 0x2a8 (Inherited: 0x298)
struct UCustomWidgetWrapperInitializer : UUserWidget {
	struct UCustomWidgetWrapper* ListeningWrapper; // 0x298(0x08)
	char pad_2A0[0x8]; // 0x2a0(0x08)
};

// Class DeadByDaylight.CustomWidgetWrapper
// Size: 0x1a8 (Inherited: 0x158)
struct UCustomWidgetWrapper : UCanvasPanel {
	struct FMulticastInlineDelegate OnVersion; // 0x158(0x10)
	struct FGameplayTag ID; // 0x168(0x0c)
	char pad_174[0x4]; // 0x174(0x04)
	struct UCustomWidgetWrapper* ManuallyParentWrapper; // 0x178(0x08)
	struct TArray<struct UCustomWidgetWrapper*> ManuallyChildWrappers; // 0x180(0x10)
	struct UCustomWidgetWrapperInitializer* InitializerWidget; // 0x190(0x08)
	char pad_198[0x10]; // 0x198(0x10)

	void ApplyVersion(int32_t Version); // Function DeadByDaylight.CustomWidgetWrapper.ApplyVersion // (Native|Public|BlueprintCallable) // @ game+0x54bd600
	void ApplyScale(float Scale); // Function DeadByDaylight.CustomWidgetWrapper.ApplyScale // (Native|Public|BlueprintCallable) // @ game+0x54bd3e0
	void ApplyOpacity(float Opacity); // Function DeadByDaylight.CustomWidgetWrapper.ApplyOpacity // (Native|Public|BlueprintCallable) // @ game+0x54bd350
};

// Class DeadByDaylight.CustomWidgetWrapper_HudEditor
// Size: 0x270 (Inherited: 0x1a8)
struct UCustomWidgetWrapper_HudEditor : UCustomWidgetWrapper {
	float MinOpacity; // 0x1a8(0x04)
	float MaxOpacity; // 0x1ac(0x04)
	float MinScale; // 0x1b0(0x04)
	float MaxScale; // 0x1b4(0x04)
	int32_t NbVersions; // 0x1b8(0x04)
	float HideUnderOpacity; // 0x1bc(0x04)
	struct FColor HiddenStatusTintColor; // 0x1c0(0x04)
	float HiddenStatusOpacity; // 0x1c4(0x04)
	float OverlapAboveSizeRatio; // 0x1c8(0x04)
	char pad_1CC[0x4]; // 0x1cc(0x04)
	struct FGameplayTagContainer IgnoreOverlapIds; // 0x1d0(0x20)
	struct FHudEditorDragFromParentAxisLimit ParentDragLimitX; // 0x1f0(0x14)
	struct FHudEditorDragFromParentAxisLimit ParentDragLimitY; // 0x204(0x14)
	bool IsEditingHudByInput; // 0x218(0x01)
	char pad_219[0x3]; // 0x219(0x03)
	struct FColor OverlapStatusTintColor; // 0x21c(0x04)
	char pad_220[0x50]; // 0x220(0x50)

	float GetScale(); // Function DeadByDaylight.CustomWidgetWrapper_HudEditor.GetScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54be160
	float GetOpacity(); // Function DeadByDaylight.CustomWidgetWrapper_HudEditor.GetOpacity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54be130
	void FlipScreenPosition(); // Function DeadByDaylight.CustomWidgetWrapper_HudEditor.FlipScreenPosition // (Final|Native|Public|BlueprintCallable) // @ game+0x54bde30
	void FlipPositionWithChildLinkWidget(); // Function DeadByDaylight.CustomWidgetWrapper_HudEditor.FlipPositionWithChildLinkWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x54bde10
	void ClampToViewport(); // Function DeadByDaylight.CustomWidgetWrapper_HudEditor.ClampToViewport // (Final|Native|Public|BlueprintCallable) // @ game+0x54bd850
	bool CanEditScale(); // Function DeadByDaylight.CustomWidgetWrapper_HudEditor.CanEditScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54bd780
	bool CanEditOpacity(); // Function DeadByDaylight.CustomWidgetWrapper_HudEditor.CanEditOpacity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54bd740
	void ApplyScaleWithOverlappingWrappers(float Scale, struct UWidget* Widget, struct TArray<struct UCustomWidgetWrapper_HudEditor*>& allEditableWrappers, bool needDetectOverlapping); // Function DeadByDaylight.CustomWidgetWrapper_HudEditor.ApplyScaleWithOverlappingWrappers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x54bd470
	void AddToTranslation(struct FVector2D Translation); // Function DeadByDaylight.CustomWidgetWrapper_HudEditor.AddToTranslation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x54bd2d0
};

// Class DeadByDaylight.CustomWidgetWrapper_InGame
// Size: 0x1d0 (Inherited: 0x1a8)
struct UCustomWidgetWrapper_InGame : UCustomWidgetWrapper {
	int32_t VirtualJoystickIndex; // 0x1a8(0x04)
	char pad_1AC[0x24]; // 0x1ac(0x24)

	void UpdateSettings(); // Function DeadByDaylight.CustomWidgetWrapper_InGame.UpdateSettings // (Final|Native|Public) // @ game+0x54bec60
};

// Class DeadByDaylight.DailyRewardUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDailyRewardUtilities : UObject {
};

// Class DeadByDaylight.DailyRitualsScreen
// Size: 0x180 (Inherited: 0x120)
struct UDailyRitualsScreen : UScreenBase {
	char pad_120[0x60]; // 0x120(0x60)

	void OnRemoveRitual(struct FString ID); // Function DeadByDaylight.DailyRitualsScreen.OnRemoveRitual // (Final|Native|Private) // @ game+0x54be790
	void OnClosed(); // Function DeadByDaylight.DailyRitualsScreen.OnClosed // (Final|Native|Private) // @ game+0x54727d0
	void OnClaimRitual(struct FString ID); // Function DeadByDaylight.DailyRitualsScreen.OnClaimRitual // (Final|Native|Private) // @ game+0x54be4a0
	void OnClaimAllRituals(); // Function DeadByDaylight.DailyRitualsScreen.OnClaimAllRituals // (Final|Native|Private) // @ game+0x54be480
};

// Class DeadByDaylight.DBD_CrossDissolver
// Size: 0xe8 (Inherited: 0xb8)
struct UDBD_CrossDissolver : UActorComponent {
	struct TArray<struct UMaterialInterface*> NewMaterials; // 0xb8(0x10)
	struct TArray<struct USkeletalMeshComponent*> BaseSkeletalMesh; // 0xc8(0x10)
	struct TArray<struct USkeletalMeshComponent*> ClonedSkeletalMeshes; // 0xd8(0x10)

	void MakeClone(); // Function DeadByDaylight.DBD_CrossDissolver.MakeClone // (Final|Native|Public|BlueprintCallable) // @ game+0x54be240
	void KillClone(); // Function DeadByDaylight.DBD_CrossDissolver.KillClone // (Final|Native|Public|BlueprintCallable) // @ game+0x54be220
};

// Class DeadByDaylight.DBD_SoundClipUtil
// Size: 0x180 (Inherited: 0xb8)
struct UDBD_SoundClipUtil : UActorComponent {
	struct TArray<struct FMapMeshToAkAudioEvent> AudioMap; // 0xb8(0x10)
	struct TMap<struct FName, struct FMapMeshToAkAudioEvent> _audioEventMap; // 0xc8(0x50)
	struct TArray<struct FMapSoundsToAvoid> _objectsWhoHavePlayedASound; // 0x118(0x10)
	struct TMap<struct UAkAudioEvent*, float> _nextSoundPlayTime; // 0x128(0x50)
	char pad_178[0x8]; // 0x178(0x08)

	void OnCharacterEnterSoundRegion(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.DBD_SoundClipUtil.OnCharacterEnterSoundRegion // (Final|Native|Protected|HasOutParms) // @ game+0x54be260
	struct UAkAudioEvent* GetAudioEventForMesh(struct UStaticMeshComponent* usm); // Function DeadByDaylight.DBD_SoundClipUtil.GetAudioEventForMesh // (Final|Native|Protected|BlueprintCallable) // @ game+0x54be090
	void Cosmetic_OnSoundTriggered(struct AActor* Actor); // Function DeadByDaylight.DBD_SoundClipUtil.Cosmetic_OnSoundTriggered // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.DBD_SoundEventSpawner
// Size: 0x268 (Inherited: 0x230)
struct ADBD_SoundEventSpawner : AActor {
	struct TArray<struct FDBD_SoundSpawnerData> AtlantaSoundDescriptor; // 0x230(0x10)
	struct TArray<struct FDBD_SoundSpawnerData> SoundDescriptor; // 0x240(0x10)
	char pad_250[0x8]; // 0x250(0x08)
	struct TArray<struct AActor*> _loadedSoundAssets; // 0x258(0x10)

	void OnLoudNoiseTriggered(struct AActor* originator, struct AActor* instigatingActor, struct FVector Location, bool shouldTrack, float& audibleRange, bool isQuickAction, bool isDeceivingNoise); // Function DeadByDaylight.DBD_SoundEventSpawner.OnLoudNoiseTriggered // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x54be540
	void AssetsLoaded(); // Function DeadByDaylight.DBD_SoundEventSpawner.AssetsLoaded // (Final|Native|Protected) // @ game+0x54bd690
};

// Class DeadByDaylight.DBDAggregateCullDistanceVolumes
// Size: 0x230 (Inherited: 0x230)
struct ADBDAggregateCullDistanceVolumes : AActor {

	void SpawnCullDistanceVolumes(); // Function DeadByDaylight.DBDAggregateCullDistanceVolumes.SpawnCullDistanceVolumes // (Final|Native|Public) // @ game+0x54beb70
};

// Class DeadByDaylight.DBDAggregateParticleSystemComponent
// Size: 0x760 (Inherited: 0x700)
struct UDBDAggregateParticleSystemComponent : UParticleSystemComponent {
	float CullAngle; // 0x6f8(0x04)
	float EndFadeDistance; // 0x6fc(0x04)
	struct TSet<struct USceneComponent*> LocatorComponentCache; // 0x700(0x50)
	bool PendingReset; // 0x750(0x01)
	char pad_759[0x7]; // 0x759(0x07)
};

// Class DeadByDaylight.DBDAggregateParticleManager
// Size: 0x230 (Inherited: 0x230)
struct ADBDAggregateParticleManager : AActor {
};

// Class DeadByDaylight.DBDLocatorComponent
// Size: 0x220 (Inherited: 0x220)
struct UDBDLocatorComponent : USceneComponent {
};

// Class DeadByDaylight.DBDAggregateParticleLocatorComponent
// Size: 0x230 (Inherited: 0x220)
struct UDBDAggregateParticleLocatorComponent : UDBDLocatorComponent {
	struct UParticleSystem* Template; // 0x218(0x08)
	struct UParticleSystemComponent* _particleComponent; // 0x220(0x08)
};

// Class DeadByDaylight.DBDAIPlayerController
// Size: 0x660 (Inherited: 0x638)
struct ADBDAIPlayerController : ADBDAIController {
	char pad_638[0x18]; // 0x638(0x18)
	struct TArray<struct UAICharacterBehaviour*> _currentBehaviours; // 0x650(0x10)

	void StopCharacterBehaviour(struct UObject* behaviourClass); // Function DeadByDaylight.DBDAIPlayerController.StopCharacterBehaviour // (Final|Native|Public|BlueprintCallable) // @ game+0x54c4140
	void StopAllCharacterBehaviours(); // Function DeadByDaylight.DBDAIPlayerController.StopAllCharacterBehaviours // (Final|Native|Public|BlueprintCallable) // @ game+0x54c4120
	void StartCharacterBehaviour(struct UObject* behaviourClass, struct UAICharacterBehaviourData* characterBehaviourData); // Function DeadByDaylight.DBDAIPlayerController.StartCharacterBehaviour // (Final|Native|Public|BlueprintCallable) // @ game+0x54c4050
	void ResumeCharacterBehaviour(struct UObject* behaviourClass); // Function DeadByDaylight.DBDAIPlayerController.ResumeCharacterBehaviour // (Final|Native|Public|BlueprintCallable) // @ game+0x54c3c10
	void PauseCharacterBehaviour(struct UObject* behaviourClass); // Function DeadByDaylight.DBDAIPlayerController.PauseCharacterBehaviour // (Final|Native|Public|BlueprintCallable) // @ game+0x54c3b80
	void OnBehaviourEndedHandler(struct UAICharacterBehaviour* behaviourEnded); // Function DeadByDaylight.DBDAIPlayerController.OnBehaviourEndedHandler // (Final|Native|Private) // @ game+0x54c3af0
	void MovePlayerToActor(struct AActor* Goal, float AcceptanceRadius); // Function DeadByDaylight.DBDAIPlayerController.MovePlayerToActor // (Final|Native|Public|BlueprintCallable) // @ game+0x54c3730
};

// Class DeadByDaylight.DBDAITypes
// Size: 0x238 (Inherited: 0x30)
struct UDBDAITypes : UObject {
	struct FGameplayTag AISkills_Context_Service_Root; // 0x30(0x0c)
	struct FGameplayTag AISkills_Context_Task_Slasher_AttackTarget; // 0x3c(0x0c)
	struct FGameplayTag AISkills_Context_Service_Slasher_AttackTarget; // 0x48(0x0c)
	struct FGameplayTag AISkills_Context_Task_Slasher_CrawlingTarget; // 0x54(0x0c)
	struct FGameplayTag AISkills_Context_Service_Slasher_CrawlingTarget; // 0x60(0x0c)
	struct FGameplayTag AISkills_Context_Service_Slasher_Investigate_NotInChase; // 0x6c(0x0c)
	struct FGameplayTag AISkills_Context_Service_Slasher_Investigate_InChase; // 0x78(0x0c)
	struct FGameplayTag AISkills_Context_Service_Slasher_Investigate_MoveAround; // 0x84(0x0c)
	struct FGameplayTag AISkills_Context_Service_Slasher_Patrol; // 0x90(0x0c)
	struct FGameplayTag AISkills_Context_Service_Slasher_Patrol_MoveAround; // 0x9c(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_Standing; // 0xa8(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_Crawling; // 0xb4(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_Flee_Run_Always; // 0xc0(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_Flee_Run_InChase; // 0xcc(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_Flee_Run_NotInChase; // 0xd8(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_Patrol; // 0xe4(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_RescueCarriedFriend; // 0xf0(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_RemoveTrap; // 0xfc(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_Chained; // 0x108(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_HelpOther; // 0x114(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_GoalInTerror; // 0x120(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_Carried; // 0x12c(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_UseSelfItem; // 0x138(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_InLocker; // 0x144(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_Flee_InLocker; // 0x150(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_RepairGenerator; // 0x15c(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_BeforeGoals; // 0x168(0x0c)
	struct FGameplayTag AISkills_Context_Service_Camper_UseK32Emp; // 0x174(0x0c)
	struct FGameplayTag AIBlackboard_InteractableWishList_FindSkill; // 0x180(0x0c)
	struct FGameplayTag AI_PointOfInterest_ActivatedDoor; // 0x18c(0x0c)
	struct FGameplayTag AI_PointOfInterest_ActivatedDoor_Opened; // 0x198(0x0c)
	struct FGameplayTag AI_PointOfInterest_BrokenGenerator; // 0x1a4(0x0c)
	struct FGameplayTag AI_PointOfInterest_OccupiedMeatHook; // 0x1b0(0x0c)
	struct FGameplayTag AI_PointOfInterest_HexTotem; // 0x1bc(0x0c)
	struct FGameplayTag AI_Hearing_SilenceStatusEffect_Header; // 0x1c8(0x0c)
	struct FGameplayTag AI_PinLocation_WarpStart; // 0x1d4(0x0c)
	struct FGameplayTag AI_PinLocation_WarpEnd; // 0x1e0(0x0c)
	struct FGameplayTag AI_PinLocation_EQS; // 0x1ec(0x0c)
	struct FGameplayTag AI_PinLocation_WishedObj; // 0x1f8(0x0c)
	struct FGameplayTag AI_PinLocation_GoTo; // 0x204(0x0c)
	struct FGameplayTag AI_PinObject_EQS; // 0x210(0x0c)
	struct FGameplayTag AI_PinObject_WishedObj; // 0x21c(0x0c)
	struct FGameplayTag AI_PinObject_GoTo; // 0x228(0x0c)
	char pad_234[0x4]; // 0x234(0x04)
};

// Class DeadByDaylight.DBDAnimationBudgetAllocatorActivator
// Size: 0xe8 (Inherited: 0xb8)
struct UDBDAnimationBudgetAllocatorActivator : UActorComponent {
	char pad_B8[0x30]; // 0xb8(0x30)
};

// Class DeadByDaylight.DBDAssetManager
// Size: 0x498 (Inherited: 0x480)
struct UDBDAssetManager : UAssetManager {
	char pad_480[0x18]; // 0x480(0x18)
};

// Class DeadByDaylight.DBDAtlantaBloodwebDefinition
// Size: 0x140 (Inherited: 0x30)
struct UDBDAtlantaBloodwebDefinition : UObject {
	char pad_30[0x110]; // 0x30(0x110)
};

// Class DeadByDaylight.DBDBaseInputHandler
// Size: 0xd8 (Inherited: 0x30)
struct UDBDBaseInputHandler : UObject {
	struct APawn* _pawn; // 0x30(0x08)
	struct USpringArmComponent* _cameraBoom; // 0x38(0x08)
	char pad_40[0x98]; // 0x40(0x98)
};

// Class DeadByDaylight.DBDAtlantaInputHandler
// Size: 0x1b0 (Inherited: 0xd8)
struct UDBDAtlantaInputHandler : UDBDBaseInputHandler {
	char pad_D8[0xd8]; // 0xd8(0xd8)

	void SetVirtualJoystickCenter(int32_t controlIndex, struct FVector2D controlCenter); // Function DeadByDaylight.DBDAtlantaInputHandler.SetVirtualJoystickCenter // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x54c3f80
	struct FVector2D GetVirtualJoystickVisualSize(int32_t controlIndex); // Function DeadByDaylight.DBDAtlantaInputHandler.GetVirtualJoystickVisualSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c3590
	struct FVector2D GetVirtualJoystickVisualCenter(int32_t controlIndex); // Function DeadByDaylight.DBDAtlantaInputHandler.GetVirtualJoystickVisualCenter // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c3500
	struct FVector2D GetVirtualJoystickPosition(int32_t controlIndex); // Function DeadByDaylight.DBDAtlantaInputHandler.GetVirtualJoystickPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c3470
	struct FVector2D GetVirtualJoystickNormalizedOffset(int32_t controlIndex); // Function DeadByDaylight.DBDAtlantaInputHandler.GetVirtualJoystickNormalizedOffset // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c3470
};

// Class DeadByDaylight.AtlantaRitualEvaluatorBase
// Size: 0x30 (Inherited: 0x30)
struct UAtlantaRitualEvaluatorBase : UObject {
};

// Class DeadByDaylight.AtlantaRitualEvaluatorInvalid
// Size: 0x30 (Inherited: 0x30)
struct UAtlantaRitualEvaluatorInvalid : UAtlantaRitualEvaluatorBase {
};

// Class DeadByDaylight.AtlantaRitualEvaluatorFullLoadout
// Size: 0x30 (Inherited: 0x30)
struct UAtlantaRitualEvaluatorFullLoadout : UAtlantaRitualEvaluatorBase {
};

// Class DeadByDaylight.DBDAtlantaTutorialParameters
// Size: 0x38 (Inherited: 0x30)
struct UDBDAtlantaTutorialParameters : UObject {
	float SurvTutorial_WiggleChargeRateMultiplier; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class DeadByDaylight.DBDAttackerComponent
// Size: 0x1c0 (Inherited: 0xb8)
struct UDBDAttackerComponent : UActorComponent {
	struct FMulticastInlineDelegate OnAttackStartDelegate; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnAttackFinishDelegate; // 0xc8(0x10)
	char pad_D8[0x38]; // 0xd8(0x38)
	struct FDBDTunableRowHandle _autonomousHitPredictionDelay; // 0x110(0x28)
	struct TArray<struct UDBDAttack*> _attacks; // 0x138(0x10)
	char pad_148[0x10]; // 0x148(0x10)
	struct UDBDAttack* _requestedAttack; // 0x158(0x08)
	struct UDBDAttack* _currentAttack; // 0x160(0x08)
	char pad_168[0x48]; // 0x168(0x48)
	struct TArray<struct FAttackDelegatePair> _attackHitDelegates; // 0x1b0(0x10)

	void Server_StoreAttack(enum class EAttackType attackType); // Function DeadByDaylight.DBDAttackerComponent.Server_StoreAttack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x54c9600
	void OnAttackPhaseChangedDelegate__DelegateSignature(enum class EAttackType attackType); // DelegateFunction DeadByDaylight.DBDAttackerComponent.OnAttackPhaseChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void Multicast_StoreAttack(enum class EAttackType attackType); // Function DeadByDaylight.DBDAttackerComponent.Multicast_StoreAttack // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54c8350
	void Local_RequestAttack(enum class EAttackType attackType); // Function DeadByDaylight.DBDAttackerComponent.Local_RequestAttack // (Native|Public|BlueprintCallable) // @ game+0x54c82d0
	bool IsAttackTransitionRequested(enum class EAttackType attackType); // Function DeadByDaylight.DBDAttackerComponent.IsAttackTransitionRequested // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c8210
	bool IsAttacking(); // Function DeadByDaylight.DBDAttackerComponent.IsAttacking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c82a0
	bool IsAnyAttackTransitionRequested(); // Function DeadByDaylight.DBDAttackerComponent.IsAnyAttackTransitionRequested // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c81e0
};

// Class DeadByDaylight.DBDAttackUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDAttackUtilities : UBlueprintFunctionLibrary {

	enum class EAttackType GetCurrentAttackType(struct AActor* Attacker); // Function DeadByDaylight.DBDAttackUtilities.GetCurrentAttackType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54c7d60
	float GetCurrentAttackSubstateRemainingTime(struct AActor* Attacker); // Function DeadByDaylight.DBDAttackUtilities.GetCurrentAttackSubstateRemainingTime // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54c7cd0
};

// Class DeadByDaylight.DBDAuthentication
// Size: 0x58 (Inherited: 0x30)
struct UDBDAuthentication : UObject {
	struct TArray<struct FAuthenticationInfo> _localInfos; // 0x30(0x10)
	struct TArray<struct FAuthenticationInfo> _remoteInfos; // 0x40(0x10)
	struct UDBDGameInstance* _gameInstance; // 0x50(0x08)
};

// Class DeadByDaylight.DBDBaseGameMode
// Size: 0x360 (Inherited: 0x328)
struct ADBDBaseGameMode : AGameMode {
	char pad_328[0x8]; // 0x328(0x08)
	struct FDataTableDropdown DebugSpecialEvent; // 0x330(0x30)
};

// Class DeadByDaylight.DBDBaseHud
// Size: 0x330 (Inherited: 0x320)
struct ADBDBaseHud : AHUD {
	struct UFont* _debugFont; // 0x320(0x08)
	char pad_328[0x8]; // 0x328(0x08)

	void ShowAnimHudBP(); // Function DeadByDaylight.DBDBaseHud.ShowAnimHudBP // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	bool ShouldDrawAnimHud(); // Function DeadByDaylight.DBDBaseHud.ShouldDrawAnimHud // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c96b0
	void DBD_ShowAnimHud(bool Show); // Function DeadByDaylight.DBDBaseHud.DBD_ShowAnimHud // (Final|Exec|Native|Protected) // @ game+0x46a2400
};

// Class DeadByDaylight.DBDBaseMatchGameMode
// Size: 0x378 (Inherited: 0x360)
struct ADBDBaseMatchGameMode : ADBDBaseGameMode {
	struct UEndGameComponent* _endGameComponent; // 0x360(0x08)
	struct UEscapeRequirementTracker* _escapeRequirementTracker; // 0x368(0x08)
	struct ANetworkFenceActor* _theFence; // 0x370(0x08)

	struct UEndGameComponent* GetEndGameComponent(); // Function DeadByDaylight.DBDBaseMatchGameMode.GetEndGameComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c7e50
};

// Class DeadByDaylight.HISMMaterialHelperSettings
// Size: 0x88 (Inherited: 0x38)
struct UHISMMaterialHelperSettings : UDataAsset {
	struct TMap<struct UStaticMesh*, struct TSoftClassPtr<UObject>> _meshMaterialOverride; // 0x38(0x50)
};

// Class DeadByDaylight.BatchDrawing
// Size: 0xb0 (Inherited: 0x30)
struct UBatchDrawing : UObject {
	struct AActor* _actorToSpawnInstancesInto; // 0x30(0x08)
	struct TMap<struct UStaticMesh*, struct FPerMeshInstancingData> _meshesToInstancingData; // 0x38(0x50)
	struct UHISMMaterialHelperSettings* _hismMaterialHelperSettings; // 0x88(0x08)
	struct UWorld* _currentWorld; // 0x90(0x08)
	struct TArray<struct FStaticMeshAutoBatch> _meshAutoBatch; // 0x98(0x10)
	char pad_A8[0x8]; // 0xa8(0x08)
};

// Class DeadByDaylight.DBDBloodWebDefinition
// Size: 0x140 (Inherited: 0x30)
struct UDBDBloodWebDefinition : UObject {
	char pad_30[0x110]; // 0x30(0x110)
};

// Class DeadByDaylight.DBDBloodwebDefinitionBase
// Size: 0x30 (Inherited: 0x30)
struct UDBDBloodwebDefinitionBase : UInterface {
};

// Class DeadByDaylight.DBDBotsUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDBotsUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.DBDCharacterMovementUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDCharacterMovementUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.DBDCharacterUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDCharacterUtilities : UBlueprintFunctionLibrary {

	bool IsWilliamBillOverbeck(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsWilliamBillOverbeck // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cdb80
	bool IsTheWraith(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheWraith // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cdaf0
	bool IsTheTwins_Sister(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheTwins_Sister // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cda60
	bool IsTheTwins_Brother(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheTwins_Brother // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd9d0
	bool IsTheTwins(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheTwins // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd940
	bool IsTheTrickster(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheTrickster // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd8b0
	bool IsTheTrapper(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheTrapper // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd820
	bool IsTheSpirit(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheSpirit // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd790
	bool IsTheShape(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheShape // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd700
	bool IsThePig(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsThePig // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd670
	bool IsTheOni(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheOni // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd5e0
	bool IsTheNurse(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheNurse // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd550
	bool IsTheNightmare(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheNightmare // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd4c0
	bool IsTheLegion(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheLegion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd430
	bool IsTheHuntress(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheHuntress // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd3a0
	bool IsTheHillBilly(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheHillBilly // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd310
	bool IsTheHag(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheHag // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd280
	bool IsTheGhost(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheGhost // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd1f0
	bool IsTheExecutioner(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheExecutioner // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd160
	bool IsTheDoctor(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheDoctor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd0d0
	bool IsTheDemogorgon(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheDemogorgon // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cd040
	bool IsTheClown(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheClown // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ccfb0
	bool IsTheCannibal(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheCannibal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ccf20
	bool IsTheBlight(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsTheBlight // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cce90
	bool IsSteveHarrington(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsSteveHarrington // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cce00
	bool IsSlasherLocallyObserved(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDCharacterUtilities.IsSlasherLocallyObserved // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ccd70
	bool IsQuentinSmith(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsQuentinSmith // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ccce0
	bool IsPlague(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsPlague // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ccc50
	bool IsNeaKarlsson(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsNeaKarlsson // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ccbc0
	bool IsNancyWheeler(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsNancyWheeler // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ccb30
	bool IsMegThomas(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsMegThomas // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54ccaa0
	bool IsLaurieStrode(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsLaurieStrode // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cca10
	bool IsKateDenson(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsKateDenson // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc980
	bool IsJeffJohansen(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsJeffJohansen // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc8f0
	bool IsJaneRomero(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsJaneRomero // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc860
	bool IsJakePark(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsJakePark // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc7d0
	bool IsInDreamworld(struct ADBDPlayer* Player); // Function DeadByDaylight.DBDCharacterUtilities.IsInDreamworld // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc740
	bool IsFengMin(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsFengMin // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc6b0
	bool IsDwightFairfield(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsDwightFairfield // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc620
	bool IsDavidTapp(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsDavidTapp // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc590
	bool IsDavidKing(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsDavidKing // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc500
	bool IsClaudetteMorel(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsClaudetteMorel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc470
	bool IsAshleyWilliams(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsAshleyWilliams // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc3e0
	bool IsAdamFrancis(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsAdamFrancis // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc350
	bool IsAceVisconti(struct ADBDBasePlayer* TargetPlayer); // Function DeadByDaylight.DBDCharacterUtilities.IsAceVisconti // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc2c0
	enum class EPlayerRole GetLocallyObservedPlayerRole(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDCharacterUtilities.GetLocallyObservedPlayerRole // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc230
};

// Class DeadByDaylight.DBDCheatValidatorSubsystem
// Size: 0x38 (Inherited: 0x38)
struct UDBDCheatValidatorSubsystem : UEngineSubsystem {
};

// Class DeadByDaylight.DBDClientSyncer
// Size: 0x428 (Inherited: 0x230)
struct ADBDClientSyncer : AActor {
	struct TArray<struct FSpawnInfo> _actorsToSpawnLocally; // 0x230(0x10)
	struct TArray<struct FSpawnInfo> _currentQueue; // 0x240(0x10)
	char pad_250[0x8]; // 0x250(0x08)
	struct UPaperTileMap* _tileMap; // 0x258(0x08)
	char pad_260[0x1c8]; // 0x260(0x1c8)

	void Multicast_SyncSeed(int32_t Seed, struct UPaperTileMap* TileMap, int32_t GenerationPlayerCount, struct FString PremadeMap); // Function DeadByDaylight.DBDClientSyncer.Multicast_SyncSeed // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54cddb0
	void Multicast_SyncFinalLocallySpawnCount(int32_t numLocal); // Function DeadByDaylight.DBDClientSyncer.Multicast_SyncFinalLocallySpawnCount // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54cdd20
	void Multicast_SyncActorToSpawnLocally(struct TArray<struct FSpawnInfo> spawnInfos, int32_t startIndex); // Function DeadByDaylight.DBDClientSyncer.Multicast_SyncActorToSpawnLocally // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54cdc10
};

// Class DeadByDaylight.DBDClipRegionComponent
// Size: 0x230 (Inherited: 0x220)
struct UDBDClipRegionComponent : UDBDLocatorComponent {
	struct TArray<struct FAffectedMaterialAndVariant> AffectedMaterialsAndVariants; // 0x218(0x10)

	void NotifyShouldClipComponent(struct UMeshComponent* InMeshComponent); // Function DeadByDaylight.DBDClipRegionComponent.NotifyShouldClipComponent // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	float ClipDistance(struct UMeshComponent* InMeshComponent); // Function DeadByDaylight.DBDClipRegionComponent.ClipDistance // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void ApplyClipToDynamicMaterial(struct UMaterialInstanceDynamic* dynamicInstanceToClip, int32_t InRegionID); // Function DeadByDaylight.DBDClipRegionComponent.ApplyClipToDynamicMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x54cc0e0
	void ApplyClip(struct UMaterialInstanceDynamic* InMaterial2clip, int32_t InRegionID); // Function DeadByDaylight.DBDClipRegionComponent.ApplyClip // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void ApplyArrayOfClipsToDynamicMaterial(struct TArray<struct UDBDClipRegionComponent*> InRegions, struct UMaterialInstanceDynamic* dynamicInstanceToClip); // Function DeadByDaylight.DBDClipRegionComponent.ApplyArrayOfClipsToDynamicMaterial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54cbfc0
};

// Class DeadByDaylight.ColorBlindFunctionLibrary
// Size: 0x30 (Inherited: 0x30)
struct UColorBlindFunctionLibrary : UBlueprintFunctionLibrary {

	void CallOnColorBlindSettingsChange(struct AActor* callingActor); // Function DeadByDaylight.ColorBlindFunctionLibrary.CallOnColorBlindSettingsChange // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x54cc1b0
};

// Class DeadByDaylight.ColorBlindSettingsListenerInterface
// Size: 0x30 (Inherited: 0x30)
struct UColorBlindSettingsListenerInterface : UInterface {

	void OnColorBlindSettingsChange(enum class EColorVisionDeficiency ColorBlindMode, int32_t ColorblindIntensity); // Function DeadByDaylight.ColorBlindSettingsListenerInterface.OnColorBlindSettingsChange // (Native|Event|Public|BlueprintEvent) // @ game+0x54cdf10
};

// Class DeadByDaylight.DBDConsoleCommandUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDConsoleCommandUtilities : UObject {
};

// Class DeadByDaylight.DBDCoreUMGDesignTunables
// Size: 0x90 (Inherited: 0x30)
struct UDBDCoreUMGDesignTunables : UObject {
	struct TSoftClassPtr<UObject> CoreHudRootWidgetClass; // 0x30(0x30)
	struct TSoftClassPtr<UObject> CorePlayerControllerClass; // 0x60(0x30)
};

// Class DeadByDaylight.DBDCurrencyConversionTunables
// Size: 0x88 (Inherited: 0x38)
struct UDBDCurrencyConversionTunables : UDataAsset {
	struct TMap<enum class ECurrencyType, struct FCurrencyConversion> Currencies; // 0x38(0x50)
};

// Class DeadByDaylight.DBDCustomizationTool
// Size: 0x10d0 (Inherited: 0x230)
struct ADBDCustomizationTool : AActor {
	struct TSoftClassPtr<UObject> OverallLightingClass; // 0x230(0x30)
	struct FDBDCustomizationToolData CustomizationData; // 0x260(0xe58)
	struct TArray<struct AActor*> _spawnedActors; // 0x10b8(0x10)
	char pad_10C8[0x8]; // 0x10c8(0x08)
};

// Class DeadByDaylight.RitualEvaluatorBase
// Size: 0x30 (Inherited: 0x30)
struct URitualEvaluatorBase : UObject {

	bool EvaluateEvent(struct FRitualEvent& RitualEvent); // Function DeadByDaylight.RitualEvaluatorBase.EvaluateEvent // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x54d1800
};

// Class DeadByDaylight.DBDDangerPredictionComponent
// Size: 0xd0 (Inherited: 0xb8)
struct UDBDDangerPredictionComponent : UActorComponent {
	bool ApplyAdditionalCostInDangerArea; // 0xb8(0x01)
	enum class ESurvivorFleePathStrategy SurvivorFleePathStrategy; // 0xb9(0x01)
	char pad_BA[0x2]; // 0xba(0x02)
	float RelevantHorizontalDistance; // 0xbc(0x04)
	float RelevantVerticalDistance; // 0xc0(0x04)
	enum class EPlayerRole RelevantRole; // 0xc4(0x01)
	char pad_C5[0xb]; // 0xc5(0x0b)
};

// Class DeadByDaylight.DBDDateTimeProvider
// Size: 0x30 (Inherited: 0x30)
struct UDBDDateTimeProvider : UDateTimeProvider {
};

// Class DeadByDaylight.DBDDebugCameraController
// Size: 0x698 (Inherited: 0x698)
struct ADBDDebugCameraController : ADebugCameraController {
};

// Class DeadByDaylight.DBDGameMode
// Size: 0x500 (Inherited: 0x378)
struct ADBDGameMode : ADBDBaseMatchGameMode {
	char pad_378[0x38]; // 0x378(0x38)
	struct FMulticastInlineDelegate OnPlayersLoadoutsCreated; // 0x3b0(0x10)
	struct APlayerController* _killerPlayerControllerClass; // 0x3c0(0x08)
	struct APlayerController* _survivorPlayerControllerClass; // 0x3c8(0x08)
	struct TArray<struct APlayerStart*> _initialPlayerStarts; // 0x3d0(0x10)
	char pad_3E0[0x34]; // 0x3e0(0x34)
	int32_t KillerCreationPositionOrder; // 0x414(0x04)
	struct UStatusEffect* _gateBlockedStatus; // 0x418(0x08)
	char pad_420[0xa8]; // 0x420(0xa8)
	struct UNavmeshGeneratorComponent* _navmeshGeneratorComponent; // 0x4c8(0x08)
	char pad_4D0[0x30]; // 0x4d0(0x30)

	void SetPlayerCount(int32_t playerAmount); // Function DeadByDaylight.DBDGameMode.SetPlayerCount // (Final|Native|Protected|BlueprintCallable) // @ game+0x54df2f0
	void RegisterOnPlayerStateChanged(struct APlayerState* PlayerState); // Function DeadByDaylight.DBDGameMode.RegisterOnPlayerStateChanged // (Final|Native|Public) // @ game+0x54deea0
	void OnPlayerGameStateChanged(struct ADBDPlayerState* PlayerState, enum class EGameState playerGameState); // Function DeadByDaylight.DBDGameMode.OnPlayerGameStateChanged // (Final|Native|Public) // @ game+0x54de720
	void LevelLoaded(struct FString LevelName); // Function DeadByDaylight.DBDGameMode.LevelLoaded // (Final|Native|Protected|BlueprintCallable) // @ game+0x54ddfa0
	bool IsEscapeOpen(); // Function DeadByDaylight.DBDGameMode.IsEscapeOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54ddd90
	void InitializeEscapeRequirements(); // Function DeadByDaylight.DBDGameMode.InitializeEscapeRequirements // (Final|Native|Protected|BlueprintCallable) // @ game+0x54ddcf0
	void HostGame(); // Function DeadByDaylight.DBDGameMode.HostGame // (Final|Native|Protected|BlueprintCallable) // @ game+0x54ddcd0
	bool AreLoadoutsCreated(); // Function DeadByDaylight.DBDGameMode.AreLoadoutsCreated // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x54dc5c0
};

// Class DeadByDaylight.DBDDebugGameMode
// Size: 0x5d8 (Inherited: 0x500)
struct ADBDDebugGameMode : ADBDGameMode {
	char pad_500[0x8]; // 0x500(0x08)
	struct TMap<struct ADBDPlayerController*, int32_t> LoadoutIndex; // 0x508(0x50)
	struct TSet<struct ADBDPlayer*> PlayersWithItems; // 0x558(0x50)
	struct TArray<struct FCamperLoadout> CamperPawnOverrides; // 0x5a8(0x10)
	struct TArray<struct FSlasherLoadout> SlasherPawnOverrides; // 0x5b8(0x10)
	struct TArray<struct FDebugQuestModelExtArchiveObjective> _questObjectives; // 0x5c8(0x10)
};

// Class DeadByDaylight.DBDDebugInputComponent
// Size: 0xd8 (Inherited: 0xb8)
struct UDBDDebugInputComponent : UActorComponent {
	char pad_B8[0x20]; // 0xb8(0x20)

	void DBD_ItsAlive(bool aliveEnabled); // Function DeadByDaylight.DBDDebugInputComponent.DBD_ItsAlive // (Final|Exec|Native|Public) // @ game+0x46a2400
};

// Class DeadByDaylight.DBDDecalComponent
// Size: 0x320 (Inherited: 0x260)
struct UDBDDecalComponent : UDecalComponent {
	struct TArray<struct UStaticMeshComponent*> staticMeshDecals; // 0x258(0x10)
	struct TMap<struct UStaticMeshComponent*, struct UGlassStaticMesh*> staticMeshGlass; // 0x268(0x50)
	struct TArray<struct UMaterialInstanceDynamic*> materialInstances; // 0x2b8(0x10)
	char pad_2D0[0x40]; // 0x2d0(0x40)
	struct UDecalCollection* _decalCollection; // 0x310(0x08)
	char pad_318[0x8]; // 0x318(0x08)
};

// Class DeadByDaylight.DBDDesignTunables
// Size: 0x238 (Inherited: 0x30)
struct UDBDDesignTunables : UObject {
	int8_t EntityDispleasedKills; // 0x30(0x01)
	int8_t BrutalKillerKills; // 0x31(0x01)
	int8_t RuthlessKillerKills; // 0x32(0x01)
	int8_t MercilessKillerKills; // 0x33(0x01)
	int32_t WinStreakThresholdLarge; // 0x34(0x04)
	int32_t WinStreakThresholdSmall; // 0x38(0x04)
	int32_t MaxFearTokens; // 0x3c(0x04)
	int32_t QuantityOfItemsToBuyBeforeFreeBloodwebRefresh; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct TArray<struct FPerkLevelDefinition> PerkLevelDefinitions; // 0x48(0x10)
	struct TSet<struct FGameplayTag> MetaModifiers; // 0x58(0x50)
	struct TSet<struct FGameplayTag> RangedSurvivorAuraPerceptionModifiers; // 0xa8(0x50)
	struct TSet<struct FGameplayTag> SurvivorRevelatoryAuraPerceptionModifiers; // 0xf8(0x50)
	struct TSet<struct FGameplayTag> DisruptableAuraReadingFlags; // 0x148(0x50)
	struct TSoftClassPtr<UObject> TextDesignTunableClass; // 0x198(0x30)
	struct UDBDTextDesignTunables* TextTunables; // 0x1c8(0x08)
	struct TArray<struct FGameEventForwarderInfo> GameEventForwarderInfos; // 0x1d0(0x10)
	struct TSoftClassPtr<UObject> CoreUMGDesignTunableClass; // 0x1e0(0x30)
	struct UDBDCoreUMGDesignTunables* CoreUMGDesignTunables; // 0x210(0x08)
	bool _overrideDefaultLobby; // 0x218(0x01)
	char pad_219[0x3]; // 0x219(0x03)
	struct FName _lobbyOverrideName; // 0x21c(0x0c)
	struct TArray<struct FGameplayTag> _conspicuousActionEvents; // 0x228(0x10)

	float GetTunableValue(struct FName ID, bool warnIfRowMissing); // Function DeadByDaylight.DBDDesignTunables.GetTunableValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d18c0
};

// Class DeadByDaylight.DBDTextDesignTunables
// Size: 0x108 (Inherited: 0x30)
struct UDBDTextDesignTunables : UObject {
	struct FText LegalTextTitle; // 0x30(0x18)
	struct FText LegalText; // 0x48(0x18)
	struct FText ConsentTextTitle; // 0x60(0x18)
	struct FText ConsentText; // 0x78(0x18)
	struct FText LegalTextSIEA; // 0x90(0x18)
	struct FText LegalTextSIEE; // 0xa8(0x18)
	struct FText SystemMessage_ChatDisconnected; // 0xc0(0x18)
	struct FText SystemMessage_ChatReturnedToLobby; // 0xd8(0x18)
	struct FText SystemMessage_ChatMatchServerClosed; // 0xf0(0x18)
};

// Class DeadByDaylight.DBDDiceRoller
// Size: 0x30 (Inherited: 0x30)
struct UDBDDiceRoller : UBlueprintFunctionLibrary {

	bool GetRollResultByTunableValue(struct AActor* RollingActor, struct FName tunableValueName, float MultiplicativeModifier, float AdditiveModifier); // Function DeadByDaylight.DBDDiceRoller.GetRollResultByTunableValue // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d7df0
	bool GetRollResultByDiceRollType(struct ADBDPlayer* RollingPlayer, enum class EDiceRollType DiceRollType); // Function DeadByDaylight.DBDDiceRoller.GetRollResultByDiceRollType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d7d20
	float GetInteractionRollSuccessPercentageByDiceRollType(struct UInteractionDefinition* Interaction, struct ADBDPlayer* RollingPlayer, enum class EDiceRollType DiceRollType); // Function DeadByDaylight.DBDDiceRoller.GetInteractionRollSuccessPercentageByDiceRollType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d79b0
	bool CalculateTickedRollResult(struct AActor* RollingActor, float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier); // Function DeadByDaylight.DBDDiceRoller.CalculateTickedRollResult // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d5c30
	bool CalculateRollResult(struct AActor* RollingActor, float BaseProbability, float MultiplicativeModifier, float AdditiveModifier); // Function DeadByDaylight.DBDDiceRoller.CalculateRollResult // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d5ae0
	bool CalculateOverTimeRollResult(struct AActor* RollingActor, float BaseProbability, float DeltaTime, float ExpectedTime, float MultiplicativeModifier, float AdditiveModifier); // Function DeadByDaylight.DBDDiceRoller.CalculateOverTimeRollResult // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d5910
};

// Class DeadByDaylight.DBDEasyAntiCheat
// Size: 0x58 (Inherited: 0x30)
struct UDBDEasyAntiCheat : UObject {
	char pad_30[0x18]; // 0x30(0x18)
	struct UDBDGameInstance* _gameInstance; // 0x48(0x08)
	char pad_50[0x2]; // 0x50(0x02)
	bool _connectedToServer; // 0x52(0x01)
	char pad_53[0x5]; // 0x53(0x05)
};

// Class DeadByDaylight.DBDEasyAntiCheatEnable
// Size: 0xf0 (Inherited: 0x58)
struct UDBDEasyAntiCheatEnable : UDBDEasyAntiCheat {
	char pad_58[0x98]; // 0x58(0x98)
};

// Class DeadByDaylight.DBDEasyAntiCheatLinux
// Size: 0xf0 (Inherited: 0xf0)
struct UDBDEasyAntiCheatLinux : UDBDEasyAntiCheatEnable {
};

// Class DeadByDaylight.DBDEasyAntiCheatWindows
// Size: 0xf0 (Inherited: 0xf0)
struct UDBDEasyAntiCheatWindows : UDBDEasyAntiCheatEnable {
};

// Class DeadByDaylight.DBDEngineUtils
// Size: 0x30 (Inherited: 0x30)
struct UDBDEngineUtils : UObject {
};

// Class DeadByDaylight.DBDGame_Lobby
// Size: 0x3e0 (Inherited: 0x360)
struct ADBDGame_Lobby : ADBDBaseGameMode {
	char pad_360[0x18]; // 0x360(0x18)
	struct UIdentityValidation* _identityValidation; // 0x378(0x08)
	char pad_380[0x60]; // 0x380(0x60)

	void DBD_RemoveBotByIndex(int32_t botIndex); // Function DeadByDaylight.DBDGame_Lobby.DBD_RemoveBotByIndex // (Final|Exec|Native|Public) // @ game+0x54d6c50
	void DBD_FillLobbyWithBotsByName(struct FString selectedKiller, int32_t Rank); // Function DeadByDaylight.DBDGame_Lobby.DBD_FillLobbyWithBotsByName // (Final|Exec|Native|Public) // @ game+0x54d6ab0
	void DBD_FillLobby(); // Function DeadByDaylight.DBDGame_Lobby.DBD_FillLobby // (Final|Exec|Native|Public) // @ game+0x54d6a90
	void DBD_AddBotToLobbyNoLoadoutByName(struct FString SelectedCharacter); // Function DeadByDaylight.DBDGame_Lobby.DBD_AddBotToLobbyNoLoadoutByName // (Final|Exec|Native|Public) // @ game+0x54d6660
	void DBD_AddBotToLobbyNoLoadout(int32_t SelectedCharacter); // Function DeadByDaylight.DBDGame_Lobby.DBD_AddBotToLobbyNoLoadout // (Final|Exec|Native|Public) // @ game+0x54d65d0
	void DBD_AddBotToLobbyByName(struct FString SelectedCharacter, struct FString Item, struct FString addon1, struct FString addon2, struct FString Offering, struct FString perk1, struct FString perk2, struct FString perk3, struct FString perk4, int32_t Rank); // Function DeadByDaylight.DBDGame_Lobby.DBD_AddBotToLobbyByName // (Final|Exec|Native|Public) // @ game+0x54d6230
	void DBD_AddBotToLobby(int32_t SelectedCharacter, struct FString Item, struct FString addon1, struct FString addon2, struct FString Offering, struct FString perk1, struct FString perk2, struct FString perk3, struct FString perk4, int32_t Rank); // Function DeadByDaylight.DBDGame_Lobby.DBD_AddBotToLobby // (Final|Exec|Native|Public) // @ game+0x54d5eb0
};

// Class DeadByDaylight.DBDGame_Menu
// Size: 0x390 (Inherited: 0x360)
struct ADBDGame_Menu : ADBDBaseGameMode {
	bool StartWithSlasher; // 0x360(0x01)
	char pad_361[0x7]; // 0x361(0x07)
	struct UAtlantaPartyFlowHandler* _partyFlowHandler; // 0x368(0x08)
	char pad_370[0x8]; // 0x370(0x08)
	struct ALevelSequenceActor* _sequenceFadeActor; // 0x378(0x08)
	struct ALevelSequenceActor* _sequenceIntroActor; // 0x380(0x08)
	struct ALevelSequenceActor* _sequenceLoopActor; // 0x388(0x08)
};

// Class DeadByDaylight.DBDGame_Start
// Size: 0x408 (Inherited: 0x360)
struct ADBDGame_Start : ADBDBaseGameMode {
	char pad_360[0x60]; // 0x360(0x60)
	struct TScriptInterface<IClientStartupInitializerInterface> _startupInitializer; // 0x3c0(0x10)
	char pad_3D0[0x38]; // 0x3d0(0x38)
};

// Class DeadByDaylight.DBDGameEngine
// Size: 0xec0 (Inherited: 0xeb8)
struct UDBDGameEngine : UGameEngine {
	char pad_EB8[0x8]; // 0xeb8(0x08)
};

// Class DeadByDaylight.DBDGameEventForwarderComponent
// Size: 0xd0 (Inherited: 0xb8)
struct UDBDGameEventForwarderComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
};

// Class DeadByDaylight.DBDGameEventUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDGameEventUtilities : UBlueprintFunctionLibrary {

	void RemotelyDispatchGameEvent(struct UObject* WorldContextObject, struct FGameplayTag gameEventType, struct ADBDPlayer* Instigator, struct AActor* Target, float CustomValue, struct UObject* CustomObjectParameter, int32_t CustomIntValue); // Function DeadByDaylight.DBDGameEventUtilities.RemotelyDispatchGameEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d86b0
	void LocallyDispatchGameEvent(struct UObject* WorldContextObject, struct FGameplayTag gameEventType, struct ADBDPlayer* Instigator, struct AActor* Target, float CustomValue, struct UObject* CustomObjectParameter, int32_t CustomIntValue); // Function DeadByDaylight.DBDGameEventUtilities.LocallyDispatchGameEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d8390
	void DispatcherFireGameEvent(struct UObject* WorldContextObject, struct FGameplayTag gameEventType, bool broadcastOverNetwork, struct ADBDPlayer* Instigator, struct AActor* Target, float CustomValue, struct UObject* CustomObjectParameter, int32_t CustomIntValue); // Function DeadByDaylight.DBDGameEventUtilities.DispatcherFireGameEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d7410
	void Authority_DispatcherFireGameEvent(struct UObject* WorldContextObject, struct FGameplayTag gameEventType, bool broadcastOverNetwork, struct ADBDPlayer* Instigator, struct AActor* Target, float CustomValue, struct UObject* CustomObjectParameter, int32_t CustomIntValue); // Function DeadByDaylight.DBDGameEventUtilities.Authority_DispatcherFireGameEvent // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // @ game+0x54d54c0
	void Authority_AccumulateOngoingGameEvent(struct UObject* WorldContextObject, struct FGameplayTag gameEventType, struct ADBDPlayer* Instigator, struct AActor* Target, float CustomValue, float OngoingWaitTime, struct UObject* CustomObjectParameter, int32_t CustomIntValue); // Function DeadByDaylight.DBDGameEventUtilities.Authority_AccumulateOngoingGameEvent // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // @ game+0x54d5250
};

// Class DeadByDaylight.DBDGameFlowUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDGameFlowUtilities : UBlueprintFunctionLibrary {

	void TriggerWorldFlowEvent(struct UObject* WorldContextObject, enum class EWorldFlowEvent worldFlowEvent); // Function DeadByDaylight.DBDGameFlowUtilities.TriggerWorldFlowEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d8b50
	void TriggerUIFlowEvent(struct UObject* WorldContextObject, enum class EUIFlowEvent uiFlowEvent); // Function DeadByDaylight.DBDGameFlowUtilities.TriggerUIFlowEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d8a90
	bool IsCurrentlyInGame(struct UDBDGameInstance* GameInstance); // Function DeadByDaylight.DBDGameFlowUtilities.IsCurrentlyInGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54d8300
};

// Class DeadByDaylight.DBDGameInstance
// Size: 0xa38 (Inherited: 0x200)
struct UDBDGameInstance : UGameInstance {
	char pad_200[0x48]; // 0x200(0x48)
	struct UDBDDesignTunables* DesignTunableClass; // 0x248(0x08)
	struct UDBDDesignTunables* DesignTunables; // 0x250(0x08)
	struct URegionFinder* RegionClass; // 0x258(0x08)
	struct Ushopmanager* ShopManagerClass; // 0x260(0x08)
	struct AOfferingSequenceManager* OfferingSequenceManagerClass; // 0x268(0x08)
	struct UFriendManager* FriendManagerClass; // 0x270(0x08)
	struct UDataAsset* AchievementsDataAsset; // 0x278(0x08)
	struct UGameEventTracker* GameEventTracker; // 0x280(0x08)
	struct UDBDKeyDisplayInfo* KeyDisplayInfo; // 0x288(0x08)
	bool LeaveGameRequested; // 0x290(0x01)
	char pad_291[0x7]; // 0x291(0x07)
	struct UPlayerProfileDAL* PlayerProfileDAL; // 0x298(0x08)
	int32_t GenerationSeed; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct FString PaperTileAssetName; // 0x2a8(0x10)
	int32_t GenerationPlayerCount; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct FString PremadeMap; // 0x2c0(0x10)
	struct TArray<struct FForceSpawnTileData> ForceSpawnTileData; // 0x2d0(0x10)
	char pad_2E0[0x20]; // 0x2e0(0x20)
	struct AOfferingSequenceManager* OfferingSequence; // 0x300(0x08)
	struct TArray<struct FParadiseData> ParadiseData; // 0x308(0x10)
	bool PlayerProfileLoadFailed; // 0x318(0x01)
	char pad_319[0x7]; // 0x319(0x07)
	struct UNewsContentManager* NewsContentManager; // 0x320(0x08)
	struct UContentScheduleManager* ContentScheduleManager; // 0x328(0x08)
	struct UCDNPatchManager* CDNPatchManager; // 0x330(0x08)
	struct UCharacterProgressionManager* CharacterProgressionManager; // 0x338(0x08)
	struct UCharacterXPManager* CharacterXPManager; // 0x340(0x08)
	struct UAtlantaRitualsManager* AtlRitualsManager; // 0x348(0x08)
	struct FString AuthOrEACErrorAdditionalInfo; // 0x350(0x10)
	bool HasServerLeftMatch; // 0x360(0x01)
	bool HasWrittenGameEndStats; // 0x361(0x01)
	char pad_362[0x6]; // 0x362(0x06)
	struct UFearMarketManager* FearMarketManager; // 0x368(0x08)
	struct Ushopmanager* shopmanager; // 0x370(0x08)
	struct UFriendManager* FriendManager; // 0x378(0x08)
	struct UWalletHandler* WalletHandler; // 0x380(0x08)
	struct FName TutorialRequesterName; // 0x388(0x0c)
	char pad_394[0x4]; // 0x394(0x04)
	struct UControllerPairingManager* ControllerPairingManager; // 0x398(0x08)
	char pad_3A0[0xe8]; // 0x3a0(0xe8)
	struct UChunkingManager* ChunkingManager; // 0x488(0x08)
	struct FMulticastInlineDelegate OnPlayerDisconnect; // 0x490(0x10)
	char pad_4A0[0x138]; // 0x4a0(0x138)
	struct UAssetLibraryManager* _assetLibraryManager; // 0x5d8(0x08)
	struct TSoftClassPtr<UObject> _bloodwebManagerClass; // 0x5e0(0x30)
	struct UOnlineTransactionServiceComponent* _onlineTransactionService; // 0x610(0x08)
	struct TSoftClassPtr<UObject> _sharedAuthenticationManagerClass; // 0x618(0x30)
	char pad_648[0x130]; // 0x648(0x130)
	struct UDBDPersistentData* _persistentData; // 0x778(0x08)
	struct UPlayerDataStorageFacade* _playerDataFacade; // 0x780(0x08)
	struct URankManager* _rankManager; // 0x788(0x08)
	struct UDBDPlayerLevelManager* _playerLevelManager; // 0x790(0x08)
	struct UPlayerNameRegistration* _playerNameRegistration; // 0x798(0x08)
	struct Uspecialeventmanager* _specialEventManager; // 0x7a0(0x08)
	struct UBonusPointEventsManager* _bonusPointEventsManager; // 0x7a8(0x08)
	struct UDBDTimeTravelManager* _timeTravelManager; // 0x7b0(0x08)
	struct UToastManager* _toastManager; // 0x7b8(0x08)
	struct UDBDSocialNotificationFactory* _socialNotificationFactory; // 0x7c0(0x08)
	struct UDBDPartyFacade* _partyFacade; // 0x7c8(0x08)
	struct UPenaltyTracker* _penaltyTracker; // 0x7d0(0x08)
	char pad_7D8[0x28]; // 0x7d8(0x28)
	struct ULightingHelper* _ligthingHelper; // 0x800(0x08)
	struct UOfferingHandler* _offeringHandler; // 0x808(0x08)
	char pad_810[0x8]; // 0x810(0x08)
	struct TArray<struct UActorKnowledgeCollection*> _actorKnowledgeCollections; // 0x818(0x10)
	struct UMapActorDB* _mapActorDB; // 0x828(0x08)
	struct TArray<struct UInteractionProficiency*> _interactionProficiencies; // 0x830(0x10)
	struct UDBDHud* _theHud; // 0x840(0x08)
	char pad_848[0x28]; // 0x848(0x28)
	struct UBloodwebManager* _bloodwebManager; // 0x870(0x08)
	struct USharedAuthenticationComponent* _sharedAuthenticationManager; // 0x878(0x08)
	struct UPopupSequencer* _popupSequencer; // 0x880(0x08)
	struct UPopupFactory* _popupFactory; // 0x888(0x08)
	struct UDBDAuthentication* _auth; // 0x890(0x08)
	struct UDBDEasyAntiCheat* _eac; // 0x898(0x08)
	char pad_8A0[0x98]; // 0x8a0(0x98)
	struct TArray<struct TWeakObjectPtr<struct UObject>> _execObjects; // 0x938(0x10)
	bool _networkFailureDetected; // 0x948(0x01)
	bool _networkConnectionMonitoringOnly; // 0x949(0x01)
	bool _achievementStatsUploadEnabled; // 0x94a(0x01)
	bool _isDisconnected; // 0x94b(0x01)
	bool _isGamepadReconnected; // 0x94c(0x01)
	bool _isProfileOffline; // 0x94d(0x01)
	bool _isAppSuspended; // 0x94e(0x01)
	bool _isAppResumed; // 0x94f(0x01)
	bool _isInvitationRejected; // 0x950(0x01)
	bool _isAdditionalContentInstalled; // 0x951(0x01)
	bool _isCloudInventoryInitialized; // 0x952(0x01)
	char pad_953[0x2d]; // 0x953(0x2d)
	struct UOfferingEffectCollection* _resultOfferingAndPerkEffects; // 0x980(0x08)
	struct UInventoryHandler* _inventoryHandler; // 0x988(0x08)
	struct UCinematicManager* _cinematicManager; // 0x990(0x08)
	struct USoftBanManager* _softBanManager; // 0x998(0x08)
	struct UConsentManager* _consentManager; // 0x9a0(0x08)
	struct UOnlineSystemHandler* _onlineSystemHandler; // 0x9a8(0x08)
	struct URegionFinder* _regionFinder; // 0x9b0(0x08)
	struct UDecalSpawnerCollection* _decalSpawnerCollection; // 0x9b8(0x08)
	struct UPrimitiveCollection* _characterClippingPrimitiveCollection; // 0x9c0(0x08)
	struct UAtlantaTooltipManager* _atlantaTooltipManager; // 0x9c8(0x08)
	uint32_t LastProviderErrorCode; // 0x9d0(0x04)
	enum class EDisconnectErrors _disconnectError; // 0x9d4(0x01)
	char pad_9D5[0xb]; // 0x9d5(0x0b)
	struct UDateTimerUpdater* _dateTimerUpdater; // 0x9e0(0x08)
	char pad_9E8[0x50]; // 0x9e8(0x50)

	void StartOfferingSequence(); // Function DeadByDaylight.DBDGameInstance.StartOfferingSequence // (Final|Native|Public) // @ game+0x54d8a70
	void SimulateOfferingSequence(struct TArray<struct FName>& offerings, bool playSequence); // Function DeadByDaylight.DBDGameInstance.SimulateOfferingSequence // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x54d8970
	void RemoveActorKnowledgeCollection(struct UActorKnowledgeCollection* Collection); // Function DeadByDaylight.DBDGameInstance.RemoveActorKnowledgeCollection // (Final|Native|Public|BlueprintCallable) // @ game+0x54d88e0
	void OnTimeTravelComplete(bool success, struct FString date); // Function DeadByDaylight.DBDGameInstance.OnTimeTravelComplete // (Final|Native|Public|Const) // @ game+0x54d85c0
	bool IsActorKnown(struct ADBDPlayer* knowledgePossessor, struct AActor* possiblyKnownActor); // Function DeadByDaylight.DBDGameInstance.IsActorKnown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d8230
	bool HasOfferingOfType(enum class EOfferingEffectType Type, int32_t playerID, struct FName Tag); // Function DeadByDaylight.DBDGameInstance.HasOfferingOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d8100
	bool HasOfferingByType(enum class EOfferingEffectType Type); // Function DeadByDaylight.DBDGameInstance.HasOfferingByType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d8070
	void GotoSplashScreen(bool showDefaultDialogueOnSplashScreen); // Function DeadByDaylight.DBDGameInstance.GotoSplashScreen // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d7fe0
	struct UDBDTimeUtilities* GetTimeUtils(); // Function DeadByDaylight.DBDGameInstance.GetTimeUtils // (Final|Native|Public|Const) // @ game+0x54d7fb0
	struct Uspecialeventmanager* GetSpecialEventManager(); // Function DeadByDaylight.DBDGameInstance.GetSpecialEventManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7f80
	struct USoftBanManager* GetSoftBanManager(); // Function DeadByDaylight.DBDGameInstance.GetSoftBanManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7f50
	struct URankManager* GetRankManager(); // Function DeadByDaylight.DBDGameInstance.GetRankManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7cf0
	struct UPlayerNameRegistration* GetPlayerNameRegistration(); // Function DeadByDaylight.DBDGameInstance.GetPlayerNameRegistration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7cc0
	struct UDBDPlayerLevelManager* GetPlayerLevelManager(); // Function DeadByDaylight.DBDGameInstance.GetPlayerLevelManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7c90
	int32_t GetMaxSurvivorCount(); // Function DeadByDaylight.DBDGameInstance.GetMaxSurvivorCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7c60
	struct UMapActorDB* GetMapActorDB(); // Function DeadByDaylight.DBDGameInstance.GetMapActorDB // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7c30
	struct APlayerController* GetLocalPlayerController(); // Function DeadByDaylight.DBDGameInstance.GetLocalPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7bd0
	struct ULocalPlayer* GetLocalPlayer(); // Function DeadByDaylight.DBDGameInstance.GetLocalPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7ba0
	struct ADBDPlayer* GetLocallyControlledCharacter(); // Function DeadByDaylight.DBDGameInstance.GetLocallyControlledCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7c00
	struct ULocalEventManager* GetLocalEventManager(); // Function DeadByDaylight.DBDGameInstance.GetLocalEventManager // (Final|Native|Public|Const) // @ game+0x54d7b70
	struct ULightingInterpolator* GetLightInterpolator(); // Function DeadByDaylight.DBDGameInstance.GetLightInterpolator // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54d7b10
	struct ULightingHelper* GetLightingHelper(); // Function DeadByDaylight.DBDGameInstance.GetLightingHelper // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54d7b40
	struct ABaseSky* GetLevelLighting(); // Function DeadByDaylight.DBDGameInstance.GetLevelLighting // (Final|Native|Public) // @ game+0x54d7ae0
	struct UInventoryHandler* GetInventoryHandler(); // Function DeadByDaylight.DBDGameInstance.GetInventoryHandler // (Final|Native|Public|Const) // @ game+0x54d7ab0
	struct UDedicatedServerManager* GetDedicatedServerManager(); // Function DeadByDaylight.DBDGameInstance.GetDedicatedServerManager // (Final|Native|Public|Const) // @ game+0x54d7980
	struct UDecalSpawnerCollection* GetDecalSpawnerCollection(); // Function DeadByDaylight.DBDGameInstance.GetDecalSpawnerCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7950
	int32_t GetDeadOrDisconnectedCampersCount(struct ADBDPlayerState* exception); // Function DeadByDaylight.DBDGameInstance.GetDeadOrDisconnectedCampersCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d78b0
	struct UConsentManager* GetConsentManager(); // Function DeadByDaylight.DBDGameInstance.GetConsentManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7880
	struct UCinematicManager* GetCinematicManager(); // Function DeadByDaylight.DBDGameInstance.GetCinematicManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7850
	struct FName GetCharacterDefaultItem(int32_t inCharacterIndex); // Function DeadByDaylight.DBDGameInstance.GetCharacterDefaultItem // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x54d77a0
	struct UPrimitiveCollection* GetCharacterClippingPrimitiveCollection(); // Function DeadByDaylight.DBDGameInstance.GetCharacterClippingPrimitiveCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7770
	struct UBonusPointEventsManager* GetBonusPointEventsManager(); // Function DeadByDaylight.DBDGameInstance.GetBonusPointEventsManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54d7740
	void ForceCloseGame(); // Function DeadByDaylight.DBDGameInstance.ForceCloseGame // (Final|Native|Static|Public) // @ game+0x54d7720
	void EndLoadingScreen(struct UWorld* loadedWorld); // Function DeadByDaylight.DBDGameInstance.EndLoadingScreen // (Final|Native|Public) // @ game+0x54d7690
	void DBD_UpdateSteamInventory(); // Function DeadByDaylight.DBDGameInstance.DBD_UpdateSteamInventory // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d73f0
	void DBD_ToggleLightingLoaded(); // Function DeadByDaylight.DBDGameInstance.DBD_ToggleLightingLoaded // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d73d0
	void DBD_TestTickedDiceRoll(float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier); // Function DeadByDaylight.DBDGameInstance.DBD_TestTickedDiceRoll // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d7270
	void DBD_TestSaveFile(struct FString Name); // Function DeadByDaylight.DBDGameInstance.DBD_TestSaveFile // (Final|Exec|Native|Public) // @ game+0x54d7180
	void DBD_TestRegion(); // Function DeadByDaylight.DBDGameInstance.DBD_TestRegion // (Final|Exec|Native|Public) // @ game+0x54d7160
	void DBD_TestDiceRoll(float BaseProbability, float MultiplicativeModifier, float AdditiveModifier); // Function DeadByDaylight.DBDGameInstance.DBD_TestDiceRoll // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d7040
	void DBD_SetStatsUploadEnabled(bool Enabled); // Function DeadByDaylight.DBDGameInstance.DBD_SetStatsUploadEnabled // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6fb0
	void DBD_SetFearMarketDate(struct FString dateString); // Function DeadByDaylight.DBDGameInstance.DBD_SetFearMarketDate // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6ec0
	void DBD_ResetSaveData(); // Function DeadByDaylight.DBDGameInstance.DBD_ResetSaveData // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6ea0
	void DBD_ResetCurrentAchievementStats(bool andUpload, bool andUpdateData); // Function DeadByDaylight.DBDGameInstance.DBD_ResetCurrentAchievementStats // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6dd0
	void DBD_ResetCurrentAchievementStat(struct FName StatName, bool andUpload); // Function DeadByDaylight.DBDGameInstance.DBD_ResetCurrentAchievementStat // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6ce0
	void DBD_PrintAudioConfig(); // Function DeadByDaylight.DBDGameInstance.DBD_PrintAudioConfig // (Final|Exec|Native|Public|BlueprintCallable|Const) // @ game+0x54d6c30
	void DBD_PIXEndCapture(); // Function DeadByDaylight.DBDGameInstance.DBD_PIXEndCapture // (Final|Exec|Native|Public) // @ game+0x54d6c10
	void DBD_PIXBeginCapture(); // Function DeadByDaylight.DBDGameInstance.DBD_PIXBeginCapture // (Final|Exec|Native|Public) // @ game+0x54d6bf0
	void DBD_GetRegion(); // Function DeadByDaylight.DBDGameInstance.DBD_GetRegion // (Final|Exec|Native|Public) // @ game+0x54d6bd0
	void DBD_ForceSave(); // Function DeadByDaylight.DBDGameInstance.DBD_ForceSave // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6bb0
	void DBD_ForceLoad(); // Function DeadByDaylight.DBDGameInstance.DBD_ForceLoad // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6b90
	void DBD_DumpSessions(); // Function DeadByDaylight.DBDGameInstance.DBD_DumpSessions // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6a70
	void DBD_DisplayCurrentAchievementStat(struct FName StatName); // Function DeadByDaylight.DBDGameInstance.DBD_DisplayCurrentAchievementStat // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d69d0
	void DBD_DestroySteamInventory(); // Function DeadByDaylight.DBDGameInstance.DBD_DestroySteamInventory // (Final|Exec|Native|Public) // @ game+0x54d69b0
	void DBD_DeleteLocalSaveFile(); // Function DeadByDaylight.DBDGameInstance.DBD_DeleteLocalSaveFile // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6990
	void DBD_CheckForNewContent(struct FString debugGameVersion, bool forceDisplay); // Function DeadByDaylight.DBDGameInstance.DBD_CheckForNewContent // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d68b0
	void DBD_ChangeSteamOverlayPosition(int32_t position, int32_t VerticalOffset, int32_t horizontalOffset); // Function DeadByDaylight.DBDGameInstance.DBD_ChangeSteamOverlayPosition // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d67a0
	void DBD_ApplyNoMist(); // Function DeadByDaylight.DBDGameInstance.DBD_ApplyNoMist // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6780
	void DBD_ApplyMist(float fogModifier); // Function DeadByDaylight.DBDGameInstance.DBD_ApplyMist // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54d6700
	void BeginLoadingScreen(struct FString MapName); // Function DeadByDaylight.DBDGameInstance.BeginLoadingScreen // (Final|Native|Public) // @ game+0x54d5870
	void Authority_SimulatePerks(struct TArray<struct FName> Perks, int32_t Level); // Function DeadByDaylight.DBDGameInstance.Authority_SimulatePerks // (Final|Native|Public|BlueprintCallable) // @ game+0x54d5740
	void AddActorKnowledgeCollection(struct UActorKnowledgeCollection* Collection); // Function DeadByDaylight.DBDGameInstance.AddActorKnowledgeCollection // (Final|Native|Public|BlueprintCallable) // @ game+0x54d51c0
};

// Class DeadByDaylight.DBDGameSession
// Size: 0x2b0 (Inherited: 0x250)
struct ADBDGameSession : AGameSession {
	char pad_250[0x60]; // 0x250(0x60)
};

// Class DeadByDaylight.DBDGameUserSettings
// Size: 0x3f8 (Inherited: 0x128)
struct UDBDGameUserSettings : UGameUserSettings {
	struct TArray<struct FInputActionKeyMapping> ActionMappings; // 0x128(0x10)
	struct TArray<struct FInputAxisKeyMapping> AxisMappings; // 0x138(0x10)
	struct FMulticastInlineDelegate OnSetCustomizedHudsTimestamp; // 0x148(0x10)
	char pad_158[0x18]; // 0x158(0x18)
	struct FString DeviceLoginTokenID; // 0x170(0x10)
	int32_t ScalabilityLevel; // 0x180(0x04)
	bool AutoScalabilitySet; // 0x184(0x01)
	bool AutoAdjust; // 0x185(0x01)
	char pad_186[0x2]; // 0x186(0x02)
	int32_t ScreenRenderSize; // 0x188(0x04)
	bool HUDConstrainedAspectRatio; // 0x18c(0x01)
	char pad_18D[0x3]; // 0x18d(0x03)
	int32_t MenuScaleFactor; // 0x190(0x04)
	int32_t HudScaleFactor; // 0x194(0x04)
	int32_t SkillCheckScaleFactor; // 0x198(0x04)
	bool LargeText; // 0x19c(0x01)
	bool BloodwebInteractionBehaviour; // 0x19d(0x01)
	bool TerrorRadiusVisualFeedback; // 0x19e(0x01)
	bool HUDPlayerNamesVisibility; // 0x19f(0x01)
	bool HUDKillerHookCountVisibility; // 0x1a0(0x01)
	bool HUDScoreEventsVisibility; // 0x1a1(0x01)
	bool LegacyPrestigePortraits; // 0x1a2(0x01)
	bool ChallengeProgression; // 0x1a3(0x01)
	bool ChallengeCompletion; // 0x1a4(0x01)
	char pad_1A5[0x3]; // 0x1a5(0x03)
	uint32_t FPSLimitMode; // 0x1a8(0x04)
	int32_t AntiAliasingMode; // 0x1ac(0x04)
	int32_t MainVolume; // 0x1b0(0x04)
	bool MainVolumeOn; // 0x1b4(0x01)
	char pad_1B5[0x3]; // 0x1b5(0x03)
	int32_t MenuMusicVolume; // 0x1b8(0x04)
	bool MenuMusicVolumeOn; // 0x1bc(0x01)
	bool UseHeadphones; // 0x1bd(0x01)
	bool MuteOnFocusLost; // 0x1be(0x01)
	bool HapticsVibrationPS5; // 0x1bf(0x01)
	int32_t KillerCameraSensitivity; // 0x1c0(0x04)
	int32_t SurvivorCameraSensitivity; // 0x1c4(0x04)
	int32_t KillerMouseSensitivity; // 0x1c8(0x04)
	int32_t SurvivorMouseSensitivity; // 0x1cc(0x04)
	int32_t KillerControllerSensitivity; // 0x1d0(0x04)
	int32_t SurvivorControllerSensitivity; // 0x1d4(0x04)
	bool AimAssist; // 0x1d8(0x01)
	char pad_1D9[0x3]; // 0x1d9(0x03)
	int32_t ControlType; // 0x1dc(0x04)
	bool InvertY; // 0x1e0(0x01)
	bool SurvivorInvertY; // 0x1e1(0x01)
	bool KillerToggleInteractions; // 0x1e2(0x01)
	bool SurvivorToggleInteractions; // 0x1e3(0x01)
	bool SprintToCancel; // 0x1e4(0x01)
	char pad_1E5[0x3]; // 0x1e5(0x03)
	struct FString Language; // 0x1e8(0x10)
	bool LanguageIsDefinedByPlayer; // 0x1f8(0x01)
	char pad_1F9[0x3]; // 0x1f9(0x03)
	int32_t HighestWeightSeenNews; // 0x1fc(0x04)
	struct FSharedAuthenticationTokenInformation SharedLoginInformation; // 0x200(0x30)
	uint32_t LastPanelContextId; // 0x230(0x04)
	bool ArchivesAutoPlayVoiceOver; // 0x234(0x01)
	bool ArchivesFullscreenTextVisibility; // 0x235(0x01)
	bool HasAcceptedCrossplayPopup; // 0x236(0x01)
	bool HasAcceptedProgressionSystemInfoPopup; // 0x237(0x01)
	bool HasAcceptedHapticsVibrationPopup; // 0x238(0x01)
	bool HasAcceptedCrossProgressionPopup; // 0x239(0x01)
	char pad_23A[0x6]; // 0x23a(0x06)
	struct FBonusTierTooltipVisibility BonusTierTooltipVisibility; // 0x240(0x18)
	bool UseAtlantaCustomizedHuds; // 0x258(0x01)
	bool UseAtlantaSurvivorQuickTurn; // 0x259(0x01)
	bool UseAtlantaKillerQuickTurn; // 0x25a(0x01)
	char pad_25B[0x5]; // 0x25b(0x05)
	struct TArray<struct FAtlantaCustomizedHudSettings> AtlantaCustomizedHuds; // 0x260(0x10)
	char pad_270[0x8]; // 0x270(0x08)
	bool ShowPortraitBorder; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)
	struct FString PartyPrivacyState; // 0x280(0x10)
	char pad_290[0x108]; // 0x290(0x108)
	int32_t ColorBlindMode; // 0x398(0x04)
	int32_t ColorBlindModeIntensity; // 0x39c(0x04)
	bool BeginnerMode; // 0x3a0(0x01)
	bool Subtitles; // 0x3a1(0x01)
	char pad_3A2[0x2]; // 0x3a2(0x02)
	int32_t SubtitlesBackgroundOpacity; // 0x3a4(0x04)
	char pad_3A8[0x48]; // 0x3a8(0x48)
	int32_t SubtitlesSize; // 0x3f0(0x04)
	bool IsAnonymousMode; // 0x3f4(0x01)
	bool HideYourName; // 0x3f5(0x01)
	bool HideOtherNames; // 0x3f6(0x01)
	bool HiddenMatchmakingDelay; // 0x3f7(0x01)

	bool GetTerrorRadiusVisualFeedback(); // Function DeadByDaylight.DBDGameUserSettings.GetTerrorRadiusVisualFeedback // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e4d90
	int32_t GetSkillCheckScaleFactor(); // Function DeadByDaylight.DBDGameUserSettings.GetSkillCheckScaleFactor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e4d60
	int32_t GetMenuScaleFactor(); // Function DeadByDaylight.DBDGameUserSettings.GetMenuScaleFactor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e4d30
	bool GetLegacyPrestigePortraits(); // Function DeadByDaylight.DBDGameUserSettings.GetLegacyPrestigePortraits // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e4d00
	bool GetLargeText(); // Function DeadByDaylight.DBDGameUserSettings.GetLargeText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e4cd0
	bool GetHUDScoreEventsVisibility(); // Function DeadByDaylight.DBDGameUserSettings.GetHUDScoreEventsVisibility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e48f0
	int32_t GetHudScaleFactor(); // Function DeadByDaylight.DBDGameUserSettings.GetHudScaleFactor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e4920
	bool GetHUDPlayerNamesVisibility(); // Function DeadByDaylight.DBDGameUserSettings.GetHUDPlayerNamesVisibility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e48c0
	bool GetHUDKillerHookCountVisibility(); // Function DeadByDaylight.DBDGameUserSettings.GetHUDKillerHookCountVisibility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e4890
	struct UDBDGameUserSettings* GetDBDGameUserSettings(); // Function DeadByDaylight.DBDGameUserSettings.GetDBDGameUserSettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54e46e0
	int32_t GetColorBlindModeIntensity(); // Function DeadByDaylight.DBDGameUserSettings.GetColorBlindModeIntensity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e46b0
	enum class EColorVisionDeficiency GetColorBlindMode(); // Function DeadByDaylight.DBDGameUserSettings.GetColorBlindMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e4680
	bool GetChallengeProgression(); // Function DeadByDaylight.DBDGameUserSettings.GetChallengeProgression // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e4650
	bool GetChallengeCompletion(); // Function DeadByDaylight.DBDGameUserSettings.GetChallengeCompletion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e4620
	bool GetBloodwebInteractionBehaviour(); // Function DeadByDaylight.DBDGameUserSettings.GetBloodwebInteractionBehaviour // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e45f0
};

// Class DeadByDaylight.DBDGameViewportClient
// Size: 0x3a0 (Inherited: 0x370)
struct UDBDGameViewportClient : UGameViewportClient {
	char pad_370[0x30]; // 0x370(0x30)
};

// Class DeadByDaylight.DBDGenericTeamAgentInterface
// Size: 0x30 (Inherited: 0x30)
struct UDBDGenericTeamAgentInterface : UGenericTeamAgentInterface {
};

// Class DeadByDaylight.DBDHud
// Size: 0x80 (Inherited: 0x30)
struct UDBDHud : UObject {
	struct TMap<struct FName, struct AStatusView*> _statusViews; // 0x30(0x50)

	void RemoveStatusViewOnDestroy(struct AActor* Actor); // Function DeadByDaylight.DBDHud.RemoveStatusViewOnDestroy // (Final|Native|Private) // @ game+0x54e4f00
};

// Class DeadByDaylight.DBDInGameHud
// Size: 0x358 (Inherited: 0x330)
struct ADBDInGameHud : ADBDBaseHud {
	struct UFont* _debugFontObj; // 0x330(0x08)
	char pad_338[0x18]; // 0x338(0x18)
	struct UCompetenceDebugger* _competenceDebugger; // 0x350(0x08)
};

// Class DeadByDaylight.DBDInitPlayerQuery
// Size: 0x30 (Inherited: 0x30)
struct UDBDInitPlayerQuery : UObject {
};

// Class DeadByDaylight.DBDInitPlayerQueryYesNo
// Size: 0xb0 (Inherited: 0x30)
struct UDBDInitPlayerQueryYesNo : UDBDInitPlayerQuery {
	char pad_30[0x80]; // 0x30(0x80)
};

// Class DeadByDaylight.DBDInitPlayerQueryYesNoSizeWifi
// Size: 0xc0 (Inherited: 0xb0)
struct UDBDInitPlayerQueryYesNoSizeWifi : UDBDInitPlayerQueryYesNo {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class DeadByDaylight.DBDInstancedFoliageComponent
// Size: 0x120 (Inherited: 0xb8)
struct UDBDInstancedFoliageComponent : UActorComponent {
	int32_t NextBaseId; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct TMap<int32_t, struct USceneComponent*> InstanceBaseMap; // 0xc0(0x50)
	struct TArray<struct FDBDFoliageInfo> Foliage; // 0x110(0x10)
};

// Class DeadByDaylight.DBDInventoryUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDInventoryUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.DBDKeyDisplayInfo
// Size: 0x170 (Inherited: 0x30)
struct UDBDKeyDisplayInfo : UObject {
	struct TMap<struct FName, struct FKeyDisplayInfo> _keyDisplayInfoMap; // 0x30(0x50)
	char pad_80[0x50]; // 0x80(0x50)
	struct TMap<enum class EInputInteractionType, struct FName> _interactionTypeToActionMap_Camper; // 0xd0(0x50)
	struct TMap<enum class EInputInteractionType, struct FName> _interactionTypeToActionMap_Slasher; // 0x120(0x50)

	bool IsExcludedKey(struct FKey Key); // Function DeadByDaylight.DBDKeyDisplayInfo.IsExcludedKey // (Final|Native|Public) // @ game+0x54e4dc0
	struct FKeyDisplayInfo GetKeyDisplayInfoForInteractionType(struct UPlayerInput* PlayerInput, enum class EPlayerRole PlayerRole, enum class EInputInteractionType interactionType, bool useGamePad); // Function DeadByDaylight.DBDKeyDisplayInfo.GetKeyDisplayInfoForInteractionType // (Final|Native|Public) // @ game+0x54e4ad0
	struct FKeyDisplayInfo GetKeyDisplayInfo(struct FKey Key); // Function DeadByDaylight.DBDKeyDisplayInfo.GetKeyDisplayInfo // (Final|Native|Public) // @ game+0x54e4950
	struct FKey GetFirstKeyForAction(struct UPlayerInput* PlayerInput, struct FName ActionName, bool useGamePad); // Function DeadByDaylight.DBDKeyDisplayInfo.GetFirstKeyForAction // (Final|Native|Public) // @ game+0x54e4710
	struct FName GetActionForInteractionType(enum class EPlayerRole PlayerRole, enum class EInputInteractionType inputInteractionType, bool useGamePad, bool ignoreInteractMash); // Function DeadByDaylight.DBDKeyDisplayInfo.GetActionForInteractionType // (Final|Native|Public) // @ game+0x54e4460
};

// Class DeadByDaylight.DBDLobbyHud
// Size: 0x330 (Inherited: 0x330)
struct ADBDLobbyHud : ADBDBaseHud {
};

// Class DeadByDaylight.DBDLocalPlayer
// Size: 0x268 (Inherited: 0x268)
struct UDBDLocalPlayer : ULocalPlayer {
};

// Class DeadByDaylight.DBDMapFoliageDensityTunables
// Size: 0x40 (Inherited: 0x30)
struct UDBDMapFoliageDensityTunables : UObject {
	struct TArray<struct FTypeFoliageToAutomateDensity> FoliageToAutomateDensity; // 0x30(0x10)
};

// Class DeadByDaylight.DBDMaterialBlueprintLibrary
// Size: 0x30 (Inherited: 0x30)
struct UDBDMaterialBlueprintLibrary : UBlueprintFunctionLibrary {

	void SetVectorParameterValueOnMeshComponent(struct UMeshComponent* Mesh, struct FName ParameterName, struct FLinearColor value); // Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetVectorParameterValueOnMeshComponent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x54e9060
	void SetTransformParameterValueOnMeshComponent(struct UMeshComponent* Mesh, struct FName ParameterName, struct FTransform value); // Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterValueOnMeshComponent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x54e8ee0
	void SetTransformParameterValueOnMaterialDynamic(struct UMaterialInstanceDynamic* Material, struct FName ParameterName, struct FTransform value); // Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterValueOnMaterialDynamic // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x54e8d60
	void SetTransformParameterInverseValueOnMaterialDynamic(struct UMaterialInstanceDynamic* Material, struct FName ParameterName, struct FTransform value); // Function DeadByDaylight.DBDMaterialBlueprintLibrary.SetTransformParameterInverseValueOnMaterialDynamic // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x54e8be0
	struct TArray<struct UMaterialInstanceDynamic*> CreateDynamicMaterialInstanceForParticleSystem(struct UParticleSystemComponent* System); // Function DeadByDaylight.DBDMaterialBlueprintLibrary.CreateDynamicMaterialInstanceForParticleSystem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x54e7ea0
};

// Class DeadByDaylight.DBDMathBlueprintLibrary
// Size: 0x30 (Inherited: 0x30)
struct UDBDMathBlueprintLibrary : UBlueprintFunctionLibrary {

	bool VectorIntersect(struct FVector& OriginA, struct FVector& ExtentA, struct FVector& OriginB, struct FVector& ExtentB); // Function DeadByDaylight.DBDMathBlueprintLibrary.VectorIntersect // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x54e9380
	struct FVector VectorAbsoluteValue(struct FVector& A); // Function DeadByDaylight.DBDMathBlueprintLibrary.VectorAbsoluteValue // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x54e92e0
	struct TArray<struct FLinearColor> TransformToMatrix(struct FTransform& A); // Function DeadByDaylight.DBDMathBlueprintLibrary.TransformToMatrix // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x54e91c0
};

// Class DeadByDaylight.DBDHookUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDHookUtilities : UBlueprintFunctionLibrary {

	bool IsWraithHook(struct AMeatHook* targetHook); // Function DeadByDaylight.DBDHookUtilities.IsWraithHook // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e85d0
	bool IsPigHook(struct AMeatHook* targetHook); // Function DeadByDaylight.DBDHookUtilities.IsPigHook // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e8510
	bool IsNurseHook(struct AMeatHook* targetHook); // Function DeadByDaylight.DBDHookUtilities.IsNurseHook // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e83f0
	bool IsLegionHook(struct AMeatHook* targetHook); // Function DeadByDaylight.DBDHookUtilities.IsLegionHook // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e8360
	bool IsHuntressHook(struct AMeatHook* targetHook); // Function DeadByDaylight.DBDHookUtilities.IsHuntressHook // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e82d0
	bool IsHookOf(struct AMeatHook* targetHook, struct FGameplayTag hookTag); // Function DeadByDaylight.DBDHookUtilities.IsHookOf // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e81f0
	bool IsHagHook(struct AMeatHook* targetHook); // Function DeadByDaylight.DBDHookUtilities.IsHagHook // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e8160
	bool IsFreddyHook(struct AMeatHook* targetHook); // Function DeadByDaylight.DBDHookUtilities.IsFreddyHook // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e80d0
	float ComputeHookStrugglePercent(struct ACamperPlayer* hookedCamper, float hookStruggleThreshold); // Function DeadByDaylight.DBDHookUtilities.ComputeHookStrugglePercent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e7dd0
};

// Class DeadByDaylight.DBDMenuGameState
// Size: 0x8e8 (Inherited: 0x8e0)
struct ADBDMenuGameState : ADBDGameState {
	struct UMenuForcedLODHandler* _menuForcedLODHandler; // 0x8e0(0x08)
};

// Class DeadByDaylight.DBDMenuPlayer
// Size: 0x660 (Inherited: 0x580)
struct ADBDMenuPlayer : ADBDBasePlayer {
	char pad_580[0x20]; // 0x580(0x20)
	bool RoleSelected; // 0x5a0(0x01)
	bool IsOnline; // 0x5a1(0x01)
	char pad_5A2[0x6]; // 0x5a2(0x06)
	struct FMulticastInlineDelegate OnItemEquipped; // 0x5a8(0x10)
	char pad_5B8[0x18]; // 0x5b8(0x18)
	struct TSoftObjectPtr<UMaterialInterface> DarkMaterial; // 0x5d0(0x30)
	enum class EItemHandPosition _handPosition; // 0x600(0x01)
	char pad_601[0x7]; // 0x601(0x07)
	struct UDBDSkeletalMeshComponentBudgeted* ItemMesh; // 0x608(0x08)
	struct UMaterialHelper* MaterialHelper; // 0x610(0x08)
	struct UCustomizedSkeletalMesh* _customizedSkeletalMeshComponent; // 0x618(0x08)
	struct FName _equippedItemName; // 0x620(0x0c)
	char pad_62C[0x28]; // 0x62c(0x28)
	float _blockRotationDuringSpawnAnimationDuration; // 0x654(0x04)
	bool _isLocalPlayerCharacter; // 0x658(0x01)
	bool _isReady; // 0x659(0x01)
	char pad_65A[0x6]; // 0x65a(0x06)

	void WrappedOnDestroyed(struct AActor* DestroyedActor); // Function DeadByDaylight.DBDMenuPlayer.WrappedOnDestroyed // (Final|Native|Private) // @ game+0x54e9510
	bool ShouldShowSpawnAnimation(); // Function DeadByDaylight.DBDMenuPlayer.ShouldShowSpawnAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e91a0
	bool ShouldApplyPositionOffset(); // Function DeadByDaylight.DBDMenuPlayer.ShouldApplyPositionOffset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e9180
	void RestartInSequence_Internal(); // Function DeadByDaylight.DBDMenuPlayer.RestartInSequence_Internal // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void PlayCharacterLevelUpVFX(); // Function DeadByDaylight.DBDMenuPlayer.PlayCharacterLevelUpVFX // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnPlayerMaxPrestige(); // Function DeadByDaylight.DBDMenuPlayer.OnPlayerMaxPrestige // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnLocalPlayerSpawned(); // Function DeadByDaylight.DBDMenuPlayer.OnLocalPlayerSpawned // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnLocalPlayerReadyChanged(bool IsReady); // Function DeadByDaylight.DBDMenuPlayer.OnLocalPlayerReadyChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnIsReadyChanged(bool IsReady); // Function DeadByDaylight.DBDMenuPlayer.OnIsReadyChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnGuestPlayerSpawned(struct ADBDMenuPlayer* Player); // Function DeadByDaylight.DBDMenuPlayer.OnGuestPlayerSpawned // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnGuestPlayerReadyChanged(struct ADBDMenuPlayer* Player, bool IsReady); // Function DeadByDaylight.DBDMenuPlayer.OnGuestPlayerReadyChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnGuestPlayerDespawned(struct ADBDMenuPlayer* Player); // Function DeadByDaylight.DBDMenuPlayer.OnGuestPlayerDespawned // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnCustomizationTransactionCompleted(enum class ECustomizationCategory category); // Function DeadByDaylight.DBDMenuPlayer.OnCustomizationTransactionCompleted // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnAllPlayersReadyInOnlineLobby(); // Function DeadByDaylight.DBDMenuPlayer.OnAllPlayersReadyInOnlineLobby // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	bool IsInMenuPlayer(); // Function DeadByDaylight.DBDMenuPlayer.IsInMenuPlayer // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x5e02c90
	bool HasSameCharacterInLobby(); // Function DeadByDaylight.DBDMenuPlayer.HasSameCharacterInLobby // (Final|Native|Public|BlueprintCallable) // @ game+0x54e8080
	bool GetIsReady(); // Function DeadByDaylight.DBDMenuPlayer.GetIsReady // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e8020
	bool GetIsLocalPlayerCharacter(); // Function DeadByDaylight.DBDMenuPlayer.GetIsLocalPlayerCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e7ff0
	enum class EItemHandPosition GetHandPosition(); // Function DeadByDaylight.DBDMenuPlayer.GetHandPosition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e7fd0
	enum class EGameFlowStep GetCurrentMenu(); // Function DeadByDaylight.DBDMenuPlayer.GetCurrentMenu // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x4ba9c10
	struct UCharmSpawnerComponent* GetCharmSpawnerComponent(); // Function DeadByDaylight.DBDMenuPlayer.GetCharmSpawnerComponent // (Native|Event|Protected|BlueprintEvent) // @ game+0x54e7fa0
	float GetBlockRotationAfterSpawningTime(); // Function DeadByDaylight.DBDMenuPlayer.GetBlockRotationAfterSpawningTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e7f70
	void BlockCharacterRotation(bool shouldBlock); // Function DeadByDaylight.DBDMenuPlayer.BlockCharacterRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x54e7d40
	void BeginDestroySequence_Internal(); // Function DeadByDaylight.DBDMenuPlayer.BeginDestroySequence_Internal // (Native|Event|Protected|BlueprintEvent) // @ game+0x54e7d20
	void BeginCreateSequence(); // Function DeadByDaylight.DBDMenuPlayer.BeginCreateSequence // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.DBDMenuSilhouette
// Size: 0x230 (Inherited: 0x230)
struct ADBDMenuSilhouette : AActor {
};

// Class DeadByDaylight.DBDMistLocatorComponent
// Size: 0x220 (Inherited: 0x220)
struct UDBDMistLocatorComponent : UDBDLocatorComponent {
};

// Class DeadByDaylight.DBDMistManager
// Size: 0x238 (Inherited: 0x230)
struct ADBDMistManager : AActor {
	struct UDBDAggregateParticleSystemComponent* _particleSystemComp; // 0x230(0x08)
};

// Class DeadByDaylight.DBDNavEvadeLoopComponent
// Size: 0x158 (Inherited: 0xb8)
struct UDBDNavEvadeLoopComponent : UActorComponent {
	struct FVector EvadeDoorExtent; // 0xb8(0x0c)
	float EvadeDoorFrontPointOffset; // 0xc4(0x04)
	float EvadeDoorSideOffset; // 0xc8(0x04)
	float SideBlockerOffset; // 0xcc(0x04)
	float AutoSnapPointsUpHeight; // 0xd0(0x04)
	float AutoSnapPointsDownHeight; // 0xd4(0x04)
	enum class ECollisionChannel AutoSnapCollisionChannel; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
	struct UNavigationQueryFilter* EvadeLoopFilterClass; // 0xe0(0x08)
	float MinSafetyLength; // 0xe8(0x04)
	float MaxSafetyLength; // 0xec(0x04)
	enum class EAIEvadeLoopSides LimitToSide; // 0xf0(0x01)
	bool DebugEditMode; // 0xf1(0x01)
	bool DrawDebugFilter; // 0xf2(0x01)
	char pad_F3[0x65]; // 0xf3(0x65)

	void OnLevelReadyToPlay(); // Function DeadByDaylight.DBDNavEvadeLoopComponent.OnLevelReadyToPlay // (Final|Native|Private) // @ game+0x54e8660
};

// Class DeadByDaylight.DBDNavModifierComponent
// Size: 0x1b0 (Inherited: 0x150)
struct UDBDNavModifierComponent : UNavModifierComponent {
	bool ForceUseFailsafeExtent; // 0x150(0x01)
	char pad_151[0x3]; // 0x151(0x03)
	float UpdateModifierInterval; // 0x154(0x04)
	bool StartNavigationRelevant; // 0x158(0x01)
	bool AlwaysTickToCheckTransform; // 0x159(0x01)
	bool RelevantPassiveMode; // 0x15a(0x01)
	char pad_15B[0x1]; // 0x15b(0x01)
	struct FVector BoundCenterOffset; // 0x15c(0x0c)
	char pad_168[0x48]; // 0x168(0x48)
};

// Class DeadByDaylight.DBDNetworkUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDNetworkUtilities : UBlueprintFunctionLibrary {

	bool IsRunningDedicatedServerFlow(); // Function DeadByDaylight.DBDNetworkUtilities.IsRunningDedicatedServerFlow // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e85a0
	bool IsOnDedicatedServerNetwork(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDNetworkUtilities.IsOnDedicatedServerNetwork // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54e8480
};

// Class DeadByDaylight.DBDObserverPlayer
// Size: 0x510 (Inherited: 0x4d0)
struct ADBDObserverPlayer : ACharacter {
	struct UDBDPlayerData* _playerData; // 0x4d0(0x08)
	char pad_4D8[0x38]; // 0x4d8(0x38)

	void Server_PlayerReady(); // Function DeadByDaylight.DBDObserverPlayer.Server_PlayerReady // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54e86e0
};

// Class DeadByDaylight.DBDOnlineSessionClient
// Size: 0x228 (Inherited: 0x200)
struct UDBDOnlineSessionClient : UOnlineSessionClient {
	char pad_200[0x28]; // 0x200(0x28)
};

// Class DeadByDaylight.DBDOutlineComponent
// Size: 0x3a0 (Inherited: 0x2b0)
struct UDBDOutlineComponent : UBatchMeshCommands {
	float InterpolationSpeed; // 0x2a8(0x04)
	bool ShouldBeAboveOutlines; // 0x2ac(0x01)
	bool ForceOutlineFarAway; // 0x2ad(0x01)
	bool LimitToCustomDepthObjects; // 0x2ae(0x01)
	bool FadeOutAsClosingIn; // 0x2af(0x01)
	bool IsAlwaysVisible; // 0x2b0(0x01)
	float MinimumOutlineDistanceWhenIsAlwaysVisible; // 0x2b4(0x04)
	float MinimumOutlineDistance; // 0x2b8(0x04)
	struct FString OutlineName; // 0x2c0(0x10)
	char pad_2D1[0x57]; // 0x2d1(0x57)
	struct FDBDOutlineRenderStrategySelector _renderStrategySelector; // 0x328(0x40)
	struct UBatchMeshCommands* _batchMeshCommands; // 0x368(0x08)
	char pad_370[0x10]; // 0x370(0x10)
	struct UBaseOutlineRenderStrategy* _renderingStrategy; // 0x380(0x08)
	char pad_388[0x18]; // 0x388(0x18)

	void SetTargetColor(struct FLinearColor Color); // Function DeadByDaylight.DBDOutlineComponent.SetTargetColor // (Final|BlueprintCosmetic|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x54e8b50
	void SetOutlineMaterialOverride(struct FGameplayTag OverrideName); // Function DeadByDaylight.DBDOutlineComponent.SetOutlineMaterialOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x54e8ab0
	void SetOutlineIntensity(float outlineIntensity); // Function DeadByDaylight.DBDOutlineComponent.SetOutlineIntensity // (Final|Native|Public|BlueprintCallable) // @ game+0x54e8a30
	void SetMinimumOutlineDistance(float distanceWhenIsAlwaysVisible, float distance); // Function DeadByDaylight.DBDOutlineComponent.SetMinimumOutlineDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x54e8960
	void SetMaterialCopyTarget(struct UMaterialInterface* inMaterialToCopy); // Function DeadByDaylight.DBDOutlineComponent.SetMaterialCopyTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x54e88d0
	void SetIsOccludingOutlines(bool isOccluding); // Function DeadByDaylight.DBDOutlineComponent.SetIsOccludingOutlines // (Final|Native|Public|BlueprintCallable) // @ game+0x54e8840
	void SetFadeTexture(struct UTexture* inFadeTexture); // Function DeadByDaylight.DBDOutlineComponent.SetFadeTexture // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // @ game+0x54e87b0
	void SetFadeIntensity(float fadeIntensity); // Function DeadByDaylight.DBDOutlineComponent.SetFadeIntensity // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // @ game+0x54e8730
	void ResetToTransparent(); // Function DeadByDaylight.DBDOutlineComponent.ResetToTransparent // (Final|Native|Public|BlueprintCallable) // @ game+0x54e86c0
	void RefreshOutlineComponent(); // Function DeadByDaylight.DBDOutlineComponent.RefreshOutlineComponent // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // @ game+0x54e86a0
	void OnLevelReadyToPlay(); // Function DeadByDaylight.DBDOutlineComponent.OnLevelReadyToPlay // (Final|Native|Private) // @ game+0x54e8680
	void InitBatcher(); // Function DeadByDaylight.DBDOutlineComponent.InitBatcher // (Final|Native|Private) // @ game+0x54e80b0
	struct FLinearColor GetTargetColor(); // Function DeadByDaylight.DBDOutlineComponent.GetTargetColor // (Final|BlueprintCosmetic|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54e8050
};

// Class DeadByDaylight.DBDOutlineComponentConfiguration
// Size: 0x138 (Inherited: 0x38)
struct UDBDOutlineComponentConfiguration : UDataAsset {
	struct TMap<struct TSoftClassPtr<UObject>, struct FOutlineConfig> OutlineConfigs; // 0x38(0x50)
	struct TMap<struct FName, struct FOutlineColourConfiguration> OutlineColours; // 0x88(0x50)
	struct TArray<struct TSoftObjectPtr<UMaterialInterface>> TranslucencyDefaultMaterials; // 0xd8(0x10)
	struct TMap<struct FGameplayTag, struct FOutlineOverrideConfig> OutlineOverrideConfigs; // 0xe8(0x50)
};

// Class DeadByDaylight.DBDOutlineComponentCustomDepthConfiguration
// Size: 0x138 (Inherited: 0x138)
struct UDBDOutlineComponentCustomDepthConfiguration : UDBDOutlineComponentConfiguration {
};

// Class DeadByDaylight.DBDOutlineComponentStencilConfiguration
// Size: 0x138 (Inherited: 0x138)
struct UDBDOutlineComponentStencilConfiguration : UDBDOutlineComponentConfiguration {
};

// Class DeadByDaylight.DBDOutlineComponentTranslucentConfiguration
// Size: 0x138 (Inherited: 0x138)
struct UDBDOutlineComponentTranslucentConfiguration : UDBDOutlineComponentConfiguration {
};

// Class DeadByDaylight.DBDParadiseGameMode
// Size: 0x360 (Inherited: 0x360)
struct ADBDParadiseGameMode : ADBDBaseGameMode {
};

// Class DeadByDaylight.DBDPartyFacade
// Size: 0x4d8 (Inherited: 0x4c8)
struct UDBDPartyFacade : UPartyFacade {
	char pad_4C8[0x10]; // 0x4c8(0x10)
};

// Class DeadByDaylight.DBDPawnSensingComponent
// Size: 0x108 (Inherited: 0x100)
struct UDBDPawnSensingComponent : UPawnSensingComponent {
	bool bSenseEverywhere; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	float PartiallyHiddenSensingDistance; // 0x104(0x04)
};

// Class DeadByDaylight.DBDPersistentData
// Size: 0x1288 (Inherited: 0x30)
struct UDBDPersistentData : UObject {
	struct FGamePersistentData _gamePersistentData; // 0x30(0x108)
	struct TArray<struct FString> _keepDataIDs; // 0x138(0x10)
	struct TMap<struct FString, struct FPlayerPersistentData> _playerIdToPersistentDataMap; // 0x148(0x50)
	struct FPlayerPersistentData _localPlayerPersistentData; // 0x198(0x958)
	char pad_AF0[0x50]; // 0xaf0(0x50)
	struct TArray<struct FCloudInventoryItem> _cloudInventory; // 0xb40(0x10)
	char pad_B50[0x738]; // 0xb50(0x738)
};

// Class DeadByDaylight.DBDPlayerAudioHandlerComponent
// Size: 0x148 (Inherited: 0xb8)
struct UDBDPlayerAudioHandlerComponent : UActorComponent {
	struct FString _stopMovingRTPC; // 0xb8(0x10)
	char pad_C8[0x80]; // 0xc8(0x80)
};

// Class DeadByDaylight.DBDPlayerCameraManager
// Size: 0x2840 (Inherited: 0x2820)
struct ADBDPlayerCameraManager : APlayerCameraManager {
	float NormalFOV; // 0x2820(0x04)
	float TargetingFOV; // 0x2824(0x04)
	struct TScriptInterface<IViewRotationStrategy> _viewRotationStrategy; // 0x2828(0x10)
	char pad_2838[0x8]; // 0x2838(0x08)

	void StartFadeOutTimeline(float Duration); // Function DeadByDaylight.DBDPlayerCameraManager.StartFadeOutTimeline // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void StartFadeInTimeline(float Duration); // Function DeadByDaylight.DBDPlayerCameraManager.StartFadeInTimeline // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.DBDPlayerControllerBase
// Size: 0x668 (Inherited: 0x590)
struct ADBDPlayerControllerBase : APlayerController {
	char pad_590[0x58]; // 0x590(0x58)
	struct FMulticastInlineDelegate OnPlayerStateChanged; // 0x5e8(0x10)
	char pad_5F8[0x58]; // 0x5f8(0x58)
	struct ADBDPlayer* _mainCharacter; // 0x650(0x08)
	char pad_658[0x10]; // 0x658(0x10)

	void Server_UpdateReplicatedPips(int32_t pipsToAdd); // Function DeadByDaylight.DBDPlayerControllerBase.Server_UpdateReplicatedPips // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fc800
	void Server_SetConsecutiveMatchStreak(int32_t consecutiveMatch); // Function DeadByDaylight.DBDPlayerControllerBase.Server_SetConsecutiveMatchStreak // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54fbac0
	void Server_SendMessage(struct FString Message); // Function DeadByDaylight.DBDPlayerControllerBase.Server_SendMessage // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fb740
	void Server_SendClientAuthentication(struct FString authClientTicket, uint64_t SteamId, uint32_t ticketLength); // Function DeadByDaylight.DBDPlayerControllerBase.Server_SendClientAuthentication // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x54fb5e0
	void Server_ReceivePlayerProfile(struct FPlayerSavedProfileDataShared savedProfileData, struct FPlayerLoadoutData playerLoadout); // Function DeadByDaylight.DBDPlayerControllerBase.Server_ReceivePlayerProfile // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54facc0
	void Server_EACMessageFromClient(struct TArray<char> Message); // Function DeadByDaylight.DBDPlayerControllerBase.Server_EACMessageFromClient // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fa990
	void Server(struct FString commandLine); // Function DeadByDaylight.DBDPlayerControllerBase.Server // (Final|Exec|Native|Public) // @ game+0x54fa490
	void DBD_UpdateLocalStats(); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_UpdateLocalStats // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x4032ad0
	void DBD_SetCurrentCharacterPrestigeDatesPast(); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesPast // (Final|Exec|Native|Public) // @ game+0x4032ad0
	void DBD_SetCurrentCharacterPrestigeDatesNow(); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesNow // (Final|Exec|Native|Public) // @ game+0x4032ad0
	void DBD_SetCurrentCharacterPrestigeDatesFuture(); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_SetCurrentCharacterPrestigeDatesFuture // (Final|Exec|Native|Public) // @ game+0x4032ad0
	void DBD_FireTestScore(int32_t category, float value); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_FireTestScore // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x54fa130
	void DBD_FillScoreCategory(int32_t category); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_FillScoreCategory // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x46a25e0
	void DBD_FillAllScoreCategories(); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_FillAllScoreCategories // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x4032ad0
	void DBD_DebugSendChatMessage(struct FString Msg); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_DebugSendChatMessage // (Final|Exec|Native|Public) // @ game+0x3eb3000
	void DBD_BuildFromTile(int32_t matrixX, int32_t matrixY, int32_t Rotation, struct FString Name); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromTile // (Final|Exec|Native|Public) // @ game+0x54f9fc0
	void DBD_BuildFromSeed(int32_t Seed); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromSeed // (Final|Exec|Native|Public) // @ game+0x54f9f30
	void DBD_BuildFromPremadeMap(struct FString Map); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromPremadeMap // (Final|Exec|Native|Public) // @ game+0x54f9e90
	void DBD_BuildFromPlayerCount(int32_t Count); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromPlayerCount // (Final|Exec|Native|Public) // @ game+0x54f9e00
	void DBD_BuildFromMap(struct FString Map); // Function DeadByDaylight.DBDPlayerControllerBase.DBD_BuildFromMap // (Final|Exec|Native|Public) // @ game+0x54f9d60
	void Client_SendWarning(bool penaltyStarts, float Seconds); // Function DeadByDaylight.DBDPlayerControllerBase.Client_SendWarning // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x54f9a10
	void Client_SendServerAuthentication(struct FString authServerTicket, uint64_t SteamId, uint32_t ticketLength); // Function DeadByDaylight.DBDPlayerControllerBase.Client_SendServerAuthentication // (Final|Net|NetReliableNative|Event|Private|NetClient|NetValidate) // @ game+0x54f98b0
	void Client_SendLogs(struct TArray<struct FString> ensures); // Function DeadByDaylight.DBDPlayerControllerBase.Client_SendLogs // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x54f97e0
	void Client_RequestPlayerProfile(); // Function DeadByDaylight.DBDPlayerControllerBase.Client_RequestPlayerProfile // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x54f97c0
	void Client_GameEnded(); // Function DeadByDaylight.DBDPlayerControllerBase.Client_GameEnded // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x54f97a0
	void Client_FinishedPlaying(); // Function DeadByDaylight.DBDPlayerControllerBase.Client_FinishedPlaying // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x54f9780
	void Client_EACResetConnection(); // Function DeadByDaylight.DBDPlayerControllerBase.Client_EACResetConnection // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x54f9760
	void Client_EACMessageFromServer(struct TArray<char> Message); // Function DeadByDaylight.DBDPlayerControllerBase.Client_EACMessageFromServer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x54f96c0
	void Client_EACConnect(); // Function DeadByDaylight.DBDPlayerControllerBase.Client_EACConnect // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x54f96a0
	void CallConsoleCmdOnServer_Server(struct FString commandLine); // Function DeadByDaylight.DBDPlayerControllerBase.CallConsoleCmdOnServer_Server // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x54f95e0
};

// Class DeadByDaylight.DBDPlayerController
// Size: 0x880 (Inherited: 0x668)
struct ADBDPlayerController : ADBDPlayerControllerBase {
	struct FMulticastInlineDelegate OnPawnLeavingGame; // 0x668(0x10)
	struct FMulticastInlineDelegate OnLocallyObservedChanged; // 0x678(0x10)
	char pad_688[0x98]; // 0x688(0x98)
	struct ANetworkFenceActor* _theFence; // 0x720(0x08)
	char pad_728[0x8]; // 0x728(0x08)
	struct UDBDBaseInputHandler* _inputHandler; // 0x730(0x08)
	char pad_738[0x130]; // 0x738(0x130)
	struct APawn* _aiPawn; // 0x868(0x08)
	char pad_870[0x8]; // 0x870(0x08)
	enum class EPlayerRole _controllerGameRole; // 0x878(0x01)
	char pad_879[0x7]; // 0x879(0x07)

	void SetShouldMoveInputReplicateToServer(bool ShouldReplicate); // Function DeadByDaylight.DBDPlayerController.SetShouldMoveInputReplicateToServer // (Final|Native|Public|BlueprintCallable) // @ game+0x54fc950
	void ServerViewPlayer(struct FString playerName); // Function DeadByDaylight.DBDPlayerController.ServerViewPlayer // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x54fa530
	void Server_SetSpectatorModeInEditor(bool On, struct ADBDPlayerState* spectatingPlayerState); // Function DeadByDaylight.DBDPlayerController.Server_SetSpectatorModeInEditor // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fc700
	void Server_SetSpectatorMode(bool On); // Function DeadByDaylight.DBDPlayerController.Server_SetSpectatorMode // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x54fc640
	void Server_SetReadyToTravel(); // Function DeadByDaylight.DBDPlayerController.Server_SetReadyToTravel // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54fc5d0
	void Server_SetHasMoveInputThisFrame(bool hasMoveInputThisFrame); // Function DeadByDaylight.DBDPlayerController.Server_SetHasMoveInputThisFrame // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fbec0
	void Server_RequestEndGame(); // Function DeadByDaylight.DBDPlayerController.Server_RequestEndGame // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54fb5c0
	void Server_LeaveGame(bool joiningLobby); // Function DeadByDaylight.DBDPlayerController.Server_LeaveGame // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54fac30
	void Server_DebugSend(struct FString Data); // Function DeadByDaylight.DBDPlayerController.Server_DebugSend // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54fa8f0
	void Server_ClientTimeSinceLastLoadingProgress(float lastProgression); // Function DeadByDaylight.DBDPlayerController.Server_ClientTimeSinceLastLoadingProgress // (Net|Native|Event|Public|NetServer) // @ game+0x54fa860
	void Server_ActivateAIAll(bool Activate, int32_t PlayerRank, int8_t PlayerRole); // Function DeadByDaylight.DBDPlayerController.Server_ActivateAIAll // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fa6f0
	void Server_ActivateAI(bool Activate, int32_t PlayerRank); // Function DeadByDaylight.DBDPlayerController.Server_ActivateAI // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fa5f0
	void OnRep_Fence(); // Function DeadByDaylight.DBDPlayerController.OnRep_Fence // (Final|Native|Private) // @ game+0x54fa470
	bool MobileJoystickInput_Pressed(int32_t joystickIndex); // Function DeadByDaylight.DBDPlayerController.MobileJoystickInput_Pressed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54fa3d0
	bool IsSpectating(); // Function DeadByDaylight.DBDPlayerController.IsSpectating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54fa3a0
	void ImplementRunLockMechanic(); // Function DeadByDaylight.DBDPlayerController.ImplementRunLockMechanic // (Final|Native|Public|BlueprintCallable) // @ game+0x54fa2f0
	struct ADBDPlayerState* GetSpectatedPlayerState(); // Function DeadByDaylight.DBDPlayerController.GetSpectatedPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54fa2c0
	struct ADBDPlayer* GetSpectatedPlayer(); // Function DeadByDaylight.DBDPlayerController.GetSpectatedPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54fa290
	struct ADBDPlayer* GetControlledPlayer(); // Function DeadByDaylight.DBDPlayerController.GetControlledPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54fa260
	struct APawn* GetAIPawn(); // Function DeadByDaylight.DBDPlayerController.GetAIPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54fa200
	void Client_SpectateAI(struct APawn* aiPawn); // Function DeadByDaylight.DBDPlayerController.Client_SpectateAI // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x54f9cd0
	void Client_SetSpectatorModeInEditor(bool On, struct ADBDPlayerState* spectatingPlayerState); // Function DeadByDaylight.DBDPlayerController.Client_SetSpectatorModeInEditor // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x54f9c00
	void Client_SetSpectatorMode(bool On); // Function DeadByDaylight.DBDPlayerController.Client_SetSpectatorMode // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x54f9b70
	void Client_SetPlayerFinishStats(struct FPlayerFinishStats Stats); // Function DeadByDaylight.DBDPlayerController.Client_SetPlayerFinishStats // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x54f9af0
	void ActivateAI(bool Activate, int32_t PlayerRank); // Function DeadByDaylight.DBDPlayerController.ActivateAI // (Final|Native|Public|BlueprintCallable) // @ game+0x54f9460
};

// Class DeadByDaylight.DBDPlayerController_Menu
// Size: 0x668 (Inherited: 0x668)
struct ADBDPlayerController_Menu : ADBDPlayerControllerBase {

	void TogglePlayerReadyState(); // Function DeadByDaylight.DBDPlayerController_Menu.TogglePlayerReadyState // (Final|Native|Public) // @ game+0x54fc9e0
	void SetPlayerReady(bool IsReady); // Function DeadByDaylight.DBDPlayerController_Menu.SetPlayerReady // (Final|Native|Public) // @ game+0x54fc8c0
	void Server_SetReadyToTravel(); // Function DeadByDaylight.DBDPlayerController_Menu.Server_SetReadyToTravel // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fc5f0
	void Server_SetPlayerReady(bool IsReady); // Function DeadByDaylight.DBDPlayerController_Menu.Server_SetPlayerReady // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fc510
	void Server_SetPlayerLoadout(struct FPlayerLoadoutData desiredLoadout); // Function DeadByDaylight.DBDPlayerController_Menu.Server_SetPlayerLoadout // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fbfa0
	void Server_SetEquipedPerks(struct TArray<struct FName> perkIds, struct TArray<int32_t> perkLevels, bool callOnRep); // Function DeadByDaylight.DBDPlayerController_Menu.Server_SetEquipedPerks // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fbd40
	void Server_SetCustomizationMeshes(struct FCharacterCustomization Customization); // Function DeadByDaylight.DBDPlayerController_Menu.Server_SetCustomizationMeshes // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fbc90
	void Server_SetCustomizationCharm(struct FName CharmId, int8_t slotIndex); // Function DeadByDaylight.DBDPlayerController_Menu.Server_SetCustomizationCharm // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fbb50
	void Server_SetCharacterLevel(int32_t CharacterLevel, int32_t PrestigeLevel, bool callOnRep); // Function DeadByDaylight.DBDPlayerController_Menu.Server_SetCharacterLevel // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fb970
	void Server_SetCharacterData(int32_t characterIndex, struct FPlayerDataSync PlayerDataSync); // Function DeadByDaylight.DBDPlayerController_Menu.Server_SetCharacterData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54fb800
	void Server_GamePresetDataFromClient(struct FGamePresetData GameState); // Function DeadByDaylight.DBDPlayerController_Menu.Server_GamePresetDataFromClient // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x54faa50
	void Authority_TogglePlayerReadyState(); // Function DeadByDaylight.DBDPlayerController_Menu.Authority_TogglePlayerReadyState // (Final|Native|Public) // @ game+0x54f95c0
	void Authority_SetPlayerReady(bool IsReady); // Function DeadByDaylight.DBDPlayerController_Menu.Authority_SetPlayerReady // (Final|Native|Public) // @ game+0x54f9530
};

// Class DeadByDaylight.DBDPlayerData
// Size: 0x148 (Inherited: 0xb8)
struct UDBDPlayerData : UActorComponent {
	struct FMulticastInlineDelegate OnItemUseButtonStateChanged; // 0xb8(0x10)
	char pad_C8[0x74]; // 0xc8(0x74)
	struct FYawAndPitchRotator_NetQuantize16 _controlRotation; // 0x13c(0x0c)

	void Server_SetPlayerReady(); // Function DeadByDaylight.DBDPlayerData.Server_SetPlayerReady // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54912b0
	void Server_SetMapSpecificComponentReady(); // Function DeadByDaylight.DBDPlayerData.Server_SetMapSpecificComponentReady // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x4af1ac0
	void Server_SetKillerSpecificComponentReady(); // Function DeadByDaylight.DBDPlayerData.Server_SetKillerSpecificComponentReady // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x4aa7040
	void Server_SetIntroCompleted(); // Function DeadByDaylight.DBDPlayerData.Server_SetIntroCompleted // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54fbf80
	void Server_RenderingFeaturesCompleted(); // Function DeadByDaylight.DBDPlayerData.Server_RenderingFeaturesCompleted // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54fb5a0
	void Server_NotifyAIPawnSpawned(); // Function DeadByDaylight.DBDPlayerData.Server_NotifyAIPawnSpawned // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x4af1aa0
	void Server_LoadoutSpawned(); // Function DeadByDaylight.DBDPlayerData.Server_LoadoutSpawned // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x4af1ae0
	void Server_CampaignDataSynced(); // Function DeadByDaylight.DBDPlayerData.Server_CampaignDataSynced // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54fa840
	void OnItemUseButtonStateChanged__DelegateSignature(bool IsPressed); // DelegateFunction DeadByDaylight.DBDPlayerData.OnItemUseButtonStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	bool IsInteractionInputPressed(enum class EInputInteractionType interactionType); // Function DeadByDaylight.DBDPlayerData.IsInteractionInputPressed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54fa310
	struct FRotator GetControlRotation(); // Function DeadByDaylight.DBDPlayerData.GetControlRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x54fa220
};

// Class DeadByDaylight.DBDPlayerLevelManager
// Size: 0x198 (Inherited: 0x30)
struct UDBDPlayerLevelManager : UObject {
	char pad_30[0x168]; // 0x30(0x168)
};

// Class DeadByDaylight.DBDPlayerPositionOffsetComponent
// Size: 0xc0 (Inherited: 0xb8)
struct UDBDPlayerPositionOffsetComponent : UActorComponent {
	struct FPerPlatformFloat _menuZHeadOffset; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class DeadByDaylight.DBDPlayerStart
// Size: 0x270 (Inherited: 0x268)
struct ADBDPlayerStart : APlayerStart {
	char pad_268[0x8]; // 0x268(0x08)
};

// Class DeadByDaylight.DBDPlayerState
// Size: 0x740 (Inherited: 0x338)
struct ADBDPlayerState : APlayerState {
	char pad_338[0x8]; // 0x338(0x08)
	struct FMulticastInlineDelegate OnAIFinishedPlayingEvent; // 0x340(0x10)
	struct FString MirrorsId; // 0x350(0x10)
	struct FString ContentVersion; // 0x360(0x10)
	enum class EAIDifficultyLevel _difficultyLevel; // 0x370(0x01)
	bool IsPlayerReady; // 0x371(0x01)
	enum class EPlayerRole GameRole; // 0x372(0x01)
	char pad_373[0x5]; // 0x373(0x05)
	struct UDedicatedServerHandlerComponent* DedicatedServerHandler; // 0x378(0x08)
	struct FCharacterStateData CamperData; // 0x380(0x20)
	struct FCharacterStateData SlasherData; // 0x3a0(0x20)
	struct FPlayerStateData PlayerData; // 0x3c0(0x38)
	char pad_3F8[0x8]; // 0x3f8(0x08)
	struct FMulticastInlineDelegate OnPlayerGameplayEvent; // 0x400(0x10)
	struct FMulticastInlineDelegate OnPlayerGameStateChanged; // 0x410(0x10)
	struct TMap<struct FName, struct FAwardedScores> _awardedScoresByType; // 0x420(0x50)
	struct FUserGameStats _cachedUserGameStats; // 0x470(0xb0)
	struct TArray<struct FOngoingScoreData> _ongoingScoreEvents; // 0x520(0x10)
	char pad_530[0x8]; // 0x530(0x08)
	bool _inParadise; // 0x538(0x01)
	bool _endOfMatchRpcReceived; // 0x539(0x01)
	char pad_53A[0x6]; // 0x53a(0x06)
	struct FEquippedPlayerCustomization _playerCustomization; // 0x540(0x38)
	int32_t _selectedCamperIndex; // 0x578(0x04)
	int32_t _selectedSlasherIndex; // 0x57c(0x04)
	struct UGameplayNotificationManager* _gameplayNotificationManager; // 0x580(0x08)
	struct UCharacterStatsHandlerComponent* _characterStatsHandler; // 0x588(0x08)
	struct UPlayerScoreComponent* _playerScoreComponent; // 0x590(0x08)
	char pad_598[0x20]; // 0x598(0x20)
	struct FString _platformAccountId; // 0x5b8(0x10)
	char pad_5C8[0x104]; // 0x5c8(0x104)
	enum class EPlatformFlag _platform; // 0x6cc(0x04)
	enum class EProviderFlag _provider; // 0x6d0(0x04)
	bool _crossplayAllowed; // 0x6d4(0x01)
	bool _offNetworkFlag; // 0x6d5(0x01)
	char pad_6D6[0x2]; // 0x6d6(0x02)
	struct FStreamerModePlayerData _streamerModePlayerData; // 0x6d8(0x08)
	bool _gameLevelLoaded; // 0x6e0(0x01)
	char pad_6E1[0x37]; // 0x6e1(0x37)
	bool _showPortraitBorder; // 0x718(0x01)
	char pad_719[0x2]; // 0x719(0x02)
	bool _hasActiveSubscription; // 0x71b(0x01)
	uint32_t _matchmakingIncentive; // 0x71c(0x04)
	float _pktLossPercentage; // 0x720(0x04)
	bool _isReplacementBot; // 0x724(0x01)
	char pad_725[0x3]; // 0x725(0x03)
	struct FString _replacementBotName; // 0x728(0x10)
	int32_t _disconnectedPlayerScore; // 0x738(0x04)
	char pad_73C[0x4]; // 0x73c(0x04)

	void UpdateOngoingScores(); // Function DeadByDaylight.DBDPlayerState.UpdateOngoingScores // (Final|Native|Protected) // @ game+0x55021b0
	void Server_CheatSelectSurvivor(int32_t camperIndex); // Function DeadByDaylight.DBDPlayerState.Server_CheatSelectSurvivor // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x5501b00
	void Server_CheatSelectKiller(int32_t slasherIndex); // Function DeadByDaylight.DBDPlayerState.Server_CheatSelectKiller // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x5501a40
	void OnRep_IsReplacementBot(); // Function DeadByDaylight.DBDPlayerState.OnRep_IsReplacementBot // (Final|Native|Private) // @ game+0x5501a20
	void OnRep_DisplayData(); // Function DeadByDaylight.DBDPlayerState.OnRep_DisplayData // (Final|Native|Public) // @ game+0x5501a00
	void OnRep_CustomizationData(); // Function DeadByDaylight.DBDPlayerState.OnRep_CustomizationData // (Native|Public) // @ game+0x55019e0
	void OnRep_BotDifficultyLevel(); // Function DeadByDaylight.DBDPlayerState.OnRep_BotDifficultyLevel // (Final|Native|Public) // @ game+0x55019c0
	void Multicast_SetPlayerGameState(enum class EGameState newGameState, bool isEscapeHatch); // Function DeadByDaylight.DBDPlayerState.Multicast_SetPlayerGameState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5501640
	void Multicast_SetInParadise(); // Function DeadByDaylight.DBDPlayerState.Multicast_SetInParadise // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x5501620
	void Multicast_SetBotInfoInCachedPlayerScore(bool IsBot, bool isReplacementBot, struct FString replacementBotName); // Function DeadByDaylight.DBDPlayerState.Multicast_SetBotInfoInCachedPlayerScore // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55014e0
	void Multicast_SetAsLeftMatch(enum class EBotReplacementState botReplacementState); // Function DeadByDaylight.DBDPlayerState.Multicast_SetAsLeftMatch // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x5501460
	void Multicast_SetAsDisconnected(enum class EBotReplacementState botReplacementState); // Function DeadByDaylight.DBDPlayerState.Multicast_SetAsDisconnected // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x55013e0
	void Multicast_FireGameplayEventWithScore(enum class EDBDScoreTypes playerGameplayEventType, float Amount, struct AActor* effector, struct AActor* Target, struct FAwardedScore AwardedScore); // Function DeadByDaylight.DBDPlayerState.Multicast_FireGameplayEventWithScore // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5501230
	void Multicast_FireGameplayEvent(enum class EDBDScoreTypes playerGameplayEventType, float Amount, struct AActor* effector, struct AActor* Target); // Function DeadByDaylight.DBDPlayerState.Multicast_FireGameplayEvent // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55010d0
	bool IsInFinishedPlayingState(); // Function DeadByDaylight.DBDPlayerState.IsInFinishedPlayingState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55010a0
	bool HasEscaped(); // Function DeadByDaylight.DBDPlayerState.HasEscaped // (Final|Native|Public|Const) // @ game+0x5501070
	enum class EGameState GetPlayerGameState(); // Function DeadByDaylight.DBDPlayerState.GetPlayerGameState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5501040
	enum class EPlayerRole GetGameRole(); // Function DeadByDaylight.DBDPlayerState.GetGameRole // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5501000
	struct UGameplayNotificationManager* GetGameplayNotificationManager(); // Function DeadByDaylight.DBDPlayerState.GetGameplayNotificationManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5501020
	void FireScoreEvent(enum class EDBDScoreTypes scoreType, float PercentToAward); // Function DeadByDaylight.DBDPlayerState.FireScoreEvent // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5500f30
	void FireActiveStatusViewEvent(struct FName StatusViewID, struct FName uniqueSourceID, struct FStatusViewSource StatusViewSource); // Function DeadByDaylight.DBDPlayerState.FireActiveStatusViewEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x5500dc0
	void FireActiveStatusEffectEvent(struct FName statusEffectID, float Percentage, int32_t iconFilePathIndex, int32_t levelToDisplay); // Function DeadByDaylight.DBDPlayerState.FireActiveStatusEffectEvent // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5500c40
	void Client_UpdateWallet(struct FString currencyId, int32_t Amount); // Function DeadByDaylight.DBDPlayerState.Client_UpdateWallet // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x5500a90
	void Client_SetInParadise(); // Function DeadByDaylight.DBDPlayerState.Client_SetInParadise // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x5500a70
	void Client_SetGameRole(enum class EPlayerRole newRole); // Function DeadByDaylight.DBDPlayerState.Client_SetGameRole // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x55009f0
	void Client_SetDSKickedOutReason(uint32_t Reason); // Function DeadByDaylight.DBDPlayerState.Client_SetDSKickedOutReason // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x5500960
	void Client_RemoveItemFromInventory(struct FName toRemove, bool UpdateLoadout); // Function DeadByDaylight.DBDPlayerState.Client_RemoveItemFromInventory // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x5500870
	void Client_RemotelyDispatchGameEventWithScore(struct FGameplayTag gameEventType, struct FGameEventData GameEventData, struct FAwardedScore AwardedScore); // Function DeadByDaylight.DBDPlayerState.Client_RemotelyDispatchGameEventWithScore // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x5500730
	void Client_RemotelyDispatchGameEvent(struct FGameplayTag gameEventType, struct FGameEventData GameEventData); // Function DeadByDaylight.DBDPlayerState.Client_RemotelyDispatchGameEvent // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x5500640
	void Client_InvalidateIncentives(); // Function DeadByDaylight.DBDPlayerState.Client_InvalidateIncentives // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x5500620
	void Client_HandleEscapeScoreEvent(); // Function DeadByDaylight.DBDPlayerState.Client_HandleEscapeScoreEvent // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x5500600
	void Client_HandleEndOfMatch(bool success, struct FEndOfMatchRPCData Response); // Function DeadByDaylight.DBDPlayerState.Client_HandleEndOfMatch // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x5500500
	void Client_FetchCoreRituals(bool hasClaimableRitual); // Function DeadByDaylight.DBDPlayerState.Client_FetchCoreRituals // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x5500470
	void Client_AtlantaUpdateInventoryItem(struct FName ItemId, int32_t newCount); // Function DeadByDaylight.DBDPlayerState.Client_AtlantaUpdateInventoryItem // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x55003a0
	void ChangeStartingGameRole(enum class EPlayerRole GameRole); // Function DeadByDaylight.DBDPlayerState.ChangeStartingGameRole // (Final|Native|Public|BlueprintCallable) // @ game+0x5500320
	void Authority_SetPlayerGameState(enum class EGameState newGameState, bool isEscapeHatch); // Function DeadByDaylight.DBDPlayerState.Authority_SetPlayerGameState // (Final|Native|Private) // @ game+0x5500250
	void Authority_HandleScoreEvent(struct FGameplayTag scoreTypeTag, struct FScoreEventData ScoreEventData); // Function DeadByDaylight.DBDPlayerState.Authority_HandleScoreEvent // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5500130
	void Authority_EndOngoingScoreEvent(struct FGameplayTag scoreTypeTag); // Function DeadByDaylight.DBDPlayerState.Authority_EndOngoingScoreEvent // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5500090
	void Authority_CancelOngoingScoreEvent(struct FGameplayTag scoreTypeTag); // Function DeadByDaylight.DBDPlayerState.Authority_CancelOngoingScoreEvent // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x54ffff0
};

// Class DeadByDaylight.DBDPlayerState_Menu
// Size: 0x740 (Inherited: 0x740)
struct ADBDPlayerState_Menu : ADBDPlayerState {

	void Server_SetSelectedCharacterId(int32_t ID, bool updateDisplayData); // Function DeadByDaylight.DBDPlayerState_Menu.Server_SetSelectedCharacterId // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x55020b0
	void Server_SetSelectedCharacterCustomization(enum class EPlayerRole forRole, int32_t ID, struct FEquippedPlayerCustomization Customization); // Function DeadByDaylight.DBDPlayerState_Menu.Server_SetSelectedCharacterCustomization // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x5501ea0
	void Server_SetEquipmentAddons(struct TArray<struct FName> addonItemIds, bool callOnRep); // Function DeadByDaylight.DBDPlayerState_Menu.Server_SetEquipmentAddons // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x5501d80
	void Server_SetEquipment(enum class ELoadoutSlot Slot, struct FName ItemId, bool callOnRep); // Function DeadByDaylight.DBDPlayerState_Menu.Server_SetEquipment // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x5501c10
	void Server_NotifyOnRep(); // Function DeadByDaylight.DBDPlayerState_Menu.Server_NotifyOnRep // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x5501bc0
	void Multicast_SetSelectedCharacterId(enum class EPlayerRole forRole, int32_t ID, bool updateDisplayData); // Function DeadByDaylight.DBDPlayerState_Menu.Multicast_SetSelectedCharacterId // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x55018b0
	void Multicast_SetSelectedCharacterCustomization(enum class EPlayerRole forRole, int32_t ID, struct FEquippedPlayerCustomization Customization); // Function DeadByDaylight.DBDPlayerState_Menu.Multicast_SetSelectedCharacterCustomization // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5501720
};

// Class DeadByDaylight.DBDPlayerState_Lobby
// Size: 0x748 (Inherited: 0x740)
struct ADBDPlayerState_Lobby : ADBDPlayerState_Menu {
	bool IsOwnershipValidated; // 0x740(0x01)
	char pad_741[0x7]; // 0x741(0x07)
};

// Class DeadByDaylight.DBDPrimaryDataAsset
// Size: 0x48 (Inherited: 0x38)
struct UDBDPrimaryDataAsset : UPrimaryDataAsset {
	struct FPrimaryAssetType AssetType; // 0x38(0x0c)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class DeadByDaylight.DBDProjectileUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDProjectileUtilities : UBlueprintFunctionLibrary {

	struct UAuthoritativePoolProjectileProviderAdapter* CreateProjectilePoolAdapter(struct UObject* Outer, struct UAuthoritativeActorPoolComponent* pool); // Function DeadByDaylight.DBDProjectileUtilities.CreateProjectilePoolAdapter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5500b70
};

// Class DeadByDaylight.DBDRankDesignTunables
// Size: 0x60 (Inherited: 0x30)
struct UDBDRankDesignTunables : UObject {
	struct UCurveFloat* UnbrokenTimeAlivePointsCurve; // 0x30(0x08)
	struct UCurveFloat* EvaderStealthPointsByDistanceWhileKillerNotChasingCurve; // 0x38(0x08)
	struct UCurveFloat* EvaderStealthPointsByDistanceWhileKillerIsChasingCurve; // 0x40(0x08)
	struct UCurveFloat* EvaderChasePointsByDurationCurve; // 0x48(0x08)
	struct UCurveFloat* EvaderZAxisDistanceScalingCurve; // 0x50(0x08)
	struct UCurveFloat* ChaserChasePointsByDurationCurve; // 0x58(0x08)
};

// Class DeadByDaylight.DBDRemotePlayer
// Size: 0x1c68 (Inherited: 0x1c68)
struct UDBDRemotePlayer : UIpConnection {
};

// Class DeadByDaylight.DBDRichPresenceSubsystem
// Size: 0x50 (Inherited: 0x38)
struct UDBDRichPresenceSubsystem : UGameInstanceSubsystem {
	enum class ERichPresenceUserType _userType; // 0x38(0x01)
	enum class ERichPresenceStatus _richPresenceStatus; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	float _timerRate; // 0x3c(0x04)
	float _timerDelay; // 0x40(0x04)
	bool _isValidSetup; // 0x44(0x01)
	char pad_45[0xb]; // 0x45(0x0b)
};

// Class DeadByDaylight.DBDHostSettingsParamsBase
// Size: 0x40 (Inherited: 0x30)
struct UDBDHostSettingsParamsBase : UObject {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class DeadByDaylight.DBDHostSettingsParamsSessionInvalid
// Size: 0x40 (Inherited: 0x40)
struct UDBDHostSettingsParamsSessionInvalid : UDBDHostSettingsParamsBase {
};

// Class DeadByDaylight.DBDHostSettingsParamsJoinabilityPreset
// Size: 0x48 (Inherited: 0x40)
struct UDBDHostSettingsParamsJoinabilityPreset : UDBDHostSettingsParamsBase {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class DeadByDaylight.DBDHostSettingsParamsRanking
// Size: 0x48 (Inherited: 0x40)
struct UDBDHostSettingsParamsRanking : UDBDHostSettingsParamsBase {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class DeadByDaylight.DBDServerInstance
// Size: 0xb0 (Inherited: 0x30)
struct UDBDServerInstance : UObject {
	char pad_30[0x68]; // 0x30(0x68)
	struct TArray<struct UDBDHostSettingsParamsBase*> _pendingSessionUpdates; // 0x98(0x10)
	struct TWeakObjectPtr<struct UDBDGameInstance> _gameInstance; // 0xa8(0x08)
};

// Class DeadByDaylight.DBDSignificanceStrategy
// Size: 0x210 (Inherited: 0x30)
struct UDBDSignificanceStrategy : USignificanceStrategy {
	struct FBHVRPerDetailModeFloat _farDistance; // 0x30(0xa0)
	struct FBHVRPerDetailModeFloat _auraRevealedMultiplier; // 0xd0(0xa0)
	struct FBHVRPerDetailModeFloat _auraRevealedMinimumSignificance; // 0x170(0xa0)
};

// Class DeadByDaylight.DBDSocialNotificationFactory
// Size: 0x70 (Inherited: 0x30)
struct UDBDSocialNotificationFactory : UObject {
	struct TWeakObjectPtr<struct UDBDGameInstance> _gameInstance; // 0x30(0x08)
	struct UToastManager* _toastMgr; // 0x38(0x08)
	struct UDBDPartyFacade* _partyFacade; // 0x40(0x08)
	struct UFriendManager* _friendManager; // 0x48(0x08)
	struct UDataTable* _toastTable; // 0x50(0x08)
	char pad_58[0x18]; // 0x58(0x18)
};

// Class DeadByDaylight.DBDSpecialEventUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDSpecialEventUtilities : UBlueprintFunctionLibrary {

	bool DoesPlayerHasEventOffering(struct ADBDPlayer* Player, enum class EOfferingEffectType offeringEffectType); // Function DeadByDaylight.DBDSpecialEventUtilities.DoesPlayerHasEventOffering // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5509800
};

// Class DeadByDaylight.DBDSpectator
// Size: 0x2e0 (Inherited: 0x2c0)
struct ADBDSpectator : ASpectatorPawn {
	char pad_2C0[0x20]; // 0x2c0(0x20)
};

// Class DeadByDaylight.DBDSpringArmComponent
// Size: 0x320 (Inherited: 0x2a0)
struct UDBDSpringArmComponent : USpringArmComponent {
	char bEnableComponentwiseCameraLag : 1; // 0x2a0(0x01)
	char pad_2A0_1 : 7; // 0x2a0(0x01)
	char pad_2A1[0x3]; // 0x2a1(0x03)
	struct FVector ComponenwiseCameraLagSpeed; // 0x2a4(0x0c)
	float TargetArmMinLength; // 0x2b0(0x04)
	char bEnableDistanceCameraLag : 1; // 0x2b4(0x01)
	char pad_2B4_1 : 7; // 0x2b4(0x01)
	char pad_2B5[0x3]; // 0x2b5(0x03)
	float CameraDistanceLagSpeed; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	char bDrawDebugTraceMarkers : 1; // 0x2c0(0x01)
	char pad_2C0_1 : 7; // 0x2c0(0x01)
	char pad_2C1[0x7]; // 0x2c1(0x07)
	struct TArray<struct TWeakObjectPtr<struct AActor>> ignoreActors; // 0x2c8(0x10)
	char pad_2D8[0x48]; // 0x2d8(0x48)

	void IgnoreActor(struct AActor* Actor, bool bShouldIgnore); // Function DeadByDaylight.DBDSpringArmComponent.IgnoreActor // (Final|Native|Public|BlueprintCallable) // @ game+0x550d0e0
	void ClearIgnoreActors(); // Function DeadByDaylight.DBDSpringArmComponent.ClearIgnoreActors // (Final|Native|Public|BlueprintCallable) // @ game+0x5508f00
};

// Class DeadByDaylight.DBDSurfaceTypeName
// Size: 0x30 (Inherited: 0x30)
struct UDBDSurfaceTypeName : UBlueprintFunctionLibrary {

	enum class EPhysicalSurface GetSurfaceType(struct UPhysicalMaterial* PhysicalMaterial); // Function DeadByDaylight.DBDSurfaceTypeName.GetSurfaceType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550c2a0
	struct FString GetSurfaceName(struct UPhysicalMaterial* PhysicalMaterial); // Function DeadByDaylight.DBDSurfaceTypeName.GetSurfaceName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550c1d0
	struct FName ConvertFromPhysicalMaterial(struct UPhysicalMaterial* Material); // Function DeadByDaylight.DBDSurfaceTypeName.ConvertFromPhysicalMaterial // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5508fb0
	struct FName Convert(enum class EPhysicalSurface SurfaceType); // Function DeadByDaylight.DBDSurfaceTypeName.Convert // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5508f20
};

// Class DeadByDaylight.DBDTags
// Size: 0x30 (Inherited: 0x30)
struct UDBDTags : UObject {
};

// Class DeadByDaylight.DBDTimerComponent
// Size: 0xe8 (Inherited: 0xb8)
struct UDBDTimerComponent : UActorComponent {
	char pad_B8[0x30]; // 0xb8(0x30)

	void Update(float DeltaTime); // Function DeadByDaylight.DBDTimerComponent.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x550e210
	void Unpause(); // Function DeadByDaylight.DBDTimerComponent.Unpause // (Final|Native|Public|BlueprintCallable) // @ game+0x550e1f0
	void Stop(); // Function DeadByDaylight.DBDTimerComponent.Stop // (Final|Native|Public|BlueprintCallable) // @ game+0x550e140
	void ResetTo(float Time); // Function DeadByDaylight.DBDTimerComponent.ResetTo // (Final|Native|Public|BlueprintCallable) // @ game+0x550db60
	void Reset(); // Function DeadByDaylight.DBDTimerComponent.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x550db40
	void Pause(); // Function DeadByDaylight.DBDTimerComponent.Pause // (Final|Native|Public|BlueprintCallable) // @ game+0x550d8b0
	bool IsOnPause(); // Function DeadByDaylight.DBDTimerComponent.IsOnPause // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x550d570
	bool IsDone(); // Function DeadByDaylight.DBDTimerComponent.IsDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x550d2a0
	float GetTimeLeft(); // Function DeadByDaylight.DBDTimerComponent.GetTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x550c4f0
	float GetTimeElapsed(); // Function DeadByDaylight.DBDTimerComponent.GetTimeElapsed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x550c4c0
	float GetStartTime(); // Function DeadByDaylight.DBDTimerComponent.GetStartTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x550c1a0
	float GetPercentTimeLeft(); // Function DeadByDaylight.DBDTimerComponent.GetPercentTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x550be30
	float GetPercentTimeElapsed(); // Function DeadByDaylight.DBDTimerComponent.GetPercentTimeElapsed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x550be00
};

// Class DeadByDaylight.DBDTunableUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDTunableUtilities : UBlueprintFunctionLibrary {

	float GetTunableValue(struct UObject* WorldContextObject, struct FName valueName); // Function DeadByDaylight.DBDTunableUtilities.GetTunableValue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550c6c0
	float GetTunableRowHandleValue(struct FDBDTunableRowHandle& rowHandle); // Function DeadByDaylight.DBDTunableUtilities.GetTunableRowHandleValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x550c5f0
	float GetSlasherTunableValue(struct UObject* WorldContextObject, struct FName valueName); // Function DeadByDaylight.DBDTunableUtilities.GetSlasherTunableValue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550c020
	float GetEndGameTunableValue(struct UObject* WorldContextObject, struct FName valueName); // Function DeadByDaylight.DBDTunableUtilities.GetEndGameTunableValue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550a450
};

// Class DeadByDaylight.DBDUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDBDUtilities : UBlueprintFunctionLibrary {

	bool WithinRangeExclusive(float Min, float Max, float value); // Function DeadByDaylight.DBDUtilities.WithinRangeExclusive // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550e3a0
	bool WithinRange(float Min, float Max, float value); // Function DeadByDaylight.DBDUtilities.WithinRange // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550e290
	float ToAngle_negative180to180(float Angle); // Function DeadByDaylight.DBDUtilities.ToAngle_negative180to180 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550e160
	bool SphereTraceSingle(struct FVector Start, struct FVector End, struct USphereComponent* Sphere, struct FHitResult& outHitResult, struct TArray<struct AActor*>& IgnoredActors); // Function DeadByDaylight.DBDUtilities.SphereTraceSingle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x550df20
	bool SphereTraceAgainstActor(struct FVector Start, struct FVector End, struct USphereComponent* Sphere, struct AActor* Actor, struct FHitResult& outHitResult); // Function DeadByDaylight.DBDUtilities.SphereTraceAgainstActor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x550dd30
	void SetComponentCastHiddenShadow(struct UPrimitiveComponent* Component, bool CastShadow); // Function DeadByDaylight.DBDUtilities.SetComponentCastHiddenShadow // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550dc70
	int32_t ResolveCharacterIdFromPlayerState(struct ADBDPlayerState* PlayerState); // Function DeadByDaylight.DBDUtilities.ResolveCharacterIdFromPlayerState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550dbe0
	void PrintStringEmbiggened(struct UObject* WorldContextObject, struct FString inString, struct FLinearColor TextColor, float Duration, int32_t Key, float Scale); // Function DeadByDaylight.DBDUtilities.PrintStringEmbiggened // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x550d960
	int64_t PointerToInt(struct UObject* Obj); // Function DeadByDaylight.DBDUtilities.PointerToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550d8d0
	bool NormalizeXY(struct FVector& Vector, float Tolerance); // Function DeadByDaylight.DBDUtilities.NormalizeXY // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x550d7c0
	void LogString(struct FString inStr); // Function DeadByDaylight.DBDUtilities.LogString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550d730
	void LogMeshMaterialInfo(struct FString inStr, struct UMeshComponent* Root); // Function DeadByDaylight.DBDUtilities.LogMeshMaterialInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550d660
	bool IsSteamPIEGame(struct UObject* contextObject); // Function DeadByDaylight.DBDUtilities.IsSteamPIEGame // (Final|Native|Static|Public) // @ game+0x491d340
	bool IsServer(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.IsServer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550d5d0
	bool IsReplaceDisconnectedPlayersWithBotsActive(); // Function DeadByDaylight.DBDUtilities.IsReplaceDisconnectedPlayersWithBotsActive // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550d5a0
	bool IsNonViolent(); // Function DeadByDaylight.DBDUtilities.IsNonViolent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550d540
	bool IsLocallyObservingASurvivor(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.IsLocallyObservingASurvivor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550d4b0
	bool IsLocallyObservingAKiller(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.IsLocallyObservingAKiller // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550d420
	bool IsInTutorialLevel(); // Function DeadByDaylight.DBDUtilities.IsInTutorialLevel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550d3f0
	bool IsInSurvivorTeam(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.IsInSurvivorTeam // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550d360
	bool IsInKillerTeam(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.IsInKillerTeam // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550d2d0
	bool IsClassChildOfOtherClasses(struct UObject* classToCheck, struct TArray<struct UObject*>& otherClasses); // Function DeadByDaylight.DBDUtilities.IsClassChildOfOtherClasses // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x550d1b0
	bool HasWalkableSurfaceForward(struct UObject* WorldContextObject, struct FVector Location, struct FVector fowardVector, float distance, float raycastStartHeight, float raycastEndHeight, struct TArray<struct FHitResult>& OutHits, struct FVector& raycastStart); // Function DeadByDaylight.DBDUtilities.HasWalkableSurfaceForward // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x550ce40
	bool HasLineOfSightToTarget(struct UObject* WorldContextObject, struct FVector& StartPosition, struct FVector& targetPosition, struct AActor* ignoredActor, bool useComplex, bool useDebugLogs); // Function DeadByDaylight.DBDUtilities.HasLineOfSightToTarget // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x550cc20
	bool HasFloorForward(struct UObject* WorldContextObject, struct FVector Location, struct FVector fowardVector, float distance, float raycastStartHeight, float raycastEndHeight, struct TArray<struct FHitResult>& OutHits, struct FVector& raycastStart); // Function DeadByDaylight.DBDUtilities.HasFloorForward // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x550c980
	struct FRotator GetYawOnly(struct FRotator& Rotation); // Function DeadByDaylight.DBDUtilities.GetYawOnly // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x550c8e0
	struct FVector GetXYVector(struct FVector& Vector); // Function DeadByDaylight.DBDUtilities.GetXYVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x550c840
	float GetVelocityXYAngleDegrees(struct AActor* Actor); // Function DeadByDaylight.DBDUtilities.GetVelocityXYAngleDegrees // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550c7b0
	struct FTimespan GetTotalPlaytime(struct UObject* WorldContextObject, bool Update); // Function DeadByDaylight.DBDUtilities.GetTotalPlaytime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x550c520
	void GetTileSpawnPoints(struct TArray<struct UTileSpawnPoint*>& tileSpawnPoints); // Function DeadByDaylight.DBDUtilities.GetTileSpawnPoints // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x550c420
	struct TArray<struct AGenerator*> GetThreeClosestGenerators(struct TArray<struct AGenerator*>& unrevealedGenerators); // Function DeadByDaylight.DBDUtilities.GetThreeClosestGenerators // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x550c330
	float GetSquaredDistanceToKiller(struct AActor* Survivor); // Function DeadByDaylight.DBDUtilities.GetSquaredDistanceToKiller // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550c110
	float GetSlasherTunableValue(struct UObject* WorldContextObject, struct FName valueName); // Function DeadByDaylight.DBDUtilities.GetSlasherTunableValue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550c020
	struct FVector GetSimilarVector(struct FVector Vector, float maximumDeviation); // Function DeadByDaylight.DBDUtilities.GetSimilarVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x550bf30
	float GetPlayRateForMontage(struct UAnimMontage* Montage, float Time); // Function DeadByDaylight.DBDUtilities.GetPlayRateForMontage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550be60
	float GetPercentOfRange(float Val, float Min, float Max); // Function DeadByDaylight.DBDUtilities.GetPercentOfRange // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550bce0
	struct ASlasherPlayer* GetOwningSlasher(struct UAnimInstance* AnimInstance); // Function DeadByDaylight.DBDUtilities.GetOwningSlasher // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550bc50
	struct ADBDBasePlayer* GetOwningDBDBasePlayer(struct UAnimInstance* AnimInstance); // Function DeadByDaylight.DBDUtilities.GetOwningDBDBasePlayer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550bbc0
	struct ACamperPlayer* GetOwningCamper(struct UAnimInstance* AnimInstance); // Function DeadByDaylight.DBDUtilities.GetOwningCamper // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550bb30
	struct AActor* GetOuterMostActor(struct UAnimInstance* AnimInstance); // Function DeadByDaylight.DBDUtilities.GetOuterMostActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550baa0
	void GetNearbyCampers(struct UWorld* World, struct FVector Center, float Radius, struct TArray<struct ACamperPlayer*>& outNearbyCampers, struct TArray<struct AActor*>& ignoredCampers); // Function DeadByDaylight.DBDUtilities.GetNearbyCampers // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x550b8d0
	bool GetNearbyActorsOfType(struct UWorld* World, struct FVector Center, float Radius, struct TArray<struct AActor*>& outNearbyActors, struct UObject* actorClassType, enum class ECollisionChannel CollisionChannel, struct AActor* IgnoreActor); // Function DeadByDaylight.DBDUtilities.GetNearbyActorsOfType // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x550b690
	float GetMontageLength(struct UAnimMontage* Montage); // Function DeadByDaylight.DBDUtilities.GetMontageLength // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550b600
	struct TArray<struct UMaterialHelper*> GetMaterialHelpersAttachedToPlayerMesh(struct ADBDPlayer* Player); // Function DeadByDaylight.DBDUtilities.GetMaterialHelpersAttachedToPlayerMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550b530
	struct FString GetLogStringMaterialInfo(struct FString inStr, struct UMaterialInterface* Root); // Function DeadByDaylight.DBDUtilities.GetLogStringMaterialInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550b410
	enum class EPlayerRole GetLocallyObservedCharacterRole(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetLocallyObservedCharacterRole // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x54cc230
	struct ADBDPlayer* GetLocallyObservedCharacter(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetLocallyObservedCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550b380
	struct ACamperPlayer* GetLocallyControlledSurvivor(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetLocallyControlledSurvivor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550b2f0
	struct ASlasherPlayer* GetLocallyControlledKiller(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetLocallyControlledKiller // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550b260
	enum class EPlayerRole GetLocallyControlledCharacterRole(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetLocallyControlledCharacterRole // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550b1d0
	struct ADBDPlayer* GetLocallyControlledCharacter(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetLocallyControlledCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550b140
	struct ADBDPlayerControllerBase* GetLocalDBDPlayerController(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetLocalDBDPlayerController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550b0b0
	struct ADBDPlayerCameraManager* GetLocalDBDCameraManager(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetLocalDBDCameraManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550b020
	int32_t GetInventoryCountForMultipleCharacters(struct UObject* WorldContextObject, struct TArray<int32_t> characterIndexes, struct FName ItemId); // Function DeadByDaylight.DBDUtilities.GetInventoryCountForMultipleCharacters // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550aeb0
	int32_t GetInventoryCount(struct UObject* WorldContextObject, int32_t characterIndex, struct FName ItemId); // Function DeadByDaylight.DBDUtilities.GetInventoryCount // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550ad80
	struct FCollisionResponseContainer GetImpactCollisionResponseContainer(struct UPrimitiveComponent* Primitive); // Function DeadByDaylight.DBDUtilities.GetImpactCollisionResponseContainer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550ace0
	enum class ECollisionChannel GetImpactCollisionObjectType(struct UPrimitiveComponent* Primitive); // Function DeadByDaylight.DBDUtilities.GetImpactCollisionObjectType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550ac50
	struct FText GetFormattedNumberText(float value, int32_t maxDecimals, int32_t minDecimals, bool leadingZero); // Function DeadByDaylight.DBDUtilities.GetFormattedNumberText // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550aa90
	struct FString GetFormattedNumberString(float value, int32_t maxDecimals, int32_t minDecimals, bool leadingZero); // Function DeadByDaylight.DBDUtilities.GetFormattedNumberString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550a8e0
	struct FVector GetFloorLocationAt(struct UObject* WorldContextObject, struct FVector Location, float raycastStartHeight, float raycastEndHeight, bool useComplex); // Function DeadByDaylight.DBDUtilities.GetFloorLocationAt // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x550a730
	struct AActor* GetFirstActorWithTag(struct FName Tag, struct TArray<struct AActor*>& actorsArray); // Function DeadByDaylight.DBDUtilities.GetFirstActorWithTag // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x550a630
	float GetEndGameTunableValue(struct UObject* WorldContextObject, struct FName valueName); // Function DeadByDaylight.DBDUtilities.GetEndGameTunableValue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550a540
	float GetDistanceToNearestHookedSurvivor(struct ADBDPlayer* Player); // Function DeadByDaylight.DBDUtilities.GetDistanceToNearestHookedSurvivor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550a3c0
	struct ADBDGameState* GetDBDGameState(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetDBDGameState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550a330
	struct ADBDGameMode* GetDBDGameMode(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetDBDGameMode // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550a2a0
	struct UDBDGameInstance* GetDBDGameInstance(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetDBDGameInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550a210
	struct ADBDAIPlayerController* GetDBDAIPlayerController(struct ADBDPlayer* Player); // Function DeadByDaylight.DBDUtilities.GetDBDAIPlayerController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x550a180
	struct FString GetComponentOwnerName(struct UActorComponent* ActorComponent); // Function DeadByDaylight.DBDUtilities.GetComponentOwnerName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x550a0b0
	struct FTransform GetClosestSnapTransformOnOrbit(struct FVector& centerPoint, struct FVector& orbitterPosition, float distance); // Function DeadByDaylight.DBDUtilities.GetClosestSnapTransformOnOrbit // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x5509f40
	struct FVector GetClosestPointOnOrbit(struct FVector& centerPoint, struct FVector& orbitterPosition, float distance); // Function DeadByDaylight.DBDUtilities.GetClosestPointOnOrbit // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x5509e00
	struct AProceduralLevelBuilder* GetBuilder(struct UObject* WorldContextObject); // Function DeadByDaylight.DBDUtilities.GetBuilder // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5509d70
	float GetAnimSequenceLength(struct UAnimSequence* Sequence); // Function DeadByDaylight.DBDUtilities.GetAnimSequenceLength // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5509ce0
	void GetActorSpawners(struct TArray<struct UActorSpawner*>& actorSpawners); // Function DeadByDaylight.DBDUtilities.GetActorSpawners // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5509c40
	struct FString GetActorOwnerName(struct AActor* Actor); // Function DeadByDaylight.DBDUtilities.GetActorOwnerName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5509b70
	enum class EShadowSystem GetActiveShadowSystem(); // Function DeadByDaylight.DBDUtilities.GetActiveShadowSystem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5509b40
	struct AActor* FindParentOfClass(struct AActor* InChild, struct UObject* InClass); // Function DeadByDaylight.DBDUtilities.FindParentOfClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5509a70
	bool FindFloorSingle(struct UObject* WorldContextObject, struct FVector& Location, float raycastLength, struct FHitResult& OutHit); // Function DeadByDaylight.DBDUtilities.FindFloorSingle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x55098d0
	float DistanceFromPointToPane(struct FVector Point, struct FPlane Plane); // Function DeadByDaylight.DBDUtilities.DistanceFromPointToPane // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x5509720
	struct UObject* DBDLoadAudioBankByAssetPtr(struct TSoftObjectPtr<UAkAudioBank> Bank, struct AActor* caller); // Function DeadByDaylight.DBDUtilities.DBDLoadAudioBankByAssetPtr // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55095d0
	void DBDLoadAudioBankAsync(struct UAkAudioBank* Bank, struct AActor* caller); // Function DeadByDaylight.DBDUtilities.DBDLoadAudioBankAsync // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5509510
	void DBDLoadAudioBank(struct UAkAudioBank* Bank, struct AActor* caller); // Function DeadByDaylight.DBDUtilities.DBDLoadAudioBank // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5509450
	bool DBDCapsuleTraceSingle(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, float HalfHeight, enum class ECollisionChannel TraceChannel, bool bTraceComplex, struct TArray<struct AActor*>& ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult& OutHit, bool bIgnoreSelf); // Function DeadByDaylight.DBDUtilities.DBDCapsuleTraceSingle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x5509070
	void CrashGameCausingInterrupt(); // Function DeadByDaylight.DBDUtilities.CrashGameCausingInterrupt // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5509050
	bool BoxTraceAgainstActor(struct FVector Start, struct FVector End, struct UBoxComponent* Box, struct AActor* Actor, struct FHitResult& outHitResult); // Function DeadByDaylight.DBDUtilities.BoxTraceAgainstActor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x5508d10
	struct UActorComponent* AddComponentToActor(struct UObject* compClass, struct FName compName, struct AActor* Actor); // Function DeadByDaylight.DBDUtilities.AddComponentToActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5508be0
};

// Class DeadByDaylight.DBDUtilTimer
// Size: 0x30 (Inherited: 0x30)
struct UDBDUtilTimer : UBlueprintFunctionLibrary {

	void Update(struct FDBDTimer& Timer, float DeltaTime); // Function DeadByDaylight.DBDUtilTimer.Update // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x5513000
	void Stop(struct FDBDTimer& Timer); // Function DeadByDaylight.DBDUtilTimer.Stop // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x5512f70
	void ResetTo(struct FDBDTimer& Timer, float Time); // Function DeadByDaylight.DBDUtilTimer.ResetTo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x5512c10
	void Reset(struct FDBDTimer& Timer); // Function DeadByDaylight.DBDUtilTimer.Reset // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x5512b80
	bool IsDone(struct FDBDTimer& Timer); // Function DeadByDaylight.DBDUtilTimer.IsDone // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x55127b0
	float GetTimeLeft(struct FDBDTimer& Timer); // Function DeadByDaylight.DBDUtilTimer.GetTimeLeft // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5512710
	float GetTimeElapsed(struct FDBDTimer& Timer); // Function DeadByDaylight.DBDUtilTimer.GetTimeElapsed // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5512670
	float GetStartTime(struct FDBDTimer& Timer); // Function DeadByDaylight.DBDUtilTimer.GetStartTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x55125d0
	float GetPercentTimeLeft(struct FDBDTimer& Timer); // Function DeadByDaylight.DBDUtilTimer.GetPercentTimeLeft // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5512500
	float GetPercentTimeElapsed(struct FDBDTimer& Timer); // Function DeadByDaylight.DBDUtilTimer.GetPercentTimeElapsed // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5512460
};

// Class DeadByDaylight.DecalMaskedMaterialsList
// Size: 0x98 (Inherited: 0x38)
struct UDecalMaskedMaterialsList : UDataAsset {
	struct UStaticMesh* decalPlaneStaticMesh; // 0x38(0x08)
	float decalPlaneExtent; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct TMap<struct FName, struct UMaterialInterface*> decalMaskedMaterials; // 0x48(0x50)
};

// Class DeadByDaylight.DecalCollection
// Size: 0x150 (Inherited: 0x30)
struct UDecalCollection : UObject {
	struct TArray<struct UDBDDecalComponent*> _decalComponentsArray; // 0x30(0x10)
	struct TSet<struct UDBDDecalComponent*> _activeDecalComponents; // 0x40(0x50)
	struct TSet<struct UDBDDecalComponent*> _inactiveDecalComponents; // 0x90(0x50)
	struct TArray<bool> _DeltaZPool; // 0xe0(0x10)
	struct TMap<struct UStaticMeshComponent*, int32_t> _deltaZMultipliers; // 0xf0(0x50)
	char pad_140[0x8]; // 0x140(0x08)
	struct UDecalMaskedMaterialsList* _decalProperties; // 0x148(0x08)
};

// Class DeadByDaylight.DecalSpawner
// Size: 0x48 (Inherited: 0x30)
struct UDecalSpawner : UObject {
	struct UDecalCollection* _decalCollection; // 0x30(0x08)
	struct USpawnerStrategy* _spawnerStrategy; // 0x38(0x08)
	char pad_40[0x8]; // 0x40(0x08)

	struct USpawnerStrategy* GetSpawnerStrategy(); // Function DeadByDaylight.DecalSpawner.GetSpawnerStrategy // (Final|Native|Public|BlueprintCallable) // @ game+0x55125a0
};

// Class DeadByDaylight.DecalSpawnerCollection
// Size: 0x80 (Inherited: 0x30)
struct UDecalSpawnerCollection : UObject {
	struct TMap<struct FName, struct UDecalSpawner*> _decalSpawners; // 0x30(0x50)

	struct UDBDDecalComponent* SpawnDecalAtLocation(struct FName decalSpawnerName, struct FVector& DecalSize, struct FVector& Location, struct FRotator& Rotation, float LifeSpan, struct FName decalType, int32_t SortOrder); // Function DeadByDaylight.DecalSpawnerCollection.SpawnDecalAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x5512cf0
	void ReleaseDecalSpawner(struct FName decalSpawnerName); // Function DeadByDaylight.DecalSpawnerCollection.ReleaseDecalSpawner // (Final|Native|Public|BlueprintCallable) // @ game+0x5512ae0
	struct UDecalSpawner* CreateDecalSpawner(struct UObject* WorldContextObject, struct FName decalSpawnerName, struct UMaterialInterface* DecalMaterial, int32_t PoolSize, enum class ESpawnerStrategyType spawnerStrateryType); // Function DeadByDaylight.DecalSpawnerCollection.CreateDecalSpawner // (Final|Native|Public|BlueprintCallable) // @ game+0x55120c0
};

// Class DeadByDaylight.DedicatedServerHandlerComponent
// Size: 0x110 (Inherited: 0xb8)
struct UDedicatedServerHandlerComponent : UActorComponent {
	struct FAtlantaRitualSet _atlantaRituals; // 0xb8(0x38)
	struct TArray<struct FDailyRitualInstance> _coreRituals; // 0xf0(0x10)
	char pad_100[0x10]; // 0x100(0x10)

	void ReceiveGameEvent(enum class EDBDScoreTypes scoreType, float Amount, struct AActor* Instigator, struct AActor* Target); // Function DeadByDaylight.DedicatedServerHandlerComponent.ReceiveGameEvent // (Final|Native|Public) // @ game+0x5512980
	void OnGameEvent(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.DedicatedServerHandlerComponent.OnGameEvent // (Final|Native|Public|HasOutParms) // @ game+0x5512850
};

// Class DeadByDaylight.DedicatedServerManager
// Size: 0x80 (Inherited: 0x38)
struct UDedicatedServerManager : UGameInstanceSubsystem {
	struct TScriptInterface<IDedicatedServerStartupInitializerInterface> _startupInitializer; // 0x38(0x10)
	struct UOnlineSystemHandler* _onlineSystemHandler; // 0x48(0x08)
	char pad_50[0x30]; // 0x50(0x30)
};

// Class DeadByDaylight.DedicatedServerStartupInitializerInterface
// Size: 0x30 (Inherited: 0x30)
struct UDedicatedServerStartupInitializerInterface : UInterface {
};

// Class DeadByDaylight.DemogorgonAnimProxy
// Size: 0x30 (Inherited: 0x30)
struct UDemogorgonAnimProxy : UInterface {
};

// Class DeadByDaylight.SearchableItemStrategy
// Size: 0x38 (Inherited: 0x30)
struct USearchableItemStrategy : UObject {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class DeadByDaylight.DesignTunablesSearchableItemStrategy
// Size: 0x48 (Inherited: 0x38)
struct UDesignTunablesSearchableItemStrategy : USearchableItemStrategy {
	enum class EItemRarity ItemRarity; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	struct FName _itemIdToSpawn; // 0x3c(0x0c)
};

// Class DeadByDaylight.DestroyBreakableDefinition
// Size: 0x690 (Inherited: 0x630)
struct UDestroyBreakableDefinition : UInteractionDefinition {
	float _interactionTimePercentForDestroyEvent; // 0x630(0x04)
	char pad_634[0x2c]; // 0x634(0x2c)
	struct ABreakableBase* _breakable; // 0x660(0x08)
	struct FDBDTunableRowHandle _fastInteractionAnimThreshold; // 0x668(0x28)

	struct ABreakableBase* GetBreakable(); // Function DeadByDaylight.DestroyBreakableDefinition.GetBreakable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x5512430
};

// Class DeadByDaylight.DetectionZoneUtilities
// Size: 0x30 (Inherited: 0x30)
struct UDetectionZoneUtilities : UBlueprintFunctionLibrary {

	bool DetectObstruction(struct ADBDPlayer* Player, enum class EDetectionZone detectionZoneID, struct UPhysicalMaterial*& physicalMaterialOut, struct FVector& positionOut, struct FVector& normalOut); // Function DeadByDaylight.DetectionZoneUtilities.DetectObstruction // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x5512260
};

// Class DeadByDaylight.DialogHandlerComponent
// Size: 0x168 (Inherited: 0xb8)
struct UDialogHandlerComponent : UActorComponent {
	float _minimumDelayBetweenDialog; // 0xb8(0x04)
	float _maxSubtitleDistance; // 0xbc(0x04)
	struct TArray<struct FDialogEventSettings> _dialogEvents; // 0xc0(0x10)
	struct TArray<struct FGameplayTag> _stopAudioGameplayEvents; // 0xd0(0x10)
	struct UAkAudioEvent* _stopAudioClip; // 0xe0(0x08)
	char pad_E8[0x80]; // 0xe8(0x80)
};

// Class DeadByDaylight.DialogHandlerCondition
// Size: 0x30 (Inherited: 0x30)
struct UDialogHandlerCondition : UObject {

	bool IsTrue(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.DialogHandlerCondition.IsTrue // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.DirectionalMinigameComponent
// Size: 0x120 (Inherited: 0xb8)
struct UDirectionalMinigameComponent : UActorComponent {
	char pad_B8[0x20]; // 0xb8(0x20)
	struct ACamperPlayer* _currentlyEngagedSurvivor; // 0xd8(0x08)
	struct TArray<enum class EDirectionalInputKey> _currentSequence; // 0xe0(0x10)
	bool _isInProgress; // 0xf0(0x01)
	char pad_F1[0x3]; // 0xf1(0x03)
	int32_t _currentKeyIndex; // 0xf4(0x04)
	struct FDirectionalMiniGameDefinition _miniGameDefinition; // 0xf8(0x20)
	char pad_118[0x8]; // 0x118(0x08)

	void Server_EnterKey(enum class EDirectionalInputKey enteredKey); // Function DeadByDaylight.DirectionalMinigameComponent.Server_EnterKey // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x5491010
	void Server_CancelMinigame(); // Function DeadByDaylight.DirectionalMinigameComponent.Server_CancelMinigame // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4af1ac0
	void OnRep_IsInProgress(); // Function DeadByDaylight.DirectionalMinigameComponent.OnRep_IsInProgress // (Final|Native|Private) // @ game+0x5512960
	void Authority_StartMinigameForSurvivor(struct ACamperPlayer* Survivor, struct FDirectionalMiniGameDefinition& miniGameDefinition); // Function DeadByDaylight.DirectionalMinigameComponent.Authority_StartMinigameForSurvivor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x5511fc0
};

// Class DeadByDaylight.DirectionalMinigameSurvivorComponent
// Size: 0x120 (Inherited: 0xb8)
struct UDirectionalMinigameSurvivorComponent : UActorComponent {
	char pad_B8[0x68]; // 0xb8(0x68)

	void Server_EnterKey(struct UDirectionalMinigameComponent* directionalMinigame, enum class EDirectionalInputKey Key); // Function DeadByDaylight.DirectionalMinigameSurvivorComponent.Server_EnterKey // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x54a1af0
	void Server_CancelMinigame(struct UDirectionalMinigameComponent* directionalMinigame); // Function DeadByDaylight.DirectionalMinigameSurvivorComponent.Server_CancelMinigame // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4d51430
	void Client_StopInteraction(struct UDirectionalMinigameComponent* directionalMinigame, enum class EDirectionalMinigameResult Result); // Function DeadByDaylight.DirectionalMinigameSurvivorComponent.Client_StopInteraction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x55194b0
};

// Class DeadByDaylight.DisableOutlineComponent
// Size: 0xe0 (Inherited: 0xb8)
struct UDisableOutlineComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	struct TArray<struct FGameplayTag> _enableOutlineEvents; // 0xd0(0x10)
};

// Class DeadByDaylight.DiscordancePerk
// Size: 0x428 (Inherited: 0x3c8)
struct UDiscordancePerk : UPerk {
	struct TArray<struct FGeneratorQueryHandlePair> _generatorQueryHandlePairs; // 0x3c8(0x10)
	char pad_3D8[0x30]; // 0x3d8(0x30)
	float _effectRange[0x3]; // 0x408(0x0c)
	float _auraLingerDuration; // 0x414(0x04)
	int32_t _numSurvivorsRepairingToReveal; // 0x418(0x04)
	char pad_41C[0x1]; // 0x41c(0x01)
	bool _isPerkConsideredActive; // 0x41d(0x01)
	char pad_41E[0xa]; // 0x41e(0x0a)

	void Multicast_AddLingeringGeneratorAura(struct AGenerator* Generator); // Function DeadByDaylight.DiscordancePerk.Multicast_AddLingeringGeneratorAura // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x4ceef10
	void Multicast_AddGeneratorAura(struct AGenerator* Generator); // Function DeadByDaylight.DiscordancePerk.Multicast_AddGeneratorAura // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55198a0
	float GetEffectRangeAtLevel(); // Function DeadByDaylight.DiscordancePerk.GetEffectRangeAtLevel // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x5519690
	float GetAuraLingerDuration(); // Function DeadByDaylight.DiscordancePerk.GetAuraLingerDuration // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x5519670
};

// Class DeadByDaylight.DisplayStandCharmRequesterComponent
// Size: 0xe0 (Inherited: 0xb8)
struct UDisplayStandCharmRequesterComponent : UActorComponent {
	struct ACharm* _menuCharmClass; // 0xb8(0x08)
	char pad_C0[0x20]; // 0xc0(0x20)

	void OnCharmDisplayed(struct AActor* Actor); // Function DeadByDaylight.DisplayStandCharmRequesterComponent.OnCharmDisplayed // (Final|Native|Private) // @ game+0x55199f0
};

// Class DeadByDaylight.DisplayStandController
// Size: 0x120 (Inherited: 0x30)
struct UDisplayStandController : UObject {
	char pad_30[0xf0]; // 0x30(0xf0)
};

// Class DeadByDaylight.DisplayStandCurrencyRequesterComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UDisplayStandCurrencyRequesterComponent : UActorComponent {
	char pad_B8[0x8]; // 0xb8(0x08)
	struct UObject* _menuCurrencyDisplayableClass; // 0xc0(0x08)
};

// Class DeadByDaylight.DisplayStandItemRequesterComponent
// Size: 0x110 (Inherited: 0xb8)
struct UDisplayStandItemRequesterComponent : UActorComponent {
	char pad_B8[0x58]; // 0xb8(0x58)

	void LoadItemsOnCharacter(struct AActor* Actor); // Function DeadByDaylight.DisplayStandItemRequesterComponent.LoadItemsOnCharacter // (Final|Native|Private) // @ game+0x5519810
};

// Class DeadByDaylight.DisplayStandMeatHookRequesterComponent
// Size: 0xd0 (Inherited: 0xb8)
struct UDisplayStandMeatHookRequesterComponent : UActorComponent {
	struct AMenuMeatHook* _meatHookClass; // 0xb8(0x08)
	char pad_C0[0x10]; // 0xc0(0x10)
};

// Class DeadByDaylight.DistanceCheckPawnLocationOverride
// Size: 0x30 (Inherited: 0x30)
struct UDistanceCheckPawnLocationOverride : UInterface {
};

// Class DeadByDaylight.DlcHelper
// Size: 0x30 (Inherited: 0x30)
struct UDlcHelper : UObject {
};

// Class DeadByDaylight.DLCManager
// Size: 0x88 (Inherited: 0x38)
struct UDLCManager : UGameInstanceSubsystem {
	char pad_38[0x50]; // 0x38(0x50)
};

// Class DeadByDaylight.DoctorPowerAnimStateComponent
// Size: 0xc0 (Inherited: 0xb8)
struct UDoctorPowerAnimStateComponent : UActorComponent {
	enum class EDoctorAbilityType _abilityType; // 0xb8(0x01)
	enum class EDoctorAbilityPhase _abilityPhase; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)

	void SetCurrentAbilityType(enum class EDoctorAbilityType abilityType); // Function DeadByDaylight.DoctorPowerAnimStateComponent.SetCurrentAbilityType // (Final|Native|Public|BlueprintCallable) // @ game+0x5519dd0
	void SetCurrentAbilityPhase(enum class EDoctorAbilityPhase abilityPhase); // Function DeadByDaylight.DoctorPowerAnimStateComponent.SetCurrentAbilityPhase // (Final|Native|Public|BlueprintCallable) // @ game+0x5519d50
};

// Class DeadByDaylight.DragDropOperation_Widget
// Size: 0x148 (Inherited: 0x90)
struct UDragDropOperation_Widget : UDragDropOperation {
	struct UUMGDragWidget* Widget; // 0x90(0x08)
	struct UPanelWidget* WidgetParent; // 0x98(0x08)
	struct FVector2D StartPosition; // 0xa0(0x08)
	struct FVector2D WidgetLocalScale; // 0xa8(0x08)
	char pad_B0[0x18]; // 0xb0(0x18)
	float WidgetLocalOpacity; // 0xc8(0x04)
	struct FVector2D OnDropOffset; // 0xcc(0x08)
	struct FVector2D OnDragOffset; // 0xd4(0x08)
	struct FAnchors WidgetSlotAnchors; // 0xdc(0x10)
	struct FMargin WidgetSlotOffsets; // 0xec(0x10)
	struct FVector2D WidgetSlotPosition; // 0xfc(0x08)
	struct FVector2D WidgetSlotSize; // 0x104(0x08)
	bool WidgetSlotAutoSize; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	struct FVector2D WidgetSlotAlignment; // 0x110(0x08)
	int32_t WidgetSlotZOrder; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct UUMGDragWidget* ChildLinkWidget; // 0x120(0x08)
	char pad_128[0x20]; // 0x128(0x20)
};

// Class DeadByDaylight.VaultableOutlineUpdateStrategy
// Size: 0x140 (Inherited: 0x138)
struct UVaultableOutlineUpdateStrategy : USourceBasedOutlineUpdateStrategy {
	bool _canBeRevealedToLocalPlayer; // 0x138(0x01)
	char pad_139[0x7]; // 0x139(0x07)

	void SetCanBeRevealedToLocalPlayer(bool canBeRevealedToLocalPlayer); // Function DeadByDaylight.VaultableOutlineUpdateStrategy.SetCanBeRevealedToLocalPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x5606ba0
};

// Class DeadByDaylight.PalletOutlineUpdateStrategy
// Size: 0x150 (Inherited: 0x140)
struct UPalletOutlineUpdateStrategy : UVaultableOutlineUpdateStrategy {
	struct FLinearColor _revealedByPowerColor; // 0x140(0x10)
};

// Class DeadByDaylight.DreamPalletOutlineUpdateStrategy
// Size: 0x178 (Inherited: 0x150)
struct UDreamPalletOutlineUpdateStrategy : UPalletOutlineUpdateStrategy {
	struct FLinearColor _revealedByMapColor; // 0x150(0x10)
	char pad_160[0x18]; // 0x160(0x18)

	void InitializeTunableValues(struct ASlasherPlayer* killer); // Function DeadByDaylight.DreamPalletOutlineUpdateStrategy.InitializeTunableValues // (Final|Native|Protected) // @ game+0x5519720
};

// Class DeadByDaylight.DreamSnareOutlineUpdateStrategy
// Size: 0xf8 (Inherited: 0xe0)
struct UDreamSnareOutlineUpdateStrategy : UDefaultOutlineUpdateStrategy {
	char pad_E0[0x18]; // 0xe0(0x18)
};

// Class DeadByDaylight.ObjectPlacementValidationStrategy
// Size: 0xb8 (Inherited: 0xb8)
struct UObjectPlacementValidationStrategy : UActorComponent {
};

// Class DeadByDaylight.DefaultObjectPlacementValidationStrategy
// Size: 0xe0 (Inherited: 0xb8)
struct UDefaultObjectPlacementValidationStrategy : UObjectPlacementValidationStrategy {
	struct FVector _objectPlacementRaycastStart; // 0xb8(0x0c)
	struct FVector _objectPlacementRaycastEnd; // 0xc4(0x0c)
	struct FFloatRange _objectHeightRangeAroundBaseLocation; // 0xd0(0x10)
};

// Class DeadByDaylight.DreamSnareTrapPlacementValidationStrategy
// Size: 0xf0 (Inherited: 0xe0)
struct UDreamSnareTrapPlacementValidationStrategy : UDefaultObjectPlacementValidationStrategy {
	float NumberOfGroundTest; // 0xe0(0x04)
	float TrapRadius; // 0xe4(0x04)
	float MaxElevationDifferentialOnTrapEdge; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
};

// Class DeadByDaylight.DreamworldOnlyComponent
// Size: 0x230 (Inherited: 0x220)
struct UDreamworldOnlyComponent : USceneComponent {
	char pad_220[0x10]; // 0x220(0x10)
};

// Class DeadByDaylight.DynamicGrass
// Size: 0x248 (Inherited: 0x230)
struct ADynamicGrass : AActor {
	struct UMaterialParameterCollection* _worldSettings; // 0x230(0x08)
	char pad_238[0x10]; // 0x238(0x10)
};

// Class DeadByDaylight.DynamicGrassEffectorInterface
// Size: 0x30 (Inherited: 0x30)
struct UDynamicGrassEffectorInterface : UInterface {
};

// Class DeadByDaylight.EdgeObjectHandlingStrategy
// Size: 0x158 (Inherited: 0x30)
struct UEdgeObjectHandlingStrategy : UObject {
	struct TArray<struct UActorSpawner*> _edgeObjectSpawners; // 0x30(0x10)
	struct TArray<struct UActorSpawner*> _edgeObjectBlockers; // 0x40(0x10)
	char pad_50[0x108]; // 0x50(0x108)
};

// Class DeadByDaylight.EditorActorVisualization
// Size: 0x280 (Inherited: 0x220)
struct UEditorActorVisualization : USceneComponent {
	struct TSoftClassPtr<UObject> ActorVisualization; // 0x218(0x30)
	struct FTransform RelativeTransform; // 0x250(0x30)
};

// Class DeadByDaylight.EditorMeshVisualization
// Size: 0x280 (Inherited: 0x220)
struct UEditorMeshVisualization : USceneComponent {
	struct TSoftObjectPtr<USkeletalMesh> MeshVisualization; // 0x218(0x30)
	struct FTransform RelativeTransform; // 0x250(0x30)
};

// Class DeadByDaylight.EffectsLocator
// Size: 0x298 (Inherited: 0x230)
struct AEffectsLocator : AActor {
	struct TArray<struct FEffectsLocatorTargets> AffectedActors; // 0x230(0x10)
	float ActorCaptureRadius; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct TSet<struct AActor*> _encountered; // 0x248(0x50)

	void OnLostActor(struct AActor* lostActor); // Function DeadByDaylight.EffectsLocator.OnLostActor // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnLeaveCollisionArea(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function DeadByDaylight.EffectsLocator.OnLeaveCollisionArea // (Final|Native|Public) // @ game+0x5519be0
	void OnFoundActor(struct AActor* foundActor); // Function DeadByDaylight.EffectsLocator.OnFoundActor // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnEnterCollisionArea(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function DeadByDaylight.EffectsLocator.OnEnterCollisionArea // (Final|Native|Public) // @ game+0x5519b10
	void OnActorTick(struct UMaterialInstanceDynamic* actorMaterialInstanceDynamic); // Function DeadByDaylight.EffectsLocator.OnActorTick // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.EmblemRankContainer
// Size: 0x248 (Inherited: 0x38)
struct UEmblemRankContainer : UGameInstanceSubsystem {
	char pad_38[0x210]; // 0x38(0x210)
};

// Class DeadByDaylight.EmblemRankUtilities
// Size: 0x30 (Inherited: 0x30)
struct UEmblemRankUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.EmblemTooltipWidget
// Size: 0x3c8 (Inherited: 0x370)
struct UEmblemTooltipWidget : UBaseTooltipWidget {
	struct UImage* HeaderBackground; // 0x370(0x08)
	struct UTextBlock* SubTitleLabel; // 0x378(0x08)
	struct UImage* HeaderSmoke; // 0x380(0x08)
	struct UVerticalBox* DataContainer; // 0x388(0x08)
	struct UUMGTallyEmblemProgressBar* TallyEmblemProgressBar; // 0x390(0x08)
	struct TSoftClassPtr<UObject> ProgressionDataWidgetClass; // 0x398(0x30)
};

// Class DeadByDaylight.EndGameComponent
// Size: 0x158 (Inherited: 0xb8)
struct UEndGameComponent : UActorComponent {
	char pad_B8[0xa0]; // 0xb8(0xa0)

	void UnpauseEndGameTimer(); // Function DeadByDaylight.EndGameComponent.UnpauseEndGameTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x5519e70
	void StartEndGame_Cheat(); // Function DeadByDaylight.EndGameComponent.StartEndGame_Cheat // (Final|Native|Public|BlueprintCallable) // @ game+0x5519e50
	void PauseEndGameTimer(); // Function DeadByDaylight.EndGameComponent.PauseEndGameTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x5519d30
	bool GetHasEndGameBegun(); // Function DeadByDaylight.EndGameComponent.GetHasEndGameBegun // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x4ae6130
	void FireEndGameSacrificeScoreEvent(struct FGameEventData GameEventData); // Function DeadByDaylight.EndGameComponent.FireEndGameSacrificeScoreEvent // (Final|Native|Private) // @ game+0x55195a0
	void DisableEndGameScenario(); // Function DeadByDaylight.EndGameComponent.DisableEndGameScenario // (Final|Native|Public|BlueprintCallable) // @ game+0x5519580
};

// Class DeadByDaylight.EndGameEntity
// Size: 0x238 (Inherited: 0x230)
struct AEndGameEntity : AActor {
	struct UDBDSkeletalMeshComponentBudgeted* _skeletalMeshComponent; // 0x230(0x08)
};

// Class DeadByDaylight.EndGameEntityAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UEndGameEntityAnimInstance : UAnimInstance {
	bool _isFront; // 0x2c0(0x01)
	bool _isBack; // 0x2c1(0x01)
	char pad_2C2[0xe]; // 0x2c2(0x0e)
};

// Class DeadByDaylight.EndGameStateComponent
// Size: 0x120 (Inherited: 0xb8)
struct UEndGameStateComponent : UActorComponent {
	char pad_B8[0xc]; // 0xb8(0x0c)
	bool _isEndGameOver; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	float _worldTimeAtLastModification; // 0xc8(0x04)
	char pad_CC[0x44]; // 0xcc(0x44)
	float _timeDilation; // 0x110(0x04)
	bool _isTimerPaused; // 0x114(0x01)
	char pad_115[0x3]; // 0x115(0x03)
	float _normalTotalTimeElapsedAtLastTimeModification; // 0x118(0x04)
	enum class EEndGameScenarioTrigger _endGameScenarioTrigger; // 0x11c(0x01)
	char pad_11D[0x3]; // 0x11d(0x03)

	void OnRep_WorldTimeAtLastDilationModification(); // Function DeadByDaylight.EndGameStateComponent.OnRep_WorldTimeAtLastDilationModification // (Final|Native|Private) // @ game+0x5519d10
	void OnRep_TimeDilation(); // Function DeadByDaylight.EndGameStateComponent.OnRep_TimeDilation // (Final|Native|Private) // @ game+0x5519cf0
	void OnRep_IsTimerPaused(); // Function DeadByDaylight.EndGameStateComponent.OnRep_IsTimerPaused // (Final|Native|Private) // @ game+0x5519cd0
	void OnRep_IsEndGameOver(); // Function DeadByDaylight.EndGameStateComponent.OnRep_IsEndGameOver // (Final|Native|Private) // @ game+0x5519cb0
	void Multicast_SetIsInEndGameSimulation(bool endGameSimulation); // Function DeadByDaylight.EndGameStateComponent.Multicast_SetIsInEndGameSimulation // (Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate) // @ game+0x5519930
	bool IsTimerSlowedDown(); // Function DeadByDaylight.EndGameStateComponent.IsTimerSlowedDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55197e0
	bool IsEndGameOver(); // Function DeadByDaylight.EndGameStateComponent.IsEndGameOver // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55197b0
	bool HasEndGameBegun(); // Function DeadByDaylight.EndGameStateComponent.HasEndGameBegun // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55196f0
	float GetElapsedTimePercent(); // Function DeadByDaylight.EndGameStateComponent.GetElapsedTimePercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55196c0
};

// Class DeadByDaylight.EnduranceVFXComponent
// Size: 0xd8 (Inherited: 0xb8)
struct UEnduranceVFXComponent : UActorComponent {
	char pad_B8[0x20]; // 0xb8(0x20)

	void ShowHighlight(struct UGameplayModifierContainer* preventKOSource); // Function DeadByDaylight.EnduranceVFXComponent.ShowHighlight // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x551ee00
};

// Class DeadByDaylight.EnergyPoweredInterface
// Size: 0x30 (Inherited: 0x30)
struct UEnergyPoweredInterface : UInterface {
};

// Class DeadByDaylight.EnsureLoggingSubsystem
// Size: 0x70 (Inherited: 0x38)
struct UEnsureLoggingSubsystem : UGameInstanceSubsystem {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class DeadByDaylight.Entity
// Size: 0x250 (Inherited: 0x230)
struct AEntity : AActor {
	struct UCurveFloat* _dissolveCurve; // 0x230(0x08)
	struct UCurveFloat* _revealsCurve; // 0x238(0x08)
	struct UMaterialHelper* _materialHelper; // 0x240(0x08)
	struct USkeletalMeshComponent* _skeletalMesh; // 0x248(0x08)

	void SetAnimationStrugglePercent(float percent); // Function DeadByDaylight.Entity.SetAnimationStrugglePercent // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetAnimationIsStruggling(bool isStruggling); // Function DeadByDaylight.Entity.SetAnimationIsStruggling // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnReactionStart(); // Function DeadByDaylight.Entity.OnReactionStart // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void InitEntity(struct AMeatHook* MeatHook); // Function DeadByDaylight.Entity.InitEntity // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void HideEntity(); // Function DeadByDaylight.Entity.HideEntity // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void CompleteSacrifice(bool isBasementHook); // Function DeadByDaylight.Entity.CompleteSacrifice // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void ChangeToStruggleState(); // Function DeadByDaylight.Entity.ChangeToStruggleState // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void ChangeToSacrificeState(); // Function DeadByDaylight.Entity.ChangeToSacrificeState // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void ChangeToIdleState(); // Function DeadByDaylight.Entity.ChangeToIdleState // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.EnvironmentAnimatedObject
// Size: 0x2b8 (Inherited: 0x2b8)
struct AEnvironmentAnimatedObject : ASkeletalMeshActorBudgeted {
};

// Class DeadByDaylight.PlayerProfileDAL
// Size: 0x88 (Inherited: 0x30)
struct UPlayerProfileDAL : UObject {
	char pad_30[0x58]; // 0x30(0x58)
};

// Class DeadByDaylight.EpicProfileDAL
// Size: 0x88 (Inherited: 0x88)
struct UEpicProfileDAL : UPlayerProfileDAL {
};

// Class DeadByDaylight.EscapeBlocker
// Size: 0x268 (Inherited: 0x230)
struct AEscapeBlocker : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct UBoxComponent* _camperBlocker; // 0x238(0x08)
	struct UBoxComponent* _playerDetectionZone; // 0x240(0x08)
	char pad_248[0x20]; // 0x248(0x20)

	void SetPlayerDetectionZone(struct UBoxComponent* playerDetectionZone); // Function DeadByDaylight.EscapeBlocker.SetPlayerDetectionZone // (Final|Native|Protected|BlueprintCallable) // @ game+0x551ed70
	void SetCamperBlocker(struct UBoxComponent* camperBlocker); // Function DeadByDaylight.EscapeBlocker.SetCamperBlocker // (Final|Native|Protected|BlueprintCallable) // @ game+0x551eb10
	void OnPlayerDetectionZoneEndOverlap(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DeadByDaylight.EscapeBlocker.OnPlayerDetectionZoneEndOverlap // (Final|Native|Private) // @ game+0x551e6e0
	void OnPlayerDetectionZoneBeginOverlap(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.EscapeBlocker.OnPlayerDetectionZoneBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x551e4c0
	void DeactivatePlayerBlockerFX(); // Function DeadByDaylight.EscapeBlocker.DeactivatePlayerBlockerFX // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void ActivatePlayerBlockerFX(); // Function DeadByDaylight.EscapeBlocker.ActivatePlayerBlockerFX // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.EscapeDoor
// Size: 0x430 (Inherited: 0x338)
struct AEscapeDoor : AInteractable {
	char pad_338[0x8]; // 0x338(0x08)
	struct TArray<struct FVector> EscapePositions; // 0x340(0x10)
	struct TArray<struct UObject*> EscapeFire; // 0x350(0x10)
	struct UChargeableComponent* _killerOpenChargeable; // 0x360(0x08)
	struct UChargeableComponent* _openChargeable; // 0x368(0x08)
	struct UAkComponent* _ak_audio_escape; // 0x370(0x08)
	struct UEscapeDoorAnimInstance* _escapeDoorAnimInstance; // 0x378(0x08)
	struct USceneComponent* _rootComponent; // 0x380(0x08)
	bool _activated; // 0x388(0x01)
	char pad_389[0x7]; // 0x389(0x07)
	struct USpotLightComponent* _spotlight; // 0x390(0x08)
	char pad_398[0x50]; // 0x398(0x50)
	struct TArray<struct TWeakObjectPtr<struct ACamperPlayer>> _localOverlappingSurvivors; // 0x3e8(0x10)
	char pad_3F8[0x8]; // 0x3f8(0x08)
	struct UAIPerceptionStimuliSourceComponent* _perceptionStimuliComponent; // 0x400(0x08)
	struct UBlockableComponent* _doorSwitchBlockableComponent; // 0x408(0x08)
	char pad_410[0x20]; // 0x410(0x20)

	void SetIsActivated(bool IsActivated); // Function DeadByDaylight.EscapeDoor.SetIsActivated // (Final|Native|Public|BlueprintCallable) // @ game+0x551eba0
	void OnUnblockDoorSwitchCosmetic(); // Function DeadByDaylight.EscapeDoor.OnUnblockDoorSwitchCosmetic // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnRep_Activated(bool oldActivated); // Function DeadByDaylight.EscapeDoor.OnRep_Activated // (Final|Native|Private) // @ game+0x551e960
	void OnPlayerExitExitArea(struct ADBDPlayer* Player); // Function DeadByDaylight.EscapeDoor.OnPlayerExitExitArea // (Final|Native|Protected|BlueprintCallable) // @ game+0x551e8d0
	void OnPlayerEnterExitArea(struct ADBDPlayer* Player); // Function DeadByDaylight.EscapeDoor.OnPlayerEnterExitArea // (Final|Native|Protected|BlueprintCallable) // @ game+0x551e840
	void OnExitOpenChanged(bool OPENED); // Function DeadByDaylight.EscapeDoor.OnExitOpenChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnExitGateOpened(struct ADBDPlayer* Player); // Function DeadByDaylight.EscapeDoor.OnExitGateOpened // (Final|Native|Public|BlueprintCallable) // @ game+0x551e300
	void OnExitActivationChanged(bool activated); // Function DeadByDaylight.EscapeDoor.OnExitActivationChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnEscapeZoneEndOverlap(struct AActor* overlappingActor); // Function DeadByDaylight.EscapeDoor.OnEscapeZoneEndOverlap // (Final|Native|Protected|BlueprintCallable) // @ game+0x551e270
	void OnEscapeZoneBeginOverlap(struct AActor* overlappingActor); // Function DeadByDaylight.EscapeDoor.OnEscapeZoneBeginOverlap // (Final|Native|Protected|BlueprintCallable) // @ game+0x551e1e0
	void OnBlockDoorSwitchCosmetic(); // Function DeadByDaylight.EscapeDoor.OnBlockDoorSwitchCosmetic // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void LightAllLights(); // Function DeadByDaylight.EscapeDoor.LightAllLights // (BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	bool IsDoorSwitchBlocked(); // Function DeadByDaylight.EscapeDoor.IsDoorSwitchBlocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551e1b0
	bool IsActivated(); // Function DeadByDaylight.EscapeDoor.IsActivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551e150
	struct USceneComponent* GetSwitchSceneComponent(); // Function DeadByDaylight.EscapeDoor.GetSwitchSceneComponent // (Event|Public|BlueprintEvent|Const) // @ game+0x5e02c90
	struct FVector GetParadiseServerLocation(); // Function DeadByDaylight.EscapeDoor.GetParadiseServerLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x551e040
	float GetOpenTime(); // Function DeadByDaylight.EscapeDoor.GetOpenTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551e010
	struct UChargeableInteractionDefinition* GetOpenEscapeInteraction(); // Function DeadByDaylight.EscapeDoor.GetOpenEscapeInteraction // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	bool GetIsOpen(); // Function DeadByDaylight.EscapeDoor.GetIsOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551dfb0
	struct UBoxComponent* GetExitArea(); // Function DeadByDaylight.EscapeDoor.GetExitArea // (Event|Protected|BlueprintEvent|Const) // @ game+0x5e02c90
	struct FVector GetEscapeSwitchFloorLocation(); // Function DeadByDaylight.EscapeDoor.GetEscapeSwitchFloorLocation // (Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x5e02c90
	struct USkeletalMeshComponent* GetDoorSkeletalMeshComponent(); // Function DeadByDaylight.EscapeDoor.GetDoorSkeletalMeshComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x551df80
};

// Class DeadByDaylight.EscapeDoorAnimInstance
// Size: 0x2e0 (Inherited: 0x2d0)
struct UEscapeDoorAnimInstance : USleepingAnimInstance {
	bool _isOpen; // 0x2d0(0x01)
	bool _isOpenByKiller; // 0x2d1(0x01)
	char pad_2D2[0xe]; // 0x2d2(0x0e)

	void SetIsOpenByKiller(bool isOpenByKiller); // Function DeadByDaylight.EscapeDoorAnimInstance.SetIsOpenByKiller // (Final|Native|Public|BlueprintCallable) // @ game+0x551ecc0
	void SetIsOpen(bool IsOpen); // Function DeadByDaylight.EscapeDoorAnimInstance.SetIsOpen // (Final|Native|Public|BlueprintCallable) // @ game+0x551ec30
	void PlaySound(struct UAkAudioEvent* AkEvent); // Function DeadByDaylight.EscapeDoorAnimInstance.PlaySound // (Final|Native|Public|BlueprintCallable) // @ game+0x551ea80
};

// Class DeadByDaylight.EscapeOutlineUpdateStrategy
// Size: 0xe0 (Inherited: 0xc0)
struct UEscapeOutlineUpdateStrategy : UOutlineUpdateStrategy {
	struct FLinearColor _doorOpenColorForSurvivor; // 0xc0(0x10)
	struct FLinearColor _doorOpenColorForKiller; // 0xd0(0x10)
};

// Class DeadByDaylight.EscapeRequirementTracker
// Size: 0x68 (Inherited: 0x30)
struct UEscapeRequirementTracker : UObject {
	struct TArray<struct AGenerator*> _escapeGenerators; // 0x30(0x10)
	struct ADBDGameState* _dbdGameState; // 0x40(0x08)
	char pad_48[0x20]; // 0x48(0x20)

	void OnGameEventDispatched(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.EscapeRequirementTracker.OnGameEventDispatched // (Final|Native|Private|HasOutParms) // @ game+0x551e390
};

// Class DeadByDaylight.EscapeThroughHatch
// Size: 0x630 (Inherited: 0x630)
struct UEscapeThroughHatch : UBaseEscapeThroughHatch {
};

// Class DeadByDaylight.EscapeTile
// Size: 0x350 (Inherited: 0x348)
struct AEscapeTile : ATile {
	char pad_348[0x8]; // 0x348(0x08)
};

// Class DeadByDaylight.EventCustomizationHelper
// Size: 0x30 (Inherited: 0x30)
struct UEventCustomizationHelper : UObject {
};

// Class DeadByDaylight.EventEntryPopupScreen
// Size: 0x140 (Inherited: 0x140)
struct UEventEntryPopupScreen : UGenericPopupScreen {
};

// Class DeadByDaylight.EventObjectComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UEventObjectComponent : UActorComponent {
	struct FName _eventId; // 0xb8(0x0c)
	char pad_C4[0x4]; // 0xc4(0x04)
};

// Class DeadByDaylight.EventGeneratorComponent
// Size: 0xe8 (Inherited: 0xc8)
struct UEventGeneratorComponent : UEventObjectComponent {
	struct FGameplayTag _genCompletedScoreEvent; // 0xc8(0x0c)
	struct FGameplayTag _genCompletedNoOfferingScoreEvent; // 0xd4(0x0c)
	enum class EOfferingEffectType _offeringEffectTypeNeeded; // 0xe0(0x01)
	bool _updateOutlineForSurvivor; // 0xe1(0x01)
	bool _updateOutlineForSlasher; // 0xe2(0x01)
	char pad_E3[0x5]; // 0xe3(0x05)

	void Authority_FireGenCompletedEventScore(bool isAutoCompleted); // Function DeadByDaylight.EventGeneratorComponent.Authority_FireGenCompletedEventScore // (Final|Native|Private) // @ game+0x551dbc0
};

// Class DeadByDaylight.EventHookComponent
// Size: 0xf8 (Inherited: 0xc8)
struct UEventHookComponent : UEventObjectComponent {
	char pad_C8[0x10]; // 0xc8(0x10)
	struct FGameplayTag _hookedOnEventHookScoreEvent; // 0xd8(0x0c)
	struct FGameplayTag _hookedOnEventHookNoOfferingScoreEvent; // 0xe4(0x0c)
	enum class EOfferingEffectType _offeringEffectTypeNeeded; // 0xf0(0x01)
	bool _rewardScoreOnFirstHookOnly; // 0xf1(0x01)
	bool _updateOutlineForSurvivor; // 0xf2(0x01)
	bool _updateOutlineForSlasher; // 0xf3(0x01)
	char pad_F4[0x4]; // 0xf4(0x04)

	void SetOutlineCarryingColorToDefault(); // Function DeadByDaylight.EventHookComponent.SetOutlineCarryingColorToDefault // (Final|Native|Public|BlueprintCallable) // @ game+0x551ed50
	void Authority_FireHookedScoreEvent(struct ADBDPlayer* hookedPlayer); // Function DeadByDaylight.EventHookComponent.Authority_FireHookedScoreEvent // (Final|Native|Private) // @ game+0x551dc50
};

// Class DeadByDaylight.EventsFactory
// Size: 0x38 (Inherited: 0x38)
struct UEventsFactory : UGameInstanceSubsystem {
};

// Class DeadByDaylight.EvilWithinComponent
// Size: 0x140 (Inherited: 0xb8)
struct UEvilWithinComponent : UActorComponent {
	struct FMulticastInlineDelegate OnTierChange; // 0xb8(0x10)
	int32_t _currentTier; // 0xc8(0x04)
	float _lastTierTimeStart; // 0xcc(0x04)
	char pad_D0[0x60]; // 0xd0(0x60)
	struct TArray<struct FString> _allowedSurvivorInteractionsForKill; // 0x130(0x10)

	void OnRep_CurrentTier(int32_t previousTier); // Function DeadByDaylight.EvilWithinComponent.OnRep_CurrentTier // (Final|Native|Private) // @ game+0x551e9f0
	void OnLevelReadyToPlay(); // Function DeadByDaylight.EvilWithinComponent.OnLevelReadyToPlay // (Final|Native|Private) // @ game+0x551e4a0
	bool IsAtLastTier(); // Function DeadByDaylight.EvilWithinComponent.IsAtLastTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551e180
	float GetRequirementForTier(int32_t tier); // Function DeadByDaylight.EvilWithinComponent.GetRequirementForTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551e0b0
	float GetPercentStalkingPointsInCurrentTier(); // Function DeadByDaylight.EvilWithinComponent.GetPercentStalkingPointsInCurrentTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551e080
	int32_t GetMaxTier(); // Function DeadByDaylight.EvilWithinComponent.GetMaxTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551dfe0
	int32_t GetCurrentTier(); // Function DeadByDaylight.EvilWithinComponent.GetCurrentTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551df50
	bool CanStandKill(struct ADBDPlayer* Player); // Function DeadByDaylight.EvilWithinComponent.CanStandKill // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551deb0
	bool CanBeStandingKilled(struct ADBDPlayer* Player); // Function DeadByDaylight.EvilWithinComponent.CanBeStandingKilled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551de10
	void Authority_OnStalkPointsAdded(float stalkPoints); // Function DeadByDaylight.EvilWithinComponent.Authority_OnStalkPointsAdded // (Final|Native|Private) // @ game+0x551dd90
	void Authority_OnPlayerDisconnect(struct ADBDPlayer* Player); // Function DeadByDaylight.EvilWithinComponent.Authority_OnPlayerDisconnect // (Final|Native|Private) // @ game+0x551dd00
	void Authority_NotifyKill(); // Function DeadByDaylight.EvilWithinComponent.Authority_NotifyKill // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x551dce0
};

// Class DeadByDaylight.RestrictedPlacementAreaStrategy
// Size: 0xa0 (Inherited: 0x30)
struct URestrictedPlacementAreaStrategy : UObject {
	char pad_30[0x10]; // 0x30(0x10)
	struct FDBDTunableRowHandle RestrictedRadius; // 0x40(0x28)
	char pad_68[0x4]; // 0x68(0x04)
	bool _useTunableForHeight; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	float _maxHeightRestriction; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct FDBDTunableRowHandle _maxHeightRestrictionTunable; // 0x78(0x28)
};

// Class DeadByDaylight.ExitGateSwitchesRestrictedPlacementAreaStrategy
// Size: 0xa0 (Inherited: 0xa0)
struct UExitGateSwitchesRestrictedPlacementAreaStrategy : URestrictedPlacementAreaStrategy {
};

// Class DeadByDaylight.ExitOpenedIndicatorWidget
// Size: 0x380 (Inherited: 0x380)
struct UExitOpenedIndicatorWidget : UBaseIndicatorWidget {
};

// Class DeadByDaylight.ExperimentsHelper
// Size: 0x30 (Inherited: 0x30)
struct UExperimentsHelper : UObject {

	bool IsActive(struct UObject* contextObject, struct FName experimentId); // Function DeadByDaylight.ExperimentsHelper.IsActive // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5523d80
	bool GetCombinedData(struct UObject* contextObject, struct FName experimentId, struct FCombinedExperimentData& outData); // Function DeadByDaylight.ExperimentsHelper.GetCombinedData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5523630
	bool GetAllActive(struct UObject* contextObject, struct TArray<struct FCombinedExperimentData>& outData); // Function DeadByDaylight.ExperimentsHelper.GetAllActive // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x55230d0
};

// Class DeadByDaylight.ExperimentsSubsystem
// Size: 0xa8 (Inherited: 0x38)
struct UExperimentsSubsystem : UGameInstanceSubsystem {
	char pad_38[0x70]; // 0x38(0x70)
};

// Class DeadByDaylight.ExposerCirclingComponent
// Size: 0x270 (Inherited: 0x220)
struct UExposerCirclingComponent : USceneComponent {
	bool DirectionFollows; // 0x218(0x01)
	float MinHeight; // 0x21c(0x04)
	float MaxHeight; // 0x220(0x04)
	float MinRadius; // 0x224(0x04)
	float MaxRadius; // 0x228(0x04)
	float CirclingSpeed; // 0x22c(0x04)
	float DistanceBetweenPoints; // 0x230(0x04)
	float BezierModifier; // 0x234(0x04)
	int32_t Samples; // 0x238(0x04)
	char pad_241[0x2f]; // 0x241(0x2f)

	void SetIsCircling(bool circling); // Function DeadByDaylight.ExposerCirclingComponent.SetIsCircling // (Final|Native|Public|BlueprintCallable) // @ game+0x5524320
	void Reset(); // Function DeadByDaylight.ExposerCirclingComponent.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x5524300
};

// Class DeadByDaylight.ExposerInteriorZoneComponent
// Size: 0x4c0 (Inherited: 0x4b0)
struct UExposerInteriorZoneComponent : UBoxComponent {
	struct TArray<struct USceneComponent*> ExposerSpawnPoints; // 0x4a8(0x10)

	void AddExposerSpawnPoint(struct USceneComponent* Point); // Function DeadByDaylight.ExposerInteriorZoneComponent.AddExposerSpawnPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x5522f20
};

// Class DeadByDaylight.Fadeable
// Size: 0x30 (Inherited: 0x30)
struct UFadeable : UInterface {

	void OnFadeEnd(struct AActor* Other); // Function DeadByDaylight.Fadeable.OnFadeEnd // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5524150
	void OnFadeBegin(struct AActor* Other); // Function DeadByDaylight.Fadeable.OnFadeBegin // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55240c0
	void OnAlphaChanged(float newAlpha, struct AActor* Other); // Function DeadByDaylight.Fadeable.OnAlphaChanged // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5523ff0
};

// Class DeadByDaylight.FasterChestSearch
// Size: 0x350 (Inherited: 0x350)
struct UFasterChestSearch : UStatusEffect {
};

// Class DeadByDaylight.FearMarketManager
// Size: 0x110 (Inherited: 0x30)
struct UFearMarketManager : UObject {
	struct FFearMarketItemInstance PendingPurchaseFearMarketItem; // 0x30(0x30)
	char pad_60[0x48]; // 0x60(0x48)
	struct FFearMarketOfferingInstance _existingFearMarket; // 0xa8(0x20)
	struct TWeakObjectPtr<struct UDBDGameInstance> _gameInstance; // 0xc8(0x08)
	char pad_D0[0x40]; // 0xd0(0x40)

	void ReceivedFearMarketData(bool success); // Function DeadByDaylight.FearMarketManager.ReceivedFearMarketData // (Final|Native|Private) // @ game+0x5524270
};

// Class DeadByDaylight.FearMarketPopupScreen
// Size: 0x140 (Inherited: 0x140)
struct UFearMarketPopupScreen : UGenericPopupScreen {
};

// Class DeadByDaylight.FeatureGate
// Size: 0x178 (Inherited: 0x38)
struct UFeatureGate : UGameInstanceSubsystem {
	char pad_38[0x140]; // 0x38(0x140)
};

// Class DeadByDaylight.FeatureGateHelper
// Size: 0x30 (Inherited: 0x30)
struct UFeatureGateHelper : UObject {

	bool WasSeen(struct UObject* contextObject, enum class EDBDFeatureType featureType, enum class EPlayerRole Role); // Function DeadByDaylight.FeatureGateHelper.WasSeen // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55245b0
	bool IsLocked(struct UObject* contextObject, enum class EDBDFeatureType featureType, enum class EPlayerRole Role); // Function DeadByDaylight.FeatureGateHelper.IsLocked // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5523ef0
	bool IsEnabled(struct UObject* contextObject); // Function DeadByDaylight.FeatureGateHelper.IsEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5523e60
	bool GetSingle(struct UObject* contextObject, struct FDBDFeatureLockProgress& outData, enum class EDBDFeatureType featureType, enum class EPlayerRole Role); // Function DeadByDaylight.FeatureGateHelper.GetSingle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5523a90
	bool GetAllBySeenState(struct UObject* contextObject, struct TArray<struct FDBDFeatureLockProgress>& outData, bool WasSeen); // Function DeadByDaylight.FeatureGateHelper.GetAllBySeenState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5523460
	bool GetAllByRole(struct UObject* contextObject, struct TArray<struct FDBDFeatureLockProgress>& outData, enum class EPlayerRole Role); // Function DeadByDaylight.FeatureGateHelper.GetAllByRole // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5523330
	bool GetAllByLockState(struct UObject* contextObject, struct TArray<struct FDBDFeatureLockProgress>& outData, bool locked); // Function DeadByDaylight.FeatureGateHelper.GetAllByLockState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5523200
	bool GetAll(struct UObject* contextObject, struct TArray<struct FDBDFeatureLockProgress>& outData); // Function DeadByDaylight.FeatureGateHelper.GetAll // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5522fe0
};

// Class DeadByDaylight.FinisherMoriTrackerComponent
// Size: 0xe8 (Inherited: 0xb8)
struct UFinisherMoriTrackerComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	struct TArray<struct ACamperPlayer*> _survivorsDowned; // 0xd0(0x10)
	char pad_E0[0x8]; // 0xe0(0x08)
};

// Class DeadByDaylight.Firecracker
// Size: 0x390 (Inherited: 0x338)
struct AFirecracker : AInteractable {
	char pad_338[0x18]; // 0x338(0x18)
	struct USphereComponent* _effectArea; // 0x350(0x08)
	bool DebugDisplayEnabled; // 0x358(0x01)
	char pad_359[0x7]; // 0x359(0x07)
	struct TArray<struct UGameplayModifierContainer*> _effectModifiers; // 0x360(0x10)
	struct ADBDPlayer* _playerOwner; // 0x370(0x08)
	bool _isExploding; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)
	struct TArray<struct AActor*> _actorsInRange; // 0x380(0x10)

	bool ShouldDeafen(struct ADBDPlayer* Player, float& outDuration); // Function DeadByDaylight.Firecracker.ShouldDeafen // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x5524490
	bool ShouldBlind(struct ADBDPlayer* Player, float& outDuration); // Function DeadByDaylight.Firecracker.ShouldBlind // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x55243b0
	void OnFuseBurnUpdate(float DeltaSeconds, float fuseTimeLeftPercent); // Function DeadByDaylight.Firecracker.OnFuseBurnUpdate // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnFuseBurnExit(); // Function DeadByDaylight.Firecracker.OnFuseBurnExit // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnFuseBurnEnter(); // Function DeadByDaylight.Firecracker.OnFuseBurnEnter // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnExplode(); // Function DeadByDaylight.Firecracker.OnExplode // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnEffectsInitialized(); // Function DeadByDaylight.Firecracker.OnEffectsInitialized // (Native|Event|Protected|BlueprintEvent) // @ game+0x3daf120
	void Multicast_InitFromSpawningPlayer(struct ADBDPlayer* spawner); // Function DeadByDaylight.Firecracker.Multicast_InitFromSpawningPlayer // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x54ad930
	bool HasModifierOfType(struct FGameplayTag Type); // Function DeadByDaylight.Firecracker.HasModifierOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5523cb0
	bool HasFlag(struct FGameplayTag flag); // Function DeadByDaylight.Firecracker.HasFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5523c00
	float GetModifierValue(struct FGameplayTag Type); // Function DeadByDaylight.Firecracker.GetModifierValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5523980
	float GetExplosionRange(); // Function DeadByDaylight.Firecracker.GetExplosionRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5523950
	float GetExplosionEffectDuration(); // Function DeadByDaylight.Firecracker.GetExplosionEffectDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5523920
	float GetExplosionDelay(); // Function DeadByDaylight.Firecracker.GetExplosionDelay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55238f0
	bool GetExploded(); // Function DeadByDaylight.Firecracker.GetExploded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55238d0
	struct TArray<struct UGameplayModifierContainer*> GetEffects(); // Function DeadByDaylight.Firecracker.GetEffects // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x5523840
	float GetDeafnessEffectDuration(struct ADBDPlayer* Player); // Function DeadByDaylight.Firecracker.GetDeafnessEffectDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55237a0
	float GetBlindnessEffectDuration(struct AActor* Player); // Function DeadByDaylight.Firecracker.GetBlindnessEffectDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5523590
};

// Class DeadByDaylight.FirecrackerEffectHandlerComponent
// Size: 0x128 (Inherited: 0xb8)
struct UFirecrackerEffectHandlerComponent : UActorComponent {
	struct FMulticastInlineDelegate OnFirecrackerInRangeBegin; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnFirecrackerInRangeEnd; // 0xc8(0x10)
	struct TSet<struct AFirecracker*> _inRangeFirecrackers; // 0xd8(0x50)

	void OnFirecrackerDestroyed(struct AActor* DestroyedActor); // Function DeadByDaylight.FirecrackerEffectHandlerComponent.OnFirecrackerDestroyed // (Final|Native|Private) // @ game+0x55241e0
};

// Class DeadByDaylight.FirecrackerScoreComponent
// Size: 0xb8 (Inherited: 0xb8)
struct UFirecrackerScoreComponent : UActorComponent {
};

// Class DeadByDaylight.FirecrackerStateMachine
// Size: 0x130 (Inherited: 0x130)
struct UFirecrackerStateMachine : UStateMachine {
};

// Class DeadByDaylight.FirstPersonViewComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UFirstPersonViewComponent : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class DeadByDaylight.FleeComponent
// Size: 0xd8 (Inherited: 0xb8)
struct UFleeComponent : UActorComponent {
	struct AActor* _threat; // 0xb8(0x08)
	char pad_C0[0x18]; // 0xc0(0x18)
};

// Class DeadByDaylight.FlickeringLight
// Size: 0x600 (Inherited: 0x258)
struct AFlickeringLight : AGeneratorDrivenActor {
	enum class FlickeringLightType _lightComponentType; // 0x258(0x04)
	enum class EDetailMode _detailLevelBeforeCastShadows; // 0x25c(0x01)
	struct FPerPlatformBool _castShadow; // 0x25d(0x01)
	char pad_25E[0x2]; // 0x25e(0x02)
	struct FBHVRPerDetailModeBool _isCastingShadow; // 0x260(0xa0)
	struct FBHVRPerDetailModeFloat _maxDrawDistance; // 0x300(0xa0)
	struct FBHVRPerDetailModeFloat _maxDistanceFadeRange; // 0x3a0(0xa0)
	struct FBHVRPerDetailModeBool _castCinematicShadowsOnly; // 0x440(0xa0)
	float _innerConneAngle; // 0x4e0(0x04)
	float _outerConneAngle; // 0x4e4(0x04)
	float _sourceLength; // 0x4e8(0x04)
	float _sourceRadius; // 0x4ec(0x04)
	float _intensity; // 0x4f0(0x04)
	bool _generatorActivated; // 0x4f4(0x01)
	bool _isTimelineSpeedRandom; // 0x4f5(0x01)
	char pad_4F6[0x2]; // 0x4f6(0x02)
	float _maximumTimelimeSpeed; // 0x4f8(0x04)
	float _minimumTimelimeSpeed; // 0x4fc(0x04)
	struct FBHVRPerDetailModeBool _secondaryLightVisibility; // 0x500(0xa0)
	float _secondaryLightIntensity; // 0x5a0(0x04)
	struct FVector _secondaryLightTransform; // 0x5a4(0x0c)
	struct FRotator _secondaryLightRotation; // 0x5b0(0x0c)
	float _secondaryLightAttenuationRadius; // 0x5bc(0x04)
	struct FLinearColor _secondaryLightColor; // 0x5c0(0x10)
	float _secondaryLightSpecularScale; // 0x5d0(0x04)
	char _isAlwaysCapturedAsON : 1; // 0x5d4(0x01)
	char pad_5D4_1 : 7; // 0x5d4(0x01)
	char pad_5D5[0x3]; // 0x5d5(0x03)
	struct ULightIntensityTimelineComponent* _lightIntensityTimeline; // 0x5d8(0x08)
	struct UPointLightComponent* _pointLightComponent; // 0x5e0(0x08)
	struct UPointLightComponent* _secondaryPointLightComponent; // 0x5e8(0x08)
	struct URectLightComponent* _rectLightComponent; // 0x5f0(0x08)
	struct USpotLightComponent* _spotLightComponent; // 0x5f8(0x08)

	void StopFlickering(); // Function DeadByDaylight.FlickeringLight.StopFlickering // (Final|Native|Protected|BlueprintCallable) // @ game+0x5524590
	void StartFlickering(); // Function DeadByDaylight.FlickeringLight.StartFlickering // (Final|Native|Protected|BlueprintCallable) // @ game+0x5524570
	void Init(); // Function DeadByDaylight.FlickeringLight.Init // (Final|Native|Protected|BlueprintCallable) // @ game+0x5523d60
	bool GetSecondaryLightVisibilty(); // Function DeadByDaylight.FlickeringLight.GetSecondaryLightVisibilty // (Final|Native|Public|BlueprintCallable) // @ game+0x5523a60
	struct ULocalLightComponent* GetSecondaryLightComponent(); // Function DeadByDaylight.FlickeringLight.GetSecondaryLightComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x5523a30
	struct ULocalLightComponent* GetActiveLightComponent(); // Function DeadByDaylight.FlickeringLight.GetActiveLightComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x5522fb0
};

// Class DeadByDaylight.FoliageActor
// Size: 0x238 (Inherited: 0x230)
struct AFoliageActor : AActor {
	struct UFoliageDensityHISM* _foliageHISM; // 0x230(0x08)
};

// Class DeadByDaylight.FoliageDensityContainer
// Size: 0x328 (Inherited: 0x230)
struct AFoliageDensityContainer : AActor {
	struct TMap<struct FName, struct AFoliageActor*> _foliageActors; // 0x230(0x50)
	struct TMap<struct FName, struct UFoliageDensityHISM*> _foliageHISMs; // 0x280(0x50)
	char pad_2D0[0x50]; // 0x2d0(0x50)
	struct UDBDMapFoliageDensityTunables* _mapFoliageDensityTunables; // 0x320(0x08)
};

// Class DeadByDaylight.FoliageDensityHISM
// Size: 0x6f0 (Inherited: 0x6f0)
struct UFoliageDensityHISM : UHierarchicalInstancedStaticMeshComponent {
};

// Class DeadByDaylight.FranklinsDemiseConsumedByEntityComponent
// Size: 0x130 (Inherited: 0xb8)
struct UFranklinsDemiseConsumedByEntityComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	struct UTimerObject* _consumeTimer; // 0xd0(0x08)
	char pad_D8[0x10]; // 0xd8(0x10)
	struct UStatusEffect* _camperStatus; // 0xe8(0x08)
	struct ADBDPlayer* _previousOwner; // 0xf0(0x08)
	struct ADBDPlayer* _originatingPerkOwner; // 0xf8(0x08)
	struct UChargerComponent* _itemChargerComponent; // 0x100(0x08)
	char pad_108[0x28]; // 0x108(0x28)

	void OnRep_ConsumeTimer(); // Function DeadByDaylight.FranklinsDemiseConsumedByEntityComponent.OnRep_ConsumeTimer // (Final|Native|Private) // @ game+0x552b290
	void OnConsumedByEntity(); // Function DeadByDaylight.FranklinsDemiseConsumedByEntityComponent.OnConsumedByEntity // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void Authority_StartConsume(float Duration, struct ADBDPlayer* previousOwner, struct ADBDPlayer* Slasher); // Function DeadByDaylight.FranklinsDemiseConsumedByEntityComponent.Authority_StartConsume // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5529c60
};

// Class DeadByDaylight.FreeSpotAroundLocationSpawnStrategy
// Size: 0x58 (Inherited: 0x30)
struct UFreeSpotAroundLocationSpawnStrategy : UCommentatorSpawnStrategy {
	float _minSpawnRadius; // 0x30(0x04)
	float _maxSpawnRadius; // 0x34(0x04)
	float _floorDepth; // 0x38(0x04)
	float _collisionSphereRadius; // 0x3c(0x04)
	float _checkForEveryAngleDegrees; // 0x40(0x04)
	float _numberOfPositionToCheckInAnAngle; // 0x44(0x04)
	struct TArray<struct AActor*> _actorsToIgnore; // 0x48(0x10)
};

// Class DeadByDaylight.FrenzyData
// Size: 0x30 (Inherited: 0x30)
struct UFrenzyData : UInterface {
};

// Class DeadByDaylight.FriendManager
// Size: 0x268 (Inherited: 0x30)
struct UFriendManager : UObject {
	char pad_30[0x238]; // 0x30(0x238)
};

// Class DeadByDaylight.FriendSearchPopupScreen
// Size: 0x1a0 (Inherited: 0x140)
struct UFriendSearchPopupScreen : UGenericPopupScreen {
	char pad_140[0x60]; // 0x140(0x60)

	void OnUnblockPlayer(struct FString friendKrakenID); // Function DeadByDaylight.FriendSearchPopupScreen.OnUnblockPlayer // (Final|Native|Public) // @ game+0x552b430
	void OnInviteFriend(struct FString friendKrakenID, bool IsOffNetwork); // Function DeadByDaylight.FriendSearchPopupScreen.OnInviteFriend // (Final|Native|Public) // @ game+0x552b030
	void OnFriendSearchStart(struct FString SearchText); // Function DeadByDaylight.FriendSearchPopupScreen.OnFriendSearchStart // (Final|Native|Public) // @ game+0x552ada0
	void OnAcceptFriendInvite(struct FString friendKrakenID); // Function DeadByDaylight.FriendSearchPopupScreen.OnAcceptFriendInvite // (Final|Native|Public) // @ game+0x552aa80
};

// Class DeadByDaylight.FriendsListScreen
// Size: 0x240 (Inherited: 0x120)
struct UFriendsListScreen : UScreenBase {
	char pad_120[0x120]; // 0x120(0x120)

	void OnViewProfile(struct FString friendId); // Function DeadByDaylight.FriendsListScreen.OnViewProfile // (Final|Native|Private) // @ game+0x552b570
	void OnUnblockPlayer(struct FString playerID); // Function DeadByDaylight.FriendsListScreen.OnUnblockPlayer // (Final|Native|Private) // @ game+0x552b4d0
	void OnShowNameSelected(struct FString playerID); // Function DeadByDaylight.FriendsListScreen.OnShowNameSelected // (Final|Native|Private) // @ game+0x552b390
	void OnSendPartyInvite(struct FString friendId); // Function DeadByDaylight.FriendsListScreen.OnSendPartyInvite // (Final|Native|Private) // @ game+0x552b2f0
	void OnSearchForFriend(); // Function DeadByDaylight.FriendsListScreen.OnSearchForFriend // (Final|Native|Private) // @ game+0x54727d0
	void OnRemoveFriend(struct FString friendId); // Function DeadByDaylight.FriendsListScreen.OnRemoveFriend // (Final|Native|Private) // @ game+0x552b1d0
	void OnPartyJoinRequest(struct FString friendId); // Function DeadByDaylight.FriendsListScreen.OnPartyJoinRequest // (Final|Native|Private) // @ game+0x552b130
	void OnHideNameSelected(struct FString playerID); // Function DeadByDaylight.FriendsListScreen.OnHideNameSelected // (Final|Native|Private) // @ game+0x552af50
	void OnDeclineFriendInvite(struct FString friendId); // Function DeadByDaylight.FriendsListScreen.OnDeclineFriendInvite // (Final|Native|Private) // @ game+0x552ad00
	void OnCancelFriendInvite(struct FString friendId); // Function DeadByDaylight.FriendsListScreen.OnCancelFriendInvite // (Final|Native|Private) // @ game+0x552ac60
	void OnBlockPlayer(struct FString playerID); // Function DeadByDaylight.FriendsListScreen.OnBlockPlayer // (Final|Native|Private) // @ game+0x552abc0
	void OnAcceptFriendInvite(struct FString friendId); // Function DeadByDaylight.FriendsListScreen.OnAcceptFriendInvite // (Final|Native|Private) // @ game+0x552ab20
};

// Class DeadByDaylight.GachaCrateManager
// Size: 0xd8 (Inherited: 0x38)
struct UGachaCrateManager : UGameInstanceSubsystem {
	char pad_38[0xa0]; // 0x38(0xa0)
};

// Class DeadByDaylight.GameAssetLibrary
// Size: 0xc8 (Inherited: 0xb0)
struct UGameAssetLibrary : UAssetLibrary {
	struct UDBDGameInstance* _gameInstance; // 0xb0(0x08)
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class DeadByDaylight.OngoingGameEvent
// Size: 0xa0 (Inherited: 0x30)
struct UOngoingGameEvent : UObject {
	struct FGameEventData _eventData; // 0x30(0x28)
	char pad_58[0x48]; // 0x58(0x48)
};

// Class DeadByDaylight.GameEventDispatcher
// Size: 0xe8 (Inherited: 0x38)
struct UGameEventDispatcher : UGameInstanceSubsystem {
	char pad_38[0x50]; // 0x38(0x50)
	struct TArray<struct UOngoingGameEvent*> _ongoingEvents; // 0x88(0x10)
	char pad_98[0x50]; // 0x98(0x50)

	void UnregisterListener(struct FGameEventDispatcherHandleBP& GameEventDispatcherHandle); // Function DeadByDaylight.GameEventDispatcher.UnregisterListener // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x552bc20
	void RemotelyDispatch(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.GameEventDispatcher.RemotelyDispatch // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x5529ac0
	void RegisterListener(struct FGameEventDispatcherHandleBP& GameEventDispatcherHandle); // Function DeadByDaylight.GameEventDispatcher.RegisterListener // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x552b610
	void LocallyDispatch(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.GameEventDispatcher.LocallyDispatch // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x552a970
	void Authority_RemotelyDispatch(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.GameEventDispatcher.Authority_RemotelyDispatch // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x5529ac0
	void Authority_AccumulateOngoingGameEvent(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData, float OngoingWaitTime); // Function DeadByDaylight.GameEventDispatcher.Authority_AccumulateOngoingGameEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x5529910
};

// Class DeadByDaylight.GameEventListenerCollectionComponent
// Size: 0xd0 (Inherited: 0xb8)
struct UGameEventListenerCollectionComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)

	void UnlistenToGameEvent(struct FGameplayTag EventType); // Function DeadByDaylight.GameEventListenerCollectionComponent.UnlistenToGameEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x552bb80
	void UnlistenToAllGameEvents(); // Function DeadByDaylight.GameEventListenerCollectionComponent.UnlistenToAllGameEvents // (Final|Native|Public|BlueprintCallable) // @ game+0x552bac0
	void ListenToGameEvent(struct FGameplayTag EventType, struct FDelegate delegateToBind); // Function DeadByDaylight.GameEventListenerCollectionComponent.ListenToGameEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x552a860
	void AttachGameEventDispatcher(struct UGameEventDispatcher* GameEventDispatcher); // Function DeadByDaylight.GameEventListenerCollectionComponent.AttachGameEventDispatcher // (Final|Native|Public|BlueprintCallable) // @ game+0x5529880
};

// Class DeadByDaylight.GameEventTracker
// Size: 0x68 (Inherited: 0x30)
struct UGameEventTracker : UObject {
	struct FMulticastInlineDelegate OnGameplayEvent; // 0x30(0x10)
	struct FMulticastInlineDelegate OnGameflowEvent; // 0x40(0x10)
	char pad_50[0x18]; // 0x50(0x18)

	void FireGameflowEvent(enum class EDBDScoreTypes EventType, float Amount, struct ADBDPlayerState* Instigator, struct FName Data); // Function DeadByDaylight.GameEventTracker.FireGameflowEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x552a0d0
	void FireGameEvent(enum class EDBDScoreTypes EventType, float Amount, struct AActor* Instigator, struct AActor* Target); // Function DeadByDaylight.GameEventTracker.FireGameEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x5529f70
};

// Class DeadByDaylight.GameFlowContextSystem
// Size: 0x118 (Inherited: 0x38)
struct UGameFlowContextSystem : UGameInstanceSubsystem {
	char pad_38[0xc8]; // 0x38(0xc8)
	struct URootMovie* m_RootMovie; // 0x100(0x08)
	char pad_108[0x10]; // 0x108(0x10)
};

// Class DeadByDaylight.GameplayModifierContainerDataAsset
// Size: 0x88 (Inherited: 0x48)
struct UGameplayModifierContainerDataAsset : UDBDPrimaryDataAsset {
	struct TSoftClassPtr<UObject> ModifierContainerComponent; // 0x48(0x30)
	struct TArray<struct TSoftObjectPtr<UGameplayModifierContainerDataAsset>> RequiredModifierContainers; // 0x78(0x10)
};

// Class DeadByDaylight.GameplayModifierFunctionLibrary
// Size: 0x30 (Inherited: 0x30)
struct UGameplayModifierFunctionLibrary : UBlueprintFunctionLibrary {

	void Authority_SetPlayerGameplayModifier(struct ADBDPlayer* TargetPlayer, struct FGameplayTag modifierType, float ModifierValue); // Function DeadByDaylight.GameplayModifierFunctionLibrary.Authority_SetPlayerGameplayModifier // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // @ game+0x552f5b0
	void Authority_SetPlayerGameplayFlag(struct ADBDPlayer* TargetPlayer, struct FGameplayTag flagType); // Function DeadByDaylight.GameplayModifierFunctionLibrary.Authority_SetPlayerGameplayFlag // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // @ game+0x552f4d0
	void Authority_ClearPlayerGameplayModifier(struct ADBDPlayer* TargetPlayer, struct FGameplayTag modifierType); // Function DeadByDaylight.GameplayModifierFunctionLibrary.Authority_ClearPlayerGameplayModifier // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // @ game+0x552edd0
	void Authority_ClearPlayerGameplayFlag(struct ADBDPlayer* TargetPlayer, struct FGameplayTag flagType); // Function DeadByDaylight.GameplayModifierFunctionLibrary.Authority_ClearPlayerGameplayFlag // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // @ game+0x552ecf0
	void Authority_ClearAllPlayerGameplayModifiers(struct ADBDPlayer* TargetPlayer); // Function DeadByDaylight.GameplayModifierFunctionLibrary.Authority_ClearAllPlayerGameplayModifiers // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // @ game+0x552ec70
	void Authority_ClearAllPlayerGameplayFlags(struct ADBDPlayer* TargetPlayer); // Function DeadByDaylight.GameplayModifierFunctionLibrary.Authority_ClearAllPlayerGameplayFlags // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // @ game+0x552ebf0
};

// Class DeadByDaylight.GameplayModifierFunctionLibraryStatusEffect
// Size: 0x350 (Inherited: 0x350)
struct UGameplayModifierFunctionLibraryStatusEffect : UStatusEffect {
};

// Class DeadByDaylight.GameplayNotificationManager
// Size: 0xe0 (Inherited: 0xb8)
struct UGameplayNotificationManager : UActorComponent {
	char pad_B8[0x28]; // 0xb8(0x28)

	void Multicast_FireGameplayNotification(struct UGameplayModifierContainer* modifierContainer, bool addToHistory); // Function DeadByDaylight.GameplayNotificationManager.Multicast_FireGameplayNotification // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5530070
	void FireGameplayNotification(struct FGameplayNotificationData& notificationData, bool addToHistory); // Function DeadByDaylight.GameplayNotificationManager.FireGameplayNotification // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x552f980
};

// Class DeadByDaylight.GameplayNotificationUtilities
// Size: 0x30 (Inherited: 0x30)
struct UGameplayNotificationUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.GameplaySpawnerComponent
// Size: 0xe8 (Inherited: 0xb8)
struct UGameplaySpawnerComponent : UActorComponent {
	struct TArray<struct UActorComponent*> _spawnedComponents; // 0xb8(0x10)
	int32_t _numComponentsSpawned; // 0xc8(0x04)
	char pad_CC[0x1c]; // 0xcc(0x1c)

	void OnRep_SpawnedComponents(); // Function DeadByDaylight.GameplaySpawnerComponent.OnRep_SpawnedComponents // (Final|Native|Private) // @ game+0x55305f0
};

// Class DeadByDaylight.GateFactory
// Size: 0x230 (Inherited: 0x230)
struct AGateFactory : AActor {

	struct AGate* GetGate(enum class EGateType GateType); // Function DeadByDaylight.GateFactory.GetGate // (Final|Native|Public|BlueprintCallable) // @ game+0x552fae0
};

// Class DeadByDaylight.CoopRepairTracker
// Size: 0x40 (Inherited: 0x30)
struct UCoopRepairTracker : UObject {
	struct TArray<struct ADBDPlayer*> _coopRepairerHistory; // 0x30(0x10)

	void SetHasEverCoopRepaired(struct ADBDPlayer* Player); // Function DeadByDaylight.CoopRepairTracker.SetHasEverCoopRepaired // (Final|Native|Public|BlueprintCallable) // @ game+0x55307e0
	bool HasEverCoopRepaired(struct ADBDPlayer* Player); // Function DeadByDaylight.CoopRepairTracker.HasEverCoopRepaired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552fdb0
};

// Class DeadByDaylight.Generator
// Size: 0x630 (Inherited: 0x338)
struct AGenerator : AInteractable {
	char pad_338[0x10]; // 0x338(0x10)
	bool activated; // 0x348(0x01)
	bool WasASMCachePreWarmTriggered; // 0x349(0x01)
	bool IsPlaySkillcheckAesthetic; // 0x34a(0x01)
	char pad_34B[0x5]; // 0x34b(0x05)
	struct UCurveLinearColor* KillerOutlineFadeCurve; // 0x350(0x08)
	float NativePercentComplete; // 0x358(0x04)
	char pad_35C[0x4]; // 0x35c(0x04)
	struct FMulticastInlineDelegate OnGeneratorRepaired; // 0x360(0x10)
	struct FMulticastInlineDelegate OnGeneratorRepairedBySurvivor; // 0x370(0x10)
	struct FMulticastInlineDelegate OnIsDamagedChanged; // 0x380(0x10)
	char pad_390[0x30]; // 0x390(0x30)
	bool fireLevelScoreEventOnFix; // 0x3c0(0x01)
	char pad_3C1[0x7]; // 0x3c1(0x07)
	struct TMap<struct FName, struct FTransform> _activatedTopLightsTransformMap; // 0x3c8(0x50)
	struct UAIPerceptionStimuliSourceComponent* _perceptionStimuliComponent; // 0x418(0x08)
	char pad_420[0x24]; // 0x420(0x24)
	struct FGameplayTag _repairSemanticTag; // 0x444(0x0c)
	struct FDamageData _damageData; // 0x450(0x20)
	char pad_470[0x38]; // 0x470(0x38)
	bool _isBlocked; // 0x4a8(0x01)
	bool _isBlockedFromCharging; // 0x4a9(0x01)
	char pad_4AA[0x6]; // 0x4aa(0x06)
	struct TSet<struct UObject*> _blockingSources; // 0x4b0(0x50)
	char pad_500[0x30]; // 0x500(0x30)
	struct UChargeableComponent* _generatorCharge; // 0x530(0x08)
	struct TArray<struct FPlayerFloatTuple> _playerStartTimes; // 0x538(0x10)
	char pad_548[0x18]; // 0x548(0x18)
	bool _isAutoCompleted; // 0x560(0x01)
	bool _isOvercharged; // 0x561(0x01)
	char pad_562[0x6]; // 0x562(0x06)
	struct UCoopRepairTracker* _coopRepairTracker; // 0x568(0x08)
	char pad_570[0x14]; // 0x570(0x14)
	float _VFX_LightDistanceDefault; // 0x584(0x04)
	char pad_588[0x60]; // 0x588(0x60)
	struct TArray<struct UInteractionDefinition*> _damagingInteractions; // 0x5e8(0x10)
	struct FDBDTunableRowHandle _intenseImmediateDamageThreshold; // 0x5f8(0x28)
	struct TArray<struct ADBDPlayer*> _authority_cachedInteractingPlayersOnCompletion; // 0x620(0x10)

	void VFXClampTopActivationSingleLight(float distance, struct FName ParameterName); // Function DeadByDaylight.Generator.VFXClampTopActivationSingleLight // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void TriggerSkillCheckFailureLoudNoise(struct ADBDPlayer* instigatingPlayer); // Function DeadByDaylight.Generator.TriggerSkillCheckFailureLoudNoise // (Final|Native|Public|BlueprintCallable) // @ game+0x5530a50
	void TriggerSkillCheck(struct ADBDPlayer* instigatingPlayer); // Function DeadByDaylight.Generator.TriggerSkillCheck // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SpawnBloodEffectToSocket(struct FName Name); // Function DeadByDaylight.Generator.SpawnBloodEffectToSocket // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	bool ShouldDoOverchargeSkillcheck(); // Function DeadByDaylight.Generator.ShouldDoOverchargeSkillcheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5530a20
	void SetIsOvercharged(bool overcharged); // Function DeadByDaylight.Generator.SetIsOvercharged // (Final|Native|Public|BlueprintCallable) // @ game+0x5530990
	void SetIsBlockedFromCharging(bool isBlockedFromCharging); // Function DeadByDaylight.Generator.SetIsBlockedFromCharging // (Final|Native|Public|BlueprintCallable) // @ game+0x5530900
	void SetIsAutoCompleted(bool isAutoCompleted); // Function DeadByDaylight.Generator.SetIsAutoCompleted // (Final|Native|Public|BlueprintCallable) // @ game+0x5530870
	void SetFireLevelScoreEventOnFix(bool fireLevelScoreEventOnFix); // Function DeadByDaylight.Generator.SetFireLevelScoreEventOnFix // (Final|Native|Public|BlueprintCallable) // @ game+0x5530750
	void SetComplete(bool complete); // Function DeadByDaylight.Generator.SetComplete // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void ResetGenerator(); // Function DeadByDaylight.Generator.ResetGenerator // (Final|Native|Public|BlueprintCallable) // @ game+0x5530730
	void RemovePlayerStartTime(struct ADBDPlayer* Player); // Function DeadByDaylight.Generator.RemovePlayerStartTime // (Final|Native|Protected|BlueprintCallable) // @ game+0x55306a0
	int32_t PostAkEvent(struct UAkAudioEvent* AkEvent, int32_t CallbackMask, struct FDelegate& PostEventCallback, struct TArray<struct FAkExternalSourceInfo>& ExternalSources, struct FString in_EventName); // Function DeadByDaylight.Generator.PostAkEvent // (BlueprintCosmetic|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void PlayFailSparksFX(struct ADBDPlayer* interactingPlayer, bool Explode); // Function DeadByDaylight.Generator.PlayFailSparksFX // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnUpdateChargeProgress(float newPercentComplete); // Function DeadByDaylight.Generator.OnUpdateChargeProgress // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5530610
	void OnResetGenerator(); // Function DeadByDaylight.Generator.OnResetGenerator // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnRepairedBP(bool showGeneratorCloneLoudNoise, bool isAutoCompleted); // Function DeadByDaylight.Generator.OnRepairedBP // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnRep_IsBlocked(); // Function DeadByDaylight.Generator.OnRep_IsBlocked // (Final|Native|Private) // @ game+0x55305d0
	void OnRep_DamageData(); // Function DeadByDaylight.Generator.OnRep_DamageData // (Final|Native|Private) // @ game+0x55305b0
	void OnPreWarmASMCache(); // Function DeadByDaylight.Generator.OnPreWarmASMCache // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnEscapeDoorActivated(); // Function DeadByDaylight.Generator.OnEscapeDoorActivated // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnDamageCosmetic(bool intense); // Function DeadByDaylight.Generator.OnDamageCosmetic // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnChargeChanged(struct UChargeableComponent* ChargeableComponent, float percent); // Function DeadByDaylight.Generator.OnChargeChanged // (Final|Native|Private) // @ game+0x55304e0
	void OnChargeApplied(float individualChargeAmount, float totalChargeAmount, struct AActor* chargeInstigator, bool wasCoop, float DeltaTime); // Function DeadByDaylight.Generator.OnChargeApplied // (Final|Native|Private) // @ game+0x5530330
	void OnCaptureProbeSecondState(); // Function DeadByDaylight.Generator.OnCaptureProbeSecondState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnBlockingStatusChanged(bool IsBlocked); // Function DeadByDaylight.Generator.OnBlockingStatusChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void NotifyRepairStart(struct ADBDPlayer* Player); // Function DeadByDaylight.Generator.NotifyRepairStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void NotifyRepairFinish(struct ADBDPlayer* Player, struct UInteractor* Interactor); // Function DeadByDaylight.Generator.NotifyRepairFinish // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Multicast_PlayFailSparksFX(struct ADBDPlayer* Player, bool Explode); // Function DeadByDaylight.Generator.Multicast_PlayFailSparksFX // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x5530260
	void Multicast_OnRepaired(bool showGeneratorCloneLoudNoise, bool isAutoCompleted, int32_t updatedRemainingGeneratorCount); // Function DeadByDaylight.Generator.Multicast_OnRepaired // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5530140
	void Multicast_DamageCosmetic(bool intense, struct TArray<struct ADBDPlayer*> repairers); // Function DeadByDaylight.Generator.Multicast_DamageCosmetic // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x552ff70
	bool IsRepaired(); // Function DeadByDaylight.Generator.IsRepaired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552ff40
	bool IsRegressing(); // Function DeadByDaylight.Generator.IsRegressing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552ff10
	bool IsIntenseDamage(); // Function DeadByDaylight.Generator.IsIntenseDamage // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x552fee0
	bool IsBlocked(); // Function DeadByDaylight.Generator.IsBlocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552feb0
	bool IsBeingRepaired(); // Function DeadByDaylight.Generator.IsBeingRepaired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552fe80
	bool IsBeingDamagedByKiller(); // Function DeadByDaylight.Generator.IsBeingDamagedByKiller // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552fe50
	struct USkeletalMeshComponent* GetSkeletalMesh(); // Function DeadByDaylight.Generator.GetSkeletalMesh // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	float GetRepairPercentComplete(); // Function DeadByDaylight.Generator.GetRepairPercentComplete // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	struct TArray<struct ADBDPlayer*> GetRepairers(); // Function DeadByDaylight.Generator.GetRepairers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552fd30
	struct TArray<struct FPlayerFloatTuple> GetPlayerStartTimes(); // Function DeadByDaylight.Generator.GetPlayerStartTimes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552fca0
	float GetPlayerStartTime(struct ADBDPlayer* Player); // Function DeadByDaylight.Generator.GetPlayerStartTime // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x552fc00
	bool GetIsBlockedFromCharging(); // Function DeadByDaylight.Generator.GetIsBlockedFromCharging // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x552fbd0
	bool GetIsAutoCompleted(); // Function DeadByDaylight.Generator.GetIsAutoCompleted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552fba0
	struct UChargeableComponent* GetGeneratorChargeComponent(); // Function DeadByDaylight.Generator.GetGeneratorChargeComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x552fb70
	float GetChargePercentComplete(); // Function DeadByDaylight.Generator.GetChargePercentComplete // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	void DisableInaccessibleInteractors(); // Function DeadByDaylight.Generator.DisableInaccessibleInteractors // (Final|Native|Private) // @ game+0x552f960
	void Cosmetic_MakeSurvivorScream(struct ADBDPlayer* screamingSurvivor); // Function DeadByDaylight.Generator.Cosmetic_MakeSurvivorScream // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	bool CanSurvivorReactToBlockingEntity(struct ACamperPlayer* Survivor); // Function DeadByDaylight.Generator.CanSurvivorReactToBlockingEntity // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x552f8c0
	void BroadcastIsDamagedChangedEvent(struct ADBDPlayer* Player); // Function DeadByDaylight.Generator.BroadcastIsDamagedChangedEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x552f830
	void BroadcastGeneratorRepairedBySurvivor(struct ADBDPlayer* repairingSurvivor); // Function DeadByDaylight.Generator.BroadcastGeneratorRepairedBySurvivor // (Final|Native|Protected|BlueprintCallable|Const) // @ game+0x552f7a0
	void Authority_SetRepaired(bool showGeneratorCloneLoudNoise, bool isAutoCompleted); // Function DeadByDaylight.Generator.Authority_SetRepaired // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x552f6d0
	void Authority_RepairDamage(struct ADBDPlayer* repairedBy); // Function DeadByDaylight.Generator.Authority_RepairDamage // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x552f440
	void Authority_RemoveBlockingSource(struct UObject* Source); // Function DeadByDaylight.Generator.Authority_RemoveBlockingSource // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x552f3b0
	void Authority_OnChargeChanged(struct UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete); // Function DeadByDaylight.Generator.Authority_OnChargeChanged // (Final|Native|Private) // @ game+0x552f2a0
	void Authority_OnChargeApplied(float individualChargeAmount, float totalChargeAmount, struct AActor* chargeInstigator, bool wasCoop, float DeltaTime); // Function DeadByDaylight.Generator.Authority_OnChargeApplied // (Final|Native|Private) // @ game+0x552f0f0
	bool Authority_HasRepairedDamage(struct ADBDPlayer* Player); // Function DeadByDaylight.Generator.Authority_HasRepairedDamage // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552f050
	struct TArray<struct ADBDPlayer*> Authority_GetRepairingCampers(); // Function DeadByDaylight.Generator.Authority_GetRepairingCampers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552efd0
	void Authority_Damage(struct ADBDPlayer* damagedBy, float immediateRegressionPercent, bool ignoreBlocked); // Function DeadByDaylight.Generator.Authority_Damage // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x552eeb0
	void Authority_CancelRepairInteractions(); // Function DeadByDaylight.Generator.Authority_CancelRepairInteractions // (Final|Native|Public|BlueprintCallable) // @ game+0x552ebd0
	void Authority_AddTimedBlockingSource(struct UObject* Source, float blockingTime); // Function DeadByDaylight.Generator.Authority_AddTimedBlockingSource // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x552eb00
	void Authority_AddBlockingSource(struct UObject* Source); // Function DeadByDaylight.Generator.Authority_AddBlockingSource // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x552ea70
	void AddPlayerStartTime(struct ADBDPlayer* Player, float starttime); // Function DeadByDaylight.Generator.AddPlayerStartTime // (Final|Native|Protected|BlueprintCallable) // @ game+0x552e9a0
	void AddDamagingInteraction(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.Generator.AddDamagingInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x552e910
	void ActivateTeleportGeneratorIndicator(bool Activate); // Function DeadByDaylight.Generator.ActivateTeleportGeneratorIndicator // (Event|Public|BlueprintCallable|BlueprintEvent|Const) // @ game+0x5e02c90
};

// Class DeadByDaylight.DBDGeneratorDrivenReflectionCaptureActor
// Size: 0x270 (Inherited: 0x258)
struct ADBDGeneratorDrivenReflectionCaptureActor : AGeneratorDrivenActor {
	struct UGenyReflectionCaptureComponent* genyReflectionCapture; // 0x258(0x08)
	char pad_260[0x10]; // 0x260(0x10)

	void SwapToSecondState(); // Function DeadByDaylight.DBDGeneratorDrivenReflectionCaptureActor.SwapToSecondState // (Final|Native|Public|BlueprintCallable) // @ game+0x5535f10
};

// Class DeadByDaylight.GeneratorEntity
// Size: 0x260 (Inherited: 0x230)
struct AGeneratorEntity : AActor {
	struct AGenerator* _associatedGenerator; // 0x230(0x08)
	struct UMontagePlayer* _montagePlayer; // 0x238(0x08)
	char pad_240[0x20]; // 0x240(0x20)

	void SetSkeletalMeshActive(bool Active); // Function DeadByDaylight.GeneratorEntity.SetSkeletalMeshActive // (Final|Native|Public|BlueprintCallable) // @ game+0x5535db0
	void SetAssociatedGenerator(struct AGenerator* Generator); // Function DeadByDaylight.GeneratorEntity.SetAssociatedGenerator // (Final|Native|Public|BlueprintCallable) // @ game+0x5535d20
	void PlayMontage(struct FAnimationMontageDescriptor animMontageID, float PlayRate, bool isFollower); // Function DeadByDaylight.GeneratorEntity.PlayMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x5535ae0
	struct UMontagePlayer* GetMontagePlayer(); // Function DeadByDaylight.GeneratorEntity.GetMontagePlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5534c40
};

// Class DeadByDaylight.GeneratorEntityAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UGeneratorEntityAnimInstance : UAnimInstance {
	bool IsCorrupted; // 0x2c0(0x01)
	bool IsCorrupted_End; // 0x2c1(0x01)
	bool IsUncorrupted; // 0x2c2(0x01)
	bool IsUncorrupted_End; // 0x2c3(0x01)
	char pad_2C4[0xc]; // 0x2c4(0x0c)
};

// Class DeadByDaylight.GeneratorIndicatorWidget
// Size: 0x380 (Inherited: 0x380)
struct UGeneratorIndicatorWidget : UBaseIndicatorWidget {
};

// Class DeadByDaylight.GeneratorOutlineUpdateStrategy
// Size: 0x180 (Inherited: 0x138)
struct UGeneratorOutlineUpdateStrategy : USourceBasedOutlineUpdateStrategy {
	struct FLinearColor _unrepairedAuraColor; // 0x138(0x10)
	struct FLinearColor _fullyRepairedAuraColor; // 0x148(0x10)
	char pad_158[0x28]; // 0x158(0x28)

	struct FLinearColor GetYellowColor(); // Function DeadByDaylight.GeneratorOutlineUpdateStrategy.GetYellowColor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x5534cf0
	struct FLinearColor GetWhiteColor(); // Function DeadByDaylight.GeneratorOutlineUpdateStrategy.GetWhiteColor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x5534cd0
};

// Class DeadByDaylight.GeneratorRepairWithGenericPerksEscapeAchievement
// Size: 0xe0 (Inherited: 0xb8)
struct UGeneratorRepairWithGenericPerksEscapeAchievement : UActorComponent {
	char pad_B8[0x28]; // 0xb8(0x28)
};

// Class DeadByDaylight.SurvivorTrapPerk
// Size: 0x448 (Inherited: 0x3c8)
struct USurvivorTrapPerk : UPerk {
	enum class ETrapType _trapType; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)
	struct AInteractable* _trappableInteractableType; // 0x3d0(0x08)
	float _progressPercentRequirementLevels[0x3]; // 0x3d8(0x0c)
	float _trapDurationLevels[0x3]; // 0x3e4(0x0c)
	struct AInteractable* _trappedInteractable; // 0x3f0(0x08)
	struct UTrapInstallerComponent* _trapInstallerComponentClass; // 0x3f8(0x08)
	char pad_400[0x38]; // 0x400(0x38)
	float _progressPercent; // 0x438(0x04)
	bool _isTrapReady; // 0x43c(0x01)
	char pad_43D[0xb]; // 0x43d(0x0b)

	void OnRep_TrappedInteractable(struct AInteractable* oldInteractable); // Function DeadByDaylight.SurvivorTrapPerk.OnRep_TrappedInteractable // (Final|Native|Private) // @ game+0x55c3f40
	float GetTrapDuration(); // Function DeadByDaylight.SurvivorTrapPerk.GetTrapDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x4cdd660
	float GetRequiredRepairProgressForSettingTrap(); // Function DeadByDaylight.SurvivorTrapPerk.GetRequiredRepairProgressForSettingTrap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x4cf40e0
	float GetRepairProgressPercent(); // Function DeadByDaylight.SurvivorTrapPerk.GetRepairProgressPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c3c70
	struct UPerkTrappableComponent* GetPerkTrappableComponent(struct AInteractable* Interactable); // Function DeadByDaylight.SurvivorTrapPerk.GetPerkTrappableComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c3bd0
	void Authority_OnTrapTimerDone(); // Function DeadByDaylight.SurvivorTrapPerk.Authority_OnTrapTimerDone // (Final|Native|Private) // @ game+0x55c3bb0
	void Authority_OnTrapInteractionEvent(struct FGameplayTag GameEvent, struct FGameEventData& GameEventData); // Function DeadByDaylight.SurvivorTrapPerk.Authority_OnTrapInteractionEvent // (Final|Native|Private|HasOutParms) // @ game+0x55c3aa0
	void Authority_OnSurvivorRemoved(struct ACamperPlayer* Survivor); // Function DeadByDaylight.SurvivorTrapPerk.Authority_OnSurvivorRemoved // (Final|Native|Private) // @ game+0x55c3a10
	void Authority_OnRepairProgress(float individualChargeAmount, float totalChargeAmount, struct AActor* chargeInstigator, bool wasCoop, float DeltaTime); // Function DeadByDaylight.SurvivorTrapPerk.Authority_OnRepairProgress // (Final|Native|Private) // @ game+0x55c3860
	void Authority_OnKillerInteracted(struct FGameplayTag GameEventTag, struct FGameEventData& GameEventData); // Function DeadByDaylight.SurvivorTrapPerk.Authority_OnKillerInteracted // (Native|Protected|HasOutParms) // @ game+0x55c3750
};

// Class DeadByDaylight.GeneratorTrapPerk
// Size: 0x448 (Inherited: 0x448)
struct UGeneratorTrapPerk : USurvivorTrapPerk {

	float GetGeneratorTrapDuration(); // Function DeadByDaylight.GeneratorTrapPerk.GetGeneratorTrapDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x4cdd660
	void Cosmetic_TrapDestroyed(struct AGenerator* Generator, enum class ETrapRemovedReason Reason); // Function DeadByDaylight.GeneratorTrapPerk.Cosmetic_TrapDestroyed // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void Cosmetic_TrapActivated(struct AGenerator* Generator); // Function DeadByDaylight.GeneratorTrapPerk.Cosmetic_TrapActivated // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void Client_OnTrapDestroyed(struct AGenerator* Generator, enum class ETrapRemovedReason Reason); // Function DeadByDaylight.GeneratorTrapPerk.Client_OnTrapDestroyed // (Final|Net|Native|Event|Private|NetClient) // @ game+0x5534b70
	void Client_OnTrapActivated(struct AGenerator* Generator); // Function DeadByDaylight.GeneratorTrapPerk.Client_OnTrapActivated // (Final|Net|Native|Event|Private|NetClient) // @ game+0x5534ae0
	void Authority_OnGeneratorCompleted(bool isAutoCompleted); // Function DeadByDaylight.GeneratorTrapPerk.Authority_OnGeneratorCompleted // (Final|Native|Private) // @ game+0x55347a0
	void Authority_OnExitGatesPowered(struct FGameplayTag GameEventTag, struct FGameEventData& GameEventData); // Function DeadByDaylight.GeneratorTrapPerk.Authority_OnExitGatesPowered // (Final|Native|Private|HasOutParms) // @ game+0x5534690
};

// Class DeadByDaylight.GenyReflectionCaptureComponent
// Size: 0x230 (Inherited: 0x220)
struct UGenyReflectionCaptureComponent : USceneComponent {
	struct TArray<struct FReflectionCaptureTwoStates> generatorDrivenReflectionCapture; // 0x218(0x10)
};

// Class DeadByDaylight.GestureInteractionDefinition
// Size: 0x640 (Inherited: 0x630)
struct UGestureInteractionDefinition : UInteractionDefinition {
	enum class EGestureID _gestureID; // 0x630(0x01)
	char pad_631[0xf]; // 0x631(0x0f)
};

// Class DeadByDaylight.GhostStalkedUIData
// Size: 0x30 (Inherited: 0x30)
struct UGhostStalkedUIData : UInterface {
};

// Class DeadByDaylight.GhostStealthUIData
// Size: 0x30 (Inherited: 0x30)
struct UGhostStealthUIData : UInterface {
};

// Class DeadByDaylight.GiftManager
// Size: 0x70 (Inherited: 0x38)
struct UGiftManager : UGameInstanceSubsystem {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class DeadByDaylight.GlassStaticMesh
// Size: 0x5a0 (Inherited: 0x550)
struct UGlassStaticMesh : UStaticMeshComponent {
	char pad_550[0x40]; // 0x550(0x40)
	struct FVector defaultGlassNormalVector; // 0x590(0x0c)
	char pad_59C[0x4]; // 0x59c(0x04)
};

// Class DeadByDaylight.GlassCollectionSubsystem
// Size: 0x48 (Inherited: 0x38)
struct UGlassCollectionSubsystem : UGameInstanceSubsystem {
	struct TArray<struct UGlassStaticMesh*> _glassCollection; // 0x38(0x10)
};

// Class DeadByDaylight.PS4GRDKBaseProfileDAL
// Size: 0x88 (Inherited: 0x88)
struct UPS4GRDKBaseProfileDAL : UPlayerProfileDAL {
};

// Class DeadByDaylight.GRDKProfileDAL
// Size: 0x88 (Inherited: 0x88)
struct UGRDKProfileDAL : UPS4GRDKBaseProfileDAL {
};

// Class DeadByDaylight.HalloweenEventComponent
// Size: 0x140 (Inherited: 0xb8)
struct UHalloweenEventComponent : UActorComponent {
	struct USectionnedChargeableComponent* _toxinVialComponent; // 0xb8(0x08)
	char pad_C0[0x80]; // 0xc0(0x80)

	void Server_SpawnVial(float initialCharge); // Function DeadByDaylight.HalloweenEventComponent.Server_SpawnVial // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x5535c60
	void OnRep_Vial(); // Function DeadByDaylight.HalloweenEventComponent.OnRep_Vial // (Final|Native|Private) // @ game+0x5535ac0
	void OnFinishedPlaying(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.HalloweenEventComponent.OnFinishedPlaying // (Final|Native|Private|HasOutParms) // @ game+0x5535130
	bool IsVialFull(); // Function DeadByDaylight.HalloweenEventComponent.IsVialFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5534e80
	struct USectionnedChargeableComponent* GetVial(); // Function DeadByDaylight.HalloweenEventComponent.GetVial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5534ca0
};

// Class DeadByDaylight.HangDiagnosticSubsystem
// Size: 0x78 (Inherited: 0x38)
struct UHangDiagnosticSubsystem : UGameInstanceSubsystem {
	char pad_38[0x40]; // 0x38(0x40)
};

// Class DeadByDaylight.HasTokenOrActivationTimerElapsedIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UHasTokenOrActivationTimerElapsedIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.HasTokenOrCooldownTimerRemainingActivationElapsedIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UHasTokenOrCooldownTimerRemainingActivationElapsedIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.HasTokenPerkIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UHasTokenPerkIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.Hatch
// Size: 0x3f0 (Inherited: 0x338)
struct AHatch : AInteractable {
	char pad_338[0x50]; // 0x338(0x50)
	enum class EHatchState _hatchState; // 0x388(0x01)
	char pad_389[0x1]; // 0x389(0x01)
	bool _isEndGameOver; // 0x38a(0x01)
	bool _isForceOpen; // 0x38b(0x01)
	bool _attemptToCloseHatchOnNextEscape; // 0x38c(0x01)
	char pad_38D[0xb]; // 0x38d(0x0b)
	struct UPrimitiveComponent* _baseCollision; // 0x398(0x08)
	char pad_3A0[0x18]; // 0x3a0(0x18)
	struct FDBDTunableRowHandle _hatchOpenDuration; // 0x3b8(0x28)
	char pad_3E0[0x10]; // 0x3e0(0x10)

	void OnRep_HatchState(enum class EHatchState oldState); // Function DeadByDaylight.Hatch.OnRep_HatchState // (Final|Native|Private) // @ game+0x5535a40
	void OnHatchStateUnhidden(); // Function DeadByDaylight.Hatch.OnHatchStateUnhidden // (Final|Native|Private) // @ game+0x5535a20
	void OnHatchStateModified(enum class EHatchState oldState, enum class EHatchState NewState); // Function DeadByDaylight.Hatch.OnHatchStateModified // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	bool IsOpen(); // Function DeadByDaylight.Hatch.IsOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5534db0
	enum class EHatchState GetHatchState(); // Function DeadByDaylight.Hatch.GetHatchState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551e150
	struct USceneComponent* GetHatchCenter(); // Function DeadByDaylight.Hatch.GetHatchCenter // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	struct USceneComponent* GetEscapeFocalPoint(); // Function DeadByDaylight.Hatch.GetEscapeFocalPoint // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	struct UAnimationMontageSlave* GetAnimationMontageSlave(); // Function DeadByDaylight.Hatch.GetAnimationMontageSlave // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	void FXOpenHatch(); // Function DeadByDaylight.Hatch.FXOpenHatch // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void FXEndSmoke(); // Function DeadByDaylight.Hatch.FXEndSmoke // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void FXCloseHatch(); // Function DeadByDaylight.Hatch.FXCloseHatch // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Authority_SetIsForceOpen(bool isForcedOpen); // Function DeadByDaylight.Hatch.Authority_SetIsForceOpen // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5534a50
	void Authority_SetHatchState(enum class EHatchState NewState); // Function DeadByDaylight.Hatch.Authority_SetHatchState // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55349d0
	void Authority_ResetTimer(float Duration); // Function DeadByDaylight.Hatch.Authority_ResetTimer // (Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable) // @ game+0x5534950
	void Authority_OnSurvivorsLeftChanged(int32_t survivorRemaining); // Function DeadByDaylight.Hatch.Authority_OnSurvivorsLeftChanged // (Final|Native|Private) // @ game+0x55348c0
	void Authority_OnHatchVisibilityChanged(bool IsVisible); // Function DeadByDaylight.Hatch.Authority_OnHatchVisibilityChanged // (Final|Native|Private) // @ game+0x5534830
	void Authority_OnEndGameOver(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.Hatch.Authority_OnEndGameOver // (Final|Native|Private|HasOutParms) // @ game+0x5534580
	void Authority_OnCloseTimerComplete(); // Function DeadByDaylight.Hatch.Authority_OnCloseTimerComplete // (Final|Native|Private) // @ game+0x5534560
	void Authority_CheckedOpenHatch(); // Function DeadByDaylight.Hatch.Authority_CheckedOpenHatch // (Final|Native|Private) // @ game+0x5534540
	void Authority_CheckedOpenForceClosedHatch(); // Function DeadByDaylight.Hatch.Authority_CheckedOpenForceClosedHatch // (Final|Native|Private) // @ game+0x5534520
	void Authority_CheckedCloseHatch(); // Function DeadByDaylight.Hatch.Authority_CheckedCloseHatch // (Final|Native|Private) // @ game+0x5534500
	void Authority_CheckedChangeActiveState(); // Function DeadByDaylight.Hatch.Authority_CheckedChangeActiveState // (Final|Native|Private) // @ game+0x55344e0
};

// Class DeadByDaylight.HatchOutlineUpdateStrategy
// Size: 0xe0 (Inherited: 0xe0)
struct UHatchOutlineUpdateStrategy : UDefaultOutlineUpdateStrategy {
};

// Class DeadByDaylight.HeldInputInteractionStarter
// Size: 0x1a8 (Inherited: 0xb8)
struct UHeldInputInteractionStarter : UActorComponent {
	char pad_B8[0xf0]; // 0xb8(0xf0)
};

// Class DeadByDaylight.PlayerOverlapHISMComponent
// Size: 0x720 (Inherited: 0x710)
struct UPlayerOverlapHISMComponent : UHISMMaterialHelperComponent {
	int32_t _playerInfluenceRadius; // 0x708(0x04)
	struct TArray<struct UMaterialInterface*> _playerOverlapOverrides; // 0x710(0x10)
};

// Class DeadByDaylight.HitValidationConfigsComponent
// Size: 0xf8 (Inherited: 0xb8)
struct UHitValidationConfigsComponent : UActorComponent {
	char pad_B8[0x40]; // 0xb8(0x40)

	void DBD_PrintInGameHitValidationConfigs(); // Function DeadByDaylight.HitValidationConfigsComponent.DBD_PrintInGameHitValidationConfigs // (Final|Exec|Native|Public) // @ game+0x4032ad0
};

// Class DeadByDaylight.HitValidatorComponent
// Size: 0xe8 (Inherited: 0xb8)
struct UHitValidatorComponent : UActorComponent {
	char pad_B8[0x28]; // 0xb8(0x28)
	struct TWeakObjectPtr<struct UHitValidationConfigsComponent> _hitValidationConfigComponent; // 0xe0(0x08)

	void Multicast_DrawDebugHit(struct FHitValidationReport report); // Function DeadByDaylight.HitValidatorComponent.Multicast_DrawDebugHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x553b5b0
};

// Class DeadByDaylight.HitValidatorConfigurator
// Size: 0xd8 (Inherited: 0xc0)
struct UHitValidatorConfigurator : UBaseHitValidationConfigurator {
	char pad_C0[0x18]; // 0xc0(0x18)
};

// Class DeadByDaylight.HookableComponent
// Size: 0x158 (Inherited: 0xb8)
struct UHookableComponent : UActorComponent {
	char pad_B8[0xa0]; // 0xb8(0xa0)

	void Multicast_SetDrainTimerPercentLeft(float percentTime); // Function DeadByDaylight.HookableComponent.Multicast_SetDrainTimerPercentLeft // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x553b7f0
	void Multicast_DebugSetHookDrainStage(int32_t DrainStage); // Function DeadByDaylight.HookableComponent.Multicast_DebugSetHookDrainStage // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x553b520
	int32_t GetHookedCount(); // Function DeadByDaylight.HookableComponent.GetHookedCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553aab0
	float GetDrainTimerPercentLeft(); // Function DeadByDaylight.HookableComponent.GetDrainTimerPercentLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553a910
	void Authority_SetDrainTimerPercentLeft(float percentTime); // Function DeadByDaylight.HookableComponent.Authority_SetDrainTimerPercentLeft // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x553a810
	void Authority_DebugSetHookEscapeAutoSuccess(bool success); // Function DeadByDaylight.HookableComponent.Authority_DebugSetHookEscapeAutoSuccess // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x46a2400
	void Authority_DebugSetHookEscapeAutoFail(bool fail); // Function DeadByDaylight.HookableComponent.Authority_DebugSetHookEscapeAutoFail // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x46a2400
	void Authority_DebugSetHookDrainStage(int32_t DrainStage); // Function DeadByDaylight.HookableComponent.Authority_DebugSetHookDrainStage // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x46a25e0
};

// Class DeadByDaylight.HookAntiCampingComponent
// Size: 0x190 (Inherited: 0xb8)
struct UHookAntiCampingComponent : UActorComponent {
	bool IsAntiCampingFeatureEnabled; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
	float _detectionRange; // 0xbc(0x04)
	char pad_C0[0x4]; // 0xc0(0x04)
	float _killerGracePeriodTime; // 0xc4(0x04)
	char pad_C8[0x4]; // 0xc8(0x04)
	float _timeToActivate; // 0xcc(0x04)
	float _enduranceEffectActiveTime; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct UCurveFloat* _chargeSpeedCurve; // 0xd8(0x08)
	char pad_E0[0x81]; // 0xe0(0x81)
	bool _addEnduranceEffectAfterSelfUnhook; // 0x161(0x01)
	char pad_162[0x6]; // 0x162(0x06)
	struct UStatusEffect* _enduranceEffectClass; // 0x168(0x08)
	struct UStatusEffect* _selfUnhookAlwaysSucceedEffectClass; // 0x170(0x08)
	struct UStatusEffect* _selfUnhookAlwaysSucceedEffect; // 0x178(0x08)
	float _chargeSpeed; // 0x180(0x04)
	float _timerPercent; // 0x184(0x04)
	bool _unhookingSelfAllowedDuringStrugglePhase; // 0x188(0x01)
	char pad_189[0x7]; // 0x189(0x07)

	void OnRep_UnhookingSelfAllowedDuringStrugglePhase(); // Function DeadByDaylight.HookAntiCampingComponent.OnRep_UnhookingSelfAllowedDuringStrugglePhase // (Final|Native|Private) // @ game+0x553b9f0
	float GetCurrentChargeSpeed(); // Function DeadByDaylight.HookAntiCampingComponent.GetCurrentChargeSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553a8f0
	float GetCampTimerCompletionPercent(); // Function DeadByDaylight.HookAntiCampingComponent.GetCampTimerCompletionPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553a8d0
	bool CanUnhookWithAutoSuccess(); // Function DeadByDaylight.HookAntiCampingComponent.CanUnhookWithAutoSuccess // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553a890
};

// Class DeadByDaylight.HookedIndicatorWidget
// Size: 0x390 (Inherited: 0x380)
struct UHookedIndicatorWidget : UBaseIndicatorWidget {
	float HookedIndicatorDuration; // 0x380(0x04)
	char pad_384[0xc]; // 0x384(0x0c)
};

// Class DeadByDaylight.HooksWithSurvivorRestrictedPlacementAreaStrategy
// Size: 0x138 (Inherited: 0xa0)
struct UHooksWithSurvivorRestrictedPlacementAreaStrategy : URestrictedPlacementAreaStrategy {
	struct FDBDTunableRowHandle RestrictedSphericalRadius; // 0xa0(0x28)
	bool _isRestrictionLingeringEnabled; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct FDBDTunableRowHandle _restrictionLingerTime; // 0xd0(0x28)
	char pad_F8[0x4]; // 0xf8(0x04)
	bool _useSphericalZoneForBasementHooks; // 0xfc(0x01)
	char pad_FD[0x1b]; // 0xfd(0x1b)
	struct TArray<struct FVector> RestrictedSphericalLocations; // 0x118(0x10)
	char pad_128[0x10]; // 0x128(0x10)
};

// Class DeadByDaylight.HudScreen
// Size: 0x6e0 (Inherited: 0x120)
struct UHudScreen : UScreenBase {
	char pad_120[0xd8]; // 0x120(0xd8)
	struct UCoreHudRootWidget* _rootWidget; // 0x1f8(0x08)
	char pad_200[0xd0]; // 0x200(0xd0)
	struct ATutorialsUtilities* _tutorialsUtilities; // 0x2d0(0x08)
	struct TArray<struct TScriptInterface<IPlayerStatusViewInterface>> _playerStatusInterfaces; // 0x2d8(0x10)
	struct FInteractionProgressViewData _interactionProgressViewData; // 0x2e8(0x70)
	struct FItemBundleViewData _itemBundleViewData; // 0x358(0x160)
	char pad_4B8[0x50]; // 0x4b8(0x50)
	struct FPowerBundleViewData _powerBundleViewData; // 0x508(0x158)
	struct TArray<struct FPlayerStatusViewData> _playerStatusViewData; // 0x660(0x10)
	char pad_670[0x70]; // 0x670(0x70)

	void OnTutorialHudFadeOutTriggered(); // Function DeadByDaylight.HudScreen.OnTutorialHudFadeOutTriggered // (Final|Native|Private) // @ game+0x553ba30
	void OnTutorialHudFadeInTriggered(); // Function DeadByDaylight.HudScreen.OnTutorialHudFadeInTriggered // (Final|Native|Private) // @ game+0x553ba10
	void OnHUDWidgetFadeOutCompleted(); // Function DeadByDaylight.HudScreen.OnHUDWidgetFadeOutCompleted // (Final|Native|Private) // @ game+0x553b8a0
	void OnHUDWidgetDelayCompleted(); // Function DeadByDaylight.HudScreen.OnHUDWidgetDelayCompleted // (Final|Native|Private|Const) // @ game+0x553b880
	void OnHideStartSequenceCompleted(); // Function DeadByDaylight.HudScreen.OnHideStartSequenceCompleted // (Final|Native|Private) // @ game+0x553b8e0
	void OnHemorrhageAnimationComplete(); // Function DeadByDaylight.HudScreen.OnHemorrhageAnimationComplete // (Final|Native|Private) // @ game+0x553b8c0
};

// Class DeadByDaylight.HudUIUtilities
// Size: 0x30 (Inherited: 0x30)
struct UHudUIUtilities : UObject {
};

// Class DeadByDaylight.ButtonPromptSource
// Size: 0x30 (Inherited: 0x30)
struct UButtonPromptSource : UInterface {
};

// Class DeadByDaylight.CannibalChainsawPower
// Size: 0x30 (Inherited: 0x30)
struct UCannibalChainsawPower : UInterface {
};

// Class DeadByDaylight.ChainLinkable
// Size: 0x30 (Inherited: 0x30)
struct UChainLinkable : UInterface {
};

// Class DeadByDaylight.ChargeableProgressSource
// Size: 0x30 (Inherited: 0x30)
struct UChargeableProgressSource : UInterface {
};

// Class DeadByDaylight.IdentityValidation
// Size: 0x30 (Inherited: 0x30)
struct UIdentityValidation : UObject {
};

// Class DeadByDaylight.Ethereal
// Size: 0x30 (Inherited: 0x30)
struct UEthereal : UInterface {
};

// Class DeadByDaylight.IgnorePlayersCollisionsComponent
// Size: 0x120 (Inherited: 0xb8)
struct UIgnorePlayersCollisionsComponent : UActorComponent {
	char pad_B8[0x68]; // 0xb8(0x68)
};

// Class DeadByDaylight.Highlightable
// Size: 0x30 (Inherited: 0x30)
struct UHighlightable : UInterface {
};

// Class DeadByDaylight.KillerControls
// Size: 0x30 (Inherited: 0x30)
struct UKillerControls : UInterface {
};

// Class DeadByDaylight.ImmobilizeUtilities
// Size: 0x30 (Inherited: 0x30)
struct UImmobilizeUtilities : UBlueprintFunctionLibrary {

	void StopGuiding(struct ADBDPlayer* Player, struct ADBDPlayer* previouslyGuidingPlayer); // Function DeadByDaylight.ImmobilizeUtilities.StopGuiding // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x553be70
	void StartGuiding(struct ADBDPlayer* Player, enum class EGuidedState guidedState, struct ADBDPlayer* guidingPlayer); // Function DeadByDaylight.ImmobilizeUtilities.StartGuiding // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x553bd70
	void SetImmobilizeState(struct ADBDPlayer* Player, enum class EImmobilizedState ImmobilizeState); // Function DeadByDaylight.ImmobilizeUtilities.SetImmobilizeState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x553bad0
	void RemoveAllGuidingPlayers(struct ADBDPlayer* Player); // Function DeadByDaylight.ImmobilizeUtilities.RemoveAllGuidingPlayers // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x553ba50
	bool IsImmobilized(struct ADBDPlayer* Player); // Function DeadByDaylight.ImmobilizeUtilities.IsImmobilized // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x553b040
	bool IsGuidedByPlayer(struct ADBDPlayer* Player, struct ADBDPlayer* guidingPlayer); // Function DeadByDaylight.ImmobilizeUtilities.IsGuidedByPlayer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x553af70
	bool IsGuided(struct ADBDPlayer* Player); // Function DeadByDaylight.ImmobilizeUtilities.IsGuided // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x553aee0
	bool HasImmobilizeState(struct ADBDPlayer* Player, enum class EImmobilizedState ImmobilizeState); // Function DeadByDaylight.ImmobilizeUtilities.HasImmobilizeState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x553ae10
	bool HasGuidedState(struct ADBDPlayer* Player, enum class EGuidedState guidedState); // Function DeadByDaylight.ImmobilizeUtilities.HasGuidedState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x553ad40
	enum class EImmobilizedState GetImmobilizeState(struct ADBDPlayer* Player); // Function DeadByDaylight.ImmobilizeUtilities.GetImmobilizeState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x553aae0
	enum class EGuidedState GetGuidedState(struct ADBDPlayer* Player); // Function DeadByDaylight.ImmobilizeUtilities.GetGuidedState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x553aa20
};

// Class DeadByDaylight.MovementSettings
// Size: 0x30 (Inherited: 0x30)
struct UMovementSettings : UInterface {
};

// Class DeadByDaylight.InactiveCooldownTimerPerkIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UInactiveCooldownTimerPerkIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.InboxScreen
// Size: 0x1f0 (Inherited: 0x120)
struct UInboxScreen : UScreenBase {
	struct UUMGInboxScreen* _umgScreen; // 0x120(0x08)
	struct TArray<struct FInboxMessageUIData> _newsMessages; // 0x128(0x10)
	struct TArray<struct FInboxMessageUIData> _rewardsMessages; // 0x138(0x10)
	struct TArray<struct FInboxMessageUIData> _socialMessages; // 0x148(0x10)
	char pad_158[0x98]; // 0x158(0x98)
};

// Class DeadByDaylight.InboxUtilities
// Size: 0x30 (Inherited: 0x30)
struct UInboxUtilities : UObject {
};

// Class DeadByDaylight.InfectedInteractableComponent
// Size: 0x1a8 (Inherited: 0xb8)
struct UInfectedInteractableComponent : UActorComponent {
	struct UCurveFloat* VomitAlphaCurve; // 0xb8(0x08)
	struct FName VomitAlphaParameterName; // 0xc0(0x0c)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct UTimelineComponent* _vomitAlphaTimeline; // 0xd0(0x08)
	char pad_D8[0xd0]; // 0xd8(0xd0)

	void SetInteractableMeshAlpha(float alpha); // Function DeadByDaylight.InfectedInteractableComponent.SetInteractableMeshAlpha // (Final|Native|Protected|BlueprintCallable) // @ game+0x553bb90
	void OnVomitAlphaUpdate(float alpha); // Function DeadByDaylight.InfectedInteractableComponent.OnVomitAlphaUpdate // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void Multicast_FadeOutVomit(); // Function DeadByDaylight.InfectedInteractableComponent.Multicast_FadeOutVomit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x4aa7040
	void Multicast_FadeInVomit(); // Function DeadByDaylight.InfectedInteractableComponent.Multicast_FadeInVomit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x4af1ae0
	void Multicast_DestroyComponent(); // Function DeadByDaylight.InfectedInteractableComponent.Multicast_DestroyComponent // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x4af1ac0
	void Multicast_DebugDisplayLifetime(float RemainingLifeTime); // Function DeadByDaylight.InfectedInteractableComponent.Multicast_DebugDisplayLifetime // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x553b490
	struct AInteractable* GetOwningInteractable(); // Function DeadByDaylight.InfectedInteractableComponent.GetOwningInteractable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x553acb0
	void Authority_OnOwningInteractableBeginOrEndUse(bool InUse, struct ADBDPlayer* interactingPlayer); // Function DeadByDaylight.InfectedInteractableComponent.Authority_OnOwningInteractableBeginOrEndUse // (Final|Native|Public) // @ game+0x553a740
	void Authority_OnHitWithVomit(); // Function DeadByDaylight.InfectedInteractableComponent.Authority_OnHitWithVomit // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x553a720
	bool Authority_IsAMaxSicknessSurvivorInteracting(); // Function DeadByDaylight.InfectedInteractableComponent.Authority_IsAMaxSicknessSurvivorInteracting // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553a6f0
	struct ACamperPlayer* Authority_GetEquippingPlayer(); // Function DeadByDaylight.InfectedInteractableComponent.Authority_GetEquippingPlayer // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553a640
};

// Class DeadByDaylight.InGameAssetPreloaderComponent
// Size: 0x260 (Inherited: 0xb8)
struct UInGameAssetPreloaderComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	struct TSet<struct FPrimaryAssetId> _generalPrimaryAssetIds; // 0xd0(0x50)
	struct TSet<struct TSoftClassPtr<UObject>> _generalRegularAssets; // 0x120(0x50)
	struct TArray<struct UInGameAssetPreloaderGatherer*> _assetGathererClasses; // 0x170(0x10)
	struct TArray<struct UInGameAssetPreloaderGatherer*> _assetGatherers; // 0x180(0x10)
	char pad_190[0xd0]; // 0x190(0xd0)
};

// Class DeadByDaylight.InGameAssetPreloaderGatherer
// Size: 0x30 (Inherited: 0x30)
struct UInGameAssetPreloaderGatherer : UObject {
};

// Class DeadByDaylight.InGameLoadoutAssetGatherer
// Size: 0x30 (Inherited: 0x30)
struct UInGameLoadoutAssetGatherer : UInGameAssetPreloaderGatherer {
};

// Class DeadByDaylight.IniAssetLibrary
// Size: 0xc0 (Inherited: 0xb0)
struct UIniAssetLibrary : UAssetLibrary {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class DeadByDaylight.InteractableTransformOptimizer
// Size: 0xc0 (Inherited: 0xb8)
struct UInteractableTransformOptimizer : UActorComponent {
	bool _optimizeTransformUpdate; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// Class DeadByDaylight.InteractionAnimNotify
// Size: 0x50 (Inherited: 0x40)
struct UInteractionAnimNotify : UAnimNotify {
	struct FName NotifyId; // 0x40(0x0c)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class DeadByDaylight.InteractionDetectorComponent
// Size: 0x1b0 (Inherited: 0xb8)
struct UInteractionDetectorComponent : UActorComponent {
	struct UPrimitiveComponent* _detectionPrimitive; // 0xb8(0x08)
	struct TSet<struct AInteractable*> _overlappingInteractables; // 0xc0(0x50)
	struct TSet<struct UPrimitiveComponent*> _overlappingPrimitiveComponents; // 0x110(0x50)
	struct TSet<struct AActor*> _ignoredActors; // 0x160(0x50)

	void SetDetectionPrimitive(struct UPrimitiveComponent* detectionPrimitive); // Function DeadByDaylight.InteractionDetectorComponent.SetDetectionPrimitive // (Final|Native|Public|BlueprintCallable) // @ game+0x5482800
	void OnLocallyObservedChanged(struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionDetectorComponent.OnLocallyObservedChanged // (Final|Native|Private) // @ game+0x5545cb0
	struct UPrimitiveComponent* GetDetectionPrimitive(); // Function DeadByDaylight.InteractionDetectorComponent.GetDetectionPrimitive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5534ca0
	void EndOverlapCallback(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DeadByDaylight.InteractionDetectorComponent.EndOverlapCallback // (Final|Native|Private) // @ game+0x5544de0
	void BeginOverlapCallback(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool fromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.InteractionDetectorComponent.BeginOverlapCallback // (Final|Native|Private|HasOutParms) // @ game+0x5544ad0
	void AddIgnoredActor(struct AActor* ignored); // Function DeadByDaylight.InteractionDetectorComponent.AddIgnoredActor // (Final|Native|Public|BlueprintCallable) // @ game+0x5544770
};

// Class DeadByDaylight.InteractionProficiency
// Size: 0x48 (Inherited: 0x30)
struct UInteractionProficiency : UObject {
	struct TArray<struct FString> InteractionIds; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)

	float GetValue(struct UChargeableInteractionDefinition* chargeableInteraction, struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionProficiency.GetValue // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5545520
	enum class EStatusEffectType GetType(float value); // Function DeadByDaylight.InteractionProficiency.GetType // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5545480
	int32_t GetLevel(struct UChargeableInteractionDefinition* chargeableInteraction, struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionProficiency.GetLevel // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5545350
	bool GetIsActive(struct UChargeableInteractionDefinition* chargeableInteraction, struct ADBDPlayer* Player); // Function DeadByDaylight.InteractionProficiency.GetIsActive // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5545250
};

// Class DeadByDaylight.Interactor
// Size: 0x290 (Inherited: 0x220)
struct UInteractor : USceneComponent {
	struct FString InteractorName; // 0x218(0x10)
	char pad_230[0x28]; // 0x230(0x28)
	bool IsUsable; // 0x258(0x01)
	char pad_259[0x3]; // 0x259(0x03)
	struct FObjectLock _lock; // 0x25c(0x08)
	struct FObjectLock _reservation; // 0x264(0x08)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct UInteractionDefinition* _currentInteraction; // 0x270(0x08)
	struct TArray<struct UInteractionDefinition*> _interactionDefinitions; // 0x278(0x10)
	char pad_288[0x8]; // 0x288(0x08)

	void SetIsUsable(bool isUsableParam); // Function DeadByDaylight.Interactor.SetIsUsable // (Final|Native|Public|BlueprintCallable) // @ game+0x5545ed0
	void Multicast_ReservationStatus(struct ADBDPlayer* Player, bool lock); // Function DeadByDaylight.Interactor.Multicast_ReservationStatus // (Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate) // @ game+0x5545af0
	void Multicast_LockStatus(struct ADBDPlayer* Player, struct UInteractionDefinition* currentInteraction, bool lock); // Function DeadByDaylight.Interactor.Multicast_LockStatus // (Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate) // @ game+0x55459a0
	bool IsInterruptionPossible(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee, struct UInteractionDefinition* definition, struct UInterruptionDefinition* interruption); // Function DeadByDaylight.Interactor.IsInterruptionPossible // (Final|Native|Public|Const) // @ game+0x55456f0
	bool IsInteracting(); // Function DeadByDaylight.Interactor.IsInteracting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55456c0
	bool GetIsUsable(); // Function DeadByDaylight.Interactor.GetIsUsable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5545320
	struct TArray<struct UInteractionDefinition*> GetInteractionDefinitions(); // Function DeadByDaylight.Interactor.GetInteractionDefinitions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5545000
	struct ADBDPlayer* GetInteractingPlayerRaw(); // Function DeadByDaylight.Interactor.GetInteractingPlayerRaw // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5544fa0
	struct AInteractable* GetInteractable(); // Function DeadByDaylight.Interactor.GetInteractable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x553acb0
	struct UInteractionDefinition* GetCurrentInteraction(); // Function DeadByDaylight.Interactor.GetCurrentInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5544f40
	bool CanPerformInteraction(struct ADBDPlayer* Player, struct UInteractionDefinition* definition); // Function DeadByDaylight.Interactor.CanPerformInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5544d10
	void BPPostInitializeComponents(); // Function DeadByDaylight.Interactor.BPPostInitializeComponents // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	struct ADBDPlayer* Authority_GetInteractingPlayer(); // Function DeadByDaylight.Interactor.Authority_GetInteractingPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5544840
};

// Class DeadByDaylight.InterruptionDefinition
// Size: 0x2e0 (Inherited: 0x220)
struct UInterruptionDefinition : USceneComponent {
	struct FName InterruptionID; // 0x218(0x0c)
	bool _usesWorldCoordinates; // 0x224(0x01)
	bool _snapInterruptor; // 0x225(0x01)
	char pad_22E[0x2]; // 0x22e(0x02)
	struct FTransform _interruptionSnapPointForInterruptor; // 0x230(0x30)
	struct FAnimationMontageDescriptor _animationMontageToPlayOnInterruptionEnterForInterruptor; // 0x260(0x20)
	struct FAnimationMontageDescriptor _animationMontageToPlayOnInterruptionForInterruptorNew; // 0x280(0x20)
	struct FAnimationMontageDescriptor _animationMontageToPlayOnInterruptionForInterrupteeNew; // 0x2a0(0x20)
	bool _pickUpOnInterrupt; // 0x2c0(0x01)
	bool _canInterruptWhileCarrying; // 0x2c1(0x01)
	bool _useMontageFollower; // 0x2c2(0x01)
	char pad_2C3[0x1]; // 0x2c3(0x01)
	float _maxHeightDeltaBetweenCharacters; // 0x2c4(0x04)
	struct FGameplayTag _interruptionScoreEvent; // 0x2c8(0x0c)
	char pad_2D4[0xc]; // 0x2d4(0x0c)

	void SetInterruptorSnapPoint(struct FTransform& Point); // Function DeadByDaylight.InterruptionDefinition.SetInterruptorSnapPoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x5545df0
	void OnInterruptionUpdateStart(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee); // Function DeadByDaylight.InterruptionDefinition.OnInterruptionUpdateStart // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnInterruptionExitEnd(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee); // Function DeadByDaylight.InterruptionDefinition.OnInterruptionExitEnd // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnInterruptionEnterStart(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee); // Function DeadByDaylight.InterruptionDefinition.OnInterruptionEnterStart // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	bool IsUsingMontageFollower(); // Function DeadByDaylight.InterruptionDefinition.IsUsingMontageFollower // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5545980
	bool IsUsingAttack(); // Function DeadByDaylight.InterruptionDefinition.IsUsingAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x45df890
	bool IsInterruptionPossible(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee); // Function DeadByDaylight.InterruptionDefinition.IsInterruptionPossible // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x5545850
	bool InteractionCheckHeightDelta(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee); // Function DeadByDaylight.InterruptionDefinition.InteractionCheckHeightDelta // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55455f0
	struct FRotator GetInterruptionSnapPointRotationForInterruptor(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee); // Function DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointRotationForInterruptor // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5545170
	struct FVector GetInterruptionSnapPointPositionForInterruptor(struct ADBDPlayer* interruptor, struct ADBDPlayer* interruptee); // Function DeadByDaylight.InterruptionDefinition.GetInterruptionSnapPointPositionForInterruptor // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5545090
	struct UInteractionDefinition* GetInteractionDefinition(); // Function DeadByDaylight.InterruptionDefinition.GetInteractionDefinition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5544fd0
	struct AInteractable* GetInteractable(); // Function DeadByDaylight.InterruptionDefinition.GetInteractable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5544f70
	bool CanInterruptWhileCarrying(); // Function DeadByDaylight.InterruptionDefinition.CanInterruptWhileCarrying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5544cf0
};

// Class DeadByDaylight.InventoryHandler
// Size: 0x90 (Inherited: 0x30)
struct UInventoryHandler : UObject {
	char pad_30[0x60]; // 0x30(0x60)
};

// Class DeadByDaylight.PalletPulldownBlockable
// Size: 0x30 (Inherited: 0x30)
struct UPalletPulldownBlockable : UInterface {
};

// Class DeadByDaylight.IsMaximumInfected
// Size: 0xd0 (Inherited: 0xd0)
struct UIsMaximumInfected : UGameplayModifierCondition {
};

// Class DeadByDaylight.IsNotSightedByAnyCharacter
// Size: 0xf0 (Inherited: 0xe8)
struct UIsNotSightedByAnyCharacter : UEventDrivenModifierCondition {
	char pad_E8[0x8]; // 0xe8(0x08)
};

// Class DeadByDaylight.SpectatingActorLinker
// Size: 0x30 (Inherited: 0x30)
struct USpectatingActorLinker : UInterface {
};

// Class DeadByDaylight.StruggleSkillCheck
// Size: 0x30 (Inherited: 0x30)
struct UStruggleSkillCheck : UInterface {
};

// Class DeadByDaylight.ItemAddonDataAsset
// Size: 0x88 (Inherited: 0x88)
struct UItemAddonDataAsset : UGameplayModifierContainerDataAsset {
};

// Class DeadByDaylight.ItemDataAsset
// Size: 0x88 (Inherited: 0x48)
struct UItemDataAsset : UDBDPrimaryDataAsset {
	struct TSoftClassPtr<UObject> ActorClass; // 0x48(0x30)
	struct TArray<struct TSoftObjectPtr<UGameplayModifierContainerDataAsset>> RequiredModifierContainers; // 0x78(0x10)
};

// Class DeadByDaylight.ItemPerformedInteraction
// Size: 0x30 (Inherited: 0x30)
struct UItemPerformedInteraction : UInterface {

	bool IsInteractionPerformedWithItem(struct ADBDPlayer* Instigator); // Function DeadByDaylight.ItemPerformedInteraction.IsInteractionPerformedWithItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x554a380
};

// Class DeadByDaylight.RecommendationsFilter
// Size: 0x38 (Inherited: 0x30)
struct URecommendationsFilter : UObject {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class DeadByDaylight.ItemRecommendationsFilter
// Size: 0x60 (Inherited: 0x38)
struct UItemRecommendationsFilter : URecommendationsFilter {
	char pad_38[0x28]; // 0x38(0x28)
};

// Class DeadByDaylight.ItemTooltipWidget
// Size: 0x390 (Inherited: 0x370)
struct UItemTooltipWidget : UBaseTooltipWidget {
	struct UTextBlock* RarityLabel; // 0x370(0x08)
	struct UUMGHtmlRichText* WarningText; // 0x378(0x08)
	struct UImage* HeaderSmoke; // 0x380(0x08)
	struct UImage* HeaderBackground; // 0x388(0x08)
};

// Class DeadByDaylight.ItemVfx
// Size: 0x248 (Inherited: 0x238)
struct AItemVfx : ABaseVFX {
	struct TArray<struct UFXSystemComponent*> _particleSystems; // 0x238(0x10)

	struct UNiagaraComponent* SpawnNiagaraSystemAttached(struct UNiagaraSystem* SystemTemplate, struct USceneComponent* AttachToComponent, struct FName attachPointName, enum class EAttachLocation LocationType, bool AutoDestroy, enum class ENCPoolMethod PoolingMethod, struct FVector& Location, struct FRotator& Rotation, struct FVector& Scale, bool autoActivate, bool preCullCheck, bool absoluteRotation, bool hideInFPV); // Function DeadByDaylight.ItemVfx.SpawnNiagaraSystemAttached // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x554a970
	void OnAttackEnd(); // Function DeadByDaylight.ItemVfx.OnAttackEnd // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnAttackBegin(); // Function DeadByDaylight.ItemVfx.OnAttackBegin // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void ClearParticleSystems(); // Function DeadByDaylight.ItemVfx.ClearParticleSystems // (Final|Native|Public|BlueprintCallable) // @ game+0x554a220
	void AttachToSkeletalMesh(struct USkeletalMeshComponent* SkeletonPart); // Function DeadByDaylight.ItemVfx.AttachToSkeletalMesh // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void AddParticleSystemComponent(struct UParticleSystemComponent* ParticleSystemComponent); // Function DeadByDaylight.ItemVfx.AddParticleSystemComponent // (Final|Native|Protected|BlueprintCallable) // @ game+0x554a000
	void AddNiagaraComponent(struct UNiagaraComponent* NiagaraComponent); // Function DeadByDaylight.ItemVfx.AddNiagaraComponent // (Final|Native|Protected|BlueprintCallable) // @ game+0x554a000
};

// Class DeadByDaylight.ItemWillBeConsumedEffect
// Size: 0x350 (Inherited: 0x350)
struct UItemWillBeConsumedEffect : UStatusEffect {
};

// Class DeadByDaylight.ViewRotationStrategy
// Size: 0x30 (Inherited: 0x30)
struct UViewRotationStrategy : UInterface {
};

// Class DeadByDaylight.K31UIDataInterface
// Size: 0x30 (Inherited: 0x30)
struct UK31UIDataInterface : UInterface {
};

// Class DeadByDaylight.KillerAtlantaTutorialLevel
// Size: 0x368 (Inherited: 0x328)
struct AKillerAtlantaTutorialLevel : AAtlantaTutorialLevel {
	struct TWeakObjectPtr<struct ASlasherPlayer> LocallyControllerSlasherPlayer; // 0x328(0x08)
	struct TWeakObjectPtr<struct ACamperPlayer> ChaseCamper; // 0x330(0x08)
	struct TWeakObjectPtr<struct ACamperPlayer> BearTrapCamper; // 0x338(0x08)
	struct TWeakObjectPtr<struct AGenerator> KickGenerator; // 0x340(0x08)
	struct TWeakObjectPtr<struct AWindow> VaultWindow; // 0x348(0x08)
	struct TWeakObjectPtr<struct AEscapeDoor> EscapeDoor; // 0x350(0x08)
	struct TWeakObjectPtr<struct AHatch> Hatch; // 0x358(0x08)
	char pad_360[0x8]; // 0x360(0x08)

	void TriggerExitGameSetup(); // Function DeadByDaylight.KillerAtlantaTutorialLevel.TriggerExitGameSetup // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void TriggerEndGameSequenceAnimation(enum class EKillerTutorialEndGameType camperDeathType); // Function DeadByDaylight.KillerAtlantaTutorialLevel.TriggerEndGameSequenceAnimation // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetVaultWindow(struct AWindow* Window); // Function DeadByDaylight.KillerAtlantaTutorialLevel.SetVaultWindow // (Final|Native|Public|BlueprintCallable) // @ game+0x54d7690
	void SetupEndGameTutorialPhase(); // Function DeadByDaylight.KillerAtlantaTutorialLevel.SetupEndGameTutorialPhase // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetHatch(struct AHatch* targetHatch); // Function DeadByDaylight.KillerAtlantaTutorialLevel.SetHatch // (Final|Native|Public|BlueprintCallable) // @ game+0x554a8e0
	void SetGenerator(struct AGenerator* Generator); // Function DeadByDaylight.KillerAtlantaTutorialLevel.SetGenerator // (Final|Native|Public|BlueprintCallable) // @ game+0x554a850
	void SetEscapeDoor(struct AEscapeDoor* targetEscapeDoor); // Function DeadByDaylight.KillerAtlantaTutorialLevel.SetEscapeDoor // (Final|Native|Public|BlueprintCallable) // @ game+0x554a7c0
	void SetControlledSlasherPlayer(struct ASlasherPlayer* SlasherPlayer); // Function DeadByDaylight.KillerAtlantaTutorialLevel.SetControlledSlasherPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x554a730
	void SetChaseSurvivor(struct ACamperPlayer* CamperPlayer); // Function DeadByDaylight.KillerAtlantaTutorialLevel.SetChaseSurvivor // (Final|Native|Public|BlueprintCallable) // @ game+0x554a6a0
	void SetBearTrapSurvivor(struct ACamperPlayer* CamperPlayer); // Function DeadByDaylight.KillerAtlantaTutorialLevel.SetBearTrapSurvivor // (Final|Native|Public|BlueprintCallable) // @ game+0x554a610
	void CompleteEscapeRequirements(); // Function DeadByDaylight.KillerAtlantaTutorialLevel.CompleteEscapeRequirements // (Final|Native|Public|BlueprintCallable) // @ game+0x554a240
};

// Class DeadByDaylight.KillerAudioHandlerComponent
// Size: 0x1c8 (Inherited: 0x148)
struct UKillerAudioHandlerComponent : UDBDPlayerAudioHandlerComponent {
	struct FDBDTunableRowHandle _killerMovingShockTime; // 0x148(0x28)
	struct FString _shockEvent; // 0x170(0x10)
	struct FGameplayTagQuery _movingShockCondition; // 0x180(0x48)

	void TriggerSurvivorDamageHitAudioSFX(struct ACamperPlayer* camper, enum class EAttackType attackType, bool CausedKO, bool IsWeaponHit, bool isLightHit); // Function DeadByDaylight.KillerAudioHandlerComponent.TriggerSurvivorDamageHitAudioSFX // (BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void TriggerKillerReactionSpecificSurvivorSFX(struct ADBDPlayer* camper); // Function DeadByDaylight.KillerAudioHandlerComponent.TriggerKillerReactionSpecificSurvivorSFX // (BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnChaseStart(struct ADBDPlayer* chasedSurvivor); // Function DeadByDaylight.KillerAudioHandlerComponent.OnChaseStart // (Final|Native|Private) // @ game+0x554a540
	void HitImpactOnSurvivorSFX(struct ACamperPlayer* camper, enum class EAttackType attackType, bool IsWeaponHit); // Function DeadByDaylight.KillerAudioHandlerComponent.HitImpactOnSurvivorSFX // (BlueprintCosmetic|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void ChaseTriggerKillerReactionSpecificSurvivorSFX(struct ADBDPlayer* camper); // Function DeadByDaylight.KillerAudioHandlerComponent.ChaseTriggerKillerReactionSpecificSurvivorSFX // (BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.KillerAudioMenuReactionComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UKillerAudioMenuReactionComponent : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)

	void OnLobbyTimeChanged(); // Function DeadByDaylight.KillerAudioMenuReactionComponent.OnLobbyTimeChanged // (Final|Native|Private) // @ game+0x554a5d0
	void LobbyKillerReactionSpecificSurvivorSFX(struct TArray<struct ADBDMenuPlayer*>& menuPlayers); // Function DeadByDaylight.KillerAudioMenuReactionComponent.LobbyKillerReactionSpecificSurvivorSFX // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.KillerBlindingFXComponent
// Size: 0x150 (Inherited: 0x108)
struct UKillerBlindingFXComponent : UBlindingFXComponent {
	char pad_108[0x18]; // 0x108(0x18)
	struct UAkAudioEvent* _blindedSound; // 0x120(0x08)
	char pad_128[0x28]; // 0x128(0x28)

	void Multicast_OnBlindedByPlayersCosmetic(struct TArray<struct ADBDPlayer*> Players); // Function DeadByDaylight.KillerBlindingFXComponent.Multicast_OnBlindedByPlayersCosmetic // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x554a4a0
};

// Class DeadByDaylight.KillerBloodFXComponent
// Size: 0xd0 (Inherited: 0xb8)
struct UKillerBloodFXComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)

	void StopBloodSplatter(); // Function DeadByDaylight.KillerBloodFXComponent.StopBloodSplatter // (Final|Native|Public|BlueprintCallable) // @ game+0x554ad70
	void PlayBloodSplatter(); // Function DeadByDaylight.KillerBloodFXComponent.PlayBloodSplatter // (Final|Native|Public|BlueprintCallable) // @ game+0x554a5f0
};

// Class DeadByDaylight.KillerBloodFXInterface
// Size: 0x30 (Inherited: 0x30)
struct UKillerBloodFXInterface : UInterface {

	void StopBloodSplatter(); // Function DeadByDaylight.KillerBloodFXInterface.StopBloodSplatter // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void PlayBloodSplatter(); // Function DeadByDaylight.KillerBloodFXInterface.PlayBloodSplatter // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.KillerHitCosmeticHandler
// Size: 0x48 (Inherited: 0x30)
struct UKillerHitCosmeticHandler : UBaseReversibleInstantActionHandler {
	char pad_30[0x18]; // 0x30(0x18)
};

// Class DeadByDaylight.KillerInstinctInterface
// Size: 0x30 (Inherited: 0x30)
struct UKillerInstinctInterface : UInterface {
};

// Class DeadByDaylight.KillerIntroComponent
// Size: 0xe8 (Inherited: 0xb8)
struct UKillerIntroComponent : UActorComponent {
	float _percentOfCameraPanInProgressRequiredToHideKiller; // 0xb8(0x04)
	float _cameraPanInAmountToSquish; // 0xbc(0x04)
	enum class EFPVTransitionStrategy _cameraPanInHidingStrategy; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	float _startKillerIntroDelay; // 0xc4(0x04)
	char pad_C8[0x20]; // 0xc8(0x20)

	void OnLevelReadyToPlay(); // Function DeadByDaylight.KillerIntroComponent.OnLevelReadyToPlay // (Final|Native|Private) // @ game+0x4aa7040
	void OnIntroCompleted(); // Function DeadByDaylight.KillerIntroComponent.OnIntroCompleted // (Final|Native|Private) // @ game+0x4af1ac0
	void KillerCameraPanInUpdateNative(float killerIntroCompletedPercent); // Function DeadByDaylight.KillerIntroComponent.KillerCameraPanInUpdateNative // (Final|Native|Private) // @ game+0x554a420
};

// Class DeadByDaylight.NoiseIndicatorWidget
// Size: 0x380 (Inherited: 0x380)
struct UNoiseIndicatorWidget : UBaseIndicatorWidget {

	void SetIndicatorPanel(struct UCanvasPanel* panel); // Function DeadByDaylight.NoiseIndicatorWidget.SetIndicatorPanel // (Final|Native|Public|BlueprintCallable) // @ game+0x5567040
};

// Class DeadByDaylight.KillerNoiseIndicatorWidget
// Size: 0x380 (Inherited: 0x380)
struct UKillerNoiseIndicatorWidget : UNoiseIndicatorWidget {

	void SetSoundDistancePercentage(float distancePercentage); // Function DeadByDaylight.KillerNoiseIndicatorWidget.SetSoundDistancePercentage // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.KillerOpenGate
// Size: 0x7b0 (Inherited: 0x760)
struct UKillerOpenGate : UChargeableInteractionDefinition {
	struct FAnimationMontageDescriptor _openGateMontage; // 0x758(0x20)
	char pad_780[0x30]; // 0x780(0x30)

	void UpdateSwitch(); // Function DeadByDaylight.KillerOpenGate.UpdateSwitch // (Event|Protected|BlueprintEvent|Const) // @ game+0x5e02c90
};

// Class DeadByDaylight.KillerProjectileDodgeComponent
// Size: 0xf0 (Inherited: 0xb8)
struct UKillerProjectileDodgeComponent : UActorComponent {
	struct AKillerProjectile* _killerProjectile; // 0xb8(0x08)
	struct TArray<struct ACamperPlayer*> _proximitySurvivors; // 0xc0(0x10)
	char pad_D0[0x20]; // 0xd0(0x20)

	void OnKillerProjectileLaunched(); // Function DeadByDaylight.KillerProjectileDodgeComponent.OnKillerProjectileLaunched // (Final|Native|Private) // @ game+0x554f580
	void OnKillerProjectileFinishedWithoutCollision(); // Function DeadByDaylight.KillerProjectileDodgeComponent.OnKillerProjectileFinishedWithoutCollision // (Final|Native|Private) // @ game+0x554f560
	void OnKillerProjectileFinished(struct AActor* survivorHit); // Function DeadByDaylight.KillerProjectileDodgeComponent.OnKillerProjectileFinished // (Final|Native|Private) // @ game+0x554f4d0
};

// Class DeadByDaylight.KillerProjectileLauncher
// Size: 0x180 (Inherited: 0x180)
struct UKillerProjectileLauncher : UBaseProjectileLauncher {

	struct ASlasherPlayer* GetOwningKiller(); // Function DeadByDaylight.KillerProjectileLauncher.GetOwningKiller // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x554f150
};

// Class DeadByDaylight.KillerRedStainUpdateStrategy
// Size: 0xf8 (Inherited: 0xb8)
struct UKillerRedStainUpdateStrategy : UActorComponent {
	struct UCurveFloat* _stealthRatioToRedStainIntensityCurve; // 0xb8(0x08)
	struct FGameplayTagContainer _hideRedStainStateTags; // 0xc0(0x20)
	char pad_E0[0x18]; // 0xe0(0x18)

	void OnHeadHiddenChanged(bool IsHidden); // Function DeadByDaylight.KillerRedStainUpdateStrategy.OnHeadHiddenChanged // (Final|Native|Private) // @ game+0x554f420
};

// Class DeadByDaylight.KillerSoundCuesComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UKillerSoundCuesComponent : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)

	void StopTrackingActor(struct AActor* actorToStopTracking); // Function DeadByDaylight.KillerSoundCuesComponent.StopTrackingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x554fcb0
	void StartTrackingActorWithLifetime(struct AActor* actorToStartTracking, struct FName distanceDataID, float trackerLifetime); // Function DeadByDaylight.KillerSoundCuesComponent.StartTrackingActorWithLifetime // (Final|Native|Public|BlueprintCallable) // @ game+0x554fb80
	void StartTrackingActor(struct AActor* actorToStartTracking, struct FName distanceDataID); // Function DeadByDaylight.KillerSoundCuesComponent.StartTrackingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x554fa90
};

// Class DeadByDaylight.KillerSpecificGameStateComponent
// Size: 0xb8 (Inherited: 0xb8)
struct UKillerSpecificGameStateComponent : UActorComponent {
};

// Class DeadByDaylight.KillInteractionDefinition
// Size: 0x7f0 (Inherited: 0x760)
struct UKillInteractionDefinition : UChargeableInteractionDefinition {
	bool _disableFOVSystemDuringInteraction; // 0x758(0x01)
	bool _overrideSlasherFieldOfViewDuringInteraction; // 0x759(0x01)
	bool _overrideCamperFieldOfViewDuringInteraction; // 0x75a(0x01)
	bool _camperCopySlasherFOVCurve; // 0x75b(0x01)
	struct FName _cameraFOVCurveName; // 0x75c(0x0c)
	struct TArray<struct FString> _nonOverrideableTargetInteractions; // 0x768(0x10)
	bool _chargeCompleted; // 0x778(0x01)
	bool _isKillShownInThirdPerson; // 0x779(0x01)
	bool _manuallyManageMeshHiding; // 0x77a(0x01)
	bool _survivorAnimationLastAfterInteractionEnds; // 0x77b(0x01)
	char pad_784[0x2c]; // 0x784(0x2c)
	float _maximumDelayBeforeSurvivorDeath; // 0x7b0(0x04)
	char pad_7B4[0x4]; // 0x7b4(0x04)
	struct FAnimationMontageDescriptor _exitMontage; // 0x7b8(0x20)
	float _slasherFacingTolerance; // 0x7d8(0x04)
	char pad_7DC[0x14]; // 0x7dc(0x14)

	void OnMoriCancelled(); // Function DeadByDaylight.KillInteractionDefinition.OnMoriCancelled // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnKillAudioActivation(bool Active, struct ADBDPlayer* interactingPlayer); // Function DeadByDaylight.KillInteractionDefinition.OnKillAudioActivation // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	struct ACamperPlayer* GetOwningSurvivor(); // Function DeadByDaylight.KillInteractionDefinition.GetOwningSurvivor // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x554f180
	struct FAnimationMontageDescriptor GetExitAnimationMontage(); // Function DeadByDaylight.KillInteractionDefinition.GetExitAnimationMontage // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x554f080
	bool GetChargeCompleted(); // Function DeadByDaylight.KillInteractionDefinition.GetChargeCompleted // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x554f050
};

// Class DeadByDaylight.LacerationUIData
// Size: 0x30 (Inherited: 0x30)
struct ULacerationUIData : UInterface {
};

// Class DeadByDaylight.LandingPageTabsDataAsset
// Size: 0x128 (Inherited: 0x38)
struct ULandingPageTabsDataAsset : UPrimaryDataAsset {
	struct TMap<enum class EStorefrontState, struct FLandingPageTabData> BigButtonsData; // 0x38(0x50)
	struct TMap<enum class EStorefrontState, struct FLandingPageTabData> MediumButtonsData; // 0x88(0x50)
	struct TMap<enum class EStorefrontState, struct FLandingPageTabData> SmallButtonsData; // 0xd8(0x50)
};

// Class DeadByDaylight.LanternInteractable
// Size: 0x390 (Inherited: 0x338)
struct ALanternInteractable : AInteractable {
	struct FMulticastInlineDelegate OnLanternStateChanged; // 0x338(0x10)
	struct FMulticastInlineDelegate OnLanternCollectedByPlayerCosmetic; // 0x348(0x10)
	char pad_358[0x20]; // 0x358(0x20)
	struct ALanternLightCollectable* _collectableClass; // 0x378(0x08)
	char pad_380[0x10]; // 0x380(0x10)

	void SlasherDestroyLantern(struct ADBDPlayer* Player); // Function DeadByDaylight.LanternInteractable.SlasherDestroyLantern // (Final|Native|Public|BlueprintCallable) // @ game+0x554fa00
	void OnSlasherDestroyedLantern(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LanternInteractable.OnSlasherDestroyedLantern // (Final|Native|Private|HasOutParms) // @ game+0x554f5c0
	void OnCamperWasHooked(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LanternInteractable.OnCamperWasHooked // (Final|Native|Private|HasOutParms) // @ game+0x554f310
	void OnCamperLeavingHook(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LanternInteractable.OnCamperLeavingHook // (Final|Native|Private|HasOutParms) // @ game+0x554f200
	void OnBackToCollectableTimerEnd(); // Function DeadByDaylight.LanternInteractable.OnBackToCollectableTimerEnd // (Final|Native|Private) // @ game+0x554f1e0
	enum class ELanternState GetLanternState(); // Function DeadByDaylight.LanternInteractable.GetLanternState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x48356b0
	void CollectLight(struct ADBDPlayer* Player); // Function DeadByDaylight.LanternInteractable.CollectLight // (Final|Native|Public|BlueprintCallable) // @ game+0x554efc0
	void ChangeLanternState(enum class ELanternState newLanternState); // Function DeadByDaylight.LanternInteractable.ChangeLanternState // (Final|Native|Public|BlueprintCallable) // @ game+0x554ef40
	bool CanBeDestroyed(); // Function DeadByDaylight.LanternInteractable.CanBeDestroyed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x554ef10
	bool CanBeCollected(); // Function DeadByDaylight.LanternInteractable.CanBeCollected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x554eee0
};

// Class DeadByDaylight.LanternLightCollectable
// Size: 0x4d0 (Inherited: 0x4c8)
struct ALanternLightCollectable : ACollectable {
	struct ALanternInteractable* _parentLantern; // 0x4c8(0x08)

	void SetParentLantern(struct ALanternInteractable* parentLantern); // Function DeadByDaylight.LanternLightCollectable.SetParentLantern // (Final|Native|Public|BlueprintCallable) // @ game+0x554f970
};

// Class DeadByDaylight.LegalMenuScreen
// Size: 0x168 (Inherited: 0x120)
struct ULegalMenuScreen : UScreenBase {
	char pad_120[0x48]; // 0x120(0x48)

	void OnOkClick(); // Function DeadByDaylight.LegalMenuScreen.OnOkClick // (Final|Native|Protected) // @ game+0x54be480
	void OnDeclineClick(); // Function DeadByDaylight.LegalMenuScreen.OnDeclineClick // (Final|Native|Protected) // @ game+0x5472b70
	void OnAcceptClick(); // Function DeadByDaylight.LegalMenuScreen.OnAcceptClick // (Final|Native|Protected) // @ game+0x546c3f0
};

// Class DeadByDaylight.LevelAISetupComponent
// Size: 0xb8 (Inherited: 0xb8)
struct ULevelAISetupComponent : UActorComponent {
};

// Class DeadByDaylight.WorldRunawayMeshComponent
// Size: 0x1050 (Inherited: 0x1030)
struct UWorldRunawayMeshComponent : UDBDSkeletalMeshComponentBudgeted {
	float ResetCooldown; // 0x1028(0x04)
	float _runAwayMustTickDuration; // 0x102c(0x04)
	float _returnMustTickDuration; // 0x1030(0x04)
	char pad_103C[0x14]; // 0x103c(0x14)

	void SetShouldRunAwayWithRandomDelay(bool should, float delayRange); // Function DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAwayWithRandomDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x5609270
	void SetShouldRunAwayWithDelay(bool should, float Delay); // Function DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAwayWithDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x56091a0
	void SetShouldRunAway(bool should); // Function DeadByDaylight.WorldRunawayMeshComponent.SetShouldRunAway // (Final|Native|Public|BlueprintCallable) // @ game+0x5609110
	bool GetShouldRunAway(); // Function DeadByDaylight.WorldRunawayMeshComponent.GetShouldRunAway // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5608bd0
};

// Class DeadByDaylight.LevelCrowWRMeshComponent
// Size: 0x1050 (Inherited: 0x1050)
struct ULevelCrowWRMeshComponent : UWorldRunawayMeshComponent {
};

// Class DeadByDaylight.LevelParadise
// Size: 0x2b8 (Inherited: 0x230)
struct ALevelParadise : AActor {
	float LoopStartDistance; // 0x230(0x04)
	float LoopDistance; // 0x234(0x04)
	struct USceneComponent* MainPlayerSpawnPoint; // 0x238(0x08)
	struct TArray<struct USceneComponent*> OtherSurvivorSpawnPoints; // 0x240(0x10)
	struct TArray<struct USceneComponent*> ParadiseTiles; // 0x250(0x10)
	struct AActor* ParadiseViewTarget; // 0x260(0x08)
	char pad_268[0x38]; // 0x268(0x38)
	struct ADBDPlayer* _spawnedMainPawn; // 0x2a0(0x08)
	struct USceneComponent* _runnerComponent; // 0x2a8(0x08)
	float _fadeOutDuration; // 0x2b0(0x04)
	float _fadeInDuration; // 0x2b4(0x04)

	void ParadiseEntered(struct FParadiseData& PlayerData); // Function DeadByDaylight.LevelParadise.ParadiseEntered // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x554f6d0
	void OnInterpolationDone(); // Function DeadByDaylight.LevelParadise.OnInterpolationDone // (Final|Native|Private) // @ game+0x554f4b0
};

// Class DeadByDaylight.LevelReadyToPlayPlayerComponent
// Size: 0x108 (Inherited: 0xb8)
struct ULevelReadyToPlayPlayerComponent : UActorComponent {
	char pad_B8[0x20]; // 0xb8(0x20)
	struct TArray<struct FLevelReadyToPlayRequirements> _levelReadyToPlayRequirementsTarget; // 0xd8(0x10)
	struct TArray<struct FLevelReadyToPlayRequirements> _levelReadyToPlayRequirementState; // 0xe8(0x10)
	char pad_F8[0x10]; // 0xf8(0x10)

	void Server_SetIsReadyToPlay(uint32_t readyToPlay); // Function DeadByDaylight.LevelReadyToPlayPlayerComponent.Server_SetIsReadyToPlay // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x554f780
	void OnRep_LevelReadyToPlayRequirementsTarget(); // Function DeadByDaylight.LevelReadyToPlayPlayerComponent.OnRep_LevelReadyToPlayRequirementsTarget // (Final|Native|Private) // @ game+0x554f5a0
};

// Class DeadByDaylight.LightFollower
// Size: 0xe8 (Inherited: 0xb8)
struct ULightFollower : UActorComponent {
	char pad_B8[0x30]; // 0xb8(0x30)

	void SetLeader(struct ULightComponent* Leader, float maxIntensity); // Function DeadByDaylight.LightFollower.SetLeader // (Final|Native|Public|BlueprintCallable) // @ game+0x554f8a0
	void AddFollower(struct ULightComponent* Follower); // Function DeadByDaylight.LightFollower.AddFollower // (Final|Native|Public|BlueprintCallable) // @ game+0x554ee50
};

// Class DeadByDaylight.LightFunctionActorSpawner
// Size: 0x2f0 (Inherited: 0x2f0)
struct ULightFunctionActorSpawner : UActorSpawner {
	struct UTexture* LightFunctionTexture; // 0x2e8(0x08)
};

// Class DeadByDaylight.LightingData
// Size: 0xd8 (Inherited: 0x38)
struct ULightingData : UDataAsset {
	struct TSoftClassPtr<UObject> DefaultLighting; // 0x38(0x30)
	struct TSoftClassPtr<UObject> DefaultAtlantaLighting; // 0x68(0x30)
	struct TArray<struct FSceneLightingDescription> Descriptions; // 0x98(0x10)
	struct TSoftClassPtr<UObject> AdaptiveShadowMapControllersActor; // 0xa8(0x30)
};

// Class DeadByDaylight.LightingFactory
// Size: 0x38 (Inherited: 0x30)
struct ULightingFactory : UObject {
	struct ULightingData* _data; // 0x30(0x08)
};

// Class DeadByDaylight.LightingHelper
// Size: 0xf8 (Inherited: 0x30)
struct ULightingHelper : UObject {
	char pad_30[0x18]; // 0x30(0x18)
	struct ABaseSky* _levelLighting; // 0x48(0x08)
	struct ABaseSky* _levelLightingFixed; // 0x50(0x08)
	struct ABaseSky* _levelLightingSpawned; // 0x58(0x08)
	struct ABaseSky* _levelLightingWithoutExposure; // 0x60(0x08)
	struct AActor* _adaptiveShadowMapControllersActor; // 0x68(0x08)
	struct ULightingInterpolator* _lightingInterpolator; // 0x70(0x08)
	struct ULightingFactory* _lightingFactory; // 0x78(0x08)
	struct UPostProcessComponent* _postProcessCache; // 0x80(0x08)
	bool _bIsChangeCondition; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	struct FName _changeLightingThemeName; // 0x8c(0x0c)
	char pad_98[0x60]; // 0x98(0x60)

	void ToggleLightingChange(bool bActivateLightingChange, struct FName ThemeName); // Function DeadByDaylight.LightingHelper.ToggleLightingChange // (Final|Native|Public|BlueprintCallable) // @ game+0x55571f0
	struct UTextureCube* GetTextureCube(struct FName mapTheme); // Function DeadByDaylight.LightingHelper.GetTextureCube // (Final|Native|Public|BlueprintCallable) // @ game+0x55564a0
	struct UObject* GetSourceLevelLightingClass(); // Function DeadByDaylight.LightingHelper.GetSourceLevelLightingClass // (Final|Native|Public|BlueprintCallable) // @ game+0x5556410
	struct UActorComponent* GetInitialComponentState(struct FName ComponentName); // Function DeadByDaylight.LightingHelper.GetInitialComponentState // (Final|Native|Public|BlueprintCallable) // @ game+0x55561d0
	struct AActor* GetASMController(); // Function DeadByDaylight.LightingHelper.GetASMController // (Final|Native|Public|BlueprintCallable) // @ game+0x55560f0
	void DBD_ModifyExposure(float value); // Function DeadByDaylight.LightingHelper.DBD_ModifyExposure // (Final|Exec|Native|Private|BlueprintCallable) // @ game+0x46a2490
};

// Class DeadByDaylight.LightingInterpolator
// Size: 0x80 (Inherited: 0x30)
struct ULightingInterpolator : UObject {
	struct FMulticastInlineDelegate OnInterpolationDone; // 0x30(0x10)
	char pad_40[0x38]; // 0x40(0x38)
	struct ABaseSky* _targetLighting; // 0x78(0x08)

	void LerpSkylight(struct USkyLightComponent* Target, struct USkyLightComponent* A, struct USkyLightComponent* B, float alpha); // Function DeadByDaylight.LightingInterpolator.LerpSkylight // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5556a90
	void LerpLight(struct ULightComponent* Target, struct ULightComponent* A, struct ULightComponent* B, float alpha); // Function DeadByDaylight.LightingInterpolator.LerpLight // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5556940
	void LerpHeightFog(struct UExponentialHeightFogComponent* Target, struct UExponentialHeightFogComponent* A, struct UExponentialHeightFogComponent* B, float alpha, float thresholdBeforeSwitchingtoB); // Function DeadByDaylight.LightingInterpolator.LerpHeightFog // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55567b0
};

// Class DeadByDaylight.SpawnerStrategy
// Size: 0x30 (Inherited: 0x30)
struct USpawnerStrategy : UObject {
};

// Class DeadByDaylight.LimitAccumulationSpawnerStrategy
// Size: 0x40 (Inherited: 0x30)
struct ULimitAccumulationSpawnerStrategy : USpawnerStrategy {
	char pad_30[0x10]; // 0x30(0x10)

	void SetRecycleThresholdPercentage(float recycleThresholdPercentage); // Function DeadByDaylight.LimitAccumulationSpawnerStrategy.SetRecycleThresholdPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x55570e0
	void SetRecycleDistancePercentage(float recycleDistancePercentage); // Function DeadByDaylight.LimitAccumulationSpawnerStrategy.SetRecycleDistancePercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x5557060
	void SetMaxOverlapping(int32_t maxOverlapping); // Function DeadByDaylight.LimitAccumulationSpawnerStrategy.SetMaxOverlapping // (Final|Native|Public|BlueprintCallable) // @ game+0x5556f40
};

// Class DeadByDaylight.LoadingScreen
// Size: 0x138 (Inherited: 0x120)
struct ULoadingScreen : UScreenBase {
	char pad_120[0x18]; // 0x120(0x18)

	void OnLoadingTextTimerComplete(); // Function DeadByDaylight.LoadingScreen.OnLoadingTextTimerComplete // (Final|Native|Public|Const) // @ game+0x546c3f0
};

// Class DeadByDaylight.LoadingUtilities
// Size: 0x30 (Inherited: 0x30)
struct ULoadingUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.LoadoutControllerSubsystem
// Size: 0x38 (Inherited: 0x38)
struct ULoadoutControllerSubsystem : UGameInstanceSubsystem {
};

// Class DeadByDaylight.LoadoutPresetController
// Size: 0x30 (Inherited: 0x30)
struct ULoadoutPresetController : UObject {
};

// Class DeadByDaylight.LoadoutSlotFloatingWidget
// Size: 0x378 (Inherited: 0x370)
struct ULoadoutSlotFloatingWidget : UBaseTooltipWidget {
	struct UTextBlock* Message; // 0x370(0x08)
};

// Class DeadByDaylight.LobbyControllerSubsystem
// Size: 0xb0 (Inherited: 0x38)
struct ULobbyControllerSubsystem : UGameInstanceSubsystem {
	struct TWeakObjectPtr<struct ULobbyDisplayStandController> _localPlayerDisplayStandController; // 0x38(0x08)
	struct TMap<struct FString, struct ULobbyDisplayStandController*> _displayStandControllers; // 0x40(0x50)
	char pad_90[0x20]; // 0x90(0x20)
};

// Class DeadByDaylight.LobbyDialogueSubsystem
// Size: 0x90 (Inherited: 0x38)
struct ULobbyDialogueSubsystem : UGameInstanceSubsystem {
	char pad_38[0x58]; // 0x38(0x58)

	void NotifyDialogueInterrupted(); // Function DeadByDaylight.LobbyDialogueSubsystem.NotifyDialogueInterrupted // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5556d00
	void NotifyCharacterPlayedDialogueForThisLobby(struct FString characterName, int32_t dialogueId); // Function DeadByDaylight.LobbyDialogueSubsystem.NotifyCharacterPlayedDialogueForThisLobby // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x5556c30
	bool IsLobbyFullForRole(enum class EPlayerRole Role); // Function DeadByDaylight.LobbyDialogueSubsystem.IsLobbyFullForRole // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5556700
	bool HasCharacterPlayedDialogueForThisLobby(struct FString characterName, int32_t dialogueId); // Function DeadByDaylight.LobbyDialogueSubsystem.HasCharacterPlayedDialogueForThisLobby // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5556550
	struct TArray<struct ADBDMenuPlayer*> GetGuestLobbyMembers(); // Function DeadByDaylight.LobbyDialogueSubsystem.GetGuestLobbyMembers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5556150
	void CountGuestLobbyMembersWithAudioSwitch(enum class EAudioCustomizationCategory switchCategory, struct TArray<struct FString>& audioSwitches, int32_t& numMatching, int32_t& numNotMatching); // Function DeadByDaylight.LobbyDialogueSubsystem.CountGuestLobbyMembersWithAudioSwitch // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x5555f40
};

// Class DeadByDaylight.LobbyDisplayStandController
// Size: 0x1c8 (Inherited: 0x120)
struct ULobbyDisplayStandController : UDisplayStandController {
	char pad_120[0xa8]; // 0x120(0xa8)
};

// Class DeadByDaylight.LobbyPositionsSubsystem
// Size: 0xf0 (Inherited: 0x38)
struct ULobbyPositionsSubsystem : UGameInstanceSubsystem {
	char pad_38[0xb8]; // 0x38(0xb8)
};

// Class DeadByDaylight.LocalEventManager
// Size: 0x1730 (Inherited: 0x38)
struct ULocalEventManager : UGameInstanceSubsystem {
	char pad_38[0x16f8]; // 0x38(0x16f8)
};

// Class DeadByDaylight.LocalizationSearchSubsystem
// Size: 0x38 (Inherited: 0x38)
struct ULocalizationSearchSubsystem : UGameInstanceSubsystem {
};

// Class DeadByDaylight.LocalPlayerTrackerComponent
// Size: 0xc8 (Inherited: 0xb8)
struct ULocalPlayerTrackerComponent : UActorComponent {
	struct FMulticastInlineDelegate TrackerOnLocallyObservedChanged; // 0xb8(0x10)

	void TriggerOnLocallyObservedChanged(); // Function DeadByDaylight.LocalPlayerTrackerComponent.TriggerOnLocallyObservedChanged // (Final|Native|Public) // @ game+0x55572f0
};

// Class DeadByDaylight.LocalPlayerUtilities
// Size: 0x30 (Inherited: 0x30)
struct ULocalPlayerUtilities : UBlueprintFunctionLibrary {

	struct ADBDPlayerState* GetLocalHumanPlayerState(struct UObject* WorldContextObject); // Function DeadByDaylight.LocalPlayerUtilities.GetLocalHumanPlayerState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55562b0
};

// Class DeadByDaylight.Locker
// Size: 0x488 (Inherited: 0x338)
struct ALocker : AInteractable {
	char pad_338[0x10]; // 0x338(0x10)
	struct FMulticastInlineDelegate OnPlayerInLockerChanged; // 0x348(0x10)
	float FastDoorActivationAudibleRange; // 0x358(0x04)
	float NormalDoorActivationAudibleRange; // 0x35c(0x04)
	struct UBoxComponent* _boxComponent; // 0x360(0x08)
	struct UAnimationMontageSlave* _montageFollower; // 0x368(0x08)
	struct UMontagePlayer* _montagePlayer; // 0x370(0x08)
	struct ADBDPlayer* _playerOpeningLocker; // 0x378(0x08)
	struct ADBDPlayer* _playerInLocker; // 0x380(0x08)
	struct UInteractor* _mainInteractor; // 0x388(0x08)
	struct UPrimitiveComponent* _frontInteractionZone; // 0x390(0x08)
	struct UInteractionDefinition* _searchEmpty; // 0x398(0x08)
	struct UInteractionDefinition* _searchPlayer; // 0x3a0(0x08)
	struct UChildActorComponent* _killerInteractionActor; // 0x3a8(0x08)
	struct UInteractionDefinition* _enterSneak; // 0x3b0(0x08)
	struct FName _camperSocket; // 0x3b8(0x0c)
	char pad_3C4[0x4]; // 0x3c4(0x04)
	struct ULockerAnimInstance* _lockerAnimInstance; // 0x3c8(0x08)
	struct FGameplayTagContainer _interactionExitClosetSemantics; // 0x3d0(0x20)
	char pad_3F0[0x48]; // 0x3f0(0x48)
	bool _preventAllInteractions; // 0x438(0x01)
	bool _local_preventAllInteractions; // 0x439(0x01)
	char pad_43A[0x6]; // 0x43a(0x06)
	struct ABaseLockerItem* _spawnedLockerItem; // 0x440(0x08)
	char pad_448[0x38]; // 0x448(0x38)
	struct UAIPerceptionStimuliSourceComponent* _perceptionStimuliComponent; // 0x480(0x08)

	void StopMinNearOutlineDistLerp(struct ADBDPlayer* Player); // Function DeadByDaylight.Locker.StopMinNearOutlineDistLerp // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void StartMinNearOutlineDistLerp(struct ADBDPlayer* Player); // Function DeadByDaylight.Locker.StartMinNearOutlineDistLerp // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetSurvivorInLocker(struct ACamperPlayer* Survivor); // Function DeadByDaylight.Locker.SetSurvivorInLocker // (Final|Native|Public|BlueprintCallable) // @ game+0x5557160
	void SetPlayerOpeningLocker(struct ADBDPlayer* Player); // Function DeadByDaylight.Locker.SetPlayerOpeningLocker // (Final|Native|Public|BlueprintCallable) // @ game+0x5556fd0
	void OnSurvivorHealthChanged(enum class ECamperDamageState before, enum class ECamperDamageState after); // Function DeadByDaylight.Locker.OnSurvivorHealthChanged // (Final|Native|Private) // @ game+0x5556e70
	void OnSurvivorEndPlay(struct AActor* Actor, enum class EEndPlayReason EndPlayReason); // Function DeadByDaylight.Locker.OnSurvivorEndPlay // (Final|Native|Private) // @ game+0x5556da0
	void OnRep_PreventAllInteractions(); // Function DeadByDaylight.Locker.OnRep_PreventAllInteractions // (Final|Native|Private) // @ game+0x5556d60
	void OnPlayerInLockerChanged__DelegateSignature(struct ADBDPlayer* playerWhoWasInLocker, struct ADBDPlayer* playerNowInLocker); // DelegateFunction DeadByDaylight.Locker.OnPlayerInLockerChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void Multicast_EjectSurvivor(); // Function DeadByDaylight.Locker.Multicast_EjectSurvivor // (Net|NetReliableNative|Event|NetMulticast|Public|NetValidate) // @ game+0x5556be0
	bool IsOccupied(); // Function DeadByDaylight.Locker.IsOccupied // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5556780
	bool IsFacingLocker(struct ADBDPlayer* Player, float toleranceDegreeAngle); // Function DeadByDaylight.Locker.IsFacingLocker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5556630
	struct ACamperPlayer* GetSurvivorInLocker(); // Function DeadByDaylight.Locker.GetSurvivorInLocker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5556470
	struct UPrimitiveComponent* GetStunZone(); // Function DeadByDaylight.Locker.GetStunZone // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x5556440
	struct ADBDPlayer* GetPlayerInLocker(); // Function DeadByDaylight.Locker.GetPlayerInLocker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55563e0
	struct FVector GetPlayerInClosetLocation(); // Function DeadByDaylight.Locker.GetPlayerInClosetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55563a0
	struct USkeletalMeshComponent* GetMesh(); // Function DeadByDaylight.Locker.GetMesh // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5556370
	struct UInteractionDefinition* GetLockerHideEnterSneakInteraction(); // Function DeadByDaylight.Locker.GetLockerHideEnterSneakInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5556340
	struct UInteractor* GetInteractor(); // Function DeadByDaylight.Locker.GetInteractor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5556280
	struct AActor* GetChildInteractionActor(); // Function DeadByDaylight.Locker.GetChildInteractionActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5556120
	void EjectSurvivor(); // Function DeadByDaylight.Locker.EjectSurvivor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Authority_ReportOpenLockerNoiseEventToAI(bool fastActivation); // Function DeadByDaylight.Locker.Authority_ReportOpenLockerNoiseEventToAI // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5555eb0
	void Authority_EnableOtherInteractors(struct UInteractor* usableInteractor, bool usable); // Function DeadByDaylight.Locker.Authority_EnableOtherInteractors // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5555de0
};

// Class DeadByDaylight.LockerAmmoActorOutlineUpdateStrategy
// Size: 0xe0 (Inherited: 0xe0)
struct ULockerAmmoActorOutlineUpdateStrategy : UDefaultOutlineUpdateStrategy {
};

// Class DeadByDaylight.LockerAnimInstance
// Size: 0x2d0 (Inherited: 0x2d0)
struct ULockerAnimInstance : USleepingAnimInstance {
};

// Class DeadByDaylight.LockerOutlineUpdateStrategy
// Size: 0x150 (Inherited: 0x138)
struct ULockerOutlineUpdateStrategy : USourceBasedOutlineUpdateStrategy {
	char pad_138[0x18]; // 0x138(0x18)

	struct FLinearColor GetRedColor(); // Function DeadByDaylight.LockerOutlineUpdateStrategy.GetRedColor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x555bb40
};

// Class DeadByDaylight.LoudNoise
// Size: 0x2a0 (Inherited: 0x230)
struct ALoudNoise : AActor {
	struct UDecalComponent* _toInfinityDecal; // 0x230(0x08)
	struct UParticleSystemComponent* _distortionParticleSystem; // 0x238(0x08)
	struct UAkComponent* _ak_audio_loudNoise; // 0x240(0x08)
	struct USceneComponent* _rootScene; // 0x248(0x08)
	float _loudNoiseMinDistance; // 0x250(0x04)
	char pad_254[0x34]; // 0x254(0x34)
	float _loudNoiseLifetime; // 0x288(0x04)
	float _heightToAddToLoudNoiseLocation; // 0x28c(0x04)
	float _loudNoiseDecalDistance; // 0x290(0x04)
	float _cameraDecalDistance; // 0x294(0x04)
	char pad_298[0x8]; // 0x298(0x08)
};

// Class DeadByDaylight.LoudNoiseEventSystem
// Size: 0x128 (Inherited: 0xb8)
struct ULoudNoiseEventSystem : UActorComponent {
	char pad_B8[0x70]; // 0xb8(0x70)
};

// Class DeadByDaylight.LoudNoiseHUDIndicator
// Size: 0x290 (Inherited: 0x220)
struct ULoudNoiseHUDIndicator : USceneComponent {
	struct UStaticMesh* MaskMesh; // 0x218(0x08)
	struct UStaticMesh* DistortionMesh; // 0x220(0x08)
	float EdgePadding; // 0x228(0x04)
	float CornerRoundness; // 0x22c(0x04)
	float ScreenFadeOutDistance; // 0x230(0x04)
	struct FMulticastInlineDelegate LoudNoiseAddedEvent; // 0x238(0x10)
	char pad_24C[0x34]; // 0x24c(0x34)
	struct TArray<struct FLoudNoiseIndicatorData> _trackedNoises; // 0x280(0x10)

	void AddTrackedNoise(struct FVector Location, float Duration); // Function DeadByDaylight.LoudNoiseHUDIndicator.AddTrackedNoise // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x555ac30
};

// Class DeadByDaylight.LoudNoiseNotifier
// Size: 0x30 (Inherited: 0x30)
struct ULoudNoiseNotifier : UBlueprintFunctionLibrary {

	void FireWithTimeBudgeter(struct UObject* WorldContextObject, struct AActor* Instigator, struct FVector& Location, bool shouldTrack, float audibleRange, struct ADBDPlayer* instigatingPlayer, bool isQuickAction); // Function DeadByDaylight.LoudNoiseNotifier.FireWithTimeBudgeter // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x555b860
	void Fire(struct UObject* WorldContextObject, struct AActor* Instigator, struct FVector& Location, bool shouldTrack, float audibleRange, struct ADBDPlayer* instigatingPlayer, bool isQuickAction, bool isDeceivingNoise); // Function DeadByDaylight.LoudNoiseNotifier.Fire // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x555b5f0
};

// Class DeadByDaylight.LoudNoiseUtilities
// Size: 0x30 (Inherited: 0x30)
struct ULoudNoiseUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.LunarEventComponent
// Size: 0x108 (Inherited: 0xb8)
struct ULunarEventComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	int32_t _lanternCollectedCount; // 0xd0(0x04)
	int32_t _additionalEventProgressCount; // 0xd4(0x04)
	char pad_D8[0x30]; // 0xd8(0x30)

	void OnRep_lanternCollectedCount(); // Function DeadByDaylight.LunarEventComponent.OnRep_lanternCollectedCount // (Final|Native|Private) // @ game+0x555c770
	void OnLanternHoldTimerEnd(); // Function DeadByDaylight.LunarEventComponent.OnLanternHoldTimerEnd // (Final|Native|Private) // @ game+0x555c320
	void OnFinishedPlaying(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LunarEventComponent.OnFinishedPlaying // (Final|Native|Private|HasOutParms) // @ game+0x555c180
	void Multicast_ResetLanternLight(struct ALanternInteractable* LanternInteractable); // Function DeadByDaylight.LunarEventComponent.Multicast_ResetLanternLight // (Final|Net|NetReliableNative|Event|NetMulticast|Private|NetValidate) // @ game+0x555bf90
	void Local_OnCamperLostLantern(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LunarEventComponent.Local_OnCamperLostLantern // (Final|Native|Private|HasOutParms) // @ game+0x555be80
	void Local_OnCamperEscape(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LunarEventComponent.Local_OnCamperEscape // (Final|Native|Private|HasOutParms) // @ game+0x555bd70
	void Authority_OnSlasherDestroysLantern(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LunarEventComponent.Authority_OnSlasherDestroysLantern // (Final|Native|Private|HasOutParms) // @ game+0x555b370
	void Authority_OnPlayerLeaveGame(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LunarEventComponent.Authority_OnPlayerLeaveGame // (Final|Native|Private|HasOutParms) // @ game+0x555b260
	void Authority_OnPickupLantern(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LunarEventComponent.Authority_OnPickupLantern // (Final|Native|Private|HasOutParms) // @ game+0x555b150
	void Authority_OnFixGenerator(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LunarEventComponent.Authority_OnFixGenerator // (Final|Native|Private|HasOutParms) // @ game+0x555b040
	void Authority_OnDestroyCamperLightGameEvent(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LunarEventComponent.Authority_OnDestroyCamperLightGameEvent // (Final|Native|Private|HasOutParms) // @ game+0x555af30
	void Authority_OnCamperLostLantern(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LunarEventComponent.Authority_OnCamperLostLantern // (Final|Native|Private|HasOutParms) // @ game+0x555ae20
	void Authority_OnCamperEscape(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.LunarEventComponent.Authority_OnCamperEscape // (Final|Native|Private|HasOutParms) // @ game+0x555ad10
};

// Class DeadByDaylight.MagicFountain
// Size: 0x350 (Inherited: 0x338)
struct AMagicFountain : AInteractable {
	char pad_338[0x8]; // 0x338(0x08)
	struct FVector AIInteractionOffset; // 0x340(0x0c)
	char pad_34C[0x4]; // 0x34c(0x04)

	bool IsCorrupted(); // Function DeadByDaylight.MagicFountain.IsCorrupted // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x555bca0
};

// Class DeadByDaylight.MagicFountainOutlineUpdateStrategy
// Size: 0xd8 (Inherited: 0xc0)
struct UMagicFountainOutlineUpdateStrategy : UOutlineUpdateStrategy {
	struct FLinearColor _outlineColor; // 0xc0(0x10)
	char pad_D0[0x8]; // 0xd0(0x08)

	void SetFountainCorrupted(bool corrupted); // Function DeadByDaylight.MagicFountainOutlineUpdateStrategy.SetFountainCorrupted // (Final|Native|Public|BlueprintCallable) // @ game+0x555c790
};

// Class DeadByDaylight.ManualIconStrategy
// Size: 0x40 (Inherited: 0x38)
struct UManualIconStrategy : UBasePerkIconStrategy {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class DeadByDaylight.MapActorComponent
// Size: 0xe8 (Inherited: 0xb8)
struct UMapActorComponent : UActorComponent {
	enum class EMapActorCategory category; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
	struct UPrimitiveComponent* _mapActorCollider; // 0xc0(0x08)
	char pad_C8[0x18]; // 0xc8(0x18)
	bool _detectionEnabled; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)

	void Multicast_SetDetectionEnabled(bool Enabled); // Function DeadByDaylight.MapActorComponent.Multicast_SetDetectionEnabled // (BlueprintAuthorityOnly|Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x4d62570
	bool IsKnownBy(struct ADBDPlayer* Character); // Function DeadByDaylight.MapActorComponent.IsKnownBy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x555bcd0
	bool GetDetectionEnabled(); // Function DeadByDaylight.MapActorComponent.GetDetectionEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x555ba90
};

// Class DeadByDaylight.MapActorDB
// Size: 0x80 (Inherited: 0x30)
struct UMapActorDB : UObject {
	char pad_30[0x50]; // 0x30(0x50)

	struct TArray<struct AActor*> GetUniqueRandom(struct TArray<enum class EMapActorCategory>& Categories, int32_t Count); // Function DeadByDaylight.MapActorDB.GetUniqueRandom // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x555bb60
	struct AActor* GetRandom(enum class EMapActorCategory category); // Function DeadByDaylight.MapActorDB.GetRandom // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x555bab0
	struct TArray<enum class EMapActorCategory> CopyListMinusCategories(struct TArray<enum class EMapActorCategory>& Categories, struct TArray<enum class EMapActorCategory>& categoriesToRemove); // Function DeadByDaylight.MapActorDB.CopyListMinusCategories // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x555b480
};

// Class DeadByDaylight.MapActorDetectorComponent
// Size: 0xe0 (Inherited: 0xb8)
struct UMapActorDetectorComponent : UActorComponent {
	struct FMulticastInlineDelegate OnActorDetected; // 0xb8(0x10)
	struct TArray<enum class EMapActorCategory> CollectedCategories; // 0xc8(0x10)
	struct UPrimitiveComponent* _primitive; // 0xd8(0x08)

	void SetDetectionPrimitive(struct UPrimitiveComponent* Primitive); // Function DeadByDaylight.MapActorDetectorComponent.SetDetectionPrimitive // (Final|Native|Public|BlueprintCallable) // @ game+0x545fbb0
	void OnOverlapEnter(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.MapActorDetectorComponent.OnOverlapEnter // (Final|Native|Protected|HasOutParms) // @ game+0x555c3d0
};

// Class DeadByDaylight.MapData
// Size: 0xe8 (Inherited: 0x38)
struct UMapData : UDataAsset {
	struct FName ThemeName; // 0x38(0x0c)
	struct FName ThemeWeather; // 0x44(0x0c)
	struct FName AudioStateThemes; // 0x50(0x0c)
	struct FName AudioStateWeather; // 0x5c(0x0c)
	struct FName AudioThemeEvent; // 0x68(0x0c)
	struct FName AudioLimitPointEvent; // 0x74(0x0c)
	struct TSoftObjectPtr<UAkAudioBank> AudioThemeSoundBank; // 0x80(0x30)
	int32_t MapWidth; // 0xb0(0x04)
	int32_t MapHeight; // 0xb4(0x04)
	bool Draft; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
	struct TArray<struct FTileProperties> MapTileProperties; // 0xc0(0x10)
	struct UBlackboardData* Blackboard; // 0xd0(0x08)
	bool Gesture; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
	struct UProceduralGenerationData* _proceduralGenerationData; // 0xe0(0x08)
};

// Class DeadByDaylight.MatchHandler
// Size: 0x30 (Inherited: 0x30)
struct UMatchHandler : UObject {
};

// Class DeadByDaylight.MatchIncentivesManager
// Size: 0x78 (Inherited: 0x38)
struct UMatchIncentivesManager : UGameInstanceSubsystem {
	char pad_38[0x40]; // 0x38(0x40)
};

// Class DeadByDaylight.MatchmakingFlowSubsystem
// Size: 0x108 (Inherited: 0x38)
struct UMatchmakingFlowSubsystem : UGameInstanceSubsystem {
	char pad_38[0xd0]; // 0x38(0xd0)
};

// Class DeadByDaylight.MatchMakingWidgetScreen
// Size: 0x120 (Inherited: 0x120)
struct UMatchMakingWidgetScreen : UScreenBase {
};

// Class DeadByDaylight.MatchManagementScreen
// Size: 0x1e0 (Inherited: 0x120)
struct UMatchManagementScreen : UScreenBase {
	char pad_120[0xc0]; // 0x120(0xc0)

	void OnRemoveMap(struct FString MapId); // Function DeadByDaylight.MatchManagementScreen.OnRemoveMap // (Final|Native|Private) // @ game+0x555c680
	void OnPerksSettingsChange(int32_t value); // Function DeadByDaylight.MatchManagementScreen.OnPerksSettingsChange // (Final|Native|Private) // @ game+0x555c5f0
	void OnOfferingsSettingsChange(int32_t value); // Function DeadByDaylight.MatchManagementScreen.OnOfferingsSettingsChange // (Final|Native|Private) // @ game+0x555c340
	void OnItemsAndAddonsSettingsChange(int32_t value); // Function DeadByDaylight.MatchManagementScreen.OnItemsAndAddonsSettingsChange // (Final|Native|Private) // @ game+0x555c290
	void OnBackButtonClick(); // Function DeadByDaylight.MatchManagementScreen.OnBackButtonClick // (Final|Native|Private) // @ game+0x546c3f0
	void OnApplyChangesClicked(); // Function DeadByDaylight.MatchManagementScreen.OnApplyChangesClicked // (Final|Native|Private) // @ game+0x555c160
	void OnAllowDlcSettingsClick(); // Function DeadByDaylight.MatchManagementScreen.OnAllowDlcSettingsClick // (Final|Native|Private) // @ game+0x555c140
	void OnAddMap(struct FString MapId); // Function DeadByDaylight.MatchManagementScreen.OnAddMap // (Final|Native|Private) // @ game+0x555c050
};

// Class DeadByDaylight.MeatHook
// Size: 0x5f0 (Inherited: 0x338)
struct AMeatHook : AInteractable {
	char pad_338[0x20]; // 0x338(0x20)
	bool WasSurvivorStruggleCancelled; // 0x358(0x01)
	bool IsSacrificeEnabled; // 0x359(0x01)
	char pad_35A[0x2]; // 0x35a(0x02)
	struct FVector AIInteractionOffset; // 0x35c(0x0c)
	char pad_368[0xa8]; // 0x368(0xa8)
	struct TArray<struct UDBDClipRegionComponent*> ClipRegions; // 0x410(0x10)
	bool IsSurvivorStruggling; // 0x420(0x01)
	bool IsInBasement; // 0x421(0x01)
	bool IsBreakable; // 0x422(0x01)
	bool IsSabotageable; // 0x423(0x01)
	struct FGameplayTag HookIdentityTag; // 0x424(0x0c)
	bool SnapHookedCharacter; // 0x430(0x01)
	bool FullyHooked; // 0x431(0x01)
	char pad_432[0x2]; // 0x432(0x02)
	float _struggleThreshold; // 0x434(0x04)
	struct UCharacterPusherComponent* _characterPusher; // 0x438(0x08)
	struct UCapsuleComponent* _slasherCollisionBlocker; // 0x440(0x08)
	struct UCapsuleComponent* _conditionalSlasherCollisionBlocker; // 0x448(0x08)
	struct FGameplayTagContainer _conditionalSlasherCollisionBlockerPresenceTags; // 0x450(0x20)
	struct UPollableEventListener* _eventListener; // 0x470(0x08)
	struct ACamperPlayer* _hookedSurvivor; // 0x478(0x08)
	struct ADBDPlayer* _hookBreakerPlayer; // 0x480(0x08)
	char pad_488[0x70]; // 0x488(0x70)
	struct TSet<struct ACamperPlayer*> _campersThatSabotagedMeatHook; // 0x4f8(0x50)
	struct UInteractor* _mainInteractor; // 0x548(0x08)
	struct UChargeableInteractionDefinition* _unhook; // 0x550(0x08)
	struct USceneComponent* _camperHookedSnapTransform; // 0x558(0x08)
	struct AEntity* _entity; // 0x560(0x08)
	char pad_568[0x1c]; // 0x568(0x1c)
	bool _preventDrainProgression; // 0x584(0x01)
	char pad_585[0x3]; // 0x585(0x03)
	struct UAIPerceptionStimuliSourceComponent* _perceptionStimuliComponent; // 0x588(0x08)
	struct ADBDPlayer* _interactingPlayer; // 0x590(0x08)
	struct UMapActorComponent* _cachedMapActor; // 0x598(0x08)
	char pad_5A0[0x50]; // 0x5a0(0x50)

	void UpdateSlasherBlockerCollision(); // Function DeadByDaylight.MeatHook.UpdateSlasherBlockerCollision // (Final|Native|Protected|BlueprintCallable) // @ game+0x5561fb0
	void SetMapActor(struct UMapActorComponent* value); // Function DeadByDaylight.MeatHook.SetMapActor // (Final|Native|Public|BlueprintCallable) // @ game+0x5561d70
	void SetIsBeingSabotaged(bool isBeingSabotaged); // Function DeadByDaylight.MeatHook.SetIsBeingSabotaged // (Final|Native|Public|BlueprintCallable) // @ game+0x5561ce0
	void SetInteractingPlayer(struct ADBDPlayer* interactingPlayer); // Function DeadByDaylight.MeatHook.SetInteractingPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x5561c50
	void SetEntity(struct AEntity* Entity); // Function DeadByDaylight.MeatHook.SetEntity // (Final|Native|Protected|BlueprintCallable) // @ game+0x5561bc0
	void OnTickStruggle(float DeltaTime); // Function DeadByDaylight.MeatHook.OnTickStruggle // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnStruggleSkillCheckFailed_Cosmetic(); // Function DeadByDaylight.MeatHook.OnStruggleSkillCheckFailed_Cosmetic // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnStruggleExit(); // Function DeadByDaylight.MeatHook.OnStruggleExit // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnStruggleEnter(); // Function DeadByDaylight.MeatHook.OnStruggleEnter // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnStopPushingPlayer(struct ACharacter* Character); // Function DeadByDaylight.MeatHook.OnStopPushingPlayer // (Final|Native|Private) // @ game+0x55617c0
	void OnStartPushingPlayer(struct ACharacter* Character); // Function DeadByDaylight.MeatHook.OnStartPushingPlayer // (Final|Native|Private) // @ game+0x5561730
	void OnSacrificeOut(); // Function DeadByDaylight.MeatHook.OnSacrificeOut // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnSacrificeIn(); // Function DeadByDaylight.MeatHook.OnSacrificeIn // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnReactionIn(); // Function DeadByDaylight.MeatHook.OnReactionIn // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnReaction(); // Function DeadByDaylight.MeatHook.OnReaction // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnOwnerReplicated(); // Function DeadByDaylight.MeatHook.OnOwnerReplicated // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnHookingExit(); // Function DeadByDaylight.MeatHook.OnHookingExit // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnHookingEnter(); // Function DeadByDaylight.MeatHook.OnHookingEnter // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnHookedSurvivorChanged(struct ACamperPlayer* before, struct ACamperPlayer* after); // Function DeadByDaylight.MeatHook.OnHookedSurvivorChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnHookedSurvivorAttacked(); // Function DeadByDaylight.MeatHook.OnHookedSurvivorAttacked // (Final|Native|Protected) // @ game+0x5561400
	void OnHookedIdle(); // Function DeadByDaylight.MeatHook.OnHookedIdle // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnHookedExit(); // Function DeadByDaylight.MeatHook.OnHookedExit // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnHookedEnter(); // Function DeadByDaylight.MeatHook.OnHookedEnter // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnAutoRepair(); // Function DeadByDaylight.MeatHook.OnAutoRepair // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void Multicast_SetIsSacrificed(bool IsSacrificed); // Function DeadByDaylight.MeatHook.Multicast_SetIsSacrificed // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5561250
	void Multicast_SetIsSabotaged(bool setIsSabotaged, struct ADBDPlayer* hookBreaker, bool useCamperHookRespawnDurationModifiers, float overrideBaseHookRespawnDuration); // Function DeadByDaylight.MeatHook.Multicast_SetIsSabotaged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55610e0
	void Multicast_SetIsBrokenFromUnhook(bool setIsBrokendFromUnhook, struct ADBDPlayer* hookBreaker, float overrideBaseHookRespawnDuration); // Function DeadByDaylight.MeatHook.Multicast_SetIsBrokenFromUnhook // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5560fc0
	void Multicast_SetHookedSurvivor(struct ACamperPlayer* Survivor); // Function DeadByDaylight.MeatHook.Multicast_SetHookedSurvivor // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x5482030
	void Multicast_RefreshCharmCustomization(); // Function DeadByDaylight.MeatHook.Multicast_RefreshCharmCustomization // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x5560fa0
	void Multicast_EscapeAttemptResult(struct ADBDPlayer* Player, bool Result); // Function DeadByDaylight.MeatHook.Multicast_EscapeAttemptResult // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x5560ed0
	void Local_MoveSurvivorToHook(struct ACamperPlayer* Survivor, float Duration); // Function DeadByDaylight.MeatHook.Local_MoveSurvivorToHook // (Final|Native|Public|BlueprintCallable) // @ game+0x5560e00
	struct FAnimationMontageDescriptor GetUnhookOutMontageDescriptor(); // Function DeadByDaylight.MeatHook.GetUnhookOutMontageDescriptor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560b00
	struct FAnimationMontageDescriptor GetUnhookInMontageDescriptor(); // Function DeadByDaylight.MeatHook.GetUnhookInMontageDescriptor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560ab0
	struct UChargeableInteractionDefinition* GetUnhookCID(); // Function DeadByDaylight.MeatHook.GetUnhookCID // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x552fb70
	float GetStruggleThreshold(); // Function DeadByDaylight.MeatHook.GetStruggleThreshold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560a80
	float GetStrugglePercent(); // Function DeadByDaylight.MeatHook.GetStrugglePercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560a50
	struct ADBDPlayer* GetSaboteurPlayer(); // Function DeadByDaylight.MeatHook.GetSaboteurPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x45df350
	float GetSabotageHookRespawnDuration(); // Function DeadByDaylight.MeatHook.GetSabotageHookRespawnDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560a20
	struct UMontagePlayer* GetMontagePlayer(); // Function DeadByDaylight.MeatHook.GetMontagePlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55609f0
	struct UAkComponent* GetMeatHookAkAudioComponent(); // Function DeadByDaylight.MeatHook.GetMeatHookAkAudioComponent // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	struct UInteractor* GetMainInteractor(); // Function DeadByDaylight.MeatHook.GetMainInteractor // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55609c0
	struct USphereComponent* GetKickSlasherDetectionZone(); // Function DeadByDaylight.MeatHook.GetKickSlasherDetectionZone // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	bool GetIsSacrificed(); // Function DeadByDaylight.MeatHook.GetIsSacrificed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x462ad30
	bool GetIsSabotaged(); // Function DeadByDaylight.MeatHook.GetIsSabotaged // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560990
	bool GetIsInBasement(); // Function DeadByDaylight.MeatHook.GetIsInBasement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560970
	bool GetIsBroken(); // Function DeadByDaylight.MeatHook.GetIsBroken // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560940
	struct UBoxComponent* GetInteractorZoneComponent(); // Function DeadByDaylight.MeatHook.GetInteractorZoneComponent // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	struct UPrimitiveComponent* GetInteractorPrimitiveComponent(); // Function DeadByDaylight.MeatHook.GetInteractorPrimitiveComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5560910
	struct ADBDPlayer* GetInteractingPlayer(); // Function DeadByDaylight.MeatHook.GetInteractingPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55608f0
	struct FVector GetHookPosition(); // Function DeadByDaylight.MeatHook.GetHookPosition // (Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	struct ACamperPlayer* GetHookedSurvivor(); // Function DeadByDaylight.MeatHook.GetHookedSurvivor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55608c0
	struct UHookableComponent* GetHookableComponentOfHookedActor(); // Function DeadByDaylight.MeatHook.GetHookableComponentOfHookedActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560890
	struct UChargeableInteractionDefinition* GetEscapeHookCID(); // Function DeadByDaylight.MeatHook.GetEscapeHookCID // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	struct UCharacterPusherComponent* GetCharacterPusher(); // Function DeadByDaylight.MeatHook.GetCharacterPusher // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560860
	struct USceneComponent* GetCamperUnkookFocalPointTransform(); // Function DeadByDaylight.MeatHook.GetCamperUnkookFocalPointTransform // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	struct USceneComponent* GetCamperHookedSnapTransform(); // Function DeadByDaylight.MeatHook.GetCamperHookedSnapTransform // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5560830
	void FireHookSoundEvent(struct FName NoiseRangeTunable, struct ADBDPlayer* soundInstigator); // Function DeadByDaylight.MeatHook.FireHookSoundEvent // (Event|Public|BlueprintCallable|BlueprintEvent|Const) // @ game+0x5e02c90
	void DebugHookedSurvivor(struct ACamperPlayer* expectedSurvivor); // Function DeadByDaylight.MeatHook.DebugHookedSurvivor // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x55606f0
	void Cosmetic_SetAsScourgeHookStart(); // Function DeadByDaylight.MeatHook.Cosmetic_SetAsScourgeHookStart // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x5e02c90
	bool CanUnhookSurvivor(struct ACamperPlayer* Survivor); // Function DeadByDaylight.MeatHook.CanUnhookSurvivor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560650
	bool CanSurvivorStruggle(struct ACamperPlayer* Survivor); // Function DeadByDaylight.MeatHook.CanSurvivorStruggle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55605b0
	bool CanSurvivorAttemptEscape(struct ACamperPlayer* Survivor); // Function DeadByDaylight.MeatHook.CanSurvivorAttemptEscape // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560510
	bool CanHookSurvivor(); // Function DeadByDaylight.MeatHook.CanHookSurvivor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55604e0
	bool CanBeSabotaged(); // Function DeadByDaylight.MeatHook.CanBeSabotaged // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55604b0
	void BroadcastUnhook(struct ADBDPlayer* rescuer); // Function DeadByDaylight.MeatHook.BroadcastUnhook // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5560420
	void BP_OnHookInteractionStarted(); // Function DeadByDaylight.MeatHook.BP_OnHookInteractionStarted // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void Authority_SignalUnhookingEnter(); // Function DeadByDaylight.MeatHook.Authority_SignalUnhookingEnter // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5560400
	void Authority_SignalUnhookingCharged(); // Function DeadByDaylight.MeatHook.Authority_SignalUnhookingCharged // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55603e0
	void Authority_SignalUnhookingAborted(); // Function DeadByDaylight.MeatHook.Authority_SignalUnhookingAborted // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55603c0
	void Authority_SignalSurvivorAttemptingEscapeAborted(); // Function DeadByDaylight.MeatHook.Authority_SignalSurvivorAttemptingEscapeAborted // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55603a0
	void Authority_SignalSurvivorAttemptingEscape(); // Function DeadByDaylight.MeatHook.Authority_SignalSurvivorAttemptingEscape // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5560380
	void Authority_SetIsSacrificed(bool IsSacrificed); // Function DeadByDaylight.MeatHook.Authority_SetIsSacrificed // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55602f0
	void Authority_SetIsSabotaged(bool isSabotaged, struct ADBDPlayer* Saboteur, bool useCamperHookRespawnDurationModifiers, float overrideBaseHookRespawnDuration); // Function DeadByDaylight.MeatHook.Authority_SetIsSabotaged // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5560180
	void Authority_SetIsBrokenFromUnhook(bool isBrokenFromUnhook, struct ADBDPlayer* hookBreaker, float overrideBaseHookRespawnDuration); // Function DeadByDaylight.MeatHook.Authority_SetIsBrokenFromUnhook // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5560060
	void Authority_SetHookedSurvivor(struct ACamperPlayer* Survivor); // Function DeadByDaylight.MeatHook.Authority_SetHookedSurvivor // (Final|Native|Public|BlueprintCallable) // @ game+0x555ffd0
};

// Class DeadByDaylight.MeatHookAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UMeatHookAnimInstance : UAnimInstance {
	bool IsBroken; // 0x2c0(0x01)
	char pad_2C1[0x3]; // 0x2c1(0x03)
	float Yaw; // 0x2c4(0x04)
	bool IsSurvivorStruggling; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
};

// Class DeadByDaylight.MeatHookEntityVisibilityComponent
// Size: 0xe8 (Inherited: 0xb8)
struct UMeatHookEntityVisibilityComponent : UActorComponent {
	struct AEntity* _entity; // 0xb8(0x08)
	char pad_C0[0x1c]; // 0xc0(0x1c)
	float _entityReappearSpeed; // 0xdc(0x04)
	float _entityDisappearSpeed; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
};

// Class DeadByDaylight.MeatHookOutlineUpdateStrategy
// Size: 0x178 (Inherited: 0x138)
struct UMeatHookOutlineUpdateStrategy : USourceBasedOutlineUpdateStrategy {
	struct FLinearColor HookedOutlineColorSlasher; // 0x138(0x10)
	struct FLinearColor CarryingOutlineColorSlasher; // 0x148(0x10)
	struct FLinearColor DefaultOutlineColorSlasher; // 0x158(0x10)
	struct FLinearColor VisibleOutlineColorCamper; // 0x168(0x10)

	void Local_AddBasementOfferingReveal(); // Function DeadByDaylight.MeatHookOutlineUpdateStrategy.Local_AddBasementOfferingReveal // (Final|Native|Private) // @ game+0x5560de0
	void Authority_AddBasementHookToPlayerMapItem(); // Function DeadByDaylight.MeatHookOutlineUpdateStrategy.Authority_AddBasementHookToPlayerMapItem // (Final|Native|Private) // @ game+0x555ffb0
};

// Class DeadByDaylight.MeatHookStateMachine
// Size: 0x130 (Inherited: 0x130)
struct UMeatHookStateMachine : UStateMachine {
};

// Class DeadByDaylight.MemoryTracker
// Size: 0x230 (Inherited: 0x230)
struct AMemoryTracker : AActor {
};

// Class DeadByDaylight.MenuAssetLibrary
// Size: 0x130 (Inherited: 0x120)
struct UMenuAssetLibrary : UItemsAssetLibrary {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class DeadByDaylight.MenuForcedLODHandler
// Size: 0x128 (Inherited: 0xb8)
struct UMenuForcedLODHandler : UActorComponent {
	struct TArray<enum class EGameFlowStep> _forcedLOD0GameFlowSteps; // 0xb8(0x10)
	char pad_C8[0x60]; // 0xc8(0x60)

	void OnMenuPlayerEndPlay(struct AActor* menuPlayerActor, enum class EEndPlayReason EndPlayReason); // Function DeadByDaylight.MenuForcedLODHandler.OnMenuPlayerEndPlay // (Final|Native|Private) // @ game+0x5561420
	void OnCustomizationChanged(enum class ECustomizationCategory category, struct FName& ItemId, struct ADBDMenuPlayer* menuPlayer); // Function DeadByDaylight.MenuForcedLODHandler.OnCustomizationChanged // (Final|Native|Private|HasOutParms) // @ game+0x55612e0
};

// Class DeadByDaylight.MenuMeatHook
// Size: 0x258 (Inherited: 0x230)
struct AMenuMeatHook : AActor {
	char pad_230[0x10]; // 0x230(0x10)
	struct UCharmSpawnerComponent* _charmSpawnerComponent; // 0x240(0x08)
	char pad_248[0x10]; // 0x248(0x10)

	void OnCharmsUpdated(struct TArray<struct FCharmIdSlot>& charmIDs); // Function DeadByDaylight.MenuMeatHook.OnCharmsUpdated // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void BeginDestroySequence_Internal(); // Function DeadByDaylight.MenuMeatHook.BeginDestroySequence_Internal // (Native|Event|Protected|BlueprintEvent) // @ game+0x54ac490
};

// Class DeadByDaylight.MenuUtilities
// Size: 0x30 (Inherited: 0x30)
struct UMenuUtilities : UBlueprintFunctionLibrary {

	struct TArray<struct ADBDMenuPlayer*> GetAllMenuCharacters(); // Function DeadByDaylight.MenuUtilities.GetAllMenuCharacters // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x5560780
	bool AreAllGuestCharactersReady(); // Function DeadByDaylight.MenuUtilities.AreAllGuestCharactersReady // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x555ff80
};

// Class DeadByDaylight.MigrationSubsystem
// Size: 0x90 (Inherited: 0x38)
struct UMigrationSubsystem : UGameInstanceSubsystem {
	char pad_38[0x58]; // 0x38(0x58)
};

// Class DeadByDaylight.MobileProfileDAL
// Size: 0x88 (Inherited: 0x88)
struct UMobileProfileDAL : UPlayerProfileDAL {
};

// Class DeadByDaylight.MontagePlayer
// Size: 0x260 (Inherited: 0xb8)
struct UMontagePlayer : UActorComponent {
	struct FMulticastInlineDelegate OnMontageStarted; // 0xb8(0x10)
	char pad_C8[0x48]; // 0xc8(0x48)
	struct FMulticastInlineDelegate OnMontageEnded; // 0x110(0x10)
	char pad_120[0x30]; // 0x120(0x30)
	struct FMulticastInlineDelegate BPOnMontageBlendingOut; // 0x150(0x10)
	char pad_160[0x30]; // 0x160(0x30)
	struct UDataTable* _animationMappingsTable; // 0x190(0x08)
	struct UDataTable* _playerSpecificMappingsTable; // 0x198(0x08)
	struct UAnimMontage* _currentlyPlayingMontage; // 0x1a0(0x08)
	char pad_1A8[0x18]; // 0x1a8(0x18)
	struct TArray<struct FMontageInstanceInfo> _activeMontagesInfo; // 0x1c0(0x10)
	struct FName _outSectionName; // 0x1d0(0x0c)
	float _timeBeforeOut; // 0x1dc(0x04)
	struct USkeletalMeshComponent* _skeletalMeshComponent; // 0x1e0(0x08)
	char pad_1E8[0x28]; // 0x1e8(0x28)
	struct TMap<struct UAnimMontage*, struct FName> _montageToNameMap; // 0x210(0x50)

	void Stop(float BlendOutTime); // Function DeadByDaylight.MontagePlayer.Stop // (Final|Native|Public|BlueprintCallable) // @ game+0x5561f30
	void SignalAnimInstanceChanged(); // Function DeadByDaylight.MontagePlayer.SignalAnimInstanceChanged // (Final|Native|Private) // @ game+0x5561f10
	void SetSkeletalMesh(struct USkeletalMeshComponent* SkeletalMeshComponent); // Function DeadByDaylight.MontagePlayer.SetSkeletalMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x5561e80
	void SetPlayRate(float PlayRate); // Function DeadByDaylight.MontagePlayer.SetPlayRate // (Final|Native|Public|BlueprintCallable) // @ game+0x5561e00
	struct UAnimMontage* PlayLoopForDuration(struct FAnimationMontageDescriptor animMontageID, float Duration, float PlayRate, struct FName Out); // Function DeadByDaylight.MontagePlayer.PlayLoopForDuration // (Final|Native|Public|BlueprintCallable) // @ game+0x55619e0
	struct UAnimMontage* Play(struct FAnimationMontageDescriptor animMontageID, float PlayRate, bool isFollower); // Function DeadByDaylight.MontagePlayer.Play // (Final|Native|Public|BlueprintCallable) // @ game+0x5561850
	void OnMontageEndedInternal(struct FGuid Guid, struct UAnimMontage* Montage, bool interrupted); // Function DeadByDaylight.MontagePlayer.OnMontageEndedInternal // (Final|Native|Private|HasDefaults) // @ game+0x5561610
	void OnMontageBlendingOutInternal(struct FGuid Guid, struct UAnimMontage* Montage, bool interrupted); // Function DeadByDaylight.MontagePlayer.OnMontageBlendingOutInternal // (Final|Native|Private|HasDefaults) // @ game+0x55614f0
	void JumpToSectionEnd(struct FName SectionName); // Function DeadByDaylight.MontagePlayer.JumpToSectionEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x5560d40
	void JumpToSection(struct FName SectionName); // Function DeadByDaylight.MontagePlayer.JumpToSection // (Final|Native|Public|BlueprintCallable) // @ game+0x5560ca0
	bool IsPlayingAnyMontage(); // Function DeadByDaylight.MontagePlayer.IsPlayingAnyMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560c70
	bool IsPlaying(struct FAnimationMontageDescriptor montageDescriptor); // Function DeadByDaylight.MontagePlayer.IsPlaying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560b50
	struct UAnimInstance* GetAnimInstance(); // Function DeadByDaylight.MontagePlayer.GetAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5560800
};

// Class DeadByDaylight.MoriableComponent
// Size: 0xe0 (Inherited: 0xb8)
struct UMoriableComponent : UActorComponent {
	struct TArray<struct UInteractionDefinition*> _moriInteractions; // 0xb8(0x10)
	struct UStatusEffect* _disruptAuraReadingStatusEffect; // 0xc8(0x08)
	char pad_D0[0x10]; // 0xd0(0x10)

	void OnRep_MoriInteractions(); // Function DeadByDaylight.MoriableComponent.OnRep_MoriInteractions // (Final|Native|Protected) // @ game+0x5566dc0
	void OnMoriUpdateStart(); // Function DeadByDaylight.MoriableComponent.OnMoriUpdateStart // (Final|Native|Public|BlueprintCallable) // @ game+0x5566a10
	void OnMoriFinished(bool hasBeenKilledByMori); // Function DeadByDaylight.MoriableComponent.OnMoriFinished // (Final|Native|Public|BlueprintCallable) // @ game+0x5566960
};

// Class DeadByDaylight.MoriComponent
// Size: 0xf0 (Inherited: 0xb8)
struct UMoriComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	struct TArray<struct UInteractionDefinition*> _moriInteractionClasses; // 0xd0(0x10)
	char pad_E0[0x8]; // 0xe0(0x08)
	struct UStatusEffect* _disruptAuraReadingStatusEffect; // 0xe8(0x08)

	void OnMoriUpdateStart(); // Function DeadByDaylight.MoriComponent.OnMoriUpdateStart // (Final|Native|Public|BlueprintCallable) // @ game+0x55669f0
	void OnMoriFinished(); // Function DeadByDaylight.MoriComponent.OnMoriFinished // (Final|Native|Public|BlueprintCallable) // @ game+0x5566940
	void OnMoriChargeCompleted(); // Function DeadByDaylight.MoriComponent.OnMoriChargeCompleted // (Final|Native|Public|BlueprintCallable) // @ game+0x5566920
};

// Class DeadByDaylight.MovementModifierActor
// Size: 0x238 (Inherited: 0x230)
struct AMovementModifierActor : AActor {
	float maxSpeedMultiplier; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
};

// Class DeadByDaylight.MultipleLightsFader
// Size: 0x258 (Inherited: 0x230)
struct AMultipleLightsFader : AActor {
	struct TArray<struct ULightComponent*> _affectedLights; // 0x230(0x10)
	struct TArray<float> _lightOriginalIntensities; // 0x240(0x10)
	float _timeMultiplier; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)

	void SetAffectedLights(struct TArray<struct ULightComponent*>& affectedLights); // Function DeadByDaylight.MultipleLightsFader.SetAffectedLights // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x5566e00
};

// Class DeadByDaylight.NatAudioAmbienceBox
// Size: 0x4c0 (Inherited: 0x4b0)
struct UNatAudioAmbienceBox : UAmbienceBoxComponent {
	struct UAkAudioEvent* _onBeginOverlapAudioEvent; // 0x4a8(0x08)
	struct UAkAudioEvent* _onEndOverlapAudioEvent; // 0x4b0(0x08)

	void OnEndOverlapAudioAmbience(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DeadByDaylight.NatAudioAmbienceBox.OnEndOverlapAudioAmbience // (Final|Native|Protected) // @ game+0x5566620
	void OnBeginOverlapAudioAmbience(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.NatAudioAmbienceBox.OnBeginOverlapAudioAmbience // (Final|Native|Protected|HasOutParms) // @ game+0x55660a0
};

// Class DeadByDaylight.NatAudioCustomMesh
// Size: 0x560 (Inherited: 0x550)
struct UNatAudioCustomMesh : UAudioCustomMeshComponent {
	struct UAkAudioEvent* _onBeginOverlapAudioEvent; // 0x548(0x08)
	struct UAkAudioEvent* _onEndOverlapAudioEvent; // 0x550(0x08)

	void OnEndOverlapAudioMesh(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DeadByDaylight.NatAudioCustomMesh.OnEndOverlapAudioMesh // (Final|Native|Protected) // @ game+0x5566780
	void OnBeginOverlapAudioMesh(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.NatAudioCustomMesh.OnBeginOverlapAudioMesh // (Final|Native|Protected|HasOutParms) // @ game+0x55662c0
};

// Class DeadByDaylight.NavArea_BearTrap
// Size: 0x50 (Inherited: 0x50)
struct UNavArea_BearTrap : UNavArea {
};

// Class DeadByDaylight.NavArea_Danger
// Size: 0x50 (Inherited: 0x50)
struct UNavArea_Danger : UNavArea {
};

// Class DeadByDaylight.NavArea_Drone
// Size: 0x50 (Inherited: 0x50)
struct UNavArea_Drone : UNavArea {
};

// Class DeadByDaylight.NavArea_Slasher
// Size: 0x50 (Inherited: 0x50)
struct UNavArea_Slasher : UNavArea {
};

// Class DeadByDaylight.NavArea_Turret
// Size: 0x50 (Inherited: 0x50)
struct UNavArea_Turret : UNavArea {
};

// Class DeadByDaylight.NavigationQueryFilter_EvadeLoop
// Size: 0x288 (Inherited: 0x50)
struct UNavigationQueryFilter_EvadeLoop : UNavigationQueryFilter {
	char pad_50[0x238]; // 0x50(0x238)
};

// Class DeadByDaylight.NavigationScreen
// Size: 0x2c8 (Inherited: 0x120)
struct UNavigationScreen : UScreenBase {
	char pad_120[0x1a8]; // 0x120(0x1a8)

	void OnToggleChatVisibility(); // Function DeadByDaylight.NavigationScreen.OnToggleChatVisibility // (Final|Native|Protected) // @ game+0x5566de0
	void OnStartButtonClick(); // Function DeadByDaylight.NavigationScreen.OnStartButtonClick // (Final|Native|Protected) // @ game+0x555c160
	void OnSettingsClick(); // Function DeadByDaylight.NavigationScreen.OnSettingsClick // (Final|Native|Protected) // @ game+0x546c3f0
	void OnSendChatMsgButtonClick(struct FString Message); // Function DeadByDaylight.NavigationScreen.OnSendChatMsgButtonClick // (Final|Native|Protected) // @ game+0x552ac60
	void OnReadyButtonClick(); // Function DeadByDaylight.NavigationScreen.OnReadyButtonClick // (Final|Native|Protected) // @ game+0x553b8c0
	void OnPlayerOptionSelected(struct FString krakenId, struct FString playerID, char Option); // Function DeadByDaylight.NavigationScreen.OnPlayerOptionSelected // (Final|Native|Protected) // @ game+0x5566b50
	void OnPlayerInfoClick(int32_t playerID); // Function DeadByDaylight.NavigationScreen.OnPlayerInfoClick // (Final|Native|Protected) // @ game+0x5566ac0
	void OnPerkPreviewPerkSlotClicked(int32_t slotIndex); // Function DeadByDaylight.NavigationScreen.OnPerkPreviewPerkSlotClicked // (Final|Native|Public) // @ game+0x5566a30
	void OnMatchManagementButtonClick(); // Function DeadByDaylight.NavigationScreen.OnMatchManagementButtonClick // (Final|Native|Protected) // @ game+0x54727d0
	void OnMatchMakingBanTimeout(); // Function DeadByDaylight.NavigationScreen.OnMatchMakingBanTimeout // (Final|Native|Protected) // @ game+0x5566900
	void OnInviteFriendClick(); // Function DeadByDaylight.NavigationScreen.OnInviteFriendClick // (Final|Native|Protected) // @ game+0x54be480
	void OnFadeOutEnded(); // Function DeadByDaylight.NavigationScreen.OnFadeOutEnded // (Final|Native|Protected) // @ game+0x55668e0
	void OnDailyRitualsClick(); // Function DeadByDaylight.NavigationScreen.OnDailyRitualsClick // (Final|Native|Protected) // @ game+0x5472b70
	void OnChatInputMouseOver(bool IsMouseOver); // Function DeadByDaylight.NavigationScreen.OnChatInputMouseOver // (Final|Native|Protected) // @ game+0x5566590
	void OnCharacterSwapArrowClick(bool isNext); // Function DeadByDaylight.NavigationScreen.OnCharacterSwapArrowClick // (Final|Native|Protected) // @ game+0x5566500
	void OnCancelButtonClick(); // Function DeadByDaylight.NavigationScreen.OnCancelButtonClick // (Final|Native|Protected) // @ game+0x55664e0
	void OnAddPlayerClick(int32_t buttonId); // Function DeadByDaylight.NavigationScreen.OnAddPlayerClick // (Final|Native|Protected) // @ game+0x5566010
};

// Class DeadByDaylight.NavigationStateComponent
// Size: 0x188 (Inherited: 0xb8)
struct UNavigationStateComponent : UActorComponent {
	char pad_B8[0x4b]; // 0xb8(0x4b)
	enum class EImmobilizedState _immobilizedState; // 0x103(0x01)
	char pad_104[0x4]; // 0x104(0x04)
	struct FGuidingInfo _guidedState; // 0x108(0x18)
	char pad_120[0x58]; // 0x120(0x58)
	struct TArray<struct ADBDPlayer*> _local_oldGuidedPlayers; // 0x178(0x10)

	void OnRep_ImmobilizedState(enum class EImmobilizedState previousState); // Function DeadByDaylight.NavigationStateComponent.OnRep_ImmobilizedState // (Final|Native|Private) // @ game+0x5566d40
	void OnRep_GuidedState(struct FGuidingInfo& previousState); // Function DeadByDaylight.NavigationStateComponent.OnRep_GuidedState // (Final|Native|Private|HasOutParms) // @ game+0x5566c90
};

// Class DeadByDaylight.NavmeshGeneratorComponent
// Size: 0xe0 (Inherited: 0xb8)
struct UNavmeshGeneratorComponent : UActorComponent {
	char pad_B8[0x28]; // 0xb8(0x28)
};

// Class DeadByDaylight.NewContentPopupScreen
// Size: 0x140 (Inherited: 0x140)
struct UNewContentPopupScreen : UGenericPopupScreen {
};

// Class DeadByDaylight.NewsContentManager
// Size: 0x100 (Inherited: 0x30)
struct UNewsContentManager : UObject {
	char pad_30[0x18]; // 0x30(0x18)
	struct TWeakObjectPtr<struct UDBDGameInstance> _gameInstance; // 0x48(0x08)
	char pad_50[0xb0]; // 0x50(0xb0)
};

// Class DeadByDaylight.NoAccumulationSpawnerStrategy
// Size: 0x30 (Inherited: 0x30)
struct UNoAccumulationSpawnerStrategy : USpawnerStrategy {
};

// Class DeadByDaylight.NoiseIndicatorEmitterInterface
// Size: 0x30 (Inherited: 0x30)
struct UNoiseIndicatorEmitterInterface : UInterface {
};

// Class DeadByDaylight.NotExhaustedActivationTimerElapsedIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UNotExhaustedActivationTimerElapsedIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.ObjectiveScreenIndicatorWorldMarkerComponent
// Size: 0x240 (Inherited: 0x230)
struct UObjectiveScreenIndicatorWorldMarkerComponent : UScreenIndicatorWorldMarkerComponent {
	struct UTexture2D* IndicatorHudScreenIcon; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)
};

// Class DeadByDaylight.ObjectPlacementUpdateStrategy
// Size: 0x50 (Inherited: 0x30)
struct UObjectPlacementUpdateStrategy : UObject {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class DeadByDaylight.AlwaysUseCurrentLocationPlacementStrategy
// Size: 0x50 (Inherited: 0x50)
struct UAlwaysUseCurrentLocationPlacementStrategy : UObjectPlacementUpdateStrategy {
};

// Class DeadByDaylight.BufferLastValidLocationObjectPlacementStrategy
// Size: 0x58 (Inherited: 0x50)
struct UBufferLastValidLocationObjectPlacementStrategy : UObjectPlacementUpdateStrategy {
	float _maxDistanceToOwner; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class DeadByDaylight.NavMeshObjectPlacementValidationStrategy
// Size: 0xe8 (Inherited: 0xe0)
struct UNavMeshObjectPlacementValidationStrategy : UDefaultObjectPlacementValidationStrategy {
	float _navPathMaxLength; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
};

// Class DeadByDaylight.ObjectPlacementValidationWithRestrictionStrategy
// Size: 0xf0 (Inherited: 0xe0)
struct UObjectPlacementValidationWithRestrictionStrategy : UDefaultObjectPlacementValidationStrategy {
	struct TArray<struct URestrictedPlacementAreaStrategy*> _restrictedAreas; // 0xe0(0x10)

	void OnLevelReadyToPlay(); // Function DeadByDaylight.ObjectPlacementValidationWithRestrictionStrategy.OnLevelReadyToPlay // (Native|Protected) // @ game+0x4af1aa0
};

// Class DeadByDaylight.ObjectPlacerComponent
// Size: 0x270 (Inherited: 0x220)
struct UObjectPlacerComponent : USceneComponent {
	struct UObjectPlacementUpdateStrategy* _objectPlacementUpdateStrategy; // 0x218(0x08)
	struct UObjectPlacementValidationStrategy* _objectPlacementValidationStrategy; // 0x220(0x08)
	struct UStaticMeshComponent* _objectMesh; // 0x228(0x08)
	float _meshOffsetZ; // 0x230(0x04)
	struct FName _socketName; // 0x234(0x0c)
	float _indicatorOffsetY; // 0x240(0x04)
	float _indicatorOffsetX; // 0x244(0x04)
	struct FName _itemObjectId; // 0x248(0x0c)
	bool _showIndicator; // 0x254(0x01)
	bool _stayActiveWhileItemInUse; // 0x255(0x01)
	bool _hideIndicatorDuringAttack; // 0x256(0x01)
	char pad_25F[0x11]; // 0x25f(0x11)

	void SetShowIndicator(bool NewValue); // Function DeadByDaylight.ObjectPlacerComponent.SetShowIndicator // (Final|Native|Public|BlueprintCallable) // @ game+0x55671e0
	void SetObjectMesh(struct UStaticMeshComponent* objectMesh); // Function DeadByDaylight.ObjectPlacerComponent.SetObjectMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x5567150
	void SetMeshOffsetZ(float Z); // Function DeadByDaylight.ObjectPlacerComponent.SetMeshOffsetZ // (Final|Native|Public|BlueprintCallable) // @ game+0x55670d0
	void SetIndicatorOffsetY(float Y); // Function DeadByDaylight.ObjectPlacerComponent.SetIndicatorOffsetY // (Final|Native|Public|BlueprintCallable) // @ game+0x5566fc0
	void SetIndicatorOffsetX(float X); // Function DeadByDaylight.ObjectPlacerComponent.SetIndicatorOffsetX // (Final|Native|Public|BlueprintCallable) // @ game+0x5566f40
	void SetHideIndicatorDuringAttack(bool enable); // Function DeadByDaylight.ObjectPlacerComponent.SetHideIndicatorDuringAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x5566eb0
	bool IsPlacementValid(); // Function DeadByDaylight.ObjectPlacerComponent.IsPlacementValid // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5565fe0
	struct FRotator GetObjectPlacementRotation(); // Function DeadByDaylight.ObjectPlacerComponent.GetObjectPlacementRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x5565fa0
	struct FVector GetObjectPlacementLocation(); // Function DeadByDaylight.ObjectPlacerComponent.GetObjectPlacementLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x5565f60
	void ActivateObjectPlacement(bool Active); // Function DeadByDaylight.ObjectPlacerComponent.ActivateObjectPlacement // (Final|Native|Public|BlueprintCallable) // @ game+0x5565ed0
};

// Class DeadByDaylight.OfferingCardAnim
// Size: 0x2e0 (Inherited: 0x2c0)
struct UOfferingCardAnim : UAnimInstance {
	struct FMulticastInlineDelegate _onCardDissolved; // 0x2c0(0x10)
	enum class EOfferingAnimState _activeState; // 0x2d0(0x01)
	bool _isRevealed; // 0x2d1(0x01)
	char pad_2D2[0xe]; // 0x2d2(0x0e)
};

// Class DeadByDaylight.OfferingCard
// Size: 0x250 (Inherited: 0x230)
struct AOfferingCard : AActor {
	struct TArray<struct FRarityTexture> _rarityTextures; // 0x230(0x10)
	struct TArray<struct FOfferingTypeTexture> _offeringTypeTextures; // 0x240(0x10)

	bool IsRevealed(); // Function DeadByDaylight.OfferingCard.IsRevealed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556b7e0
	void HandleStateChanged(enum class EOfferingAnimState State); // Function DeadByDaylight.OfferingCard.HandleStateChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void HandleCardDissolved(); // Function DeadByDaylight.OfferingCard.HandleCardDissolved // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	enum class EOfferingAnimState GetState(); // Function DeadByDaylight.OfferingCard.GetState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556b300
	struct UOfferingCardAnim* GetCardAnimation(); // Function DeadByDaylight.OfferingCard.GetCardAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556b2a0
	void ChangeState(enum class EOfferingAnimState State); // Function DeadByDaylight.OfferingCard.ChangeState // (Final|Native|Public|BlueprintCallable) // @ game+0x556b110
	void ChangeAnimationClass(struct UOfferingCardAnim*& animationClass); // Function DeadByDaylight.OfferingCard.ChangeAnimationClass // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x556b080
};

// Class DeadByDaylight.OfferingEffectCollection
// Size: 0x88 (Inherited: 0x38)
struct UOfferingEffectCollection : UGameInstanceSubsystem {
	char pad_38[0x50]; // 0x38(0x50)

	bool HasOfferingWithTag(int32_t playerID, struct FName Tag); // Function DeadByDaylight.OfferingEffectCollection.HasOfferingWithTag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556b5f0
	bool HasOfferingOfType(enum class EOfferingEffectType Type, int32_t playerID, struct FName Tag); // Function DeadByDaylight.OfferingEffectCollection.HasOfferingOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556b3c0
};

// Class DeadByDaylight.OfferingHandler
// Size: 0x48 (Inherited: 0x30)
struct UOfferingHandler : UObject {
	struct UDBDGameInstance* _gameInstance; // 0x30(0x08)
	struct TArray<struct FName> _levelPerkIDs; // 0x38(0x10)
};

// Class DeadByDaylight.OfferingSequenceAssets
// Size: 0x260 (Inherited: 0x230)
struct AOfferingSequenceAssets : AActor {
	float SpaceBetweenCards; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
	struct AOfferingCard* DefaultCardClass; // 0x238(0x08)
	struct UOfferingCardAnim* DefaultCardAnimation; // 0x240(0x08)
	struct TArray<struct FOfferingRevealDelays> OfferingRevealDelays; // 0x248(0x10)
	struct AActor* CardsParent; // 0x258(0x08)

	void PlaySmoke(); // Function DeadByDaylight.OfferingSequenceAssets.PlaySmoke // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void PlayFadeOut(); // Function DeadByDaylight.OfferingSequenceAssets.PlayFadeOut // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void PlayFadeIn(); // Function DeadByDaylight.OfferingSequenceAssets.PlayFadeIn // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.OfferingSequenceManager
// Size: 0x2f0 (Inherited: 0x230)
struct AOfferingSequenceManager : AActor {
	struct UDBDGameInstance* _gameInstance; // 0x230(0x08)
	struct APlayerController* _localPlayerController; // 0x238(0x08)
	struct UOfferingHandler* _offeringHandler; // 0x240(0x08)
	struct AOfferingSequenceAssets* _sequenceAssets; // 0x248(0x08)
	struct ADBDLobbyHud* _hud; // 0x250(0x08)
	struct ACameraActor* _offeringCamera; // 0x258(0x08)
	struct TMap<char, struct AOfferingCard*> _spawnedCards; // 0x260(0x50)
	char pad_2B0[0x10]; // 0x2b0(0x10)
	struct AOfferingCard* _defaultCardsClass; // 0x2c0(0x08)
	struct AOfferingCard* _eventCardsClass; // 0x2c8(0x08)
	char pad_2D0[0x20]; // 0x2d0(0x20)

	void HandleSequenceStateChanged(enum class EOfferingSequenceState State); // Function DeadByDaylight.OfferingSequenceManager.HandleSequenceStateChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void HandleSequenceStarted(); // Function DeadByDaylight.OfferingSequenceManager.HandleSequenceStarted // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void HandleSequenceEnded(); // Function DeadByDaylight.OfferingSequenceManager.HandleSequenceEnded // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	enum class EOfferingSequenceState GetCurrentState(); // Function DeadByDaylight.OfferingSequenceManager.GetCurrentState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556b2d0
	void FadeInScreen(); // Function DeadByDaylight.OfferingSequenceManager.FadeInScreen // (Final|Native|Private) // @ game+0x556b280
	bool ContainsEventCard(); // Function DeadByDaylight.OfferingSequenceManager.ContainsEventCard // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556b250
	bool ContainsDefaultCard(); // Function DeadByDaylight.OfferingSequenceManager.ContainsDefaultCard // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556b220
};

// Class DeadByDaylight.OfferingUtilities
// Size: 0x30 (Inherited: 0x30)
struct UOfferingUtilities : UBlueprintFunctionLibrary {

	bool IsPlayerEquippedWithOfferingWithTag(struct ADBDPlayer* Player, struct FName offeringTag); // Function DeadByDaylight.OfferingUtilities.IsPlayerEquippedWithOfferingWithTag // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x556b700
	bool HasOfferingOfType(struct UObject* WorldContextObject, enum class EOfferingEffectType offeringEffectType, int32_t playerID); // Function DeadByDaylight.OfferingUtilities.HasOfferingOfType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x556b4f0
	bool HasItemLossProtection(struct ADBDPlayer* Player); // Function DeadByDaylight.OfferingUtilities.HasItemLossProtection // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x556b330
};

// Class DeadByDaylight.OfflineLobbyLevel
// Size: 0x4a8 (Inherited: 0x2c0)
struct AOfflineLobbyLevel : ALobbyLevel {
	struct FVector _partyLobbyInviteButtonOffset; // 0x2c0(0x0c)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	struct TArray<struct TWeakObjectPtr<struct APlayerStart>> _roleSelectionCamperSpawns; // 0x2d0(0x10)
	struct TArray<struct TWeakObjectPtr<struct APlayerStart>> _roleSelectionSlasherSpawns; // 0x2e0(0x10)
	struct TWeakObjectPtr<struct ADisplayStand> _offlineLobbyLocalSlasherSpawn; // 0x2f0(0x08)
	struct FVector _partyLobbyEmptySlotFxOffset; // 0x2f8(0x0c)
	struct TWeakObjectPtr<struct ADisplayStand> _offlineLobbyLocalCamperSpawn; // 0x304(0x08)
	char pad_30C[0x4]; // 0x30c(0x04)
	struct TArray<struct FVector> _partyLobbySlasherPOVTrackerOffsets; // 0x310(0x10)
	struct TSoftClassPtr<UObject> _partyLobbyEmptySlotSilhouette; // 0x320(0x30)
	struct TArray<struct TWeakObjectPtr<struct ADisplayStand>> _partyLobbySlasherDisplayStands; // 0x350(0x10)
	struct TArray<struct TWeakObjectPtr<struct ADisplayStand>> _partyLobbyCamperDisplayStands; // 0x360(0x10)
	char pad_370[0x10]; // 0x370(0x10)
	struct TSoftClassPtr<UObject> _meatHookForCustomization; // 0x380(0x30)
	struct TWeakObjectPtr<struct ATargetPoint> _meatHookSpawn; // 0x3b0(0x08)
	struct TSoftClassPtr<UObject> _charmForCustomizationZoom; // 0x3b8(0x30)
	struct TWeakObjectPtr<struct ATargetPoint> _camperCharmSpawn; // 0x3e8(0x08)
	struct TWeakObjectPtr<struct ATargetPoint> _slasherCharmSpawn; // 0x3f0(0x08)
	struct TMap<struct TWeakObjectPtr<struct ADisplayStand>, struct TWeakObjectPtr<struct ADBDMenuSilhouette>> _partyLobbyEmptySlotPawns; // 0x3f8(0x50)
	char pad_448[0x48]; // 0x448(0x48)
	struct TArray<struct AActor*> _destroyingPawns; // 0x490(0x10)
	char pad_4A0[0x8]; // 0x4a0(0x08)

	void OnStateChanged(enum class EOfflineLobbyState LobbyState); // Function DeadByDaylight.OfflineLobbyLevel.OnStateChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void CheckDestroyingPawns(struct AActor* DestroyedActor); // Function DeadByDaylight.OfflineLobbyLevel.CheckDestroyingPawns // (Final|Native|Protected) // @ game+0x556b190
};

// Class DeadByDaylight.OnboardingUtilities
// Size: 0x30 (Inherited: 0x30)
struct UOnboardingUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.OniBasicAttackComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UOniBasicAttackComponent : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class DeadByDaylight.OniDemonModeAttackStateComponent
// Size: 0xd8 (Inherited: 0xc0)
struct UOniDemonModeAttackStateComponent : UChargedAttackStateComponent {
	struct FMulticastInlineDelegate OnChargedAttackReadyChanged; // 0xc0(0x10)
	char pad_D0[0x8]; // 0xd0(0x08)

	void Server_ClearChargingState(); // Function DeadByDaylight.OniDemonModeAttackStateComponent.Server_ClearChargingState // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x4aa7040
	void Multicast_ClearChargingState(); // Function DeadByDaylight.OniDemonModeAttackStateComponent.Multicast_ClearChargingState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x4af1ac0
};

// Class DeadByDaylight.OnlineLobbyLevel
// Size: 0x2f8 (Inherited: 0x2c0)
struct AOnlineLobbyLevel : ALobbyLevel {
	struct UProceduralGenerationData* ProceduralGenerationData; // 0x2c0(0x08)
	struct TArray<struct FVector> _onlineLobbySlasherPOVTrackerOffsets; // 0x2c8(0x10)
	struct TArray<struct TWeakObjectPtr<struct ADisplayStand>> _onlineLobbyCamperDisplayStands; // 0x2d8(0x10)
	struct TArray<struct TWeakObjectPtr<struct ADisplayStand>> _onlineLobbySlasherDisplayStands; // 0x2e8(0x10)
};

// Class DeadByDaylight.OnlinePrivilegeManager
// Size: 0x40 (Inherited: 0x38)
struct UOnlinePrivilegeManager : UGameInstanceSubsystem {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class DeadByDaylight.OnlineSystemHandler
// Size: 0x508 (Inherited: 0x30)
struct UOnlineSystemHandler : UObject {
	char pad_30[0x1b8]; // 0x30(0x1b8)
	struct ULocalPlayer* _cachedLocalPlayer; // 0x1e8(0x08)
	struct UDBDGameInstance* _gameInstance; // 0x1f0(0x08)
	struct UGameSessionDS* _gameSessionDS; // 0x1f8(0x08)
	char pad_200[0x270]; // 0x200(0x270)
	struct UDBDServerInstance* _serverInstance; // 0x470(0x08)
	char pad_478[0x30]; // 0x478(0x30)
	struct UCrossPlatformManager* _crossPlatformManager; // 0x4a8(0x08)
	char pad_4B0[0x58]; // 0x4b0(0x58)
};

// Class DeadByDaylight.OnScreenDebugComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UOnScreenDebugComponent : UActorComponent {
	struct TArray<struct FOnScreenDebugInfo> _messages; // 0xb8(0x10)
};

// Class DeadByDaylight.OpenHatch
// Size: 0x630 (Inherited: 0x630)
struct UOpenHatch : UBaseEscapeThroughHatch {
};

// Class DeadByDaylight.OpenSupplyCrateInteraction
// Size: 0x770 (Inherited: 0x760)
struct UOpenSupplyCrateInteraction : UChargeableInteractionDefinition {
	struct ASupplyCrateInteractable* _owningSupplyCrate; // 0x758(0x08)
	bool _interactionWasComplete; // 0x760(0x01)
	struct UAnimSequence* _successExitTimeAnimSequenceReference; // 0x768(0x08)
};

// Class DeadByDaylight.OtherCharactersVerticalCollisionsHandler
// Size: 0xe0 (Inherited: 0xb8)
struct UOtherCharactersVerticalCollisionsHandler : UActorComponent {
	struct TArray<struct AActor*> _ignoreBelowActors; // 0xb8(0x10)
	struct TArray<struct AActor*> _overlappingActors; // 0xc8(0x10)
	struct UCapsuleComponent* _pawnDetector; // 0xd8(0x08)

	void SetPawnDetector(struct UCapsuleComponent* pawnDetector); // Function DeadByDaylight.OtherCharactersVerticalCollisionsHandler.SetPawnDetector // (Final|Native|Public|BlueprintCallable) // @ game+0x556bb90
	void OnPawnDetectorOverlapExit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DeadByDaylight.OtherCharactersVerticalCollisionsHandler.OnPawnDetectorOverlapExit // (Final|Native|Private) // @ game+0x556ba30
	void OnPawnDetectorOverlapEnter(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.OtherCharactersVerticalCollisionsHandler.OnPawnDetectorOverlapEnter // (Final|Native|Private|HasOutParms) // @ game+0x556b810
	void InitializeOverlapDetection(); // Function DeadByDaylight.OtherCharactersVerticalCollisionsHandler.InitializeOverlapDetection // (Final|Native|Private) // @ game+0x556b6e0
};

// Class DeadByDaylight.OutfitHelper
// Size: 0x30 (Inherited: 0x30)
struct UOutfitHelper : UObject {
};

// Class DeadByDaylight.OutfitRecommendationsFilter
// Size: 0x60 (Inherited: 0x38)
struct UOutfitRecommendationsFilter : URecommendationsFilter {
	char pad_38[0x28]; // 0x38(0x28)
};

// Class DeadByDaylight.OutlineReveal
// Size: 0xd8 (Inherited: 0x30)
struct UOutlineReveal : UObject {
	char pad_30[0x70]; // 0x30(0x70)
	struct TArray<struct ADBDPlayer*> _affectedCharacters; // 0xa0(0x10)
	char pad_B0[0x28]; // 0xb0(0x28)
};

// Class DeadByDaylight.OutOfSightMeshRotator
// Size: 0xe0 (Inherited: 0xb8)
struct UOutOfSightMeshRotator : UActorComponent {
	float _maxDistance; // 0xb8(0x04)
	float _dotProductThreshold; // 0xbc(0x04)
	struct ADBDPlayer* _locallyObservedPlayer; // 0xc0(0x08)
	struct TArray<struct UMeshComponent*> _meshesToRotate; // 0xc8(0x10)
	float _rotationOffset; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)

	void SetMeshesToRotate(struct TArray<struct UMeshComponent*> meshesToRotate); // Function DeadByDaylight.OutOfSightMeshRotator.SetMeshesToRotate // (Final|Native|Protected|BlueprintCallable) // @ game+0x5571990
};

// Class DeadByDaylight.OverlayMenuScreen
// Size: 0x300 (Inherited: 0x120)
struct UOverlayMenuScreen : UScreenBase {
	char pad_120[0x1e0]; // 0x120(0x1e0)

	void SetGameType(enum class EGameType GameType, bool isInCustomMatchManagerMode); // Function DeadByDaylight.OverlayMenuScreen.SetGameType // (Final|Native|Public) // @ game+0x55718c0
	void OnSurvivorCameraSensitivityChanged(int32_t value); // Function DeadByDaylight.OverlayMenuScreen.OnSurvivorCameraSensitivityChanged // (Final|Native|Public) // @ game+0x5570310
	void OnSettingsOptionIntValueChanged(int32_t ID, int32_t value); // Function DeadByDaylight.OverlayMenuScreen.OnSettingsOptionIntValueChanged // (Final|Native|Public) // @ game+0x55711b0
	void OnSettingsOptionCheckboxSelected(int32_t ID, bool IsSelected); // Function DeadByDaylight.OverlayMenuScreen.OnSettingsOptionCheckboxSelected // (Final|Native|Public) // @ game+0x55710e0
	void OnSettingsOptionButtonClicked(int32_t ID); // Function DeadByDaylight.OverlayMenuScreen.OnSettingsOptionButtonClicked // (Final|Native|Public) // @ game+0x5571050
	void OnSelectTab(int32_t tabIndex); // Function DeadByDaylight.OverlayMenuScreen.OnSelectTab // (Final|Native|Public) // @ game+0x55704e0
	void OnResetDefaultSettings(); // Function DeadByDaylight.OverlayMenuScreen.OnResetDefaultSettings // (Final|Native|Public) // @ game+0x5570e50
	void OnResetDefaultKeybindings(); // Function DeadByDaylight.OverlayMenuScreen.OnResetDefaultKeybindings // (Final|Native|Public) // @ game+0x555c140
	void OnRequestKeyBindingInput(int32_t ID, struct FString Key); // Function DeadByDaylight.OverlayMenuScreen.OnRequestKeyBindingInput // (Final|Native|Public) // @ game+0x5570c60
	void OnQuitButtonClick(); // Function DeadByDaylight.OverlayMenuScreen.OnQuitButtonClick // (Final|Native|Public) // @ game+0x5472b70
	void OnPrivacyPolicyButtonClick(); // Function DeadByDaylight.OverlayMenuScreen.OnPrivacyPolicyButtonClick // (Final|Native|Public) // @ game+0x5570a90
	void OnPlayerInfoClick(struct FString playerID); // Function DeadByDaylight.OverlayMenuScreen.OnPlayerInfoClick // (Final|Native|Public) // @ game+0x5570960
	void OnLanguageChange(int32_t value); // Function DeadByDaylight.OverlayMenuScreen.OnLanguageChange // (Final|Native|Public) // @ game+0x5570310
	void OnKillerCameraSensitivityChanged(int32_t value); // Function DeadByDaylight.OverlayMenuScreen.OnKillerCameraSensitivityChanged // (Final|Native|Public) // @ game+0x5570310
	void OnForumsButtonClick(); // Function DeadByDaylight.OverlayMenuScreen.OnForumsButtonClick // (Final|Native|Public) // @ game+0x553b8c0
	void OnEULAButtonClick(); // Function DeadByDaylight.OverlayMenuScreen.OnEULAButtonClick // (Final|Native|Public) // @ game+0x55664e0
	void OnCustomerSupportButtonClick(); // Function DeadByDaylight.OverlayMenuScreen.OnCustomerSupportButtonClick // (Final|Native|Public) // @ game+0x555c160
	void OnBackButtonClick(); // Function DeadByDaylight.OverlayMenuScreen.OnBackButtonClick // (Final|Native|Public) // @ game+0x546c3f0
	void OnAtlantaSettingButtonClick(int32_t buttonId); // Function DeadByDaylight.OverlayMenuScreen.OnAtlantaSettingButtonClick // (Final|Native|Public) // @ game+0x5570310
	void OnAimAssistClick(bool value); // Function DeadByDaylight.OverlayMenuScreen.OnAimAssistClick // (Final|Native|Public) // @ game+0x55702a0
};

// Class DeadByDaylight.Pallet
// Size: 0x458 (Inherited: 0x338)
struct APallet : AInteractable {
	char pad_338[0x8]; // 0x338(0x08)
	float PalletDownEvadeDoorFrontPointOffset; // 0x340(0x04)
	char pad_344[0x1c]; // 0x344(0x1c)
	enum class EPalletState _state; // 0x360(0x01)
	bool _isPendingDestruction; // 0x361(0x01)
	bool _isIllusionaryPalletDown; // 0x362(0x01)
	bool _isDestroyedByEntity; // 0x363(0x01)
	char pad_364[0x4]; // 0x364(0x04)
	struct UInteractionDefinition* _destroyLeft; // 0x368(0x08)
	struct UInteractionDefinition* _destroyRight; // 0x370(0x08)
	struct UBoxComponent* _pushBox; // 0x378(0x08)
	struct UPrimitiveComponent* _downedPalletCollider; // 0x380(0x08)
	struct UPrimitiveComponent* _upPalletCollider; // 0x388(0x08)
	float _maxDotproductThresholdForPulldownAccross; // 0x390(0x04)
	float _fallDuration; // 0x394(0x04)
	struct UBoxComponent* _stunBoxLeft; // 0x398(0x08)
	struct UBoxComponent* _stunBoxRight; // 0x3a0(0x08)
	struct TSet<struct AActor*> _stunnedActors; // 0x3a8(0x50)
	struct ADBDPlayer* _playerExecutingPulldown; // 0x3f8(0x08)
	struct FPalletPushSettings _pushSettings; // 0x400(0x02)
	char pad_402[0x3e]; // 0x402(0x3e)
	struct UDBDNavEvadeLoopComponent* _navEvadeLoopComponent; // 0x440(0x08)
	struct UPalletPulldownBlockerComponent* _palletPulldownBlockerComponent; // 0x448(0x08)
	bool _isDreamPallet; // 0x450(0x01)
	char pad_451[0x7]; // 0x451(0x07)

	void SetPendingDestruction(bool IsPendingDestruction); // Function DeadByDaylight.Pallet.SetPendingDestruction // (Final|Native|Public|BlueprintCallable) // @ game+0x5571b00
	void SetPalletState(enum class EPalletState State); // Function DeadByDaylight.Pallet.SetPalletState // (Final|Native|Protected|BlueprintCallable) // @ game+0x5571a80
	void ResetPallet(); // Function DeadByDaylight.Pallet.ResetPallet // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void PulldownPallet(); // Function DeadByDaylight.Pallet.PulldownPallet // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void PullDown(struct ADBDPlayer* Player, struct FPalletPushSettings& pushSettings, enum class EPalletStunZoneSideStrategy stunZoneSideStrategy); // Function DeadByDaylight.Pallet.PullDown // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x55717a0
	void OnStunOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.Pallet.OnStunOverlap // (Final|Native|Private|HasOutParms) // @ game+0x5571310
	void OnPalletStunHit(); // Function DeadByDaylight.Pallet.OnPalletStunHit // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnPalletPulledUp_BP(); // Function DeadByDaylight.Pallet.OnPalletPulledUp_BP // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnFallen(); // Function DeadByDaylight.Pallet.OnFallen // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Multicast_StunActor(struct AActor* Actor, struct ACamperPlayer* Survivor, bool stunBreakPallet); // Function DeadByDaylight.Pallet.Multicast_StunActor // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5570190
	void Multicast_ResetPallet(); // Function DeadByDaylight.Pallet.Multicast_ResetPallet // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x5570170
	void Multicast_PulldownPallet(); // Function DeadByDaylight.Pallet.Multicast_PulldownPallet // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x5560fa0
	void Multicast_EntityExplodePallet(struct ADBDPlayer* Player); // Function DeadByDaylight.Pallet.Multicast_EntityExplodePallet // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x5570050
	bool IsPulldownBlockedByEntity(); // Function DeadByDaylight.Pallet.IsPulldownBlockedByEntity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5570020
	bool IsPendingDestruction(); // Function DeadByDaylight.Pallet.IsPendingDestruction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556fff0
	bool IsDestroyedByEntity(); // Function DeadByDaylight.Pallet.IsDestroyedByEntity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556ffc0
	struct ADBDPlayer* GetPlayerDoingPulldown(); // Function DeadByDaylight.Pallet.GetPlayerDoingPulldown // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x556ff00
	struct USkeletalMeshComponent* GetPalletSkeletalMeshComponent(); // Function DeadByDaylight.Pallet.GetPalletSkeletalMeshComponent // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	bool GetIsPulledDown(); // Function DeadByDaylight.Pallet.GetIsPulledDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556fe10
	bool GetIsDreamPallet(); // Function DeadByDaylight.Pallet.GetIsDreamPallet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x552ff10
	float GetFallDuration(); // Function DeadByDaylight.Pallet.GetFallDuration // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x556fd20
	void GetDestructibleAreaPrimitiveComponents(struct TArray<struct UPrimitiveComponent*>& prims); // Function DeadByDaylight.Pallet.GetDestructibleAreaPrimitiveComponents // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x556fbb0
	void ExplodeStunPallet(struct ADBDPlayer* Player); // Function DeadByDaylight.Pallet.ExplodeStunPallet // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void ExplodePallet(struct ADBDPlayer* Player); // Function DeadByDaylight.Pallet.ExplodePallet // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void EntityExplodePallet(struct ADBDPlayer* Player); // Function DeadByDaylight.Pallet.EntityExplodePallet // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Cosmetic_PalletPullDownFXImmediateHide(); // Function DeadByDaylight.Pallet.Cosmetic_PalletPullDownFXImmediateHide // (BlueprintCosmetic|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Cosmetic_OnPalletPulldownBlockedByEntityShow(); // Function DeadByDaylight.Pallet.Cosmetic_OnPalletPulldownBlockedByEntityShow // (BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Cosmetic_OnPalletPulldownBlockedByEntityHide(); // Function DeadByDaylight.Pallet.Cosmetic_OnPalletPulldownBlockedByEntityHide // (BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	bool CanPulldown(struct ADBDPlayer* Player, struct FVector& interactionAxis, bool isStationary); // Function DeadByDaylight.Pallet.CanPulldown // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x556fa50
	void Authority_OnOverlapPushBox(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.Pallet.Authority_OnOverlapPushBox // (Final|Native|Private|HasOutParms) // @ game+0x556f830
};

// Class DeadByDaylight.PalletPulldownBlockerComponent
// Size: 0x130 (Inherited: 0xb8)
struct UPalletPulldownBlockerComponent : UActorComponent {
	char pad_B8[0x60]; // 0xb8(0x60)
	bool _isPalletPulldownBlockedByEntity; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
	struct UObject* _palletToBlock; // 0x120(0x08)
	float _blockedDisappearFxTime; // 0x128(0x04)
	char pad_12C[0x4]; // 0x12c(0x04)

	void OnRep_PalletToBlock(struct UObject* oldPalletToBlock); // Function DeadByDaylight.PalletPulldownBlockerComponent.OnRep_PalletToBlock // (Final|Native|Private) // @ game+0x5570bd0
	void Multicast_PalletPulldownBlockedShowCosmetic(struct UObject* palletToBlock); // Function DeadByDaylight.PalletPulldownBlockerComponent.Multicast_PalletPulldownBlockedShowCosmetic // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55700e0
	void Multicast_PalletPulldownBlockedHideCosmetic(struct UObject* palletToUnblock); // Function DeadByDaylight.PalletPulldownBlockerComponent.Multicast_PalletPulldownBlockedHideCosmetic // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x4d51430
};

// Class DeadByDaylight.PalletTracker
// Size: 0x270 (Inherited: 0x230)
struct APalletTracker : AActor {
	struct APallet* _procedurallySpawnedPallet; // 0x230(0x08)
	struct APallet* _dreamPallet; // 0x238(0x08)
	struct USceneComponent* _indicatorLocation; // 0x240(0x08)
	bool _blocked; // 0x248(0x01)
	char pad_249[0x27]; // 0x249(0x27)

	void RevealToLocalPlayerBP(bool shown); // Function DeadByDaylight.PalletTracker.RevealToLocalPlayerBP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnRep_DreamPallet(struct APallet* oldDreamPallet); // Function DeadByDaylight.PalletTracker.OnRep_DreamPallet // (Final|Native|Private) // @ game+0x5570b40
	void InitializeTunableValues(struct ASlasherPlayer* Slasher); // Function DeadByDaylight.PalletTracker.InitializeTunableValues // (Final|Native|Private) // @ game+0x556ff30
	void EnableSelectedEffectToLocalPlayer(bool activated); // Function DeadByDaylight.PalletTracker.EnableSelectedEffectToLocalPlayer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	bool CanSpawnDreamPalletAtLocation(); // Function DeadByDaylight.PalletTracker.CanSpawnDreamPalletAtLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x556fb80
};

// Class DeadByDaylight.PalletUtilities
// Size: 0x30 (Inherited: 0x30)
struct UPalletUtilities : UObject {

	struct TSoftClassPtr<UObject> GetPalletTrackerBP(struct UObject* WorldContextObject); // Function DeadByDaylight.PalletUtilities.GetPalletTrackerBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x556fe40
	struct TSoftObjectPtr<UStaticMesh> GetIllusionaryPalletStaticMesh(struct UObject* worldContextObjec); // Function DeadByDaylight.PalletUtilities.GetIllusionaryPalletStaticMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x556fd50
	struct TSoftClassPtr<UObject> GetDreamPalletBP(struct UObject* WorldContextObject); // Function DeadByDaylight.PalletUtilities.GetDreamPalletBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x556fc60
};

// Class DeadByDaylight.PanelScreen
// Size: 0x480 (Inherited: 0x120)
struct UPanelScreen : UScreenBase {
	char pad_120[0x360]; // 0x120(0x360)

	void OnWebNodeSelected(int32_t characterId, int32_t ID, int32_t nodeDepth); // Function DeadByDaylight.PanelScreen.OnWebNodeSelected // (Final|Native|Public) // @ game+0x5571690
	void OnWebNodeHovered(int32_t ID); // Function DeadByDaylight.PanelScreen.OnWebNodeHovered // (Final|Native|Public) // @ game+0x5571600
	void OnWebBuilt(int32_t characterId, bool IsEmpty); // Function DeadByDaylight.PanelScreen.OnWebBuilt // (Final|Native|Public) // @ game+0x5571530
	void OnStoreButtonClick(); // Function DeadByDaylight.PanelScreen.OnStoreButtonClick // (Final|Native|Public) // @ game+0x54be480
	void OnSideTabButtonClick(int32_t tabIndex); // Function DeadByDaylight.PanelScreen.OnSideTabButtonClick // (Final|Native|Public) // @ game+0x5571280
	void OnSequenceStepCompleted(int32_t characterId, int32_t ID); // Function DeadByDaylight.PanelScreen.OnSequenceStepCompleted // (Final|Native|Public) // @ game+0x5570f80
	void OnSelectedEquipableSlotZoomChange(bool zoomIn); // Function DeadByDaylight.PanelScreen.OnSelectedEquipableSlotZoomChange // (Final|Native|Public) // @ game+0x5570ef0
	void OnRotateCharacter(float mouseDistanceChange); // Function DeadByDaylight.PanelScreen.OnRotateCharacter // (Final|Native|Public) // @ game+0x5570e70
	void OnRoleButtonClick(); // Function DeadByDaylight.PanelScreen.OnRoleButtonClick // (Final|Native|Public) // @ game+0x5472b70
	void OnReservedBloodPoints(int32_t characterId, int32_t BloodPoints, bool fullCost); // Function DeadByDaylight.PanelScreen.OnReservedBloodPoints // (Final|Native|Public) // @ game+0x5570d40
	void OnRegenerateButtonClick(int32_t characterId); // Function DeadByDaylight.PanelScreen.OnRegenerateButtonClick // (Final|Native|Public) // @ game+0x5570ab0
	void OnPrestigeUp(int32_t characterId); // Function DeadByDaylight.PanelScreen.OnPrestigeUp // (Final|Native|Public) // @ game+0x5570a00
	void OnPanelsHidden(); // Function DeadByDaylight.PanelScreen.OnPanelsHidden // (Final|Native|Public) // @ game+0x5570940
	void OnNodeConsumptionAnimDone(); // Function DeadByDaylight.PanelScreen.OnNodeConsumptionAnimDone // (Final|Native|Public) // @ game+0x5570920
	void OnNodeCollectionAnimDone(); // Function DeadByDaylight.PanelScreen.OnNodeCollectionAnimDone // (Final|Native|Public) // @ game+0x5570900
	void OnLoadoutSlotButtonClick(int32_t slotIndex); // Function DeadByDaylight.PanelScreen.OnLoadoutSlotButtonClick // (Final|Native|Public) // @ game+0x5570870
	void OnLoadoutSearchClicked(); // Function DeadByDaylight.PanelScreen.OnLoadoutSearchClicked // (Final|Native|Public) // @ game+0x5570850
	void OnLoadoutSearchClear(); // Function DeadByDaylight.PanelScreen.OnLoadoutSearchClear // (Final|Native|Public) // @ game+0x5566900
	void OnLoadoutPresetClick(int32_t index); // Function DeadByDaylight.PanelScreen.OnLoadoutPresetClick // (Final|Native|Public) // @ game+0x5566010
	void OnLevelUpShown(); // Function DeadByDaylight.PanelScreen.OnLevelUpShown // (Final|Native|Public) // @ game+0x5570830
	void OnLevelUpDone(); // Function DeadByDaylight.PanelScreen.OnLevelUpDone // (Final|Native|Public) // @ game+0x5570810
	void OnItemUnselected(int32_t itemIndex); // Function DeadByDaylight.PanelScreen.OnItemUnselected // (Final|Native|Public) // @ game+0x5566ac0
	void OnItemSelected(int32_t itemIndex); // Function DeadByDaylight.PanelScreen.OnItemSelected // (Final|Native|Public) // @ game+0x5570780
	void OnEventButtonClick(); // Function DeadByDaylight.PanelScreen.OnEventButtonClick // (Final|Native|Public) // @ game+0x54727d0
	void OnEquipableSlotClicked(int32_t clickedSlotCategory, int32_t clickedSlotIndex); // Function DeadByDaylight.PanelScreen.OnEquipableSlotClicked // (Final|Native|Public) // @ game+0x55706b0
	void OnCustomizationSearchClicked(); // Function DeadByDaylight.PanelScreen.OnCustomizationSearchClicked // (Final|Native|Public) // @ game+0x55668e0
	void OnCustomizationSearchClear(); // Function DeadByDaylight.PanelScreen.OnCustomizationSearchClear // (Final|Native|Public) // @ game+0x5570690
	void OnCustomizationPresetClick(int32_t index); // Function DeadByDaylight.PanelScreen.OnCustomizationPresetClick // (Final|Native|Public) // @ game+0x5570600
	void OnConfirmCollectSelectedNode(int32_t characterId); // Function DeadByDaylight.PanelScreen.OnConfirmCollectSelectedNode // (Final|Native|Public) // @ game+0x5570570
	void OnCharInfoClick(); // Function DeadByDaylight.PanelScreen.OnCharInfoClick // (Final|Native|Public) // @ game+0x555c160
	void OnCharacterSlotButtonClick(int32_t characterIndex); // Function DeadByDaylight.PanelScreen.OnCharacterSlotButtonClick // (Final|Native|Public) // @ game+0x55704e0
	void OnCharacterInfoClick(); // Function DeadByDaylight.PanelScreen.OnCharacterInfoClick // (Final|Native|Public) // @ game+0x555c140
	void OnBloodwebCenterButtonSelected(); // Function DeadByDaylight.PanelScreen.OnBloodwebCenterButtonSelected // (Final|Native|Public) // @ game+0x55704c0
	void OnBloodwebCenterButtonHovered(); // Function DeadByDaylight.PanelScreen.OnBloodwebCenterButtonHovered // (Final|Native|Public) // @ game+0x55704a0
	void OnAvailableItemsSortingChange(int32_t newSorting); // Function DeadByDaylight.PanelScreen.OnAvailableItemsSortingChange // (Final|Native|Public) // @ game+0x5570410
	void OnAvailableItemClicked(int32_t clickedItemIndex); // Function DeadByDaylight.PanelScreen.OnAvailableItemClicked // (Final|Native|Public) // @ game+0x5570380
};

// Class DeadByDaylight.ParticleSystemDistanceFaderComponent
// Size: 0xd8 (Inherited: 0xb8)
struct UParticleSystemDistanceFaderComponent : UActorComponent {
	struct UParticleSystemComponent* ParticleSystemComponent; // 0xb8(0x08)
	struct FName OpacityParameterName; // 0xc0(0x0c)
	float StartFadeDistance; // 0xcc(0x04)
	float EndFadeDistance; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
};

// Class DeadByDaylight.PawnAudioManager
// Size: 0x58 (Inherited: 0x38)
struct UPawnAudioManager : UGameInstanceSubsystem {
	char pad_38[0x20]; // 0x38(0x20)

	void UnregisterSlasherPawnAudio(struct ADBDBasePlayer* SlasherPawn); // Function DeadByDaylight.PawnAudioManager.UnregisterSlasherPawnAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x5577d40
	void RegisterSlasherPawnAudio(struct ADBDBasePlayer* SlasherPawn, struct FDelegate onAudioEnabled, struct FDelegate onAudioDisabled); // Function DeadByDaylight.PawnAudioManager.RegisterSlasherPawnAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x5577a70
	bool PostAudioEventIfPawnCurrent(struct ADBDBasePlayer* Pawn, struct UAkAudioEvent* AudioEvent); // Function DeadByDaylight.PawnAudioManager.PostAudioEventIfPawnCurrent // (Final|Native|Public|BlueprintCallable) // @ game+0x55779a0
	bool IsPawnCurrentlyActive(struct ADBDBasePlayer* Pawn); // Function DeadByDaylight.PawnAudioManager.IsPawnCurrentlyActive // (Final|Native|Public|BlueprintCallable) // @ game+0x5577760
	bool ForcePawnAudioPriority(struct ADBDBasePlayer* Pawn); // Function DeadByDaylight.PawnAudioManager.ForcePawnAudioPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x5575c50
};

// Class DeadByDaylight.UMGLoadoutItemButton
// Size: 0x678 (Inherited: 0x338)
struct UUMGLoadoutItemButton : UMobileBaseUserWidget {
	struct FMulticastInlineDelegate OnLoadoutItemButtonClicked; // 0x338(0x10)
	struct FMulticastInlineDelegate OnDisabledItemButtonClicked; // 0x348(0x10)
	struct FMulticastInlineDelegate OnLoadoutItemButtonLongPress; // 0x358(0x10)
	bool HideStackCount; // 0x368(0x01)
	char pad_369[0x7]; // 0x369(0x07)
	struct UTextBlock* TextStackCount; // 0x370(0x08)
	struct UCanvasPanel* EmptyCanvas; // 0x378(0x08)
	struct UButton* EmptyButton; // 0x380(0x08)
	struct UButton* LockedButton; // 0x388(0x08)
	struct UCanvasPanel* ActionCanvas; // 0x390(0x08)
	struct UImage* ImageRarityBG; // 0x398(0x08)
	struct UImage* ImageGradient; // 0x3a0(0x08)
	struct UImage* ImagePaint; // 0x3a8(0x08)
	struct UImage* ImageEventBorder; // 0x3b0(0x08)
	struct UImage* ImagePaintTop; // 0x3b8(0x08)
	struct UImage* ImagePaintBottom; // 0x3c0(0x08)
	enum class ESlateVisibility EmptyCanvasVisibility; // 0x3c8(0x01)
	enum class ESlateVisibility ActionCanvasVisibility; // 0x3c9(0x01)
	enum class ESlateVisibility PrivateCanvasVisibility; // 0x3ca(0x01)
	enum class ESlateVisibility LockIconVisibility; // 0x3cb(0x01)
	enum class ESlateVisibility EmptyIconVisibility; // 0x3cc(0x01)
	enum class ESlateVisibility SpecialEventVisiblity; // 0x3cd(0x01)
	enum class ESlateVisibility LoadoutSelectedVisibility; // 0x3ce(0x01)
	enum class ESlateVisibility LoadoutLockVisibility; // 0x3cf(0x01)
	struct UImage* ImageIcon; // 0x3d0(0x08)
	struct UImage* ImageShadow; // 0x3d8(0x08)
	struct UButton* ActionButton; // 0x3e0(0x08)
	struct FSlateBrush EmptyBGAsset; // 0x3e8(0x90)
	struct FSlateBrush DisableBGAsset; // 0x478(0x90)
	struct FInventorySlotData LoadoutItemData; // 0x508(0x128)
	bool _triggerClickEventForLoadoutWidget; // 0x630(0x01)
	char pad_631[0x7]; // 0x631(0x07)
	struct UVerticalBox* CanvasUnlock; // 0x638(0x08)
	struct UTextBlock* TextUnlockLevel; // 0x640(0x08)
	char pad_648[0x30]; // 0x648(0x30)

	void UpdateWidgetByState(enum class EInventoryButtonState State); // Function DeadByDaylight.UMGLoadoutItemButton.UpdateWidgetByState // (Final|Native|Public|BlueprintCallable) // @ game+0x55ecc70
	void UpdateWidgetByDataBP(struct FInventorySlotData& SlotData); // Function DeadByDaylight.UMGLoadoutItemButton.UpdateWidgetByDataBP // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void UpdateWidgetByData(struct FInventorySlotData& SlotData); // Function DeadByDaylight.UMGLoadoutItemButton.UpdateWidgetByData // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x55ecb40
	void UpdateUnlockable(struct FString nameToDisplay, int32_t UnlockableLevel); // Function DeadByDaylight.UMGLoadoutItemButton.UpdateUnlockable // (Final|Native|Protected|BlueprintCallable) // @ game+0x55eca60
	void UpdateStackCount(int32_t StackCount); // Function DeadByDaylight.UMGLoadoutItemButton.UpdateStackCount // (Final|Native|Protected|BlueprintCallable) // @ game+0x55ec9d0
	void UpdateImageColor(enum class EItemRarity Rarity, enum class EStatusEffectType EffectType); // Function DeadByDaylight.UMGLoadoutItemButton.UpdateImageColor // (Final|Native|Protected|BlueprintCallable) // @ game+0x55ec900
	void ShowClickableOutline(bool clickable); // Function DeadByDaylight.UMGLoadoutItemButton.ShowClickableOutline // (Final|Native|Public|BlueprintCallable) // @ game+0x55ec810
	void SetIsSelected(bool IsSelected); // Function DeadByDaylight.UMGLoadoutItemButton.SetIsSelected // (Final|Native|Public|BlueprintCallable) // @ game+0x55ec440
	void SetIconImageByPath(struct FString IconPath); // Function DeadByDaylight.UMGLoadoutItemButton.SetIconImageByPath // (Final|Native|Protected|BlueprintCallable) // @ game+0x55ebfa0
	void OnLockedButtonClicked(); // Function DeadByDaylight.UMGLoadoutItemButton.OnLockedButtonClicked // (Final|Native|Private|BlueprintCallable) // @ game+0x55ebf60
	void InitializationForLoadoutWidget(); // Function DeadByDaylight.UMGLoadoutItemButton.InitializationForLoadoutWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void InitializationForCharacterInfoWidget(); // Function DeadByDaylight.UMGLoadoutItemButton.InitializationForCharacterInfoWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	struct FName GetLoadoutItemID(); // Function DeadByDaylight.UMGLoadoutItemButton.GetLoadoutItemID // (Final|Native|Public|BlueprintCallable) // @ game+0x54dd5d0
	void BroadcastLongPressEvent(struct FName ItemId); // Function DeadByDaylight.UMGLoadoutItemButton.BroadcastLongPressEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x55eb980
	void BroadcastClickedEvent(struct FName ItemId); // Function DeadByDaylight.UMGLoadoutItemButton.BroadcastClickedEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x55eb8e0
};

// Class DeadByDaylight.PerkActionButton
// Size: 0x6a0 (Inherited: 0x678)
struct UPerkActionButton : UUMGLoadoutItemButton {
	struct UTextBlock* TextUnlockLevelTitle; // 0x678(0x08)
	bool Activatable; // 0x680(0x01)
	enum class ESlateVisibility SelectedImageVisibility; // 0x681(0x01)
	enum class ESlateVisibility ClickableButtonVisibility; // 0x682(0x01)
	enum class ESlateVisibility ClickableImageVisibility; // 0x683(0x01)
	enum class ESlateVisibility ProgressbarVisibility; // 0x684(0x01)
	char pad_685[0x3]; // 0x685(0x03)
	float IdleTime; // 0x688(0x04)
	char pad_68C[0x14]; // 0x68c(0x14)

	void UpdateWidgetPercentage(float Percentage); // Function DeadByDaylight.PerkActionButton.UpdateWidgetPercentage // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetIsActivatable(bool isClickable); // Function DeadByDaylight.PerkActionButton.SetIsActivatable // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetCanEverBeActivated(); // Function DeadByDaylight.PerkActionButton.SetCanEverBeActivated // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void CallSetPerkLevel(int32_t Level); // Function DeadByDaylight.PerkActionButton.CallSetPerkLevel // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void CallHidePerkLevel(); // Function DeadByDaylight.PerkActionButton.CallHidePerkLevel // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.PerkCollectionComponent
// Size: 0xe0 (Inherited: 0xb8)
struct UPerkCollectionComponent : UActorComponent {
	struct TArray<struct UPerk*> _array; // 0xb8(0x10)
	char pad_C8[0x18]; // 0xc8(0x18)

	void OnRep_Array(struct TArray<struct UPerk*>& oldArray); // Function DeadByDaylight.PerkCollectionComponent.OnRep_Array // (Final|Native|Private|HasOutParms) // @ game+0x5577800
};

// Class DeadByDaylight.PerkDataAsset
// Size: 0x88 (Inherited: 0x88)
struct UPerkDataAsset : UGameplayModifierContainerDataAsset {
};

// Class DeadByDaylight.PerkHudWidget
// Size: 0x470 (Inherited: 0x338)
struct UPerkHudWidget : UMobileBaseUserWidget {
	struct UCanvasPanel* PerksClickable; // 0x338(0x08)
	struct UCanvasPanel* PerksExternal; // 0x340(0x08)
	struct TSoftClassPtr<UObject> AtlantaPerkActionButtonClass; // 0x348(0x30)
	struct TMap<struct FName, struct UPerkActionButton*> _clickablePerksMap; // 0x378(0x50)
	struct TMap<struct FName, struct UPerkActionButton*> _externalPerksMap; // 0x3c8(0x50)
	char pad_418[0x58]; // 0x418(0x58)

	void RemoveExistingPerk(struct FName perkId, bool isExternal); // Function DeadByDaylight.PerkHudWidget.RemoveExistingPerk // (Final|Native|Public|BlueprintCallable) // @ game+0x5577bc0
	void OnPerkClickedHandler(struct FName perkId); // Function DeadByDaylight.PerkHudWidget.OnPerkClickedHandler // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.PerkManager
// Size: 0x370 (Inherited: 0xb8)
struct UPerkManager : UActorComponent {
	char pad_B8[0x28]; // 0xb8(0x28)
	struct UPerkCollectionComponent* _perks; // 0xe0(0x08)
	struct UStatusEffectCollectionComponent* _statusEffects; // 0xe8(0x08)
	char pad_F0[0x280]; // 0xf0(0x280)

	bool HasStatusEffectOfClass(struct UObject* Type); // Function DeadByDaylight.PerkManager.HasStatusEffectOfClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5577660
	bool HasStatusEffect(struct FName statusEffectID); // Function DeadByDaylight.PerkManager.HasStatusEffect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55775b0
	bool HasPerkSubFlag(struct FGameplayTag subFlag); // Function DeadByDaylight.PerkManager.HasPerkSubFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5577500
	bool HasPerkModifierOfType(struct FGameplayTag Type); // Function DeadByDaylight.PerkManager.HasPerkModifierOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5577450
	bool HasPerkFlags(struct TArray<struct FGameplayTag> Flags); // Function DeadByDaylight.PerkManager.HasPerkFlags // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5577350
	bool HasPerkFlagFromSource(struct FGameplayTag flag, enum class EGameplayModifierSource modifierSource); // Function DeadByDaylight.PerkManager.HasPerkFlagFromSource // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5577250
	bool HasPerkFlag(struct FGameplayTag flag); // Function DeadByDaylight.PerkManager.HasPerkFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55771a0
	bool HasAnyAddonWithTag(struct FName Tag); // Function DeadByDaylight.PerkManager.HasAnyAddonWithTag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55770f0
	bool HasAllCharacterPerksEquipped(); // Function DeadByDaylight.PerkManager.HasAllCharacterPerksEquipped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55770c0
	struct UStatusEffect* GetStatusEffectByClass(struct UObject* Type); // Function DeadByDaylight.PerkManager.GetStatusEffectByClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5577020
	struct UStatusEffect* GetStatusEffect(struct FName ID); // Function DeadByDaylight.PerkManager.GetStatusEffect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576f70
	struct UGameplayModifierContainer* GetSourceWithModifier(struct FGameplayTag Type); // Function DeadByDaylight.PerkManager.GetSourceWithModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576ec0
	struct UGameplayModifierContainer* GetSourceWithFlag(struct FGameplayTag flag); // Function DeadByDaylight.PerkManager.GetSourceWithFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576e10
	struct TArray<struct UPerk*> GetPerks(); // Function DeadByDaylight.PerkManager.GetPerks // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576d80
	float GetPerkModifierMinValueAndSource(struct FGameplayTag Type, float startValue, struct UGameplayModifierContainer*& outSource); // Function DeadByDaylight.PerkManager.GetPerkModifierMinValueAndSource // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576c40
	float GetPerkModifierMinValue(struct FGameplayTag Type, float startValue); // Function DeadByDaylight.PerkManager.GetPerkModifierMinValue // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576b40
	float GetPerkModifierMaxValueAndSource(struct FGameplayTag Type, struct UGameplayModifierContainer*& outSource); // Function DeadByDaylight.PerkManager.GetPerkModifierMaxValueAndSource // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576a40
	float GetPerkModifierMaxValue(struct FGameplayTag Type); // Function DeadByDaylight.PerkManager.GetPerkModifierMaxValue // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576980
	float GetPerkModifierAdditiveValue(struct FGameplayTag Type, float BaseValue); // Function DeadByDaylight.PerkManager.GetPerkModifierAdditiveValue // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576880
	float GetPerkModifier(struct FGameplayTag Type); // Function DeadByDaylight.PerkManager.GetPerkModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55767d0
	struct UPerk* GetPerk(struct FName ID); // Function DeadByDaylight.PerkManager.GetPerk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55766d0
	float GetMultiplicativeModifierValueWithCompoundNegative(struct FGameplayTag Type); // Function DeadByDaylight.PerkManager.GetMultiplicativeModifierValueWithCompoundNegative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576620
	float GetMultiplicativeModifierValueOfContainerWithCompoundNegative(struct FGameplayTagContainer Container); // Function DeadByDaylight.PerkManager.GetMultiplicativeModifierValueOfContainerWithCompoundNegative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576530
	float GetMultiplicativeModifierValue(struct FGameplayTag Type); // Function DeadByDaylight.PerkManager.GetMultiplicativeModifierValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576480
	float GetCompoundedModifierValue(struct FGameplayTag Type); // Function DeadByDaylight.PerkManager.GetCompoundedModifierValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55761e0
	float GetAveragePerkModifierValue(struct FGameplayTag Type); // Function DeadByDaylight.PerkManager.GetAveragePerkModifierValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576120
	struct TArray<struct UStatusEffect*> GetAllStatusEffectsByID(struct FName& ID); // Function DeadByDaylight.PerkManager.GetAllStatusEffectsByID // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576030
	struct TArray<struct UStatusEffect*> GetAllStatusEffectsByClass(struct UObject* Type); // Function DeadByDaylight.PerkManager.GetAllStatusEffectsByClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5575f50
	struct TArray<struct UStatusEffect*> GetAllStatusEffects(); // Function DeadByDaylight.PerkManager.GetAllStatusEffects // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5575ed0
	struct TArray<struct UGameplayModifierContainer*> GetAllSourcesWithModifier(struct FGameplayTag Type); // Function DeadByDaylight.PerkManager.GetAllSourcesWithModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5575de0
	struct TArray<struct UGameplayModifierContainer*> GetAllSourcesWithFlag(struct FGameplayTag flag); // Function DeadByDaylight.PerkManager.GetAllSourcesWithFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5575cf0
	void Authority_SpawnPerk(struct FName perkId, int32_t PerkLevel); // Function DeadByDaylight.PerkManager.Authority_SpawnPerk // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55759a0
	void Authority_RemoveStatusEffectByClass(struct UObject* EffectClass, bool bRemoveAllOfSameClass); // Function DeadByDaylight.PerkManager.Authority_RemoveStatusEffectByClass // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575720
	void Authority_RemoveStatusEffect(struct UStatusEffect* StatusEffect); // Function DeadByDaylight.PerkManager.Authority_RemoveStatusEffect // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575690
	void Authority_RemovePerks(); // Function DeadByDaylight.PerkManager.Authority_RemovePerks // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575670
	struct UStatusEffect* Authority_ImposeStatusEffectOfClass(struct UStatusEffect* EffectClass, struct ADBDPlayer* originatingPlayer, float customParam, struct UGameplayModifierContainer* originatingEffect, bool shouldDisplay, float lifetime); // Function DeadByDaylight.PerkManager.Authority_ImposeStatusEffectOfClass // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575260
	struct UStatusEffect* Authority_ImposeStatusEffect_DEPRECATED(struct FName statusEffectID, struct ADBDPlayer* originatingPlayer, float customParam, struct UGameplayModifierContainer* originatingEffect, bool shouldDisplay, float lifetime); // Function DeadByDaylight.PerkManager.Authority_ImposeStatusEffect_DEPRECATED // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575450
	struct UStatusEffect* Authority_ImposeNewStatusEffectOfClassOrChangeLifeTime(struct UStatusEffect* EffectClass, struct ADBDPlayer* originatingPlayer, float lifetime, float customParam, struct UGameplayModifierContainer* originatingEffect, bool shouldDisplay); // Function DeadByDaylight.PerkManager.Authority_ImposeNewStatusEffectOfClassOrChangeLifeTime // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x5575080
};

// Class DeadByDaylight.PerkManagerOwnerInterface
// Size: 0x30 (Inherited: 0x30)
struct UPerkManagerOwnerInterface : UInterface {
};

// Class DeadByDaylight.PerkOwnerInterface
// Size: 0x30 (Inherited: 0x30)
struct UPerkOwnerInterface : UInterface {
};

// Class DeadByDaylight.PerkSelectionSlotWidget
// Size: 0x3b8 (Inherited: 0x338)
struct UPerkSelectionSlotWidget : UMobileBaseUserWidget {
	struct UTextBlock* PerkName; // 0x338(0x08)
	struct UTextBlock* TextChoose; // 0x340(0x08)
	struct UPerkActionButton* PerkActionButton; // 0x348(0x08)
	struct UImage* SelectedIcon; // 0x350(0x08)
	struct UUMGHtmlRichText* descriptionText; // 0x358(0x08)
	struct UImage* PictureBackground; // 0x360(0x08)
	struct UImage* PicturePerkBackground; // 0x368(0x08)
	struct UImage* PictureHighlightFrame; // 0x370(0x08)
	struct UImage* PictureTopRightBackground; // 0x378(0x08)
	struct UImage* PictureTopRightFrame; // 0x380(0x08)
	float HighOpacity; // 0x388(0x04)
	float LowOpacity; // 0x38c(0x04)
	float PerkBackgroundLowOpacity; // 0x390(0x04)
	float DescriptionBackgroundLowOpacity; // 0x394(0x04)
	char pad_398[0x20]; // 0x398(0x20)

	void OnButtonClicked(); // Function DeadByDaylight.PerkSelectionSlotWidget.OnButtonClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x557cdc0
};

// Class DeadByDaylight.PerkSoundHudIcon
// Size: 0x348 (Inherited: 0x338)
struct UPerkSoundHudIcon : UMobileBaseUserWidget {
	struct FName perkId; // 0x338(0x0c)
	char pad_344[0x4]; // 0x344(0x04)

	void ClearPerk(); // Function DeadByDaylight.PerkSoundHudIcon.ClearPerk // (Native|Public) // @ game+0x48306d0
	void ActivatePerk(float Percentage); // Function DeadByDaylight.PerkSoundHudIcon.ActivatePerk // (Native|Public) // @ game+0x557b920
};

// Class DeadByDaylight.PerkSoundHudIconSporadic
// Size: 0x380 (Inherited: 0x348)
struct UPerkSoundHudIconSporadic : UPerkSoundHudIcon {
	struct UCanvasPanel* SporadicIcon; // 0x348(0x08)
	float FadeInRate; // 0x350(0x04)
	float FadeOutRate; // 0x354(0x04)
	float AnimationStartOpacity; // 0x358(0x04)
	int32_t FadePolynomialOrder; // 0x35c(0x04)
	bool DisplayIcon; // 0x360(0x01)
	char pad_361[0x1f]; // 0x361(0x1f)

	void NativeTick(struct FGeometry& MyGeometry, float DeltaTime); // Function DeadByDaylight.PerkSoundHudIconSporadic.NativeTick // (Native|Public|HasOutParms) // @ game+0x557cbc0
};

// Class DeadByDaylight.PerkSoundHudWidget
// Size: 0x340 (Inherited: 0x338)
struct UPerkSoundHudWidget : UMobileBaseUserWidget {
	struct UHorizontalBox* PerkIcons; // 0x338(0x08)
};

// Class DeadByDaylight.PerkTrappableComponent
// Size: 0x100 (Inherited: 0xb8)
struct UPerkTrappableComponent : UActorComponent {
	struct FMulticastInlineDelegate OnAddTrap; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnRemoveTrap; // 0xc8(0x10)
	struct AInteractable* _interactableType; // 0xd8(0x08)
	struct TArray<enum class ETrapType> _trapsOnInteractable; // 0xe0(0x10)
	char pad_F0[0x10]; // 0xf0(0x10)

	void OnTrapAddedOrRemoved__DelegateSignature(enum class ETrapType trapType); // DelegateFunction DeadByDaylight.PerkTrappableComponent.OnTrapAddedOrRemoved__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnRep_TrapsOnInteractable(); // Function DeadByDaylight.PerkTrappableComponent.OnRep_TrapsOnInteractable // (Final|Native|Private) // @ game+0x557cde0
	bool HasTrap(enum class ETrapType trapType); // Function DeadByDaylight.PerkTrappableComponent.HasTrap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557c430
	bool HasAnyTrap(); // Function DeadByDaylight.PerkTrappableComponent.HasAnyTrap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557c2e0
};

// Class DeadByDaylight.PerkUtilitiesInterface
// Size: 0x30 (Inherited: 0x30)
struct UPerkUtilitiesInterface : UInterface {
};

// Class DeadByDaylight.PerspectiveEffectActivator
// Size: 0x130 (Inherited: 0xb8)
struct UPerspectiveEffectActivator : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	struct TMap<struct FName, struct FPerspectiveEffectData> _perspectiveEffects; // 0xd0(0x50)
	char pad_120[0x10]; // 0x120(0x10)

	void UnregisterEffect(struct FName effectName); // Function DeadByDaylight.PerspectiveEffectActivator.UnregisterEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x557d750
	void SetWantsActive(struct FName effectName, bool WantsActive); // Function DeadByDaylight.PerspectiveEffectActivator.SetWantsActive // (Final|Native|Public|BlueprintCallable) // @ game+0x557d660
	void RegisterEffect(struct FName effectName, struct FPerspectiveEffectData effectData); // Function DeadByDaylight.PerspectiveEffectActivator.RegisterEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x557ce00
	bool IsEffectActive(struct FName effectName); // Function DeadByDaylight.PerspectiveEffectActivator.IsEffectActive // (Final|Native|Public|BlueprintCallable) // @ game+0x557c570
};

// Class DeadByDaylight.PhaseWalkingInterface
// Size: 0x30 (Inherited: 0x30)
struct UPhaseWalkingInterface : UInterface {
};

// Class DeadByDaylight.PlagueUtilities
// Size: 0x30 (Inherited: 0x30)
struct UPlagueUtilities : UBlueprintFunctionLibrary {

	bool IsPlagueDebugModeActive(); // Function DeadByDaylight.PlagueUtilities.IsPlagueDebugModeActive // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x557c6b0
	bool IsInfected(struct ADBDPlayer* Player); // Function DeadByDaylight.PlagueUtilities.IsInfected // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x557c620
	bool HasMaxLevelSickness(struct ADBDPlayer* Player); // Function DeadByDaylight.PlagueUtilities.HasMaxLevelSickness // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x557c3a0
	struct USurvivorPlagueEffect* GetPlagueEffect(struct ADBDPlayer* Player); // Function DeadByDaylight.PlagueUtilities.GetPlagueEffect // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x557c200
	void Authority_AddSicknessToPlayer(struct ADBDPlayer* Player, float sicknessToAdd); // Function DeadByDaylight.PlagueUtilities.Authority_AddSicknessToPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x557ba40
};

// Class DeadByDaylight.PlatformHelper
// Size: 0x30 (Inherited: 0x30)
struct UPlatformHelper : UObject {
};

// Class DeadByDaylight.PlayerDataStorageFacade
// Size: 0x98 (Inherited: 0x30)
struct UPlayerDataStorageFacade : UObject {
	char pad_30[0x68]; // 0x30(0x68)
};

// Class DeadByDaylight.PlayerDebugComponent
// Size: 0xc0 (Inherited: 0xb8)
struct UPlayerDebugComponent : UActorComponent {
	bool _disableStartUpdateMontageDuringEnter; // 0xb8(0x01)
	bool _allowPalletPullUpInteraction; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)
};

// Class DeadByDaylight.PlayerGameRelevancyComponent
// Size: 0x110 (Inherited: 0xb8)
struct UPlayerGameRelevancyComponent : UActorComponent {
	struct FTagStateBool _isRelevantToGameplay; // 0xb8(0x30)
	char pad_E8[0x28]; // 0xe8(0x28)
};

// Class DeadByDaylight.PlayerInGameAssetPreloadState
// Size: 0xd0 (Inherited: 0xb8)
struct UPlayerInGameAssetPreloadState : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)

	void Server_SetPreloadCompleted(struct FString preloadInfo); // Function DeadByDaylight.PlayerInGameAssetPreloadState.Server_SetPreloadCompleted // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x557d460
};

// Class DeadByDaylight.PlayerInteractionHandler
// Size: 0x670 (Inherited: 0xb8)
struct UPlayerInteractionHandler : UActorComponent {
	char pad_B8[0x68]; // 0xb8(0x68)
	float PriorityConeAngle; // 0x120(0x04)
	float BotPriorityConeAngle; // 0x124(0x04)
	char pad_128[0x10]; // 0x128(0x10)
	struct FMulticastInlineDelegate Authority_SecondaryActionDoneDelegate; // 0x138(0x10)
	struct FMulticastInlineDelegate NewInteractionRequestedDelegate; // 0x148(0x10)
	struct FMulticastInlineDelegate ServerValidatedInteractionStartedDelegate; // 0x158(0x10)
	struct FMulticastInlineDelegate ServerValidatedInteractionEndedDelegate; // 0x168(0x10)
	enum class EInteractionLayer InteractionLayer; // 0x178(0x01)
	char pad_179[0xf]; // 0x179(0x0f)
	struct FMulticastInlineDelegate OnDeactivateSkillCheckDelegate; // 0x188(0x10)
	char pad_198[0x60]; // 0x198(0x60)
	bool _hasInteractionRequest; // 0x1f8(0x01)
	bool _hasInteractionRequestInBuffer; // 0x1f9(0x01)
	char pad_1FA[0x1e]; // 0x1fa(0x1e)
	struct UInteractionDefinition* _interactionToSwapTo; // 0x218(0x08)
	char pad_220[0x18]; // 0x220(0x18)
	struct UInteractionDefinition* _currentInteraction; // 0x238(0x08)
	char pad_240[0xa0]; // 0x240(0xa0)
	struct TArray<struct ADBDPlayer*> _currentPlayerDependencies; // 0x2e0(0x10)
	enum class EInputInteractionType _currentInteractionType; // 0x2f0(0x01)
	char pad_2F1[0x7]; // 0x2f1(0x07)
	struct USkillCheck* _skillCheck; // 0x2f8(0x08)
	char pad_300[0x8]; // 0x300(0x08)
	struct TArray<float> _progressBasedSkillChecks; // 0x308(0x10)
	char pad_318[0x60]; // 0x318(0x60)
	struct ADBDPlayer* _requestedInterruptionOtherParty; // 0x378(0x08)
	struct UInterruptionDefinition* _requestedInterruptionDefinition; // 0x380(0x08)
	bool _requestedInterruptionIsInterruptor; // 0x388(0x01)
	char pad_389[0x7]; // 0x389(0x07)
	struct ADBDPlayer* _currentInterruptionOtherParty; // 0x390(0x08)
	struct UInterruptionDefinition* _currentInterruptionDefinition; // 0x398(0x08)
	bool _currentInterruptionIsInterruptor; // 0x3a0(0x01)
	bool _interactionInProgress; // 0x3a1(0x01)
	char pad_3A2[0x5e]; // 0x3a2(0x5e)
	struct TArray<struct UInteractionDefinition*> _interactionsInZone; // 0x400(0x10)
	char pad_410[0x28]; // 0x410(0x28)
	struct FAvailableInteractionCalculator _availableInteractionCalculator; // 0x438(0x1c0)
	char pad_5F8[0x20]; // 0x5f8(0x20)
	struct TMap<struct UObject*, struct FGameplayTagContainer> _disableInteractionSourcesToExceptions; // 0x618(0x50)
	char pad_668[0x8]; // 0x668(0x08)

	void SetScanForInteractionsEnabled(bool Enabled); // Function DeadByDaylight.PlayerInteractionHandler.SetScanForInteractionsEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x557d5d0
	void Server_StoreInterruption_Interruptor(struct ADBDPlayer* interruptionOtherParty, struct UInterruptionDefinition* InterruptionDefinition); // Function DeadByDaylight.PlayerInteractionHandler.Server_StoreInterruption_Interruptor // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x557d500
	void Server_SetInteractionToSwapTo(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.PlayerInteractionHandler.Server_SetInteractionToSwapTo // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x557d3d0
	void Server_RequestInterruption_Interruptor(); // Function DeadByDaylight.PlayerInteractionHandler.Server_RequestInterruption_Interruptor // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54fb5a0
	void Server_DebugRequestInteraction(struct FString interactionName, struct FString InteractorName, struct FString interactableName); // Function DeadByDaylight.PlayerInteractionHandler.Server_DebugRequestInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x557d280
	void Server_Cheat_SetInteractionScanInterval(float Interval); // Function DeadByDaylight.PlayerInteractionHandler.Server_Cheat_SetInteractionScanInterval // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x557d1f0
	void Server_CancelCurrentInteractionByInput(); // Function DeadByDaylight.PlayerInteractionHandler.Server_CancelCurrentInteractionByInput // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x482a860
	void Server_Broadcast_StoreInteraction(struct FStoredInteraction interactionToStore); // Function DeadByDaylight.PlayerInteractionHandler.Server_Broadcast_StoreInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x557d110
	void Server_Broadcast_ConfirmChargedCompleted(bool chargeComplete); // Function DeadByDaylight.PlayerInteractionHandler.Server_Broadcast_ConfirmChargedCompleted // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x557d080
	void Server_AnswerInterruption_Interruptee(enum class ERequestState State); // Function DeadByDaylight.PlayerInteractionHandler.Server_AnswerInterruption_Interruptee // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x557cfd0
	void ResetSuccessiveSkillCheckCount(); // Function DeadByDaylight.PlayerInteractionHandler.ResetSuccessiveSkillCheckCount // (Final|Native|Public|BlueprintCallable) // @ game+0x557cfb0
	void RemoveInteraction(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.PlayerInteractionHandler.RemoveInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x557cf20
	void OnAttachedInteractorOwnerEndPlay(struct AActor* Actor, enum class EEndPlayReason EndPlayReason); // Function DeadByDaylight.PlayerInteractionHandler.OnAttachedInteractorOwnerEndPlay // (Final|Native|Private) // @ game+0x557ccf0
	int32_t NumInteractionsInZone(); // Function DeadByDaylight.PlayerInteractionHandler.NumInteractionsInZone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557ccc0
	void Multicast_StoreInterruption_Interruptor(struct ADBDPlayer* interruptionOtherParty, struct UInterruptionDefinition* InterruptionDefinition); // Function DeadByDaylight.PlayerInteractionHandler.Multicast_StoreInterruption_Interruptor // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x557caf0
	void Multicast_StoreInteraction(struct FStoredInteraction interactionToStore); // Function DeadByDaylight.PlayerInteractionHandler.Multicast_StoreInteraction // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x557ca10
	void Multicast_SetInteractionToSwapTo(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.PlayerInteractionHandler.Multicast_SetInteractionToSwapTo // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x557c980
	void Multicast_RequestInterruption_Interruptee(struct ADBDPlayer* interruptionOtherParty, struct UInterruptionDefinition* InterruptionDefinition); // Function DeadByDaylight.PlayerInteractionHandler.Multicast_RequestInterruption_Interruptee // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x557c8b0
	void Multicast_InterruptionRequestResult_Interruptor(enum class ERequestState State, bool grantInterruptScore); // Function DeadByDaylight.PlayerInteractionHandler.Multicast_InterruptionRequestResult_Interruptor // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x557c7d0
	void Multicast_InteractionPredictionValidationResult(struct UInteractionDefinition* Interaction, enum class EInteractionValidationState State); // Function DeadByDaylight.PlayerInteractionHandler.Multicast_InteractionPredictionValidationResult // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x557c700
	void Multicast_CancelCurrentInteractionByInput(); // Function DeadByDaylight.PlayerInteractionHandler.Multicast_CancelCurrentInteractionByInput // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x557c6e0
	void IncrementSuccessiveSkillCheckCount(); // Function DeadByDaylight.PlayerInteractionHandler.IncrementSuccessiveSkillCheckCount // (Final|Native|Public|BlueprintCallable) // @ game+0x557c4c0
	bool HasAvailableInteraction(enum class EInputInteractionType interactionType); // Function DeadByDaylight.PlayerInteractionHandler.HasAvailableInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x557c310
	bool HasActiveSkillCheck(); // Function DeadByDaylight.PlayerInteractionHandler.HasActiveSkillCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557c2b0
	struct USkillCheck* GetSkillCheck(); // Function DeadByDaylight.PlayerInteractionHandler.GetSkillCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557c290
	float GetMultiplicativeSkillCheckProbabilityModifier(); // Function DeadByDaylight.PlayerInteractionHandler.GetMultiplicativeSkillCheckProbabilityModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557c1d0
	struct UInteractionDefinition* GetCurrentInteractionOfType(enum class EInputInteractionType interactionInputType); // Function DeadByDaylight.PlayerInteractionHandler.GetCurrentInteractionOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557c140
	struct UInteractionDefinition* GetCurrentInteraction(); // Function DeadByDaylight.PlayerInteractionHandler.GetCurrentInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5534c40
	void GetAvailableInteractions(struct TArray<struct UInteractionDefinition*>& Result); // Function DeadByDaylight.PlayerInteractionHandler.GetAvailableInteractions // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x557c090
	struct UInteractionDefinition* GetAvailableInteractionByID(struct FString InteractionID); // Function DeadByDaylight.PlayerInteractionHandler.GetAvailableInteractionByID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557bfe0
	struct UInteractionDefinition* GetAvailableInteraction(enum class EInputInteractionType interactionType); // Function DeadByDaylight.PlayerInteractionHandler.GetAvailableInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557bf50
	float GetAdditiveSkillCheckProbabilityModifier(); // Function DeadByDaylight.PlayerInteractionHandler.GetAdditiveSkillCheckProbabilityModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557bf20
	void Client_StopSkillCheck(); // Function DeadByDaylight.PlayerInteractionHandler.Client_StopSkillCheck // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x48306d0
	void Client_NotifyChargeCompleted(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.PlayerInteractionHandler.Client_NotifyChargeCompleted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x4823c20
	void Client_Cheat_SetInteractionScanInterval(float Interval); // Function DeadByDaylight.PlayerInteractionHandler.Client_Cheat_SetInteractionScanInterval // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x557be90
	void CleanInteractionArray(struct AActor* DestroyedActor); // Function DeadByDaylight.PlayerInteractionHandler.CleanInteractionArray // (Final|Native|Public) // @ game+0x557be00
	bool CanPerformInteraction(struct FString interactionName); // Function DeadByDaylight.PlayerInteractionHandler.CanPerformInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x557bd50
	void Broadcast_Multicast_ConfirmChargedCompleted(bool chargeComplete); // Function DeadByDaylight.PlayerInteractionHandler.Broadcast_Multicast_ConfirmChargedCompleted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x557bcc0
	void Authority_UnPauseSkillCheckTimer(); // Function DeadByDaylight.PlayerInteractionHandler.Authority_UnPauseSkillCheckTimer // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x557bca0
	void Authority_TriggerCustomSkillCheck(enum class ESkillCheckCustomType Type, float WarningSoundDelay); // Function DeadByDaylight.PlayerInteractionHandler.Authority_TriggerCustomSkillCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x557bbd0
	void Authority_PauseSkillCheckTimer(); // Function DeadByDaylight.PlayerInteractionHandler.Authority_PauseSkillCheckTimer // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x557bbb0
	void Authority_ClearPlayerDependency(struct ADBDPlayer* playerDependency); // Function DeadByDaylight.PlayerInteractionHandler.Authority_ClearPlayerDependency // (Final|Native|Public|BlueprintCallable) // @ game+0x557bb20
	void Authority_ClearPlayerDependencies(); // Function DeadByDaylight.PlayerInteractionHandler.Authority_ClearPlayerDependencies // (Final|Native|Public|BlueprintCallable) // @ game+0x557bb00
	void AddInteraction(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.PlayerInteractionHandler.AddInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x557b9b0
};

// Class DeadByDaylight.PlayerLevelTooltipWidget
// Size: 0x378 (Inherited: 0x370)
struct UPlayerLevelTooltipWidget : UBaseTooltipWidget {
	struct UUMGTooltipContentPlayerLevelWidget* PlayerLevelContent; // 0x370(0x08)
};

// Class DeadByDaylight.PlayerMoveBackAndForthComponent
// Size: 0x100 (Inherited: 0xb8)
struct UPlayerMoveBackAndForthComponent : UActorComponent {
	char pad_B8[0x48]; // 0xb8(0x48)

	void OnMoveTimerDone(); // Function DeadByDaylight.PlayerMoveBackAndForthComponent.OnMoveTimerDone // (Final|Native|Private) // @ game+0x5583ea0
};

// Class DeadByDaylight.PlayerNameRegistration
// Size: 0x98 (Inherited: 0x30)
struct UPlayerNameRegistration : UObject {
	char pad_30[0x68]; // 0x30(0x68)
};

// Class DeadByDaylight.SpherePlayerOverlapComponent
// Size: 0x4a0 (Inherited: 0x4a0)
struct USpherePlayerOverlapComponent : USphereComponent {
};

// Class DeadByDaylight.CapsulePlayerOverlapComponent
// Size: 0x4a0 (Inherited: 0x4a0)
struct UCapsulePlayerOverlapComponent : UCapsuleComponent {
};

// Class DeadByDaylight.BoxPlayerOverlapComponent
// Size: 0x4b0 (Inherited: 0x4b0)
struct UBoxPlayerOverlapComponent : UBoxComponent {
};

// Class DeadByDaylight.PlayerPerspectiveComponent
// Size: 0x130 (Inherited: 0xb8)
struct UPlayerPerspectiveComponent : UActorComponent {
	char pad_B8[0x78]; // 0xb8(0x78)

	void UpdateLocallyObserved(); // Function DeadByDaylight.PlayerPerspectiveComponent.UpdateLocallyObserved // (Final|Native|Private) // @ game+0x5584270
	void OnPawnControllerChanged(struct APawn* Pawn, struct AController* OldController, struct AController* NewController); // Function DeadByDaylight.PlayerPerspectiveComponent.OnPawnControllerChanged // (Final|Native|Private) // @ game+0x5583ec0
	bool IsLocallyObserved(); // Function DeadByDaylight.PlayerPerspectiveComponent.IsLocallyObserved // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5583e40
};

// Class DeadByDaylight.PlayerReportManager
// Size: 0xd8 (Inherited: 0x38)
struct UPlayerReportManager : UGameInstanceSubsystem {
	char pad_38[0x8]; // 0x38(0x08)
	struct UDBDGameInstance* _gameInstance; // 0x40(0x08)
	char pad_48[0x90]; // 0x48(0x90)
};

// Class DeadByDaylight.PlayerScoreComponent
// Size: 0x158 (Inherited: 0xb8)
struct UPlayerScoreComponent : UActorComponent {
	struct TSoftObjectPtr<UDataTable> _scoreEmitterDB; // 0xb8(0x30)
	struct TSet<struct UPlayerScoreEmitter*> _emitters; // 0xe8(0x50)
	char pad_138[0x20]; // 0x138(0x20)
};

// Class DeadByDaylight.PlayerScoreEmitter
// Size: 0x38 (Inherited: 0x30)
struct UPlayerScoreEmitter : UObject {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class DeadByDaylight.PlayerSkeletalMeshComponentBudgeted
// Size: 0x1030 (Inherited: 0x1030)
struct UPlayerSkeletalMeshComponentBudgeted : UDBDSkeletalMeshComponentBudgeted {
};

// Class DeadByDaylight.PlayerStateScoreEmitter
// Size: 0xf0 (Inherited: 0x38)
struct UPlayerStateScoreEmitter : UPlayerScoreEmitter {
	struct FGameplayTag _scoreTag; // 0x38(0x0c)
	float _scoreUpdateInterval; // 0x44(0x04)
	struct FGameplayTagQuery _tagQuery; // 0x48(0x48)
	char pad_90[0x60]; // 0x90(0x60)
};

// Class DeadByDaylight.PollableEventListener
// Size: 0xc8 (Inherited: 0xb8)
struct UPollableEventListener : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class DeadByDaylight.PoolableProjectileComponent
// Size: 0xd8 (Inherited: 0xd8)
struct UPoolableProjectileComponent : UAuthoritativePoolableActorComponent {
};

// Class DeadByDaylight.PopupFactory
// Size: 0x38 (Inherited: 0x30)
struct UPopupFactory : UObject {
	struct UDBDGameInstance* _gameInstance; // 0x30(0x08)
};

// Class DeadByDaylight.PopupSequencer
// Size: 0x60 (Inherited: 0x30)
struct UPopupSequencer : UObject {
	char pad_30[0x8]; // 0x30(0x08)
	struct UDBDGameInstance* _gameInstance; // 0x38(0x08)
	char pad_40[0x20]; // 0x40(0x20)
};

// Class DeadByDaylight.PostProcessUpdate
// Size: 0x230 (Inherited: 0x230)
struct APostProcessUpdate : AActor {

	void PostProcessToggle(bool toggle); // Function DeadByDaylight.PostProcessUpdate.PostProcessToggle // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.PowerButton
// Size: 0x398 (Inherited: 0x338)
struct UPowerButton : UMobileBaseUserWidget {
	struct UActionButton* Button; // 0x338(0x08)
	struct UCanvasPanel* SwitchIcon; // 0x340(0x08)
	struct UCanvasPanel* CountContainer; // 0x348(0x08)
	struct UCanvasPanel* RadialProgressBarContainer; // 0x350(0x08)
	struct UTextBlock* CountLabel; // 0x358(0x08)
	struct UImage* TierImage; // 0x360(0x08)
	struct UCanvasPanel* AddonsContainer; // 0x368(0x08)
	struct UUMGInventoryItemButton* FirstAddonSlot; // 0x370(0x08)
	struct UUMGInventoryItemButton* SecondAddonSlot; // 0x378(0x08)
	struct UProgressBar* FillPowerChargeProgression; // 0x380(0x08)
	float DisabledOpacity; // 0x388(0x04)
	float EnabledOpacity; // 0x38c(0x04)
	bool EnabledLongPressed; // 0x390(0x01)
	char pad_391[0x3]; // 0x391(0x03)
	int32_t _itemCount; // 0x394(0x04)

	void SetSwitchIconActive(bool Active); // Function DeadByDaylight.PowerButton.SetSwitchIconActive // (Final|Native|Public|BlueprintCallable) // @ game+0x55841e0
	void SetState(enum class EActionButtonState State); // Function DeadByDaylight.PowerButton.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x5584160
	void SetRadialProgressPercentage(float progression, enum class ERadialProgressBarType ProgressBarType); // Function DeadByDaylight.PowerButton.SetRadialProgressPercentage // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetRadialProgressBarActice(bool Active); // Function DeadByDaylight.PowerButton.SetRadialProgressBarActice // (Final|Native|Public|BlueprintCallable) // @ game+0x55840d0
	void SetPowerIntensityOpacity(float Opacity); // Function DeadByDaylight.PowerButton.SetPowerIntensityOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x5584050
	void SetFillProgressPercentage(float chargeProgressionPercentage); // Function DeadByDaylight.PowerButton.SetFillProgressPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x5583fd0
	void OnTierChanged(int32_t previousTier, int32_t currentTier, bool IsFirstTime); // Function DeadByDaylight.PowerButton.OnTierChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	bool IsRadialProgressBarActive(); // Function DeadByDaylight.PowerButton.IsRadialProgressBarActive // (Final|Native|Public|BlueprintCallable) // @ game+0x5583e70
	struct UActionButton* GetActionButton(); // Function DeadByDaylight.PowerButton.GetActionButton // (Final|Native|Public|BlueprintCallable) // @ game+0x5583e10
};

// Class DeadByDaylight.PremiumTransactionSubsystem
// Size: 0x58 (Inherited: 0x38)
struct UPremiumTransactionSubsystem : UGameInstanceSubsystem {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class DeadByDaylight.PresentationPowerFadeComponent
// Size: 0xb8 (Inherited: 0xb8)
struct UPresentationPowerFadeComponent : UActorComponent {
};

// Class DeadByDaylight.PresetControllerSubsystem
// Size: 0x48 (Inherited: 0x38)
struct UPresetControllerSubsystem : UGameInstanceSubsystem {
	struct ULoadoutPresetController* _loadoutController; // 0x38(0x08)
	struct UCustomizationPresetController* _customizationController; // 0x40(0x08)
};

// Class DeadByDaylight.IterativeWeightAdjustmentStrategy
// Size: 0x30 (Inherited: 0x30)
struct UIterativeWeightAdjustmentStrategy : UObject {
};

// Class DeadByDaylight.ProceduralGenerationData
// Size: 0x170 (Inherited: 0x38)
struct UProceduralGenerationData : UDataAsset {
	struct TArray<struct FQuadrantSpawnTypeProperties> QuadrantSpawnTypeProperties; // 0x38(0x10)
	struct TArray<struct FQuadrantSpawnCategories> QuadrantSpawnCategories; // 0x48(0x10)
	struct TArray<struct FThemeProperties> ThemeProperties; // 0x58(0x10)
	int32_t MaxSurvivorCount; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct TArray<struct FKillerItemDependencies> KillersItemDependencies; // 0x70(0x10)
	struct UCurveFloat* SurvivorItemPopulationProbability; // 0x80(0x08)
	struct TArray<struct FSurvivorItemProperties> SurvivorItemProperty; // 0x88(0x10)
	struct UCurveFloat* EscapeStrategyPopulationProbability; // 0x98(0x08)
	struct TArray<struct FEscapeStrategyProperty> EscapeStrategyProperties; // 0xa0(0x10)
	struct TArray<struct FEscapeTypeObjects> EscapeTypeActors; // 0xb0(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> Basements; // 0xc0(0x10)
	struct TArray<struct FGameplayElementsPopulation> ElementsPopulation; // 0xd0(0x10)
	struct TArray<struct FManagedGameplayElementsPopulation> ManagedElementsPopulation; // 0xe0(0x10)
	struct TArray<struct FSurvivorGroupingProbability> SurvivorGroupingProbabilities; // 0xf0(0x10)
	struct FVector ProceduralMapOffset; // 0x100(0x0c)
	float ProceduralTileWidth; // 0x10c(0x04)
	float ProceduralTileHeight; // 0x110(0x04)
	struct FVector ProceduralQuadTileMapOffset; // 0x114(0x0c)
	float ProceduralQuadTileCubeWidth; // 0x120(0x04)
	float DifficultyModifier; // 0x124(0x04)
	float CharacterCameraHeight; // 0x128(0x04)
	float CharacterCollisionRadius; // 0x12c(0x04)
	float SpawnerCollisionRadius; // 0x130(0x04)
	float TotemVisualHeight; // 0x134(0x04)
	struct TArray<struct FSpecialBehaviourPopulation> SpecialBehaviourPopulation; // 0x138(0x10)
	struct TArray<struct FEventSubstitionData> _eventProperties; // 0x148(0x10)
	char pad_158[0x18]; // 0x158(0x18)
};

// Class DeadByDaylight.ProceduralLevelBuilder
// Size: 0x10c8 (Inherited: 0x230)
struct AProceduralLevelBuilder : AActor {
	char pad_230[0x20]; // 0x230(0x20)
	struct FString PathToMapDirectory; // 0x250(0x10)
	struct FString PathToTilesDirectory; // 0x260(0x10)
	float KillerMinProximityFromCamper; // 0x270(0x04)
	float SurvivorMinProximityFromOtherCamper; // 0x274(0x04)
	float MinProximityBetweenGenerators; // 0x278(0x04)
	float MinProximityBetweenChests; // 0x27c(0x04)
	float MinProximityBetweenTotems; // 0x280(0x04)
	float SurvivorMinProximityFromGenerator; // 0x284(0x04)
	float SurvivorMinProximityFromTotem; // 0x288(0x04)
	float SurvivorMaxLineOfSightFromTotem; // 0x28c(0x04)
	float MinProximityBetweenSpecialBehaviourItems; // 0x290(0x04)
	float SpecialBehaviourItemMinProximityFromSurvivor; // 0x294(0x04)
	float SpecialBehaviourItemMinProximityFromKiller; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct UPaperTileMap* DebugMap; // 0x2a0(0x08)
	struct TArray<struct ATile*> DebugTiles; // 0x2a8(0x10)
	float SmallMeatLockerMinProximityFromKillerLair; // 0x2b8(0x04)
	float FactorToAdjustToWhenOutOfProximity; // 0x2bc(0x04)
	float FactorToAdjustToWhenInLineOfSight; // 0x2c0(0x04)
	float HeightAmplifier; // 0x2c4(0x04)
	float HeightAmplifierActivationHeight; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	struct UProceduralGenerationData* ProceduralGenerationData; // 0x2d0(0x08)
	float TileWeightRateOfDecay; // 0x2d8(0x04)
	float QuadTileWeightRateOfDecay; // 0x2dc(0x04)
	char pad_2E0[0x18]; // 0x2e0(0x18)
	struct UObject* _tileClass; // 0x2f8(0x08)
	char pad_300[0x1c0]; // 0x300(0x1c0)
	struct UMapData* _mapData; // 0x4c0(0x08)
	struct UAkAudioBank* _ambientAudioBank; // 0x4c8(0x08)
	struct UObjectLibrary* _availableTilesLibrary; // 0x4d0(0x08)
	char pad_4D8[0xe8]; // 0x4d8(0xe8)
	struct UObjectLibrary* _availableDerivedTileLibrary; // 0x5c0(0x08)
	char pad_5C8[0x8]; // 0x5c8(0x08)
	struct UDBDDesignTunables* DesignTunableClass; // 0x5d0(0x08)
	struct UDBDDesignTunables* _designTunables; // 0x5d8(0x08)
	struct FGeneratedLevelData _generatedData; // 0x5e0(0x330)
	char pad_910[0x330]; // 0x910(0x330)
	struct UTileMatrix* _tileMatrix; // 0xc40(0x08)
	struct UTileBank* _tileBank; // 0xc48(0x08)
	char pad_C50[0x68]; // 0xc50(0x68)
	struct UActorSpawner* _killerLairSpawner; // 0xcb8(0x08)
	char pad_CC0[0x8]; // 0xcc0(0x08)
	struct TArray<struct FSoftObjectPath> _preloadAssetReferences; // 0xcc8(0x10)
	struct TArray<struct AActor*> _chestItemAssetReferences; // 0xcd8(0x10)
	struct UObject* _slasherPawn; // 0xce8(0x08)
	char pad_CF0[0x18]; // 0xcf0(0x18)
	struct TArray<struct ATile*> _tilesThatHaveBeenSpawned; // 0xd08(0x10)
	char pad_D18[0x10]; // 0xd18(0x10)
	struct AProceduralLevelData* _debugProceduralDatas; // 0xd28(0x08)
	struct ADBDClientSyncer* _syncer; // 0xd30(0x08)
	struct UBlackboardComponent* _blackboardComp; // 0xd38(0x08)
	char pad_D40[0x50]; // 0xd40(0x50)
	struct UEdgeObjectHandlingStrategy* _edgeObjectHandlingStrategy; // 0xd90(0x08)
	char pad_D98[0x258]; // 0xd98(0x258)
	struct ATile* _backupKillerLairTile; // 0xff0(0x08)
	char pad_FF8[0xd0]; // 0xff8(0xd0)

	void SyncSeeds(); // Function DeadByDaylight.ProceduralLevelBuilder.SyncSeeds // (Final|Native|Private) // @ game+0x5588e80
	void StartGenerationOnSyncerReady(); // Function DeadByDaylight.ProceduralLevelBuilder.StartGenerationOnSyncerReady // (Final|Native|Private) // @ game+0x5588e60
	struct AActor* SpawnActor(struct UObject* ActorClass, enum class ETileSpawnPointType spawnPointType); // Function DeadByDaylight.ProceduralLevelBuilder.SpawnActor // (Final|Native|Public|BlueprintCallable) // @ game+0x5588d90
	void RemoveMist(); // Function DeadByDaylight.ProceduralLevelBuilder.RemoveMist // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void Multicast_DebugShareGenerationData(struct FGenerationParams usedParams); // Function DeadByDaylight.ProceduralLevelBuilder.Multicast_DebugShareGenerationData // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x5588ab0
	void BuildFromSeed(); // Function DeadByDaylight.ProceduralLevelBuilder.BuildFromSeed // (Final|Native|Private) // @ game+0x55889d0
	void ApplyMist(float Modifier); // Function DeadByDaylight.ProceduralLevelBuilder.ApplyMist // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.ProceduralLevelData
// Size: 0x5d8 (Inherited: 0x230)
struct AProceduralLevelData : AActor {
	struct TSoftObjectPtr<UPaperTileMap> SelectedPaperMap; // 0x230(0x30)
	int32_t GenerationSeed; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
	struct FGeneratedLevelData GeneratedData; // 0x268(0x330)
	struct TArray<struct FName> offerings; // 0x598(0x10)
	int32_t PerksLevel; // 0x5a8(0x04)
	char pad_5AC[0x4]; // 0x5ac(0x04)
	struct TArray<struct FName> Perks; // 0x5b0(0x10)
	bool SkipGameplayElementGeneration; // 0x5c0(0x01)
	char pad_5C1[0x7]; // 0x5c1(0x07)
	struct AActor* _builder; // 0x5c8(0x08)
	struct UObject* _builderClassDef; // 0x5d0(0x08)
};

// Class DeadByDaylight.ProcessingPopupScreen
// Size: 0x120 (Inherited: 0x120)
struct UProcessingPopupScreen : UBasePopupScreen {
};

// Class DeadByDaylight.ProgressionSystemInfoPopupScreen
// Size: 0x140 (Inherited: 0x140)
struct UProgressionSystemInfoPopupScreen : UGenericPopupScreen {
};

// Class DeadByDaylight.PromoCodeManager
// Size: 0x50 (Inherited: 0x38)
struct UPromoCodeManager : UGameInstanceSubsystem {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class DeadByDaylight.PromoPackContentDataAsset
// Size: 0x88 (Inherited: 0x38)
struct UPromoPackContentDataAsset : UPrimaryDataAsset {
	struct TMap<enum class EPromoPackContentType, struct FPromoPackContentTypeData> Data; // 0x38(0x50)
};

// Class DeadByDaylight.PromoPackPurchaseUIDataUtility
// Size: 0x30 (Inherited: 0x30)
struct UPromoPackPurchaseUIDataUtility : UBlueprintFunctionLibrary {

	void SetRemainingTimeFromHours(struct FPromoPackPurchaseUIData& Data, int32_t remainHours); // Function DeadByDaylight.PromoPackPurchaseUIDataUtility.SetRemainingTimeFromHours // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x5588c50
};

// Class DeadByDaylight.PromoPackUtilities
// Size: 0x30 (Inherited: 0x30)
struct UPromoPackUtilities : UObject {
};

// Class DeadByDaylight.PromptManager
// Size: 0x78 (Inherited: 0x30)
struct UPromptManager : UObject {
	char pad_30[0x48]; // 0x30(0x48)
};

// Class DeadByDaylight.ProtectionHitComponent
// Size: 0x128 (Inherited: 0xb8)
struct UProtectionHitComponent : UActorComponent {
	char pad_B8[0x50]; // 0xb8(0x50)
	struct TArray<struct ACamperPlayer*> _nearbyInjuredSurvivors; // 0x108(0x10)
	char pad_118[0x10]; // 0x118(0x10)

	void Authority_HandleProtectionScoringEvents(); // Function DeadByDaylight.ProtectionHitComponent.Authority_HandleProtectionScoringEvents // (Final|Native|Public|BlueprintCallable) // @ game+0x55889b0
};

// Class DeadByDaylight.ProximityToActorsIterativeWeightAdjustmentStrategy
// Size: 0x90 (Inherited: 0x30)
struct UProximityToActorsIterativeWeightAdjustmentStrategy : UIterativeWeightAdjustmentStrategy {
	struct TArray<struct USceneComponent*> _unmatchedActorLocations; // 0x30(0x10)
	struct TArray<struct UActorSpawner*> _selectedSpawners; // 0x40(0x10)
	struct UCurveFloat* _penaltyFromDistanceToClosestSpawnObject; // 0x50(0x08)
	struct UCurveFloat* _penaltyFromDistanceToClosestSpawnObjectWhenActorHasOtherSpawnObjectNearby; // 0x58(0x08)
	struct UCurveFloat* _scoreFromDistanceFromClosestActor; // 0x60(0x08)
	struct FDBDTunableRowHandle _actorCloseToSpawnObjectDistanceThreshold; // 0x68(0x28)
};

// Class DeadByDaylight.ProximityToSpawnPointTypeIterativeWeightAdjustmentStrategy
// Size: 0x98 (Inherited: 0x90)
struct UProximityToSpawnPointTypeIterativeWeightAdjustmentStrategy : UProximityToActorsIterativeWeightAdjustmentStrategy {
	enum class ETileSpawnPointType _spawnPointType; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class DeadByDaylight.PS4ProfileDAL
// Size: 0x88 (Inherited: 0x88)
struct UPS4ProfileDAL : UPS4GRDKBaseProfileDAL {
};

// Class DeadByDaylight.PS5ProfileDAL
// Size: 0x88 (Inherited: 0x88)
struct UPS5ProfileDAL : UPlayerProfileDAL {
};

// Class DeadByDaylight.PurpleGlyphBloodTrailComponent
// Size: 0x250 (Inherited: 0x240)
struct UPurpleGlyphBloodTrailComponent : UBloodTrailComponent {
	char pad_240[0x10]; // 0x240(0x10)

	void DeactivateGlyphBloodTrail(); // Function DeadByDaylight.PurpleGlyphBloodTrailComponent.DeactivateGlyphBloodTrail // (Final|Native|Public|BlueprintCallable) // @ game+0x55889f0
};

// Class DeadByDaylight.PushableInterface
// Size: 0x30 (Inherited: 0x30)
struct UPushableInterface : UInterface {
};

// Class DeadByDaylight.RankManager
// Size: 0xd8 (Inherited: 0x30)
struct URankManager : UObject {
	char pad_30[0xa8]; // 0x30(0xa8)
};

// Class DeadByDaylight.RankTooltipWidget
// Size: 0x398 (Inherited: 0x370)
struct URankTooltipWidget : UBaseTooltipWidget {
	struct UTextBlock* RankInfoLabel; // 0x370(0x08)
	struct UTextBlock* ResetInfoLabel; // 0x378(0x08)
	struct UGridPanel* RankInfoSlotsContainer; // 0x380(0x08)
	struct UUMGPlayerRankInfo* SurvivorRankInfoWidget; // 0x388(0x08)
	struct UUMGPlayerRankInfo* KillerRankInfoWidget; // 0x390(0x08)
};

// Class DeadByDaylight.RBTOutlineUpdateStrategy
// Size: 0xe0 (Inherited: 0xe0)
struct URBTOutlineUpdateStrategy : UDefaultOutlineUpdateStrategy {

	bool IsRevealedToLocalPlayer_BP(struct ADBDPlayer* Player); // Function DeadByDaylight.RBTOutlineUpdateStrategy.IsRevealedToLocalPlayer_BP // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5588a10
};

// Class DeadByDaylight.RecentGameEventTracker
// Size: 0xd8 (Inherited: 0x38)
struct URecentGameEventTracker : UGameInstanceSubsystem {
	char pad_38[0xa0]; // 0x38(0xa0)
};

// Class DeadByDaylight.RecommendationsGenerator
// Size: 0xc0 (Inherited: 0x30)
struct URecommendationsGenerator : UObject {
	struct TWeakObjectPtr<struct Ushopmanager> _shopManager; // 0x30(0x08)
	struct TWeakObjectPtr<struct UDBDGameInstance> _gameInstance; // 0x38(0x08)
	struct TMap<struct FString, struct URecommendationsFilter*> _filters; // 0x40(0x50)
	char pad_90[0x30]; // 0x90(0x30)
};

// Class DeadByDaylight.RecoverInteractableDefinition
// Size: 0x780 (Inherited: 0x760)
struct URecoverInteractableDefinition : UChargeableInteractionDefinition {
	struct FName _recoverStopPercentTunableName; // 0x758(0x0c)
	struct FName _camperRecoverHealSpeedMultiplierTunableName; // 0x764(0x0c)
	char pad_778[0x8]; // 0x778(0x08)

	bool IsKillerInteracting(); // Function DeadByDaylight.RecoverInteractableDefinition.IsKillerInteracting // (Event|Protected|BlueprintEvent|Const) // @ game+0x5e02c90
};

// Class DeadByDaylight.RedStainComponent
// Size: 0x440 (Inherited: 0x430)
struct URedStainComponent : USpotLightComponent {
	struct FLinearColor _initialSpotLightColor; // 0x430(0x10)

	void UpdateRedStain(bool shouldBeHidden, float alpha); // Function DeadByDaylight.RedStainComponent.UpdateRedStain // (Final|Native|Public|BlueprintCallable) // @ game+0x558fb70
	void DBD_HideRedStain(bool hideStain); // Function DeadByDaylight.RedStainComponent.DBD_HideRedStain // (Final|Exec|Native|Public) // @ game+0x46a2400
};

// Class DeadByDaylight.RegionFinder
// Size: 0xa8 (Inherited: 0x30)
struct URegionFinder : UObject {
	struct TArray<struct FRegion> Regions; // 0x30(0x10)
	float TIMEOUT; // 0x40(0x04)
	char pad_44[0x64]; // 0x44(0x64)
};

// Class DeadByDaylight.RenderingFeaturesSequencer
// Size: 0x78 (Inherited: 0x30)
struct URenderingFeaturesSequencer : UObject {
	char pad_30[0x10]; // 0x30(0x10)
	struct ADBDAggregateCullDistanceVolumes* _aggregateCullDistanceVolumes; // 0x40(0x08)
	struct UWorld* _world; // 0x48(0x08)
	char pad_50[0x28]; // 0x50(0x28)
};

// Class DeadByDaylight.ReportPlayerPopupScreen
// Size: 0x170 (Inherited: 0x140)
struct UReportPlayerPopupScreen : UGenericPopupScreen {
	char pad_140[0x30]; // 0x140(0x30)

	void OnTextInputMouseOver(bool IsMouseOver); // Function DeadByDaylight.ReportPlayerPopupScreen.OnTextInputMouseOver // (Final|Native|Private) // @ game+0x558f3a0
	void OnConfirmReportPlayer(struct FString category, struct FString Comment); // Function DeadByDaylight.ReportPlayerPopupScreen.OnConfirmReportPlayer // (Final|Native|Private) // @ game+0x558efb0
};

// Class DeadByDaylight.RestrictedPlacementAreaDefaultStrategy
// Size: 0xa8 (Inherited: 0xa0)
struct URestrictedPlacementAreaDefaultStrategy : URestrictedPlacementAreaStrategy {
	struct AActor* RestrictedActor; // 0xa0(0x08)
};

// Class DeadByDaylight.ReverseBearTrap
// Size: 0x3f8 (Inherited: 0x338)
struct AReverseBearTrap : AInteractable {
	char pad_338[0x8]; // 0x338(0x08)
	struct USkeletalMeshComponent* _rbtMesh; // 0x340(0x08)
	struct UAnimationMontageSlave* _animMontageSlave; // 0x348(0x08)
	char pad_350[0x4]; // 0x350(0x04)
	int32_t _keyID; // 0x354(0x04)
	int32_t _attemptsNeededToDetach; // 0x358(0x04)
	char pad_35C[0x94]; // 0x35c(0x94)
	bool _exitGatesPoweredAfterAttachment; // 0x3f0(0x01)
	bool _generatorFixedAfterAttachment; // 0x3f1(0x01)
	char pad_3F2[0x6]; // 0x3f2(0x06)

	void StopMontage(); // Function DeadByDaylight.ReverseBearTrap.StopMontage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x558fb50
	void StopExecutionTimer(); // Function DeadByDaylight.ReverseBearTrap.StopExecutionTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x558fb30
	bool ShouldUpdateExecutionTimer(); // Function DeadByDaylight.ReverseBearTrap.ShouldUpdateExecutionTimer // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x555bca0
	void SetVisible(bool visible); // Function DeadByDaylight.ReverseBearTrap.SetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x558faa0
	void SetGateClosedAtAttachment(bool CLOSED); // Function DeadByDaylight.ReverseBearTrap.SetGateClosedAtAttachment // (Final|Native|Protected|BlueprintCallable) // @ game+0x558fa10
	void ResetExecutionTimer(float Time); // Function DeadByDaylight.ReverseBearTrap.ResetExecutionTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x558f810
	void OnWarningLevelChanged(int32_t previousWarningLevel, int32_t currentWarningLevel); // Function DeadByDaylight.ReverseBearTrap.OnWarningLevelChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnGeneratorComplete(int32_t activatedGeneratorCount); // Function DeadByDaylight.ReverseBearTrap.OnGeneratorComplete // (Final|Native|Private) // @ game+0x558f110
	void OnExitWarningZone(); // Function DeadByDaylight.ReverseBearTrap.OnExitWarningZone // (Final|Native|Public|BlueprintCallable) // @ game+0x558f0d0
	void OnEnterWarningZone(); // Function DeadByDaylight.ReverseBearTrap.OnEnterWarningZone // (Final|Native|Public|BlueprintCallable) // @ game+0x558f0b0
	void OnDetachSurvivor(struct ACamperPlayer* Survivor); // Function DeadByDaylight.ReverseBearTrap.OnDetachSurvivor // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnAttachSurvivorBegin(struct ACamperPlayer* Survivor); // Function DeadByDaylight.ReverseBearTrap.OnAttachSurvivorBegin // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnAttachSurvivor(struct ACamperPlayer* Survivor); // Function DeadByDaylight.ReverseBearTrap.OnAttachSurvivor // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void NotifyOnAttachSurvivorBegin(struct ACamperPlayer* Survivor); // Function DeadByDaylight.ReverseBearTrap.NotifyOnAttachSurvivorBegin // (Final|Native|Public|BlueprintCallable) // @ game+0x558ee40
	void NotifyDetachStarted(struct ACamperPlayer* Survivor); // Function DeadByDaylight.ReverseBearTrap.NotifyDetachStarted // (Final|Native|Public|BlueprintCallable) // @ game+0x558edb0
	bool IsRBTActivated(); // Function DeadByDaylight.ReverseBearTrap.IsRBTActivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558ed80
	bool IsInWarningZone(); // Function DeadByDaylight.ReverseBearTrap.IsInWarningZone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558ed50
	bool IsExecutionTimerDone(); // Function DeadByDaylight.ReverseBearTrap.IsExecutionTimerDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558ed20
	bool IsExecutionTimerActive(); // Function DeadByDaylight.ReverseBearTrap.IsExecutionTimerActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558ecf0
	void IncrementAttemptsMade(); // Function DeadByDaylight.ReverseBearTrap.IncrementAttemptsMade // (Final|Native|Public|BlueprintCallable) // @ game+0x558ecd0
	bool HasDetachStarted(); // Function DeadByDaylight.ReverseBearTrap.HasDetachStarted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558eb60
	bool GetWasGateClosedAtAttachment(); // Function DeadByDaylight.ReverseBearTrap.GetWasGateClosedAtAttachment // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x558eb30
	int32_t GetWarningLevel(); // Function DeadByDaylight.ReverseBearTrap.GetWarningLevel // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x558eb00
	int32_t GetKeyID(); // Function DeadByDaylight.ReverseBearTrap.GetKeyID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558ead0
	bool GetGeneratorFixedAfterAttachment(); // Function DeadByDaylight.ReverseBearTrap.GetGeneratorFixedAfterAttachment // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558ea70
	bool GetExitGatesPoweredAfterAttachment(); // Function DeadByDaylight.ReverseBearTrap.GetExitGatesPoweredAfterAttachment // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5501040
	float GetExecutionTimerTimeLeft(); // Function DeadByDaylight.ReverseBearTrap.GetExecutionTimerTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558ea40
	float GetExecutionTimerPercentTimeElapsed(); // Function DeadByDaylight.ReverseBearTrap.GetExecutionTimerPercentTimeElapsed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558ea10
	int32_t GetAttemptsNeeded(); // Function DeadByDaylight.ReverseBearTrap.GetAttemptsNeeded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558e9e0
	int32_t GetAttemptsMade(); // Function DeadByDaylight.ReverseBearTrap.GetAttemptsMade // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558e9b0
	struct ACamperPlayer* GetAttachedSurvivor(); // Function DeadByDaylight.ReverseBearTrap.GetAttachedSurvivor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558e980
	void FastForwardExecutionTimer(float DeltaTime); // Function DeadByDaylight.ReverseBearTrap.FastForwardExecutionTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x558e7d0
	void DetachSurvivor(struct ACamperPlayer* Survivor); // Function DeadByDaylight.ReverseBearTrap.DetachSurvivor // (Final|Native|Public|BlueprintCallable) // @ game+0x558e740
	bool CanExecute(); // Function DeadByDaylight.ReverseBearTrap.CanExecute // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558e710
	void Authority_SetKeyID(int32_t KeyId); // Function DeadByDaylight.ReverseBearTrap.Authority_SetKeyID // (Final|Native|Public|BlueprintCallable) // @ game+0x558e680
	void Authority_GenerateAttemptsNeeded(int32_t remainingAttemptsTotal, int32_t remainingRBTs, int32_t numRemovers); // Function DeadByDaylight.ReverseBearTrap.Authority_GenerateAttemptsNeeded // (Final|Native|Public|BlueprintCallable) // @ game+0x558e570
	void AttachSurvivor(struct ACamperPlayer* Survivor); // Function DeadByDaylight.ReverseBearTrap.AttachSurvivor // (Final|Native|Public|BlueprintCallable) // @ game+0x558e4e0
};

// Class DeadByDaylight.ReverseBearTrapRemover
// Size: 0x368 (Inherited: 0x338)
struct AReverseBearTrapRemover : AInteractable {
	char pad_338[0x8]; // 0x338(0x08)
	struct TArray<int32_t> _keys; // 0x340(0x10)
	struct TArray<int32_t> _keysSearched; // 0x350(0x10)
	struct UMapActorComponent* _mapActor; // 0x360(0x08)

	void PlayRemoveFailMontage(); // Function DeadByDaylight.ReverseBearTrapRemover.PlayRemoveFailMontage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	bool HasSearchedForKey(int32_t KeyId); // Function DeadByDaylight.ReverseBearTrapRemover.HasSearchedForKey // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558ec30
	bool HasKey(int32_t KeyId); // Function DeadByDaylight.ReverseBearTrapRemover.HasKey // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x558eb90
	struct UMapActorComponent* GetMapActor(); // Function DeadByDaylight.ReverseBearTrapRemover.GetMapActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x54c7e50
	struct UPrimitiveComponent* GetInteractorPrimitiveComponent(); // Function DeadByDaylight.ReverseBearTrapRemover.GetInteractorPrimitiveComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x558eaa0
	struct AReverseBearTrap* GetAttachedRBT(struct AActor* Player); // Function DeadByDaylight.ReverseBearTrapRemover.GetAttachedRBT // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x558e850
	void AddSearchedKey(int32_t KeyId); // Function DeadByDaylight.ReverseBearTrapRemover.AddSearchedKey // (Final|Native|Public|BlueprintCallable) // @ game+0x558e450
	void AddKey(int32_t KeyId); // Function DeadByDaylight.ReverseBearTrapRemover.AddKey // (Final|Native|Public|BlueprintCallable) // @ game+0x558e3c0
};

// Class DeadByDaylight.ReverseBearTrapUtilities
// Size: 0x30 (Inherited: 0x30)
struct UReverseBearTrapUtilities : UBlueprintFunctionLibrary {

	struct AReverseBearTrap* GetAttachedRBT(struct ADBDPlayer* Player); // Function DeadByDaylight.ReverseBearTrapUtilities.GetAttachedRBT // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x558e8f0
};

// Class DeadByDaylight.RewardTrackContainer
// Size: 0x200 (Inherited: 0x30)
struct URewardTrackContainer : UObject {
	char pad_30[0x1d0]; // 0x30(0x1d0)
};

// Class DeadByDaylight.RewardUtilities
// Size: 0x30 (Inherited: 0x30)
struct URewardUtilities : UObject {
};

// Class DeadByDaylight.RitualsManager
// Size: 0x270 (Inherited: 0x38)
struct URitualsManager : UGameInstanceSubsystem {
	char pad_38[0x90]; // 0x38(0x90)
	struct FDailyRitualContainer _cachedRitualContainer; // 0xc8(0x28)
	struct FDailyRitualInstance _cachedDismissalReplacement; // 0xf0(0x78)
	struct FDailyRitualInstance _cachedClaimedReplacement; // 0x168(0x78)
	char pad_1E0[0x70]; // 0x1e0(0x70)
	struct FCoreRitualsContent _s3Content; // 0x250(0x18)
	char pad_268[0x8]; // 0x268(0x08)
};

// Class DeadByDaylight.RoleSelectionScreen
// Size: 0x168 (Inherited: 0x120)
struct URoleSelectionScreen : UScreenBase {
	char pad_120[0x48]; // 0x120(0x48)

	void OnEventButtonClick(); // Function DeadByDaylight.RoleSelectionScreen.OnEventButtonClick // (Final|Native|Private) // @ game+0x5472b70
	void OnChangeUserButtonClick(); // Function DeadByDaylight.RoleSelectionScreen.OnChangeUserButtonClick // (Final|Native|Private) // @ game+0x54be480
	void OnButtonSelected(int32_t buttonId); // Function DeadByDaylight.RoleSelectionScreen.OnButtonSelected // (Final|Native|Private) // @ game+0x5571280
};

// Class DeadByDaylight.RootMovie
// Size: 0xa0 (Inherited: 0x30)
struct URootMovie : UObject {
	struct FString SwfAssetName; // 0x30(0x10)
	struct UGFxMoviePlayer* SwfMoviePlayer; // 0x40(0x08)
	char pad_48[0x10]; // 0x48(0x10)
	struct UScreenController* m_ScreenController; // 0x58(0x08)
	struct UUIController* m_UIController; // 0x60(0x08)
	struct UGameInstance* m_GameInstance; // 0x68(0x08)
	struct UDBDInputManager* _inputManager; // 0x70(0x08)
	char pad_78[0x28]; // 0x78(0x28)

	void SetCursorAsSticky(bool isSticky, bool lockVertical, bool lockHorizontal, float stickinessOverride); // Function DeadByDaylight.RootMovie.SetCursorAsSticky // (Final|Native|Public) // @ game+0x558f890
	void RemoveCursorBlockingWidget(struct FString ID); // Function DeadByDaylight.RootMovie.RemoveCursorBlockingWidget // (Final|Native|Public) // @ game+0x558f770
	void RegisterView(struct FString screenId, struct UGFxObject* ScreenObject); // Function DeadByDaylight.RootMovie.RegisterView // (Final|Native|Public) // @ game+0x558f690
	void RegisterUIControl(struct UGFxObject* flashObj); // Function DeadByDaylight.RootMovie.RegisterUIControl // (Final|Native|Public) // @ game+0x558f600
	void RegisterScreenControl(struct UGFxObject* flashObj); // Function DeadByDaylight.RootMovie.RegisterScreenControl // (Final|Native|Public) // @ game+0x558f570
	void PlaySound(struct FString soundId); // Function DeadByDaylight.RootMovie.PlaySound // (Final|Native|Public) // @ game+0x558f4d0
	void OpenLinkInBrowser(struct FString linkAddress); // Function DeadByDaylight.RootMovie.OpenLinkInBrowser // (Final|Native|Public) // @ game+0x558f430
	void OnScreenReady(struct FString screenId); // Function DeadByDaylight.RootMovie.OnScreenReady // (Final|Native|Public) // @ game+0x558f300
	void OnScreenLeave(struct FString screenId); // Function DeadByDaylight.RootMovie.OnScreenLeave // (Final|Native|Public) // @ game+0x558f260
	void OnScreenEnter(struct FString screenId); // Function DeadByDaylight.RootMovie.OnScreenEnter // (Final|Native|Public) // @ game+0x558f1c0
	void OnMovieClosed(); // Function DeadByDaylight.RootMovie.OnMovieClosed // (Final|Native|Public) // @ game+0x558f1a0
	void OnFlashReady(); // Function DeadByDaylight.RootMovie.OnFlashReady // (Final|Native|Public) // @ game+0x558f0f0
	void OnAssert(int32_t Type, struct FString Message); // Function DeadByDaylight.RootMovie.OnAssert // (Final|Native|Public) // @ game+0x558eed0
	void AddCursorBlockingWidget(struct FString ID, float X, float Y, float Width, float Height); // Function DeadByDaylight.RootMovie.AddCursorBlockingWidget // (Final|Native|Public) // @ game+0x558e200
};

// Class DeadByDaylight.RPCMonitor
// Size: 0x88 (Inherited: 0x38)
struct URPCMonitor : UGameInstanceSubsystem {
	char pad_38[0x50]; // 0x38(0x50)
};

// Class DeadByDaylight.S3GameConfigs
// Size: 0x3c8 (Inherited: 0x38)
struct US3GameConfigs : UGameInstanceSubsystem {
	char pad_38[0x390]; // 0x38(0x390)
};

// Class DeadByDaylight.S3GameConfigsDS
// Size: 0x138 (Inherited: 0x38)
struct US3GameConfigsDS : UGameInstanceSubsystem {
	char pad_38[0x100]; // 0x38(0x100)
};

// Class DeadByDaylight.SacrificeEnd
// Size: 0x280 (Inherited: 0x280)
struct ASacrificeEnd : AEmitter {

	void FX_SacrificeEnd_Basement(); // Function DeadByDaylight.SacrificeEnd.FX_SacrificeEnd_Basement // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void FX_SacrificeEnd(); // Function DeadByDaylight.SacrificeEnd.FX_SacrificeEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.SafeZoneManagerWidget
// Size: 0x340 (Inherited: 0x338)
struct USafeZoneManagerWidget : UMobileBaseUserWidget {
	struct UCanvasPanel* SafeZonePanel; // 0x338(0x08)
};

// Class DeadByDaylight.ScourgeHookManagerComponent
// Size: 0x158 (Inherited: 0xb8)
struct UScourgeHookManagerComponent : UActorComponent {
	char pad_B8[0x90]; // 0xb8(0x90)
	struct TArray<struct TWeakObjectPtr<struct AMeatHook>> _scourgeHooks; // 0x148(0x10)

	void OnRep_ScourgeHooks(); // Function DeadByDaylight.ScourgeHookManagerComponent.OnRep_ScourgeHooks // (Final|Native|Private) // @ game+0x5595160
};

// Class DeadByDaylight.ScreamComponent
// Size: 0xd8 (Inherited: 0xb8)
struct UScreamComponent : UActorComponent {
	struct UPerkManager* _perkManager; // 0xb8(0x08)
	struct UMontagePlayer* _montagePlayer; // 0xc0(0x08)
	struct TArray<struct FGameplayTag> _tagsPreventingScream; // 0xc8(0x10)

	bool TriggerScreamEventsIfPossible(bool fireLoudNoiseEvent, float audibleRange); // Function DeadByDaylight.ScreamComponent.TriggerScreamEventsIfPossible // (Final|Native|Public|BlueprintCallable) // @ game+0x55953d0
	bool TriggerScreamEventsAndAndAnimationIfPossible(bool fireLoudNoiseEvent, struct FMontagePlaybackDefinition montageDefinition, float audibleRange); // Function DeadByDaylight.ScreamComponent.TriggerScreamEventsAndAndAnimationIfPossible // (Final|Native|Public|BlueprintCallable) // @ game+0x5595230
	void OnDamageStateChanged(enum class ECamperDamageState oldDamageState, enum class ECamperDamageState newDamageState); // Function DeadByDaylight.ScreamComponent.OnDamageStateChanged // (Final|Native|Private) // @ game+0x5594fd0
	bool CanScream(); // Function DeadByDaylight.ScreamComponent.CanScream // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5594e70
};

// Class DeadByDaylight.ScreenController
// Size: 0x2e0 (Inherited: 0x30)
struct UScreenController : UObject {
	struct UDBDGameInstance* _gameInstance; // 0x30(0x08)
	struct UGFxObject* _screenControllerObj; // 0x38(0x08)
	struct UGFxMoviePlayer* _moviePlayer; // 0x40(0x08)
	struct TMap<struct FString, struct UScreenBase*> _screenDictionary; // 0x48(0x50)
	struct TMap<struct FString, enum class EScreenType> _screenTypeDictionary; // 0x98(0x50)
	struct TMap<struct UObject*, struct TWeakObjectPtr<struct UUserWidget>> _cachedUMGScreens; // 0xe8(0x50)
	char pad_138[0x1a8]; // 0x138(0x1a8)
};

// Class DeadByDaylight.ScreenshotOniHook
// Size: 0x50 (Inherited: 0x30)
struct UScreenshotOniHook : UObject {
	char pad_30[0x8]; // 0x30(0x08)
	struct FName OniId; // 0x38(0x0c)
	struct FName DemonModeTag; // 0x44(0x0c)
};

// Class DeadByDaylight.ScreenshotPhysicsWeaponHook
// Size: 0x48 (Inherited: 0x30)
struct UScreenshotPhysicsWeaponHook : UObject {
	char pad_30[0x8]; // 0x30(0x08)
	struct TArray<struct FName> KillersId; // 0x38(0x10)
};

// Class DeadByDaylight.ScreenshotPreviewWidget
// Size: 0x298 (Inherited: 0x298)
struct UScreenshotPreviewWidget : UUserWidget {
};

// Class DeadByDaylight.ScreenshotSpiritHook
// Size: 0x88 (Inherited: 0x30)
struct UScreenshotSpiritHook : UObject {
	char pad_30[0x8]; // 0x30(0x08)
	struct FName SpiritId; // 0x38(0x0c)
	char pad_44[0x4]; // 0x44(0x04)
	struct TSoftObjectPtr<UMaterial> MaterialToFind; // 0x48(0x30)
	struct FName MaterialFieldName; // 0x78(0x0c)
	float MaterialFieldValue; // 0x84(0x04)
};

// Class DeadByDaylight.ScreenshotTool
// Size: 0x380 (Inherited: 0x380)
struct AScreenshotTool : ACharacterTool {
};

// Class DeadByDaylight.ScreenshotToolConfigurationAsset
// Size: 0x138 (Inherited: 0x38)
struct UScreenshotToolConfigurationAsset : UDataAsset {
	float SceneSetupDelay; // 0x38(0x04)
	bool UpdateCameraFromViewSettings; // 0x3c(0x01)
	bool AutoSelectActorInEditor; // 0x3d(0x01)
	bool SaveAndCheckoutAssets; // 0x3e(0x01)
	char pad_3F[0x1]; // 0x3f(0x01)
	struct FScreenshotToolPathInfo TempIconPathInfo; // 0x40(0x18)
	struct FScreenshotToolPathInfo AssetPathInfo; // 0x58(0x18)
	bool ExportAllIconsInOneFrame; // 0x70(0x01)
	char pad_71[0x1]; // 0x71(0x01)
	uint16_t IconsExportedPerFrame; // 0x72(0x02)
	char pad_74[0x4]; // 0x74(0x04)
	struct FScreenshotPreviewAction PreviewAction; // 0x78(0x98)
	struct FScreenshotExportAction ExportAction; // 0x110(0x18)
	struct TArray<struct UObject*> HookClasses; // 0x128(0x10)
};

// Class DeadByDaylight.ScreenshotToolViewAsset
// Size: 0x150 (Inherited: 0x38)
struct UScreenshotToolViewAsset : UDataAsset {
	struct FScreenshotViewSetting Charm; // 0x38(0x28)
	struct FScreenshotViewSetting SurvivorHead; // 0x60(0x28)
	struct FScreenshotViewSetting SurvivorTorso; // 0x88(0x28)
	struct FScreenshotViewSetting SurvivorLegs; // 0xb0(0x28)
	struct FScreenshotViewSetting KillerHead; // 0xd8(0x28)
	struct FScreenshotViewSetting KillerBody; // 0x100(0x28)
	struct FScreenshotViewSetting KillerWeapon; // 0x128(0x28)
};

// Class DeadByDaylight.ScreenshotToolAnimationAsset
// Size: 0x58 (Inherited: 0x38)
struct UScreenshotToolAnimationAsset : UDataAsset {
	struct TArray<struct FOutfitAnimation> AnimByOutfit; // 0x38(0x10)
	struct TArray<struct FCharacterRoleAnimation> AnimByCharacter; // 0x48(0x10)
};

// Class DeadByDaylight.ScreenshotToolAsset
// Size: 0x70 (Inherited: 0x38)
struct UScreenshotToolAsset : UDataAsset {
	struct FNamedButton ReloadDBBtn; // 0x38(0x18)
	struct UScreenshotToolViewAsset* Views; // 0x50(0x08)
	struct UScreenshotToolAnimationAsset* Animations; // 0x58(0x08)
	struct UScreenshotToolConfigurationAsset* Configuration; // 0x60(0x08)
	struct UDataTable* ViewsOverridesDB; // 0x68(0x08)
};

// Class DeadByDaylight.ScreenshotToolHook
// Size: 0x30 (Inherited: 0x30)
struct UScreenshotToolHook : UInterface {

	void ScreenshotBeginPlay(bool isPIE); // Function DeadByDaylight.ScreenshotToolHook.ScreenshotBeginPlay // (Native|Event|Public|BlueprintEvent) // @ game+0x46aa9a0
	void PreTakeItemScreenshot(struct FCharacterToolItemData& Item); // Function DeadByDaylight.ScreenshotToolHook.PreTakeItemScreenshot // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x559a050
	void PreSpawnCharm(struct FCustomizationItemData& Item); // Function DeadByDaylight.ScreenshotToolHook.PreSpawnCharm // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5599f80
	void PreSpawnCharacter(struct FCharacterDescription& Description, struct FCharacterToolSpawnParameters& spawnParams); // Function DeadByDaylight.ScreenshotToolHook.PreSpawnCharacter // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5599e60
	void PreHookDestruction(); // Function DeadByDaylight.ScreenshotToolHook.PreHookDestruction // (Native|Event|Public|BlueprintEvent) // @ game+0x46ce170
	void PreDestroyCharm(struct ACharm* Charm); // Function DeadByDaylight.ScreenshotToolHook.PreDestroyCharm // (Native|Event|Public|BlueprintEvent) // @ game+0x5599dd0
	void PreDestroyCharacter(struct ADBDMenuPlayer* Character); // Function DeadByDaylight.ScreenshotToolHook.PreDestroyCharacter // (Native|Event|Public|BlueprintEvent) // @ game+0x5599d40
	void PreBatchItems(); // Function DeadByDaylight.ScreenshotToolHook.PreBatchItems // (Native|Event|Public|BlueprintEvent) // @ game+0x46bf370
	void PostUpdateCharacter(struct ADBDMenuPlayer* Character); // Function DeadByDaylight.ScreenshotToolHook.PostUpdateCharacter // (Native|Event|Public|BlueprintEvent) // @ game+0x5599cb0
	void PostTakeItemScreenshot(struct FCharacterToolItemData& Item, bool success); // Function DeadByDaylight.ScreenshotToolHook.PostTakeItemScreenshot // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5599bc0
	void PostStateChanged(enum class EScreenshotToolState previousState, enum class EScreenshotToolState CurrentState); // Function DeadByDaylight.ScreenshotToolHook.PostStateChanged // (Native|Event|Public|BlueprintEvent) // @ game+0x5599af0
	void PostSpawnCharm(struct ACharm* Charm); // Function DeadByDaylight.ScreenshotToolHook.PostSpawnCharm // (Native|Event|Public|BlueprintEvent) // @ game+0x5599a60
	void PostSpawnCharacter(struct ADBDMenuPlayer* Character); // Function DeadByDaylight.ScreenshotToolHook.PostSpawnCharacter // (Native|Event|Public|BlueprintEvent) // @ game+0x55999d0
	void PostHookConstruction(); // Function DeadByDaylight.ScreenshotToolHook.PostHookConstruction // (Native|Event|Public|BlueprintEvent) // @ game+0x46b7690
	void PostBatchItems(struct TArray<struct FCharacterToolItemData>& Items); // Function DeadByDaylight.ScreenshotToolHook.PostBatchItems // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5599920
	bool IsPIEOnly(); // Function DeadByDaylight.ScreenshotToolHook.IsPIEOnly // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x46d4480
};

// Class DeadByDaylight.ScreenshotVFXCharmHook
// Size: 0x48 (Inherited: 0x30)
struct UScreenshotVFXCharmHook : UObject {
	char pad_30[0x8]; // 0x30(0x08)
	struct TArray<struct FScreenshotVFXCharmHookCharm> Charms; // 0x38(0x10)
};

// Class DeadByDaylight.ScreenSpaceLocationComponent
// Size: 0x240 (Inherited: 0x220)
struct UScreenSpaceLocationComponent : USceneComponent {
	float ScreenSpaceX; // 0x218(0x04)
	float ScreenSpaceY; // 0x21c(0x04)
	int32_t FrameDelay; // 0x220(0x04)
	struct FVector2D _currentResolution; // 0x224(0x08)
	struct TArray<struct FTransform> _previousTransforms; // 0x230(0x10)

	bool HasValidPosition(); // Function DeadByDaylight.ScreenSpaceLocationComponent.HasValidPosition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55998d0
	struct FVector2D GetCurrentResolution(); // Function DeadByDaylight.ScreenSpaceLocationComponent.GetCurrentResolution // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x5599860
};

// Class DeadByDaylight.Searchable
// Size: 0x438 (Inherited: 0x338)
struct ASearchable : AInteractable {
	char pad_338[0x10]; // 0x338(0x10)
	float Weight; // 0x348(0x04)
	char pad_34C[0x4]; // 0x34c(0x04)
	struct FMulticastInlineDelegate OnSearchedChanged; // 0x350(0x10)
	struct USearchableItemStrategy* SearchableItemStrategy; // 0x360(0x08)
	struct USearchableSpawnPoint* _searchableSpawnPoint; // 0x368(0x08)
	char pad_370[0x30]; // 0x370(0x30)
	struct ACollectable* _spawnedItem; // 0x3a0(0x08)
	struct ACollectable* _itemInsideSearchable; // 0x3a8(0x08)
	struct TMap<struct ADBDPlayer*, char> _numberOfSearchesWhileOpenPerPlayer; // 0x3b0(0x50)
	char pad_400[0x38]; // 0x400(0x38)

	void SetHasBeenSearched(bool newHasBeenSearched); // Function DeadByDaylight.Searchable.SetHasBeenSearched // (Final|Native|Public|BlueprintCallable) // @ game+0x559a0f0
	void OnSearchedChanged__DelegateSignature(bool searched); // DelegateFunction DeadByDaylight.Searchable.OnSearchedChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	bool HasBeenSearched(); // Function DeadByDaylight.Searchable.HasBeenSearched // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5599890
	struct UPrimitiveComponent* GetInteractorPrimitiveComponent(); // Function DeadByDaylight.Searchable.GetInteractorPrimitiveComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x558eaa0
	bool ContainsSpawnedItem(); // Function DeadByDaylight.Searchable.ContainsSpawnedItem // (Final|Native|Public|Const) // @ game+0x5599830
	struct ACollectable* Authority_SpawnObject(struct ADBDPlayer* Player); // Function DeadByDaylight.Searchable.Authority_SpawnObject // (Final|Native|Public|BlueprintCallable) // @ game+0x5599790
};

// Class DeadByDaylight.SearchableOutlineUpdateStrategy
// Size: 0x138 (Inherited: 0x138)
struct USearchableOutlineUpdateStrategy : USourceBasedOutlineUpdateStrategy {
};

// Class DeadByDaylight.TileSpawnPoint
// Size: 0x290 (Inherited: 0x220)
struct UTileSpawnPoint : USceneComponent {
	char pad_220[0x8]; // 0x220(0x08)
	enum class ETileSpawnPointType TileSpawnPointType; // 0x228(0x01)
	char pad_229[0x3]; // 0x229(0x03)
	float Weight; // 0x22c(0x04)
	struct TSoftClassPtr<UObject> Visualization; // 0x230(0x30)
	char pad_260[0x8]; // 0x260(0x08)
	struct AActor* _spawnedObject; // 0x268(0x08)
	struct TArray<struct AActor*> ObjectSpawnModifier; // 0x270(0x10)
	int32_t _spawnPriorityTier; // 0x280(0x04)
	bool _weightInfluenceable; // 0x284(0x01)
	bool _weightInfluencer; // 0x285(0x01)
	bool _activated; // 0x286(0x01)
	char pad_287[0x9]; // 0x287(0x09)

	void SetActivated(bool activated); // Function DeadByDaylight.TileSpawnPoint.SetActivated // (Final|Native|Public|BlueprintCallable) // @ game+0x55c40e0
	void OnRep_SpawnObject(); // Function DeadByDaylight.TileSpawnPoint.OnRep_SpawnObject // (Native|Protected) // @ game+0x55bf2b0
	bool IsActivated(); // Function DeadByDaylight.TileSpawnPoint.IsActivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c3cc0
	struct AActor* GetSpawnedObject(); // Function DeadByDaylight.TileSpawnPoint.GetSpawnedObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c3ca0
};

// Class DeadByDaylight.SearchableSpawnPoint
// Size: 0x290 (Inherited: 0x290)
struct USearchableSpawnPoint : UTileSpawnPoint {
	struct AActor* ActorToSpawn; // 0x288(0x08)
};

// Class DeadByDaylight.SeasonEndPopupScreen
// Size: 0x140 (Inherited: 0x140)
struct USeasonEndPopupScreen : UGenericPopupScreen {
};

// Class DeadByDaylight.SeasonEndRankRewardsPopupScreen
// Size: 0x140 (Inherited: 0x140)
struct USeasonEndRankRewardsPopupScreen : UGenericPopupScreen {
};

// Class DeadByDaylight.SectionnedChargeableComponent
// Size: 0x330 (Inherited: 0x328)
struct USectionnedChargeableComponent : UChargeableComponent {
	char _sections; // 0x328(0x01)
	char pad_329[0x7]; // 0x329(0x07)

	float GetSectionChargeRemaining(); // Function DeadByDaylight.SectionnedChargeableComponent.GetSectionChargeRemaining // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a12c0
};

// Class DeadByDaylight.SelectiveVisibilityComponent
// Size: 0x220 (Inherited: 0x220)
struct USelectiveVisibilityComponent : USceneComponent {

	void Local_SetVisibility(bool bNewVisibility, bool bPropagateToChildren); // Function DeadByDaylight.SelectiveVisibilityComponent.Local_SetVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x55a13e0
};

// Class DeadByDaylight.ShopCameraManager
// Size: 0x278 (Inherited: 0x230)
struct AShopCameraManager : AActor {
	struct FNamedButton ReloadDBBtn; // 0x230(0x18)
	struct TArray<struct FRoleGenderCharacterRotation> CharacterRotation; // 0x248(0x10)
	struct TArray<struct FCharacterCameraTag> CatalogCharactersCamera; // 0x258(0x10)
	struct TArray<struct FCharacterCameraTag> StoryCharactersCamera; // 0x268(0x10)
};

// Class DeadByDaylight.shopmanager
// Size: 0x9e0 (Inherited: 0x30)
struct Ushopmanager : UObject {
	char pad_30[0xa8]; // 0x30(0xa8)
	struct TWeakObjectPtr<struct UDBDGameInstance> _gameInstance; // 0xd8(0x08)
	char pad_E0[0x6c0]; // 0xe0(0x6c0)
	struct UBannerDataProcessor* _bannerDataProcessor; // 0x7a0(0x08)
	struct URecommendationsGenerator* _recommendationsGenerator; // 0x7a8(0x08)
	char pad_7B0[0x230]; // 0x7b0(0x230)
};

// Class DeadByDaylight.ShopNewSeenItemSubsystem
// Size: 0x70 (Inherited: 0x38)
struct UShopNewSeenItemSubsystem : UGameInstanceSubsystem {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class DeadByDaylight.SkillCheck
// Size: 0x2a8 (Inherited: 0xb8)
struct USkillCheck : UActorComponent {
	char pad_B8[0xc8]; // 0xb8(0xc8)
	struct ADBDPlayer* _owner; // 0x180(0x08)
	struct UChargeableInteractionDefinition* _currentInteraction; // 0x188(0x08)
	char pad_190[0x48]; // 0x190(0x48)
	struct TArray<enum class ESkillCheckCustomType> _customSkillCheckTypesAffectedByWarningModifiers; // 0x1d8(0x10)
	char pad_1E8[0xc0]; // 0x1e8(0xc0)

	bool ShouldShowWarning(); // Function DeadByDaylight.SkillCheck.ShouldShowWarning // (Final|Native|Public|BlueprintCallable) // @ game+0x55a2050
	void Server_OnSkillCheckSuccess(struct FSkillCheckResponse SkillCheckResponse); // Function DeadByDaylight.SkillCheck.Server_OnSkillCheckSuccess // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x55a1f90
	void Server_OnSkillCheckFailure(struct FSkillCheckResponse SkillCheckResponse); // Function DeadByDaylight.SkillCheck.Server_OnSkillCheckFailure // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x55a1ed0
	void Server_DeactivateSkillCheck(); // Function DeadByDaylight.SkillCheck.Server_DeactivateSkillCheck // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x54fbf80
	void Server_ActivateSkillCheck(struct UChargeableInteractionDefinition* Interaction, enum class ESkillCheckCustomType skillCheckCustomType, struct FSkillCheckDefinition definition); // Function DeadByDaylight.SkillCheck.Server_ActivateSkillCheck // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x55a1d80
	void OnSkillCheckSuccessTrigger(bool Bonus, bool insane, enum class ESkillCheckCustomType skillCheckCustomType, bool FailedCountedAsGood); // Function DeadByDaylight.SkillCheck.OnSkillCheckSuccessTrigger // (Final|Native|Private) // @ game+0x55a1b90
	void OnSkillCheckFailureTrigger(bool hadInput, bool insane, enum class ESkillCheckCustomType skillCheckCustomType); // Function DeadByDaylight.SkillCheck.OnSkillCheckFailureTrigger // (Final|Native|Private) // @ game+0x55a1a70
	void Multicast_SkillCheckResponse(struct FSkillCheckResponse SkillCheckResponse, bool executeOnlyOnNotControlled); // Function DeadByDaylight.SkillCheck.Multicast_SkillCheckResponse // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55a1960
	void Multicast_OnTriggerCustomSkillCheck(struct UChargeableInteractionDefinition* currentInteraction, enum class ESkillCheckCustomType skillCheckCustomType, struct FString ID, struct FString salt, struct FSkillCheckDefinition definition); // Function DeadByDaylight.SkillCheck.Multicast_OnTriggerCustomSkillCheck // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55a1780
	void Multicast_OnTriggerContinuousCustomSkillCheck(struct UChargeableInteractionDefinition* currentInteraction, enum class ESkillCheckCustomType skillCheckCustomType, struct FSkillCheckDefinition definition); // Function DeadByDaylight.SkillCheck.Multicast_OnTriggerContinuousCustomSkillCheck // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55a1640
	void Multicast_DeactivateSkillCheck(); // Function DeadByDaylight.SkillCheck.Multicast_DeactivateSkillCheck // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x54fb5a0
	void Multicast_ActivateSkillCheck(struct UChargeableInteractionDefinition* Interaction, enum class ESkillCheckCustomType skillCheckCustomType, struct FSkillCheckDefinition definition, bool executeOnlyOnNotControlled); // Function DeadByDaylight.SkillCheck.Multicast_ActivateSkillCheck // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55a14b0
	bool IsOffCenterSkillCheck(); // Function DeadByDaylight.SkillCheck.IsOffCenterSkillCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a13b0
	bool IsHexSkillCheck(struct ADBDPlayer* DBDPlayer); // Function DeadByDaylight.SkillCheck.IsHexSkillCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a1310
	bool IsDisplayed(); // Function DeadByDaylight.SkillCheck.IsDisplayed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a12f0
	bool CanSkillCheckTypeGrantScore(enum class ESkillCheckCustomType Type); // Function DeadByDaylight.SkillCheck.CanSkillCheckTypeGrantScore // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55a11c0
	void Authority_OnSkillCheckTimeout(); // Function DeadByDaylight.SkillCheck.Authority_OnSkillCheckTimeout // (Final|Native|Public) // @ game+0x55a1180
};

// Class DeadByDaylight.SlashableActivationSourceCollection
// Size: 0xf8 (Inherited: 0xb8)
struct USlashableActivationSourceCollection : UActorComponent {
	char pad_B8[0x40]; // 0xb8(0x40)

	void RemoveSource(struct UObject* Source); // Function DeadByDaylight.SlashableActivationSourceCollection.RemoveSource // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55a1d00
	void ForceActivate(struct UObject* WorldContextObject); // Function DeadByDaylight.SlashableActivationSourceCollection.ForceActivate // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55a1240
	void AddSource(struct UObject* Source); // Function DeadByDaylight.SlashableActivationSourceCollection.AddSource // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55a1100
};

// Class DeadByDaylight.SlashableInterface
// Size: 0x30 (Inherited: 0x30)
struct USlashableInterface : UInterface {
};

// Class DeadByDaylight.SlasherAnimInstance
// Size: 0x460 (Inherited: 0x2c0)
struct USlasherAnimInstance : UAnimInstance {
	struct FMulticastInlineDelegate OnFootTrapped; // 0x2c0(0x10)
	enum class EIntroState _introState; // 0x2d0(0x01)
	bool _isCrouched; // 0x2d1(0x01)
	bool _isRevvingChainsaw; // 0x2d2(0x01)
	bool _isAttackSuccessMontagePlaying; // 0x2d3(0x01)
	bool _isCamOn; // 0x2d4(0x01)
	bool _isAttacking; // 0x2d5(0x01)
	bool _isAnyMontagePlaying; // 0x2d6(0x01)
	bool _isFrenzy; // 0x2d7(0x01)
	bool _isFrenzyCD; // 0x2d8(0x01)
	bool _isInParadise; // 0x2d9(0x01)
	bool _enableArmOverrideTier3; // 0x2da(0x01)
	bool _isRingingBell; // 0x2db(0x01)
	bool _isCarrying; // 0x2dc(0x01)
	char pad_2DD[0x3]; // 0x2dd(0x03)
	struct FVector _firstPersonCarryOffset; // 0x2e0(0x0c)
	struct FVector _firstPersonCarryOffsetLookingDown; // 0x2ec(0x0c)
	bool _isPassivePhaseWalking; // 0x2f8(0x01)
	bool _isActivePhaseWalking; // 0x2f9(0x01)
	bool _isInAir; // 0x2fa(0x01)
	bool _isVaultingToFall; // 0x2fb(0x01)
	bool _isSpectator; // 0x2fc(0x01)
	bool _firstPersonView; // 0x2fd(0x01)
	bool _isIdle; // 0x2fe(0x01)
	bool _validSlasher; // 0x2ff(0x01)
	float _animDirection; // 0x300(0x04)
	float _animSpeed; // 0x304(0x04)
	float _animPitch; // 0x308(0x04)
	float _animTurning; // 0x30c(0x04)
	float _animYaw; // 0x310(0x04)
	float _pelvisHeight; // 0x314(0x04)
	float _idleTime; // 0x318(0x04)
	int32_t _directionSwitch; // 0x31c(0x04)
	struct FVector _leftClearFrontSpaceVector; // 0x320(0x0c)
	struct FVector _rightClearFrontSpaceVector; // 0x32c(0x0c)
	struct FVector _velocity; // 0x338(0x0c)
	struct FVector _rightFootEffectorLocation; // 0x344(0x0c)
	struct FVector _leftFootEffectorLocation; // 0x350(0x0c)
	struct FRotator _meshRotation; // 0x35c(0x0c)
	struct TArray<struct UAnimMontage*> _attackSuccessAnimations; // 0x368(0x10)
	struct TArray<struct UAnimMontage*> _camOnAnimations; // 0x378(0x10)
	struct ASlasherPlayer* _mySlasher; // 0x388(0x08)
	struct FTagStateBool _isVaultingToFallState; // 0x390(0x30)
	enum class EInteractionAnimation _interactionType; // 0x3c0(0x01)
	char pad_3C1[0xf]; // 0x3c1(0x0f)
	float _demogorgonTeleportDuration; // 0x3d0(0x04)
	char pad_3D4[0x4]; // 0x3d4(0x04)
	struct UChargedAttackStateComponent* _demogorgonChargedAttackStateComponent; // 0x3d8(0x08)
	bool _isDemogorgonCharging; // 0x3e0(0x01)
	char pad_3E1[0x3]; // 0x3e1(0x03)
	float _demogorgonChargingPercent; // 0x3e4(0x04)
	struct UOniDemonModeAttackStateComponent* _oniAttackState; // 0x3e8(0x08)
	bool _isOniCharging; // 0x3f0(0x01)
	enum class EOniAttackType _oniAttackType; // 0x3f1(0x01)
	char pad_3F2[0x2]; // 0x3f2(0x02)
	float _oniChargeDuration; // 0x3f4(0x04)
	enum class EAttackSubstate _previousAttackSubstate; // 0x3f8(0x01)
	enum class EAttackSubstate _attackSubstate; // 0x3f9(0x01)
	char pad_3FA[0x6]; // 0x3fa(0x06)
	struct UEvilWithinComponent* _evilWithinComponent; // 0x400(0x08)
	char pad_408[0x10]; // 0x408(0x10)
	struct UArmIKSensorComponent* _armIKSensorComponent; // 0x418(0x08)
	char pad_420[0x18]; // 0x420(0x18)
	struct UAnimEffectHandler* _animEffectHandlerForSFX; // 0x438(0x08)
	struct UAnimEffectHandler* _animEffectHandlerForVFX; // 0x440(0x08)
	struct UAnimEffectHandler* _animEffectHandlerClassForSFX; // 0x448(0x08)
	struct UAnimEffectHandler* _animEffectHandlerClassForVFX; // 0x450(0x08)
	char pad_458[0x8]; // 0x458(0x08)

	void SetIsCrouched(bool value); // Function DeadByDaylight.SlasherAnimInstance.SetIsCrouched // (Final|Native|Public|BlueprintCallable) // @ game+0x551ecc0
	void CallOnFootTrapped(); // Function DeadByDaylight.SlasherAnimInstance.CallOnFootTrapped // (Final|Native|Protected|BlueprintCallable) // @ game+0x55a11a0
};

// Class DeadByDaylight.SlasherAttackPickerComponent
// Size: 0xb8 (Inherited: 0xb8)
struct USlasherAttackPickerComponent : UActorComponent {
};

// Class DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent
// Size: 0x120 (Inherited: 0xb8)
struct USlasherHitsWhileCarryingTrackerComponent : UActorComponent {
	struct TSet<struct ACamperPlayer*> _campersHitDuringLastCarry; // 0xb8(0x50)
	char pad_108[0x18]; // 0x108(0x18)

	void OnPostAttack(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent.OnPostAttack // (Final|Native|Private|HasOutParms) // @ game+0x55a6500
	void OnPickup(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent.OnPickup // (Final|Native|Private|HasOutParms) // @ game+0x55a63f0
	void OnAttack(struct FGameplayTag gameEventType, struct FGameEventData& GameEventData); // Function DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent.OnAttack // (Final|Native|Private|HasOutParms) // @ game+0x55a5b50
};

// Class DeadByDaylight.SlasherMovementComponent
// Size: 0xeb0 (Inherited: 0xe30)
struct USlasherMovementComponent : UDBDCharacterMovementComponent {
	char pad_E30[0x18]; // 0xe30(0x18)
	struct FMulticastInlineDelegate OnHitLedgeEvent; // 0xe48(0x10)
	float OnHitLedgeEventCooldown; // 0xe58(0x04)
	char pad_E5C[0x54]; // 0xe5c(0x54)

	void OnHitLedgeEvent__DelegateSignature(); // DelegateFunction DeadByDaylight.SlasherMovementComponent.OnHitLedgeEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	float GetBaseMaxSpeed(); // Function DeadByDaylight.SlasherMovementComponent.GetBaseMaxSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5160
	void DBD_SimulateHack_LocalKillerMaxSpeedMultiplier(float maxSpeedMultiplier); // Function DeadByDaylight.SlasherMovementComponent.DBD_SimulateHack_LocalKillerMaxSpeedMultiplier // (Final|Exec|Native|Private) // @ game+0x46a2490
	void DBD_KillerMaxSpeedMultiplier(float maxSpeedMultiplier); // Function DeadByDaylight.SlasherMovementComponent.DBD_KillerMaxSpeedMultiplier // (Final|Exec|Native|Private) // @ game+0x46a2490
	void Client_Debug_SetKillerMaxSpeedMultiplier(float maxSpeedMultiplier); // Function DeadByDaylight.SlasherMovementComponent.Client_Debug_SetKillerMaxSpeedMultiplier // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x5494cf0
};

// Class DeadByDaylight.SlasherOutlineUpdateStrategy
// Size: 0x108 (Inherited: 0xc0)
struct USlasherOutlineUpdateStrategy : UOutlineUpdateStrategy {
	struct FMulticastInlineDelegate OnRevealed; // 0xc0(0x10)
	struct FLinearColor _nonRevealedColor; // 0xd0(0x10)
	struct FLinearColor _revealedColor; // 0xe0(0x10)
	struct FLinearColor _revealedColorForKiller; // 0xf0(0x10)
	char pad_100[0x8]; // 0x100(0x08)
};

// Class DeadByDaylight.SlasherPlayer
// Size: 0x1670 (Inherited: 0x11a0)
struct ASlasherPlayer : ADBDPlayer {
	char pad_11A0[0x68]; // 0x11a0(0x68)
	struct FVector PutDownTraceLocation; // 0x1208(0x0c)
	struct FName DefaultSlasherPower; // 0x1214(0x0c)
	float LoudNoiseDisplayTime; // 0x1220(0x04)
	struct FVector TargetPriorityFactor; // 0x1224(0x0c)
	bool ShouldDisplayAttackZones; // 0x1230(0x01)
	char pad_1231[0x7]; // 0x1231(0x07)
	struct ACamperExposerInstance* CamperExposer; // 0x1238(0x08)
	struct TArray<enum class EKillerAbilities> KillerAbilities; // 0x1240(0x10)
	struct UKillerSoundCuesComponent* KillerSoundCuesComponent; // 0x1250(0x08)
	bool ShowKillerPowerDebugInfo; // 0x1258(0x01)
	bool HasDamagedGeneratorSinceHook; // 0x1259(0x01)
	char pad_125A[0x6]; // 0x125a(0x06)
	struct FMulticastInlineDelegate OnStalkModeChangedEvent; // 0x1260(0x10)
	char pad_1270[0x18]; // 0x1270(0x18)
	struct TWeakObjectPtr<struct UAkComponent> _audioComponent; // 0x1288(0x08)
	struct UDBDNavModifierComponent* _terrorNavModifierComponent; // 0x1290(0x08)
	struct UKillerBloodFXComponent* _bloodFXComponent; // 0x1298(0x08)
	float _slasherLightIntensity; // 0x12a0(0x04)
	float _defaultAmountToSquish; // 0x12a4(0x04)
	char pad_12A8[0x8]; // 0x12a8(0x08)
	struct TMap<struct ADBDPlayer*, struct FTargetFocusTimer> _stalkTimers; // 0x12b0(0x50)
	struct UStillnessTrackerComponent* _stillnessTracker; // 0x1300(0x08)
	struct UAimAssistComponent* _aimAssistComponent; // 0x1308(0x08)
	struct FDBDTimer _recentlyCloakedTimer; // 0x1310(0x28)
	struct FDBDTimer _flashlightBlindEvasionScoreTimer; // 0x1338(0x28)
	struct FDBDTimer _flashlightBurnoutEvasionScoreTimer; // 0x1360(0x28)
	struct TMap<struct ADBDPlayer*, struct FAnimationMontageDescriptor> _predictedCamperHitMontages; // 0x1388(0x50)
	char pad_13D8[0x10]; // 0x13d8(0x10)
	struct ULoudNoiseHUDIndicator* _loudNoiseIndicator; // 0x13e8(0x08)
	struct USlasherHitsWhileCarryingTrackerComponent* _hitsWhileCarryingTracker; // 0x13f0(0x08)
	float _stealthIncreaseRate; // 0x13f8(0x04)
	float _stealthDecreaseRate; // 0x13fc(0x04)
	struct FDateTime _stillnessStartTime; // 0x1400(0x08)
	char pad_1408[0x68]; // 0x1408(0x68)
	struct FTagStateBool _isInStalkMode; // 0x1470(0x30)
	char pad_14A0[0xc0]; // 0x14a0(0xc0)
	bool _isKilling; // 0x1560(0x01)
	int8_t _allowedKillCount; // 0x1561(0x01)
	int8_t _allowedKillAfterStrugglePhase; // 0x1562(0x01)
	bool _allowedKillLastSurvivor; // 0x1563(0x01)
	char pad_1564[0x8]; // 0x1564(0x08)
	int32_t _cachedBloodlustTier; // 0x156c(0x04)
	char pad_1570[0x4]; // 0x1570(0x04)
	uint32_t _killerPowerDebugFlags; // 0x1574(0x04)
	struct FGameplayTag _presenceTag; // 0x1578(0x0c)
	char pad_1584[0x4]; // 0x1584(0x04)
	struct FGameplayTagContainer _persistantStateTags; // 0x1588(0x20)
	bool _enableKillerCrouchInput; // 0x15a8(0x01)
	bool _canStartAttackWhileCrouched; // 0x15a9(0x01)
	char pad_15AA[0x6]; // 0x15aa(0x06)
	struct ACamperPlayer* _carriedCamper; // 0x15b0(0x08)
	struct UMoriComponent* _moriComponent; // 0x15b8(0x08)
	struct UFinisherMoriTrackerComponent* _finisherMoriTrackerComponent; // 0x15c0(0x08)
	struct UHitValidatorComponent* _hitValidator; // 0x15c8(0x08)
	struct UHitValidatorConfigurator* _hitValidationConfigurator; // 0x15d0(0x08)
	struct UDBDAttackerComponent* _attackerComponent; // 0x15d8(0x08)
	char pad_15E0[0x14]; // 0x15e0(0x14)
	enum class EAttackType _basicAttackType; // 0x15f4(0x01)
	char pad_15F5[0x3]; // 0x15f5(0x03)
	struct UArmIKSensorComponent* _armIKSensorComponent; // 0x15f8(0x08)
	struct ACamperPlayer* _survivorBeingKilled; // 0x1600(0x08)
	char pad_1608[0x18]; // 0x1608(0x18)
	struct UFirstPersonViewComponent* _firstPersonViewComponent; // 0x1620(0x08)
	struct UKillerIntroComponent* _killerIntroComponent; // 0x1628(0x08)
	struct UKillerBlindingFXComponent* _blindingFXComponent; // 0x1630(0x08)
	char pad_1638[0x8]; // 0x1638(0x08)
	struct UKillerRedStainUpdateStrategy* _redStainUpdateStrategy; // 0x1640(0x08)
	struct FName _squishFactorParameter; // 0x1648(0x0c)
	char pad_1654[0x4]; // 0x1654(0x04)
	struct USceneComponent* _attackZonePivot; // 0x1658(0x08)
	struct USlasherStunnableComponent* _slasherStunnableComponent; // 0x1660(0x08)
	char pad_1668[0x8]; // 0x1668(0x08)

	bool WasRecentlyCloaked(); // Function DeadByDaylight.SlasherPlayer.WasRecentlyCloaked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a6d80
	void UpdateRageTierEffect(int32_t previousTier, int32_t currentTier); // Function DeadByDaylight.SlasherPlayer.UpdateRageTierEffect // (Native|Event|Public|BlueprintEvent) // @ game+0x55a6cb0
	void SpawnSlasherPower(); // Function DeadByDaylight.SlasherPlayer.SpawnSlasherPower // (Native|Event|Protected|BlueprintEvent) // @ game+0x55a6c90
	bool ShouldApplyBloodlustSpeedModifier(); // Function DeadByDaylight.SlasherPlayer.ShouldApplyBloodlustSpeedModifier // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55a6c60
	void SetSurvivorBeingKilled(struct ACamperPlayer* Survivor); // Function DeadByDaylight.SlasherPlayer.SetSurvivorBeingKilled // (Final|Native|Public|BlueprintCallable) // @ game+0x55a6bd0
	void SetStalkTierWalkSpeedMultiplier(float stalkTierWalkSpeedMultiplier); // Function DeadByDaylight.SlasherPlayer.SetStalkTierWalkSpeedMultiplier // (Final|Native|Public|BlueprintCallable) // @ game+0x55a6b50
	void SetLightIntensity(float Intensity); // Function DeadByDaylight.SlasherPlayer.SetLightIntensity // (Final|Native|Public|BlueprintCallable) // @ game+0x55a6ad0
	void SetIsKilling(bool IsKilling); // Function DeadByDaylight.SlasherPlayer.SetIsKilling // (Final|Native|Public|BlueprintCallable) // @ game+0x55a6a40
	void SetIsHookingSurvivor(bool value); // Function DeadByDaylight.SlasherPlayer.SetIsHookingSurvivor // (Final|Native|Public|BlueprintCallable) // @ game+0x55a69b0
	void SetIsCloaked(bool IsCloaked, bool Forced); // Function DeadByDaylight.SlasherPlayer.SetIsCloaked // (Final|Native|Protected|BlueprintCallable) // @ game+0x55a68e0
	void SetChainsawSprinting(bool chainsawSprinting); // Function DeadByDaylight.SlasherPlayer.SetChainsawSprinting // (Final|Native|Public|BlueprintCallable) // @ game+0x55a6850
	void SetCarriedCamper(struct ACamperPlayer* camper); // Function DeadByDaylight.SlasherPlayer.SetCarriedCamper // (Final|Native|Public|BlueprintCallable) // @ game+0x55a67c0
	void SetAttackZonePivot(struct USceneComponent* attackZonePivot); // Function DeadByDaylight.SlasherPlayer.SetAttackZonePivot // (Final|Native|Public|BlueprintCallable) // @ game+0x55a6730
	void SetAttackDetectionZoneSet(enum class EAttackZoneSet attackZoneSet); // Function DeadByDaylight.SlasherPlayer.SetAttackDetectionZoneSet // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Server_SendAttackInput(bool Pressed); // Function DeadByDaylight.SlasherPlayer.Server_SendAttackInput // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x55a66a0
	void PlayBloodHitsEffects(); // Function DeadByDaylight.SlasherPlayer.PlayBloodHitsEffects // (BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnSurvivorsLeftChanged(int32_t survivorRemaining); // Function DeadByDaylight.SlasherPlayer.OnSurvivorsLeftChanged // (Final|Native|Private) // @ game+0x55a6610
	void OnStealthChanged(bool stealth); // Function DeadByDaylight.SlasherPlayer.OnStealthChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnStalkModeChangedEvent__DelegateSignature(bool IsInStalkMode); // DelegateFunction DeadByDaylight.SlasherPlayer.OnStalkModeChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnStalkModeChangedCosmetic(bool stalkMode); // Function DeadByDaylight.SlasherPlayer.OnStalkModeChangedCosmetic // (BlueprintCosmetic|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnStalkModeChanged(bool stalkMode); // Function DeadByDaylight.SlasherPlayer.OnStalkModeChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnPerformingChargableInteraction(float Progress); // Function DeadByDaylight.SlasherPlayer.OnPerformingChargableInteraction // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnLoudNoiseTriggered(struct AActor* originator, struct AActor* instigatingActor, struct FVector Location, bool shouldTrack, float& audibleRange, bool isQuickAction, bool isDeceivingNoise); // Function DeadByDaylight.SlasherPlayer.OnLoudNoiseTriggered // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x55a61a0
	void OnLoudNoiseIndicatorDestroyed(); // Function DeadByDaylight.SlasherPlayer.OnLoudNoiseIndicatorDestroyed // (Final|Native|Private) // @ game+0x55a6180
	void OnKillerAbilityUpdateActivate(enum class EKillerAbilities killerAbility, float percent); // Function DeadByDaylight.SlasherPlayer.OnKillerAbilityUpdateActivate // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55a60b0
	void OnKillerAbilityEndDeactivate(enum class EKillerAbilities killerAbility, bool Forced); // Function DeadByDaylight.SlasherPlayer.OnKillerAbilityEndDeactivate // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55a5fd0
	void OnKillerAbilityEndActivate(enum class EKillerAbilities killerAbility); // Function DeadByDaylight.SlasherPlayer.OnKillerAbilityEndActivate // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55a5f50
	void OnKillerAbilityBeginDeactivate(enum class EKillerAbilities killerAbility, bool Forced); // Function DeadByDaylight.SlasherPlayer.OnKillerAbilityBeginDeactivate // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55a5e70
	void OnKillerAbilityBeginActivate(enum class EKillerAbilities killerAbility); // Function DeadByDaylight.SlasherPlayer.OnKillerAbilityBeginActivate // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55a5df0
	void OnIsKillingSurvivorWithMoriUpdated(bool isKillingSurvivorWithMori); // Function DeadByDaylight.SlasherPlayer.OnIsKillingSurvivorWithMoriUpdated // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnDropCamperEnd(struct ADBDPlayer* camper); // Function DeadByDaylight.SlasherPlayer.OnDropCamperEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x55a5d60
	void OnCamperHit(struct ACamperPlayer* camper); // Function DeadByDaylight.SlasherPlayer.OnCamperHit // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnAttackStart(enum class EAttackType attackType); // Function DeadByDaylight.SlasherPlayer.OnAttackStart // (Final|Native|Private) // @ game+0x55a5ce0
	void OnAttackFinish(enum class EAttackType attackType); // Function DeadByDaylight.SlasherPlayer.OnAttackFinish // (Final|Native|Private) // @ game+0x55a5c60
	void Multicast_MergeLockOnDamageZones(bool enable); // Function DeadByDaylight.SlasherPlayer.Multicast_MergeLockOnDamageZones // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x55a5ac0
	void Multicast_DisplayAttackZones(bool Display); // Function DeadByDaylight.SlasherPlayer.Multicast_DisplayAttackZones // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x55a5a30
	void Multicast_Cheat_SetAttackDetectionZoneSet(enum class EAttackZoneSet attackZoneSet); // Function DeadByDaylight.SlasherPlayer.Multicast_Cheat_SetAttackDetectionZoneSet // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x55a59b0
	void MergeLockOnDamageZones(bool enable); // Function DeadByDaylight.SlasherPlayer.MergeLockOnDamageZones // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	bool Local_CancelAttack(); // Function DeadByDaylight.SlasherPlayer.Local_CancelAttack // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55a5980
	bool IsUncloaking(); // Function DeadByDaylight.SlasherPlayer.IsUncloaking // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55a5950
	bool IsStunned(); // Function DeadByDaylight.SlasherPlayer.IsStunned // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5920
	bool IsOfferingAllowingKill(struct ACamperPlayer* camper); // Function DeadByDaylight.SlasherPlayer.IsOfferingAllowingKill // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5880
	bool IsKilling(); // Function DeadByDaylight.SlasherPlayer.IsKilling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5850
	bool IsInterruptBlocked(); // Function DeadByDaylight.SlasherPlayer.IsInterruptBlocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5820
	bool IsImmuneToObservingPlayerDetection(struct ADBDPlayer* observingPlayer); // Function DeadByDaylight.SlasherPlayer.IsImmuneToObservingPlayerDetection // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55a5780
	bool IsIdling(); // Function DeadByDaylight.SlasherPlayer.IsIdling // (Final|Native|Public|BlueprintCallable) // @ game+0x55a5750
	bool IsHooking(); // Function DeadByDaylight.SlasherPlayer.IsHooking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5720
	bool IsCrouchAvailable_BP(); // Function DeadByDaylight.SlasherPlayer.IsCrouchAvailable_BP // (Native|Event|Public|BlueprintEvent) // @ game+0x55a56f0
	bool IsCloaking(); // Function DeadByDaylight.SlasherPlayer.IsCloaking // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55a56c0
	bool IsChainsawSprinting(); // Function DeadByDaylight.SlasherPlayer.IsChainsawSprinting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5680
	bool IsCarrying(); // Function DeadByDaylight.SlasherPlayer.IsCarrying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5650
	bool IsAllowedToKill(struct ACamperPlayer* camper); // Function DeadByDaylight.SlasherPlayer.IsAllowedToKill // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a55b0
	void IncrementInterruptBlock(); // Function DeadByDaylight.SlasherPlayer.IncrementInterruptBlock // (Final|Native|Public|BlueprintCallable) // @ game+0x55a5590
	bool HasPreLevelGenerationModifier(struct FName modifierID); // Function DeadByDaylight.SlasherPlayer.HasPreLevelGenerationModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a54e0
	bool HasKillerAbility(enum class EKillerAbilities killerAbility); // Function DeadByDaylight.SlasherPlayer.HasKillerAbility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5450
	struct ACamperPlayer* GetSurvivorBeingKilled(); // Function DeadByDaylight.SlasherPlayer.GetSurvivorBeingKilled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5420
	struct FDateTime GetStillnessStartTime(); // Function DeadByDaylight.SlasherPlayer.GetStillnessStartTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5400
	float GetStealthRatio(); // Function DeadByDaylight.SlasherPlayer.GetStealthRatio // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a53d0
	float GetStalkTierWalkSpeedMultiplier(); // Function DeadByDaylight.SlasherPlayer.GetStalkTierWalkSpeedMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a53b0
	struct USlasherMovementComponent* GetSlasherMovement(); // Function DeadByDaylight.SlasherPlayer.GetSlasherMovement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5380
	int32_t GetRageTier(); // Function DeadByDaylight.SlasherPlayer.GetRageTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5360
	struct FGameplayTag GetPresenceTag(); // Function DeadByDaylight.SlasherPlayer.GetPresenceTag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5320
	struct FVector GetPlayerDropOffPoint(); // Function DeadByDaylight.SlasherPlayer.GetPlayerDropOffPoint // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55a52e0
	struct ACamperPlayer* GetObsessionTarget(); // Function DeadByDaylight.SlasherPlayer.GetObsessionTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a52b0
	struct FRotator GetLookRotation(); // Function DeadByDaylight.SlasherPlayer.GetLookRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5270
	float GetLightIntensity(); // Function DeadByDaylight.SlasherPlayer.GetLightIntensity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5250
	bool GetIsAttacking(); // Function DeadByDaylight.SlasherPlayer.GetIsAttacking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5220
	float GetCurrentRotationYaw(); // Function DeadByDaylight.SlasherPlayer.GetCurrentRotationYaw // (Final|Native|Public|BlueprintCallable) // @ game+0x55a51f0
	struct UChaserCharacterComponent* GetChaserCharacterComponent(); // Function DeadByDaylight.SlasherPlayer.GetChaserCharacterComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5495290
	struct TArray<struct FName> GetCharacterCustomAnimTags(); // Function DeadByDaylight.SlasherPlayer.GetCharacterCustomAnimTags // (Event|Protected|BlueprintEvent|Const) // @ game+0x5e02c90
	struct ACamperPlayer* GetCarriedCamper(); // Function DeadByDaylight.SlasherPlayer.GetCarriedCamper // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a51c0
	float GetBlindedPercent(); // Function DeadByDaylight.SlasherPlayer.GetBlindedPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5190
	float GetAnimDirection(); // Function DeadByDaylight.SlasherPlayer.GetAnimDirection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a5130
	void DisplayAttackZones(bool Display); // Function DeadByDaylight.SlasherPlayer.DisplayAttackZones // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void DecrementInterruptBlock(); // Function DeadByDaylight.SlasherPlayer.DecrementInterruptBlock // (Final|Native|Public|BlueprintCallable) // @ game+0x55a5110
	void DBD_SetAttackZones(enum class EAttackZoneSet attackZoneSet); // Function DeadByDaylight.SlasherPlayer.DBD_SetAttackZones // (Final|Exec|Native|Public) // @ game+0x55a5090
	void DBD_MergeLockOnDamageZones(bool enable); // Function DeadByDaylight.SlasherPlayer.DBD_MergeLockOnDamageZones // (Final|Exec|Native|Public) // @ game+0x55a5000
	void DBD_DisplayAttackZones(bool Display); // Function DeadByDaylight.SlasherPlayer.DBD_DisplayAttackZones // (Final|Exec|Native|Public) // @ game+0x55a4f70
	void DBD_AllowKilling(); // Function DeadByDaylight.SlasherPlayer.DBD_AllowKilling // (Final|Exec|Native|Public) // @ game+0x55a4f50
	void Cosmetic_OnPickUpEnd(); // Function DeadByDaylight.SlasherPlayer.Cosmetic_OnPickUpEnd // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void Cosmetic_OnDropCamperEnd(); // Function DeadByDaylight.SlasherPlayer.Cosmetic_OnDropCamperEnd // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void Cosmetic_OnCancelCarry(); // Function DeadByDaylight.SlasherPlayer.Cosmetic_OnCancelCarry // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void Client_RequestStun(enum class EStunType stunType, struct ADBDPlayer* stunner); // Function DeadByDaylight.SlasherPlayer.Client_RequestStun // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x55a4e80
	bool CanSlashAttack_BP(); // Function DeadByDaylight.SlasherPlayer.CanSlashAttack_BP // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x55a4e20
	bool CanPickupSurvivor(); // Function DeadByDaylight.SlasherPlayer.CanPickupSurvivor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a4df0
	bool CanPerformKillerAbility(enum class EKillerAbilities killerAbility); // Function DeadByDaylight.SlasherPlayer.CanPerformKillerAbility // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55a4d60
	bool CanGainRage(); // Function DeadByDaylight.SlasherPlayer.CanGainRage // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55a4d30
	bool CancelAttackByInput(); // Function DeadByDaylight.SlasherPlayer.CancelAttackByInput // (Final|Native|Public|BlueprintCallable) // @ game+0x55a4e50
	bool CanAttack_BP(enum class EAttackType attackType); // Function DeadByDaylight.SlasherPlayer.CanAttack_BP // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x55a4ca0
	bool CanAttack(enum class EAttackType attackType); // Function DeadByDaylight.SlasherPlayer.CanAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55a4c10
	bool CanAffectLocalPlayer(); // Function DeadByDaylight.SlasherPlayer.CanAffectLocalPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x46a2670
	void BroadcastOnInstantTeleport(); // Function DeadByDaylight.SlasherPlayer.BroadcastOnInstantTeleport // (Final|Native|Public|BlueprintCallable) // @ game+0x55a4bf0
	void BroadcastOffensiveAction(); // Function DeadByDaylight.SlasherPlayer.BroadcastOffensiveAction // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x55a4bd0
	void Authority_SetInStalkMode(bool stalkMode, bool Forced); // Function DeadByDaylight.SlasherPlayer.Authority_SetInStalkMode // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55a4af0
	void Authority_AllowKilling(int32_t numKills); // Function DeadByDaylight.SlasherPlayer.Authority_AllowKilling // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55a4a60
	void AttackInputReleased(); // Function DeadByDaylight.SlasherPlayer.AttackInputReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x55a4a40
	void AttackInputPressed(); // Function DeadByDaylight.SlasherPlayer.AttackInputPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x55a4a20
	void ActionKillerReleased(); // Function DeadByDaylight.SlasherPlayer.ActionKillerReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x55a4a00
	void ActionKillerPressed(); // Function DeadByDaylight.SlasherPlayer.ActionKillerPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x55a49e0
};

// Class DeadByDaylight.SlasherStateMachine
// Size: 0x130 (Inherited: 0x130)
struct USlasherStateMachine : UPlayerStateMachine {
};

// Class DeadByDaylight.SlasherStunnableComponent
// Size: 0xf8 (Inherited: 0xb8)
struct USlasherStunnableComponent : UActorComponent {
	char pad_B8[0x40]; // 0xb8(0x40)

	void Server_NotifyStunHasBeenProcessed(); // Function DeadByDaylight.SlasherStunnableComponent.Server_NotifyStunHasBeenProcessed // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4af1ac0
};

// Class DeadByDaylight.VaultDefinition
// Size: 0x670 (Inherited: 0x630)
struct UVaultDefinition : UInteractionDefinition {
	struct FGameplayTag _vaultGameEvent; // 0x630(0x0c)
	struct FName _feetOffGroundID; // 0x63c(0x0c)
	struct FName _feetOnGroundID; // 0x648(0x0c)
	float _allowedHeightDelta; // 0x654(0x04)
	float _animationPlayRate; // 0x658(0x04)
	float _scaledElapsedTime; // 0x65c(0x04)
	struct UCurveFloat* _vaultSpeedCurve; // 0x660(0x08)
	bool _isFall; // 0x668(0x01)
	char pad_669[0x7]; // 0x669(0x07)

	bool ShouldLaunchCharacter(struct ADBDPlayer* Player); // Function DeadByDaylight.VaultDefinition.ShouldLaunchCharacter // (Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x5607230
	bool IsWithinHeightDelta(struct ADBDPlayer* Player); // Function DeadByDaylight.VaultDefinition.IsWithinHeightDelta // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x56067e0
	bool IsWindowVaultable(); // Function DeadByDaylight.VaultDefinition.IsWindowVaultable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x56067b0
	struct UCurveFloat* GetSpeedCurveToUse(); // Function DeadByDaylight.VaultDefinition.GetSpeedCurveToUse // (Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x5606090
};

// Class DeadByDaylight.SlasherVaultDefinition
// Size: 0x6e0 (Inherited: 0x670)
struct USlasherVaultDefinition : UVaultDefinition {
	struct FAnimationMontageDescriptor _fallMontageID; // 0x670(0x20)
	struct FAnimationMontageDescriptor _crouchMontageID; // 0x690(0x20)
	struct FAnimationMontageDescriptor _defaultMontageID; // 0x6b0(0x20)
	char pad_6D0[0x10]; // 0x6d0(0x10)

	void OnMovementModeChanged(struct ACharacter* Character, enum class EMovementMode PrevMovementMode, char PreviousCustomMode); // Function DeadByDaylight.SlasherVaultDefinition.OnMovementModeChanged // (Final|Native|Private) // @ game+0x55ad120
	void OnMontageBlendingOut(struct UAnimMontage* Montage, bool interrupted); // Function DeadByDaylight.SlasherVaultDefinition.OnMontageBlendingOut // (Final|Native|Private) // @ game+0x55ad050
};

// Class DeadByDaylight.SoftBanManager
// Size: 0x70 (Inherited: 0x30)
struct USoftBanManager : UObject {
	char pad_30[0x40]; // 0x30(0x40)
};

// Class DeadByDaylight.SpawnElement
// Size: 0x30 (Inherited: 0x30)
struct USpawnElement : UInterface {
};

// Class DeadByDaylight.SpecialBehaviourGameplaySpawnerComponent
// Size: 0xe8 (Inherited: 0xe8)
struct USpecialBehaviourGameplaySpawnerComponent : UGameplaySpawnerComponent {
};

// Class DeadByDaylight.SpecialEventCustomizationsComponent
// Size: 0x140 (Inherited: 0x30)
struct USpecialEventCustomizationsComponent : UObject {
	char pad_30[0x110]; // 0x30(0x110)
};

// Class DeadByDaylight.SpecialEventGameplaySpawnerComponent
// Size: 0xe8 (Inherited: 0xe8)
struct USpecialEventGameplaySpawnerComponent : UGameplaySpawnerComponent {
};

// Class DeadByDaylight.SpecialEventLoadingScreen
// Size: 0x138 (Inherited: 0x120)
struct USpecialEventLoadingScreen : UScreenBase {
	char pad_120[0x18]; // 0x120(0x18)

	void OnLoadingTextTimerComplete(); // Function DeadByDaylight.SpecialEventLoadingScreen.OnLoadingTextTimerComplete // (Final|Native|Public|Const) // @ game+0x546c3f0
};

// Class DeadByDaylight.specialeventmanager
// Size: 0x480 (Inherited: 0x30)
struct Uspecialeventmanager : UObject {
	char pad_30[0x80]; // 0x30(0x80)
	struct USpecialEventsContainer* _eventsContainer; // 0xb0(0x08)
	struct USpecialEventCustomizationsComponent* _customizationsComponent; // 0xb8(0x08)
	char pad_C0[0x3c0]; // 0xc0(0x3c0)

	struct FTimespan GetTimeTillPostEndDate(struct FCombinedSpecialEventData& SpecialEventData); // Function DeadByDaylight.specialeventmanager.GetTimeTillPostEndDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55acef0
	struct FTimespan GetTimeTillMainEndDate(struct FCombinedSpecialEventData& SpecialEventData); // Function DeadByDaylight.specialeventmanager.GetTimeTillMainEndDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55acd90
	struct FTimespan GetTimeSinceStartDate(struct FCombinedSpecialEventData& SpecialEventData); // Function DeadByDaylight.specialeventmanager.GetTimeSinceStartDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55acc30
	enum class ESpecialEventStatus GetStatus(struct FCombinedSpecialEventData& SpecialEventData); // Function DeadByDaylight.specialeventmanager.GetStatus // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x55acad0
	struct FDateTime GetStartDate(struct FCombinedSpecialEventData& SpecialEventData); // Function DeadByDaylight.specialeventmanager.GetStartDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55ac970
	bool GetSpecialEvent(struct UObject* WorldContextObject, struct FName EventId, struct FCombinedSpecialEventData& outSpecialEventData); // Function DeadByDaylight.specialeventmanager.GetSpecialEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x55ac780
	struct FDateTime GetPostEndDate(struct FCombinedSpecialEventData& SpecialEventData); // Function DeadByDaylight.specialeventmanager.GetPostEndDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55ac620
	struct FDateTime GetMainEndDate(struct FCombinedSpecialEventData& SpecialEventData); // Function DeadByDaylight.specialeventmanager.GetMainEndDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55ac4c0
	bool GetEventTimeTillPostEndDate(struct FString EventId, struct FTimespan& outDate); // Function DeadByDaylight.specialeventmanager.GetEventTimeTillPostEndDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55ac3d0
	bool GetEventTimeTillMainEndDate(struct FString EventId, struct FTimespan& outDate); // Function DeadByDaylight.specialeventmanager.GetEventTimeTillMainEndDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55ac2e0
	bool GetEventTimeSinceStartDate(struct FString EventId, struct FTimespan& outDate); // Function DeadByDaylight.specialeventmanager.GetEventTimeSinceStartDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55ac1f0
	bool GetEventStartDate(struct FString EventId, struct FDateTime& outDate); // Function DeadByDaylight.specialeventmanager.GetEventStartDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55ac100
	bool GetEventPostEndDate(struct FString EventId, struct FDateTime& outDate); // Function DeadByDaylight.specialeventmanager.GetEventPostEndDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55ac010
	bool GetEventMainEndDate(struct FString EventId, struct FDateTime& outDate); // Function DeadByDaylight.specialeventmanager.GetEventMainEndDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x55abf20
	bool GetCurrentSpecialEvent(struct UObject* WorldContextObject, struct FCombinedSpecialEventData& outSpecialEventData); // Function DeadByDaylight.specialeventmanager.GetCurrentSpecialEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x55abd80
	bool GetCurrentMainSpecialEvent(struct UObject* WorldContextObject, struct FCombinedSpecialEventData& outSpecialEventData); // Function DeadByDaylight.specialeventmanager.GetCurrentMainSpecialEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x55abbe0
};

// Class DeadByDaylight.SpecialEventsContainer
// Size: 0x2a8 (Inherited: 0x30)
struct USpecialEventsContainer : UObject {
	char pad_30[0x278]; // 0x30(0x278)
};

// Class DeadByDaylight.SplashScreen
// Size: 0x138 (Inherited: 0x120)
struct USplashScreen : UScreenBase {
	char pad_120[0x18]; // 0x120(0x18)

	void UpdateLoadingProgression(struct FString loadingProgression); // Function DeadByDaylight.SplashScreen.UpdateLoadingProgression // (Final|Native|Public|Const) // @ game+0x55b45b0
	void ShowSpecialEventVisual(struct FSpecialEventUIInfo& EventInfo); // Function DeadByDaylight.SplashScreen.ShowSpecialEventVisual // (Final|Native|Public|HasOutParms|Const) // @ game+0x55b4480
	void ShowSaveGamePopup(); // Function DeadByDaylight.SplashScreen.ShowSaveGamePopup // (Final|Native|Public|Const) // @ game+0x55b4460
	void ShowPressKeyState(); // Function DeadByDaylight.SplashScreen.ShowPressKeyState // (Final|Native|Public|Const) // @ game+0x55b4440
	void ShowLoadingState(); // Function DeadByDaylight.SplashScreen.ShowLoadingState // (Final|Native|Public|Const) // @ game+0x55b4420
	void SetVersionText(struct FString versionText); // Function DeadByDaylight.SplashScreen.SetVersionText // (Final|Native|Public|Const) // @ game+0x55b4350
	void OnSaveGamePopupComplete(); // Function DeadByDaylight.SplashScreen.OnSaveGamePopupComplete // (Final|Native|Protected) // @ game+0x546c3f0
	void HidePressKeyState(); // Function DeadByDaylight.SplashScreen.HidePressKeyState // (Final|Native|Public|Const) // @ game+0x55b3900
};

// Class DeadByDaylight.SpringArmCameraTargetingStrategy
// Size: 0x50 (Inherited: 0x50)
struct USpringArmCameraTargetingStrategy : UBaseCameraTargetingStrategy {
};

// Class DeadByDaylight.StalkedComponent
// Size: 0x130 (Inherited: 0xb8)
struct UStalkedComponent : UActorComponent {
	struct FMulticastInlineDelegate OnBeingStalkedChanged; // 0xb8(0x10)
	float _maxStalkPoints; // 0xc8(0x04)
	bool _stalkableWhileSightingStalker; // 0xcc(0x01)
	bool _isBeingStalked; // 0xcd(0x01)
	char pad_CE[0x2]; // 0xce(0x02)
	struct UChargeableComponent* _stalkPointsChargeable; // 0xd0(0x08)
	char pad_D8[0x58]; // 0xd8(0x58)

	void OnRep_MaxStalkPoints(); // Function DeadByDaylight.StalkedComponent.OnRep_MaxStalkPoints // (Final|Native|Private) // @ game+0x55b3e80
	void OnRep_IsBeingStalked(); // Function DeadByDaylight.StalkedComponent.OnRep_IsBeingStalked // (Final|Native|Private) // @ game+0x55b3e60
	void OnBeingStalkedChanged__DelegateSignature(bool isBeingStalked); // DelegateFunction DeadByDaylight.StalkedComponent.OnBeingStalkedChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	bool HasStalkPoints(); // Function DeadByDaylight.StalkedComponent.HasStalkPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b37d0
};

// Class DeadByDaylight.StalkerComponent
// Size: 0x130 (Inherited: 0xb8)
struct UStalkerComponent : UActorComponent {
	char pad_B8[0x28]; // 0xb8(0x28)
	bool _distributeStalkRate; // 0xe0(0x01)
	bool _canStalkWhileInChase; // 0xe1(0x01)
	char pad_E2[0x6]; // 0xe2(0x06)
	struct TArray<struct UStalkedComponent*> _playerStalkedComponents; // 0xe8(0x10)
	char pad_F8[0x10]; // 0xf8(0x10)
	struct UChargeableComponent* _stalkPointsChargeable; // 0x108(0x08)
	char pad_110[0x20]; // 0x110(0x20)

	void OnStalkPointsAdded__DelegateSignature(float stalkPoints); // DelegateFunction DeadByDaylight.StalkerComponent.OnStalkPointsAdded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnPlayerBeingStalkedChanged(bool isBeingStalked); // Function DeadByDaylight.StalkerComponent.OnPlayerBeingStalkedChanged // (Final|Native|Private) // @ game+0x55b3dd0
	bool IsStalkingSomeone(); // Function DeadByDaylight.StalkerComponent.IsStalkingSomeone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3ba0
	bool HasMaxStalkPoints(); // Function DeadByDaylight.StalkerComponent.HasMaxStalkPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b37a0
	float GetTotalStalkingPoints(); // Function DeadByDaylight.StalkerComponent.GetTotalStalkingPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3650
	float GetScoreMultiplier(); // Function DeadByDaylight.StalkerComponent.GetScoreMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b35e0
	float GetPercentStalkingPoints(); // Function DeadByDaylight.StalkerComponent.GetPercentStalkingPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b35b0
	float GetMaxStalkingPoints(); // Function DeadByDaylight.StalkerComponent.GetMaxStalkingPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3560
	bool CanStalk(); // Function DeadByDaylight.StalkerComponent.CanStalk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55b3220
};

// Class DeadByDaylight.StandDisplayable
// Size: 0x30 (Inherited: 0x30)
struct UStandDisplayable : UInterface {
};

// Class DeadByDaylight.StartLitActivationTimerRemainingCooldownElapsedIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UStartLitActivationTimerRemainingCooldownElapsedIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.DBDLogo
// Size: 0x230 (Inherited: 0x230)
struct ADBDLogo : AActor {
};

// Class DeadByDaylight.StartScreenBase
// Size: 0x238 (Inherited: 0x238)
struct AStartScreenBase : ALevelScriptActor {

	void TravelToMenu(); // Function DeadByDaylight.StartScreenBase.TravelToMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x55b4590
	void BeginDestroyTravelSequence(); // Function DeadByDaylight.StartScreenBase.BeginDestroyTravelSequence // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.StartupInitializerInterface
// Size: 0x30 (Inherited: 0x30)
struct UStartupInitializerInterface : UInterface {
};

// Class DeadByDaylight.StateSpeedCurveApplier
// Size: 0x1c0 (Inherited: 0xb8)
struct UStateSpeedCurveApplier : UActorComponent {
	char pad_B8[0x108]; // 0xb8(0x108)
};

// Class DeadByDaylight.StateTagUtilities
// Size: 0x30 (Inherited: 0x30)
struct UStateTagUtilities : UBlueprintFunctionLibrary {

	void RemoveStateTagToPlayer(struct ADBDPlayer* Player, struct FGameplayTag Tag); // Function DeadByDaylight.StateTagUtilities.RemoveStateTagToPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55b40a0
	void RemoveStateTag(struct TScriptInterface<IObjectStateProvider> ObjectStateProvider, struct FGameplayTag Tag); // Function DeadByDaylight.StateTagUtilities.RemoveStateTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55b3fb0
	bool InteractionHasStateTag(struct UInteractionDefinition* Interaction, struct FGameplayTag Tag); // Function DeadByDaylight.StateTagUtilities.InteractionHasStateTag // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55b39a0
	bool HasStateTag(struct TScriptInterface<IObjectStateProvider> ObjectStateProvider, struct FGameplayTag Tag); // Function DeadByDaylight.StateTagUtilities.HasStateTag // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55b3800
	bool HasAnyStateTags(struct TScriptInterface<IObjectStateProvider> ObjectStateProvider, struct FGameplayTagContainer& Tags); // Function DeadByDaylight.StateTagUtilities.HasAnyStateTags // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x55b3680
	bool CurrentInteractionHasStateTag(struct ADBDPlayer* Player, struct FGameplayTag Tag); // Function DeadByDaylight.StateTagUtilities.CurrentInteractionHasStateTag // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55b3350
	bool CurrentInteractionHasAnyStateTag(struct ADBDPlayer* Player, struct FGameplayTagContainer& Tags); // Function DeadByDaylight.StateTagUtilities.CurrentInteractionHasAnyStateTag // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x55b3250
	void AddStateTagToPlayer(struct ADBDPlayer* Player, struct FGameplayTag Tag); // Function DeadByDaylight.StateTagUtilities.AddStateTagToPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55b2d90
	void AddStateTag(struct TScriptInterface<IObjectStateProvider> ObjectStateProvider, struct FGameplayTag Tag); // Function DeadByDaylight.StateTagUtilities.AddStateTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55b2ca0
};

// Class DeadByDaylight.StationaryPointLightComponent
// Size: 0x400 (Inherited: 0x400)
struct UStationaryPointLightComponent : UPointLightComponent {
};

// Class DeadByDaylight.StationarySpotLightComponent
// Size: 0x430 (Inherited: 0x430)
struct UStationarySpotLightComponent : USpotLightComponent {
};

// Class DeadByDaylight.StatusEffectCollectionComponent
// Size: 0xf0 (Inherited: 0xb8)
struct UStatusEffectCollectionComponent : UActorComponent {
	struct TArray<struct UStatusEffect*> _array; // 0xb8(0x10)
	struct TArray<struct UStatusEffect*> _local_oldArray; // 0xc8(0x10)
	char pad_D8[0x18]; // 0xd8(0x18)

	void OnRep_Array(); // Function DeadByDaylight.StatusEffectCollectionComponent.OnRep_Array // (Final|Native|Private) // @ game+0x55b9570
};

// Class DeadByDaylight.StatusEffectDataAsset
// Size: 0x88 (Inherited: 0x88)
struct UStatusEffectDataAsset : UGameplayModifierContainerDataAsset {
};

// Class DeadByDaylight.StatusView
// Size: 0x2a0 (Inherited: 0x230)
struct AStatusView : AActor {
	bool _isActive; // 0x230(0x01)
	char pad_231[0x3]; // 0x231(0x03)
	int32_t _level; // 0x234(0x04)
	float _percentageFill; // 0x238(0x04)
	bool _isClockwiseTimer; // 0x23c(0x01)
	char pad_23D[0x5b]; // 0x23d(0x5b)
	struct ADBDPlayer* _localDBDPlayer; // 0x298(0x08)

	void ResetView(struct ADBDPlayer* DBDPlayer); // Function DeadByDaylight.StatusView.ResetView // (Native|Event|Public|BlueprintEvent) // @ game+0x55b9b20
	void FireNotification(struct FStatusViewSource StatusViewSource); // Function DeadByDaylight.StatusView.FireNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x55b8c90
};

// Class DeadByDaylight.SteamProfileDAL
// Size: 0x88 (Inherited: 0x88)
struct USteamProfileDAL : UPlayerProfileDAL {
};

// Class DeadByDaylight.StoreControllerSubsystem
// Size: 0x40 (Inherited: 0x38)
struct UStoreControllerSubsystem : UGameInstanceSubsystem {
	struct UStoreDisplayStandController* _displayStandController; // 0x38(0x08)
};

// Class DeadByDaylight.StoreDisplayStandController
// Size: 0x120 (Inherited: 0x120)
struct UStoreDisplayStandController : UDisplayStandController {
};

// Class DeadByDaylight.StorefrontConfiguration
// Size: 0x88 (Inherited: 0x38)
struct UStorefrontConfiguration : UDataAsset {
	struct TMap<enum class EStorefrontState, struct FStorefrontStateData> States; // 0x38(0x50)
};

// Class DeadByDaylight.StoreScreen
// Size: 0x368 (Inherited: 0x120)
struct UStoreScreen : UScreenBase {
	char pad_120[0x248]; // 0x120(0x248)

	void OnUnlockWithCurrency(int32_t currencyId, struct FString combinedItem); // Function DeadByDaylight.StoreScreen.OnUnlockWithCurrency // (Final|Native|Protected) // @ game+0x55b9a20
	void OnUnlockPack(struct FString PackId); // Function DeadByDaylight.StoreScreen.OnUnlockPack // (Final|Native|Protected|Const) // @ game+0x55b9980
	void OnUnlockDlc(struct FString DLCId); // Function DeadByDaylight.StoreScreen.OnUnlockDlc // (Final|Native|Protected|Const) // @ game+0x55b98e0
	void OnTabSelected(int32_t index); // Function DeadByDaylight.StoreScreen.OnTabSelected // (Final|Native|Protected) // @ game+0x5571280
	void OnStorySelected(); // Function DeadByDaylight.StoreScreen.OnStorySelected // (Final|Native|Protected|Const) // @ game+0x55b98a0
	void OnStoreItemSelected(struct FString ItemId); // Function DeadByDaylight.StoreScreen.OnStoreItemSelected // (Final|Native|Protected) // @ game+0x55b9800
	void OnStoreItemLinkSelected(struct FString ItemId); // Function DeadByDaylight.StoreScreen.OnStoreItemLinkSelected // (Final|Native|Protected) // @ game+0x55b9760
	void OnStoreCharacterSelected(int32_t characterIndex); // Function DeadByDaylight.StoreScreen.OnStoreCharacterSelected // (Final|Native|Protected) // @ game+0x5566ac0
	void OnStoreCatalogCategorySelected(int32_t categoryIndex); // Function DeadByDaylight.StoreScreen.OnStoreCatalogCategorySelected // (Final|Native|Protected) // @ game+0x55b96d0
	void OnSearchInputChanged(struct FString searchInput); // Function DeadByDaylight.StoreScreen.OnSearchInputChanged // (Final|Native|Protected) // @ game+0x55b9610
	void OnRotateCharacter(float mouseDistanceChange); // Function DeadByDaylight.StoreScreen.OnRotateCharacter // (Final|Native|Protected) // @ game+0x55b9590
	void OnPromoCodeButtonClicked(); // Function DeadByDaylight.StoreScreen.OnPromoCodeButtonClicked // (Final|Native|Protected) // @ game+0x55664e0
	void OnNotEnoughTokens(); // Function DeadByDaylight.StoreScreen.OnNotEnoughTokens // (Final|Native|Protected) // @ game+0x54be480
	void OnMarketSlotButtonClick(int32_t slotIndex); // Function DeadByDaylight.StoreScreen.OnMarketSlotButtonClick // (Final|Native|Protected) // @ game+0x555c5f0
	void OnFiltersUpdated(bool All, bool rarityCommon, bool rarityUncommon, bool rarityRare, bool rarityVeryRare, bool rarityUltraRare, bool rarityArtifact, bool rarityLegendary, bool raritySpecialEvent, bool includeAllOwnedItems); // Function DeadByDaylight.StoreScreen.OnFiltersUpdated // (Final|Native|Protected) // @ game+0x55b9130
	void OnFeaturedStoreItemSelected(struct FString ItemId, bool IsOutfit); // Function DeadByDaylight.StoreScreen.OnFeaturedStoreItemSelected // (Final|Native|Protected) // @ game+0x55b9050
	void OnFeaturedCharacterSelected(int32_t characterIndex); // Function DeadByDaylight.StoreScreen.OnFeaturedCharacterSelected // (Final|Native|Protected) // @ game+0x5570870
	void OnFeaturedButtonSelected(int32_t linkIndex); // Function DeadByDaylight.StoreScreen.OnFeaturedButtonSelected // (Final|Native|Protected) // @ game+0x55b8fc0
	void OnFeaturedBannerPackSelected(struct FString PackId); // Function DeadByDaylight.StoreScreen.OnFeaturedBannerPackSelected // (Final|Native|Protected) // @ game+0x552ab20
	void OnFeaturedBannerItemSelected(struct FString ItemId, bool IsOutfit); // Function DeadByDaylight.StoreScreen.OnFeaturedBannerItemSelected // (Final|Native|Protected) // @ game+0x55b8ee0
	void OnFeaturedBannerDlcSelected(struct FString DLCId); // Function DeadByDaylight.StoreScreen.OnFeaturedBannerDlcSelected // (Final|Native|Protected) // @ game+0x552ac60
	void OnEquipItem(struct FString ItemId); // Function DeadByDaylight.StoreScreen.OnEquipItem // (Final|Native|Protected) // @ game+0x55b8e40
	void OnCatalogSelected(); // Function DeadByDaylight.StoreScreen.OnCatalogSelected // (Final|Native|Protected|Const) // @ game+0x55b8de0
	void OnBuyCurrencyBundle(int32_t index); // Function DeadByDaylight.StoreScreen.OnBuyCurrencyBundle // (Final|Native|Protected) // @ game+0x55b8d50
};

// Class DeadByDaylight.StreamVideoFactory
// Size: 0x30 (Inherited: 0x30)
struct UStreamVideoFactory : UObject {
};

// Class DeadByDaylight.StreamVideoManager
// Size: 0xf0 (Inherited: 0x30)
struct UStreamVideoManager : UObject {
	char pad_30[0xc0]; // 0x30(0xc0)

	void OnStreamVideoDone(); // Function DeadByDaylight.StreamVideoManager.OnStreamVideoDone // (Final|Native|Public) // @ game+0x55b98c0
};

// Class DeadByDaylight.StreamVideoPlayer
// Size: 0x2e0 (Inherited: 0x230)
struct AStreamVideoPlayer : AActor {
	char pad_230[0x50]; // 0x230(0x50)
	struct UMediaPlayer* MediaPlayer; // 0x280(0x08)
	struct UMediaSoundComponent* SoundComponent; // 0x288(0x08)
	struct UUMGStreamVideoWidget* StreamVideoWidget; // 0x290(0x08)
	struct UStreamMediaSource* StreamMediaSource; // 0x298(0x08)
	struct UAudioComponent* _audioComponent; // 0x2a0(0x08)
	char pad_2A8[0x38]; // 0x2a8(0x38)

	void OnVideoAssetLoaded(); // Function DeadByDaylight.StreamVideoPlayer.OnVideoAssetLoaded // (Final|Native|Private) // @ game+0x55b9b00
	void OnSkipButtonTriggered(); // Function DeadByDaylight.StreamVideoPlayer.OnSkipButtonTriggered // (Final|Native|Private) // @ game+0x55b96b0
	void OnMediaOpened(struct FString OpenedUrl); // Function DeadByDaylight.StreamVideoPlayer.OnMediaOpened // (Final|Native|Private) // @ game+0x55b9480
	void OnMediaClosed(); // Function DeadByDaylight.StreamVideoPlayer.OnMediaClosed // (Final|Native|Private) // @ game+0x55b9460
	void OnEndReached(); // Function DeadByDaylight.StreamVideoPlayer.OnEndReached // (Final|Native|Private) // @ game+0x55b8e20
};

// Class DeadByDaylight.StreamVideoScreenUMG
// Size: 0x140 (Inherited: 0x120)
struct UStreamVideoScreenUMG : UScreenBase {
	struct UStreamVideoManager* _streamVideoManager; // 0x120(0x08)
	char pad_128[0x18]; // 0x128(0x18)

	void OnCloseTriggered(); // Function DeadByDaylight.StreamVideoScreenUMG.OnCloseTriggered // (Final|Native|Private) // @ game+0x55b8e00
};

// Class DeadByDaylight.StreamVideoSubsystem
// Size: 0x48 (Inherited: 0x38)
struct UStreamVideoSubsystem : UGameInstanceSubsystem {
	struct UStreamVideoManager* StreamVideoManager; // 0x38(0x08)
	struct UStreamVideoFactory* StreamVideoFactory; // 0x40(0x08)
};

// Class DeadByDaylight.StunnableInterface
// Size: 0x30 (Inherited: 0x30)
struct UStunnableInterface : UInterface {
};

// Class DeadByDaylight.SubscriptionRewardDataAsset
// Size: 0x88 (Inherited: 0x38)
struct USubscriptionRewardDataAsset : UPrimaryDataAsset {
	struct TMap<enum class ESubscriptionRewardType, struct FSubscriptionRewardTypeData> Data; // 0x38(0x50)
};

// Class DeadByDaylight.SubtitlesManager
// Size: 0xe0 (Inherited: 0x38)
struct USubtitlesManager : UGameInstanceSubsystem {
	char pad_38[0xa8]; // 0x38(0xa8)

	int32_t PostAkEventWithSubtitles(struct UAkGameObject* Target, struct TArray<struct FAkEventWithSubtitle>& akEventRandomizer, float maxSubtitleDistance, int32_t CallbackMask, struct FDelegate& PostEventCallback, struct TArray<struct FAkExternalSourceInfo>& ExternalSources, struct UAkAudioEvent*& akEventPlayed); // Function DeadByDaylight.SubtitlesManager.PostAkEventWithSubtitles // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x55bfa20
	int32_t Post2DAkEventWithSubtitles(struct TArray<struct FAkEventWithSubtitle>& akEventRandomizer, struct UAkAudioEvent*& akEventPlayed); // Function DeadByDaylight.SubtitlesManager.Post2DAkEventWithSubtitles // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x55bf8f0
	void On3DEventFinished(enum class EAkCallbackType CallbackType, struct UAkCallbackInfo* CallbackInfo); // Function DeadByDaylight.SubtitlesManager.On3DEventFinished // (Final|Native|Private) // @ game+0x55bf2f0
	bool IsDebuggingSubtitles(); // Function DeadByDaylight.SubtitlesManager.IsDebuggingSubtitles // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55beec0
};

// Class DeadByDaylight.SupplyCrateAnimInstance
// Size: 0x2e0 (Inherited: 0x2d0)
struct USupplyCrateAnimInstance : USleepingAnimInstance {
	struct ASupplyCrateInteractable* _owningSupplyCrate; // 0x2d0(0x08)
	bool _isOpen; // 0x2d8(0x01)
	bool _isBeingPriedOpen; // 0x2d9(0x01)
	bool _isAutoClosing; // 0x2da(0x01)
	char pad_2DB[0x5]; // 0x2db(0x05)

	void OnBeingPriedOpenStopped(); // Function DeadByDaylight.SupplyCrateAnimInstance.OnBeingPriedOpenStopped // (Final|Native|Private) // @ game+0x55bf450
	void OnBeingPriedOpenStarted(struct ADBDPlayer* Player); // Function DeadByDaylight.SupplyCrateAnimInstance.OnBeingPriedOpenStarted // (Final|Native|Private) // @ game+0x55bf3c0
};

// Class DeadByDaylight.SupplyCrateInteractable
// Size: 0x450 (Inherited: 0x338)
struct ASupplyCrateInteractable : AInteractable {
	char pad_338[0x38]; // 0x338(0x38)
	struct UChargeableComponent* _chargeableComponent; // 0x370(0x08)
	struct ACollectable* _containedCollectable; // 0x378(0x08)
	struct FDBDTunableRowHandle _openInteractionSecondsToCharge; // 0x380(0x28)
	struct ACollectable* _itemInSupplyCrate; // 0x3a8(0x08)
	struct USceneComponent* _containingItemSpawnPoint; // 0x3b0(0x08)
	struct USceneComponent* _itemDropPoint; // 0x3b8(0x08)
	bool _isOpen; // 0x3c0(0x01)
	bool _isAutoClosing; // 0x3c1(0x01)
	char pad_3C2[0x3e]; // 0x3c2(0x3e)
	struct FDBDTunableRowHandle _crateSelfClosingTime; // 0x400(0x28)
	struct FDBDTunableRowHandle _crateAutoCloseAnimationTime; // 0x428(0x28)

	void OnRep_IsOpen(); // Function DeadByDaylight.SupplyCrateInteractable.OnRep_IsOpen // (Final|Native|Private) // @ game+0x55bf8b0
	void OnRep_IsAutoClosing(); // Function DeadByDaylight.SupplyCrateInteractable.OnRep_IsAutoClosing // (Final|Native|Private) // @ game+0x55bf890
	void OnIsOpened(); // Function DeadByDaylight.SupplyCrateInteractable.OnIsOpened // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnIsClosing(); // Function DeadByDaylight.SupplyCrateInteractable.OnIsClosing // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.SurveillancePerk
// Size: 0x3d0 (Inherited: 0x3c8)
struct USurveillancePerk : UPerk {
	float generatorRegressionStopRevealTime; // 0x3c8(0x04)
	char pad_3CC[0x4]; // 0x3cc(0x04)

	void HandleGeneratorIsDamagedChanged(struct AGenerator* Generator, struct ADBDPlayer* Player); // Function DeadByDaylight.SurveillancePerk.HandleGeneratorIsDamagedChanged // (Final|Native|Private) // @ game+0x55beb20
};

// Class DeadByDaylight.SurviveTimerScoreEventComponent
// Size: 0xe8 (Inherited: 0xb8)
struct USurviveTimerScoreEventComponent : UActorComponent {
	char pad_B8[0x30]; // 0xb8(0x30)

	void Authority_OnGameStarted(); // Function DeadByDaylight.SurviveTimerScoreEventComponent.Authority_OnGameStarted // (Final|Native|Private) // @ game+0x55be650
};

// Class DeadByDaylight.SurvivorActivityData
// Size: 0x48 (Inherited: 0x38)
struct USurvivorActivityData : UDataAsset {
	struct TArray<struct FSurvivorActivity> _allPossibleActivities; // 0x38(0x10)
};

// Class DeadByDaylight.SurvivorActivityIndicatorComponent
// Size: 0x210 (Inherited: 0xb8)
struct USurvivorActivityIndicatorComponent : UActorComponent {
	char pad_B8[0xb8]; // 0xb8(0xb8)
	struct USurvivorActivityData* _activitiesDataAsset; // 0x170(0x08)
	char pad_178[0x30]; // 0x178(0x30)
	float _durationNeededToEnableUI; // 0x1a8(0x04)
	char pad_1AC[0x64]; // 0x1ac(0x64)

	void OnPlayerPickedUp(struct ADBDPlayer* picker); // Function DeadByDaylight.SurvivorActivityIndicatorComponent.OnPlayerPickedUp // (Final|Native|Private) // @ game+0x55bf800
	void OnPlayerDropped(); // Function DeadByDaylight.SurvivorActivityIndicatorComponent.OnPlayerDropped // (Final|Native|Private) // @ game+0x55bf7e0
	void OnDamageStateChanged(enum class ECamperDamageState oldDamageState, enum class ECamperDamageState CurrentDamageState); // Function DeadByDaylight.SurvivorActivityIndicatorComponent.OnDamageStateChanged // (Final|Native|Private) // @ game+0x55bf540
	void OnChargeableProgressChanged(struct UChargeableComponent* ChargeableComponent, float TotalPercentComplete); // Function DeadByDaylight.SurvivorActivityIndicatorComponent.OnChargeableProgressChanged // (Final|Native|Private) // @ game+0x55bf470
	void Multicast_OnCamperEscape(); // Function DeadByDaylight.SurvivorActivityIndicatorComponent.Multicast_OnCamperEscape // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x4af1ac0
	void HandleStartActivityIfStillInEffect(struct FSurvivorActivity activityViewInfo); // Function DeadByDaylight.SurvivorActivityIndicatorComponent.HandleStartActivityIfStillInEffect // (Final|Native|Private) // @ game+0x55bebf0
	void Authority_OnCamperEscape(struct FGameplayTag GameplayTag, struct FGameEventData& GameEventData); // Function DeadByDaylight.SurvivorActivityIndicatorComponent.Authority_OnCamperEscape // (Final|Native|Private|HasOutParms) // @ game+0x55be540
};

// Class DeadByDaylight.SurvivorAtlantaTutorialLevel
// Size: 0x338 (Inherited: 0x328)
struct ASurvivorAtlantaTutorialLevel : AAtlantaTutorialLevel {
	char pad_328[0x10]; // 0x328(0x10)

	void SetSlasherPlayer(struct ASlasherPlayer* SlasherPlayer); // Function DeadByDaylight.SurvivorAtlantaTutorialLevel.SetSlasherPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x55bfd30
	struct ASlasherPlayer* GetSlasherPlayer(); // Function DeadByDaylight.SurvivorAtlantaTutorialLevel.GetSlasherPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55beaf0
	struct ADBDAIPlayerController* GetSlasherAIPlayerController(); // Function DeadByDaylight.SurvivorAtlantaTutorialLevel.GetSlasherAIPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55beac0
	struct ACamperPlayer* GetCamperPlayer(); // Function DeadByDaylight.SurvivorAtlantaTutorialLevel.GetCamperPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55be840
};

// Class DeadByDaylight.SurvivorAttackableComponent
// Size: 0xe0 (Inherited: 0xb8)
struct USurvivorAttackableComponent : UAttackableComponent {
	char pad_B8[0x28]; // 0xb8(0x28)

	void Multicast_HitCosmetic_NonLocal(struct FPlayerHitCosmeticParams Params); // Function DeadByDaylight.SurvivorAttackableComponent.Multicast_HitCosmetic_NonLocal // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55bf130
	void Multicast_HitCosmetic(struct FPlayerHitCosmeticParams Params); // Function DeadByDaylight.SurvivorAttackableComponent.Multicast_HitCosmetic // (Final|Net|NetReliableNative|Event|NetMulticast|Private|BlueprintCallable) // @ game+0x55bf080
	void Authority_HitCosmetic(struct AActor* Attacker, enum class EAttackType attackType, bool causeKO, bool IsWeaponHit); // Function DeadByDaylight.SurvivorAttackableComponent.Authority_HitCosmetic // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55be3e0
};

// Class DeadByDaylight.SurvivorAudioHandlerComponent
// Size: 0x170 (Inherited: 0x148)
struct USurvivorAudioHandlerComponent : UDBDPlayerAudioHandlerComponent {
	char pad_148[0x28]; // 0x148(0x28)
};

// Class DeadByDaylight.SurvivorBloodFXComponent
// Size: 0xb8 (Inherited: 0xb8)
struct USurvivorBloodFXComponent : UActorComponent {

	struct UNiagaraComponent* SpawnBloodSpurts(); // Function DeadByDaylight.SurvivorBloodFXComponent.SpawnBloodSpurts // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.SurvivorCameraLagStrategy
// Size: 0x128 (Inherited: 0xb8)
struct USurvivorCameraLagStrategy : UActorComponent {
	char pad_B8[0x70]; // 0xb8(0x70)
};

// Class DeadByDaylight.SurvivorDisconnectionComponent
// Size: 0xb8 (Inherited: 0xb8)
struct USurvivorDisconnectionComponent : UActorComponent {

	void Authority_OnPlayerDisconnected(struct ADBDPlayer* Player); // Function DeadByDaylight.SurvivorDisconnectionComponent.Authority_OnPlayerDisconnected // (Final|Native|Protected) // @ game+0x55be730
};

// Class DeadByDaylight.SurvivorHitCosmeticHandler
// Size: 0x60 (Inherited: 0x30)
struct USurvivorHitCosmeticHandler : UBaseReversibleInstantActionHandler {
	struct UNiagaraComponent* _bloodSpurts; // 0x30(0x08)
	char pad_38[0x28]; // 0x38(0x28)

	void OnMontageStarted(struct FAnimationMontageDescriptor animMontageID, float PlayRate); // Function DeadByDaylight.SurvivorHitCosmeticHandler.OnMontageStarted // (Final|Native|Private) // @ game+0x55bf6a0
};

// Class DeadByDaylight.SurvivorHitSprintEffect
// Size: 0x350 (Inherited: 0x350)
struct USurvivorHitSprintEffect : UStatusEffect {
};

// Class DeadByDaylight.SurvivorOutlineUpdateStrategy
// Size: 0x138 (Inherited: 0xc0)
struct USurvivorOutlineUpdateStrategy : UOutlineUpdateStrategy {
	struct FLinearColor _inDangerColorForSurvivor; // 0xc0(0x10)
	struct FLinearColor _noRecoveryDyingColor; // 0xd0(0x10)
	struct FLinearColor _fullRecoveryDyingColor; // 0xe0(0x10)
	struct FLinearColor _saviourColorForSurvivor; // 0xf0(0x10)
	struct FLinearColor _colorForKiller; // 0x100(0x10)
	struct UTexture* _revealedGradient; // 0x110(0x08)
	struct UTexture* _nonRevealedGradient; // 0x118(0x08)
	struct TArray<struct FGameplayTag> _revealToKillerDurationTags; // 0x120(0x10)
	float _revealToKillerLingerTimer; // 0x130(0x04)
	bool _trappedIconActive; // 0x134(0x01)
	char pad_135[0x3]; // 0x135(0x03)

	void SetTrappedIconActive(bool value); // Function DeadByDaylight.SurvivorOutlineUpdateStrategy.SetTrappedIconActive // (Final|Native|Public|BlueprintCallable) // @ game+0x55bfdc0
	bool IsBlockingAuraReadingFromKiller(struct ASlasherPlayer* killer); // Function DeadByDaylight.SurvivorOutlineUpdateStrategy.IsBlockingAuraReadingFromKiller // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55bee00
	bool IsActivelyHidingAuraFromKiller(struct ACamperPlayer* Subject, struct ASlasherPlayer* witness); // Function DeadByDaylight.SurvivorOutlineUpdateStrategy.IsActivelyHidingAuraFromKiller // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55bed30
	struct TArray<struct UGameplayModifierContainer*> GetEffectsProtectingFromKillerAuraReading(struct ACamperPlayer* Subject, struct ASlasherPlayer* killer); // Function DeadByDaylight.SurvivorOutlineUpdateStrategy.GetEffectsProtectingFromKillerAuraReading // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55be870
};

// Class DeadByDaylight.SurvivorPlagueEffect
// Size: 0x548 (Inherited: 0x350)
struct USurvivorPlagueEffect : UStatusEffect {
	char pad_350[0x48]; // 0x350(0x48)
	float _sicknessAmount; // 0x398(0x04)
	float _sicknessCap; // 0x39c(0x04)
	float _vomitSlowDuration; // 0x3a0(0x04)
	float _vomitSlowAmount; // 0x3a4(0x04)
	struct TArray<float> _sicknessThresholds; // 0x3a8(0x10)
	bool _wasRecentlyHitByVomit; // 0x3b8(0x01)
	char pad_3B9[0x7]; // 0x3b9(0x07)
	struct TArray<struct FString> _nonNauseatingInteractions; // 0x3c0(0x10)
	char pad_3D0[0x18]; // 0x3d0(0x18)
	struct FTunableStat _sicknessGainPerSecondFromInfectedInteractable; // 0x3e8(0x80)
	char pad_468[0x90]; // 0x468(0x90)
	bool _debugMode; // 0x4f8(0x01)
	char pad_4F9[0x3f]; // 0x4f9(0x3f)
	struct UStatusEffect* _exposeMaximumSickSurvivorEffect; // 0x538(0x08)
	struct UStatusEffect* _brokenMaximumSickSurvivorEffect; // 0x540(0x08)

	void RefreshSicknessGainValues(); // Function DeadByDaylight.SurvivorPlagueEffect.RefreshSicknessGainValues // (Final|Native|Public|BlueprintCallable) // @ game+0x55bfd10
	void OnSurvivorVomit_Aesthetic(); // Function DeadByDaylight.SurvivorPlagueEffect.OnSurvivorVomit_Aesthetic // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnSurvivorBecomesInfected_Aesthetic(); // Function DeadByDaylight.SurvivorPlagueEffect.OnSurvivorBecomesInfected_Aesthetic // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnSicknessCured_Aesthetic(); // Function DeadByDaylight.SurvivorPlagueEffect.OnSicknessCured_Aesthetic // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnSicknessChanged_Aesthetic(float newSickness); // Function DeadByDaylight.SurvivorPlagueEffect.OnSicknessChanged_Aesthetic // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnRep_SicknessAmount(); // Function DeadByDaylight.SurvivorPlagueEffect.OnRep_SicknessAmount // (Final|Native|Public) // @ game+0x55bf8d0
	void OnMaxSicknessReached_Aesthetic(); // Function DeadByDaylight.SurvivorPlagueEffect.OnMaxSicknessReached_Aesthetic // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnHitByVomit(bool isSuperVomit); // Function DeadByDaylight.SurvivorPlagueEffect.OnHitByVomit // (Final|Native|Public|BlueprintCallable) // @ game+0x55bf610
	void Multicast_OnSurvivorVomit(); // Function DeadByDaylight.SurvivorPlagueEffect.Multicast_OnSurvivorVomit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55bf2d0
	void Multicast_OnSurvivorBecomesInfected(); // Function DeadByDaylight.SurvivorPlagueEffect.Multicast_OnSurvivorBecomesInfected // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55bf2b0
	void Multicast_OnSicknessCured(); // Function DeadByDaylight.SurvivorPlagueEffect.Multicast_OnSicknessCured // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55bf290
	void Multicast_OnSicknessChanged(float newSickness); // Function DeadByDaylight.SurvivorPlagueEffect.Multicast_OnSicknessChanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55bf200
	void Multicast_OnMaxSicknessReached(); // Function DeadByDaylight.SurvivorPlagueEffect.Multicast_OnMaxSicknessReached // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x55bf1e0
	void Multicast_AddOnScreenDebugMessage(uint64_t Key, float Duration, struct FColor DisplayColor, struct FString debugMessage); // Function DeadByDaylight.SurvivorPlagueEffect.Multicast_AddOnScreenDebugMessage // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x55bef20
	bool IsInfected(); // Function DeadByDaylight.SurvivorPlagueEffect.IsInfected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55beef0
	bool IsDebugModeActive(); // Function DeadByDaylight.SurvivorPlagueEffect.IsDebugModeActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55beea0
	bool HasMaxLevelSickness(); // Function DeadByDaylight.SurvivorPlagueEffect.HasMaxLevelSickness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55bed00
	struct TArray<float> GetSicknessThresholds(); // Function DeadByDaylight.SurvivorPlagueEffect.GetSicknessThresholds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55bea40
	float GetSicknessPercentage(); // Function DeadByDaylight.SurvivorPlagueEffect.GetSicknessPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55bea10
	char GetSicknessLevel(); // Function DeadByDaylight.SurvivorPlagueEffect.GetSicknessLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55be9e0
	float GetSicknessAmount(); // Function DeadByDaylight.SurvivorPlagueEffect.GetSicknessAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55be9b0
	char GetMaxSicknessLevel(); // Function DeadByDaylight.SurvivorPlagueEffect.GetMaxSicknessLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55be980
	void Authority_ResetSickness(float newSickness); // Function DeadByDaylight.SurvivorPlagueEffect.Authority_ResetSickness // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55be7c0
	void Authority_OnHitByVomitProjectileAesthetic(); // Function DeadByDaylight.SurvivorPlagueEffect.Authority_OnHitByVomitProjectileAesthetic // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55be710
	void Authority_OnHitByVomitProjectile(float sicknessToAdd); // Function DeadByDaylight.SurvivorPlagueEffect.Authority_OnHitByVomitProjectile // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55be690
	void Authority_OnHitBySuperVomitProjectile(); // Function DeadByDaylight.SurvivorPlagueEffect.Authority_OnHitBySuperVomitProjectile // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55be670
	void Authority_InfectInteractable(struct AInteractable* Interactable); // Function DeadByDaylight.SurvivorPlagueEffect.Authority_InfectInteractable // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void Authority_AddSickness(float sicknessToAdd); // Function DeadByDaylight.SurvivorPlagueEffect.Authority_AddSickness // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55be360
};

// Class DeadByDaylight.SurvivorStatusInterface
// Size: 0x30 (Inherited: 0x30)
struct USurvivorStatusInterface : UInterface {
};

// Class DeadByDaylight.SwitchProfileDAL
// Size: 0x88 (Inherited: 0x88)
struct USwitchProfileDAL : UPlayerProfileDAL {
};

// Class DeadByDaylight.TallyScreen
// Size: 0x210 (Inherited: 0x120)
struct UTallyScreen : UScreenBase {
	char pad_120[0xf0]; // 0x120(0xf0)

	void OnSpectateButtonClick(); // Function DeadByDaylight.TallyScreen.OnSpectateButtonClick // (Final|Native|Protected) // @ game+0x54be480
	void OnShowSlasherInfos(); // Function DeadByDaylight.TallyScreen.OnShowSlasherInfos // (Final|Native|Protected) // @ game+0x5566de0
	void OnReportPlayerButtonClick(struct FString playerID); // Function DeadByDaylight.TallyScreen.OnReportPlayerButtonClick // (Final|Native|Protected) // @ game+0x55c3fd0
	void OnRateMatch(int32_t rateValue); // Function DeadByDaylight.TallyScreen.OnRateMatch // (Final|Native|Protected) // @ game+0x55c3e20
	void OnPlayerOptionClick(struct FString krakenId, struct FString playerID, char Option); // Function DeadByDaylight.TallyScreen.OnPlayerOptionClick // (Final|Native|Protected) // @ game+0x55c3ce0
	void OnPlayerInfoClick(struct FString playerID); // Function DeadByDaylight.TallyScreen.OnPlayerInfoClick // (Final|Native|Protected) // @ game+0x555c050
	void OnLevelingSequenceComplete(); // Function DeadByDaylight.TallyScreen.OnLevelingSequenceComplete // (Final|Native|Protected) // @ game+0x555c160
	void OnLeaveButtonClick(); // Function DeadByDaylight.TallyScreen.OnLeaveButtonClick // (Final|Native|Protected) // @ game+0x546c3f0
	void OnCustomerSupportButtonClick(); // Function DeadByDaylight.TallyScreen.OnCustomerSupportButtonClick // (Final|Native|Protected) // @ game+0x553b8c0
	void OnBloodwebButtonClick(); // Function DeadByDaylight.TallyScreen.OnBloodwebButtonClick // (Final|Native|Protected) // @ game+0x5472b70
};

// Class DeadByDaylight.TallyUIUtilities
// Size: 0x30 (Inherited: 0x30)
struct UTallyUIUtilities : UObject {
};

// Class DeadByDaylight.TeachableTooltipWidget
// Size: 0x390 (Inherited: 0x370)
struct UTeachableTooltipWidget : UBaseTooltipWidget {
	struct UTextBlock* SubTitleLabel; // 0x370(0x08)
	struct UImage* HeaderSmoke; // 0x378(0x08)
	struct UUMGHtmlRichText* EffectText; // 0x380(0x08)
	struct UUMGHtmlRichText* AvailabilityText; // 0x388(0x08)
};

// Class DeadByDaylight.TeamworkIconStrategy
// Size: 0x40 (Inherited: 0x38)
struct UTeamworkIconStrategy : UBasePerkIconStrategy {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class DeadByDaylight.TerrorRadiusIndicatorWidget
// Size: 0x388 (Inherited: 0x380)
struct UTerrorRadiusIndicatorWidget : UNoiseIndicatorWidget {
	float _anchorY; // 0x380(0x04)
	char pad_384[0x4]; // 0x384(0x04)

	void SetSoundDistancePercentage(float distancePercentage); // Function DeadByDaylight.TerrorRadiusIndicatorWidget.SetSoundDistancePercentage // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.TickInEditorSkeletalMesh
// Size: 0x2b8 (Inherited: 0x2b8)
struct ATickInEditorSkeletalMesh : ASkeletalMeshActor {
};

// Class DeadByDaylight.TileBank
// Size: 0x130 (Inherited: 0x30)
struct UTileBank : UObject {
	char pad_30[0xf0]; // 0x30(0xf0)
	struct TArray<struct ATile*> _allTileBlueprints; // 0x120(0x10)
};

// Class DeadByDaylight.TileEventComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UTileEventComponent : UActorComponent {
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class DeadByDaylight.TileMatrix
// Size: 0x88 (Inherited: 0x30)
struct UTileMatrix : UObject {
	struct TArray<struct FArrayOfATile> _matrix; // 0x30(0x10)
	struct TArray<struct ATile*> _tiles; // 0x40(0x10)
	struct TArray<struct ATile*> _extraTiles; // 0x50(0x10)
	struct AActor* _basementActor; // 0x60(0x08)
	struct TArray<struct FQuadrantInfo> _quadInfoArray; // 0x68(0x10)
	struct TArray<struct FArrayOfInt32> _quadIndexMatrix; // 0x78(0x10)
};

// Class DeadByDaylight.TileSpawnPointSelector
// Size: 0x230 (Inherited: 0x220)
struct UTileSpawnPointSelector : USceneComponent {
	struct TArray<struct FSelectableTileSpawnPoint> _tileSpawnPoints; // 0x218(0x10)
};

// Class DeadByDaylight.TileVisitedAnalyticsComponent
// Size: 0x108 (Inherited: 0xb8)
struct UTileVisitedAnalyticsComponent : UActorComponent {
	char pad_B8[0x50]; // 0xb8(0x50)
};

// Class DeadByDaylight.TimerGate
// Size: 0x258 (Inherited: 0x248)
struct ATimerGate : AGate {
	float _currentTime; // 0x248(0x04)
	char pad_24C[0xc]; // 0x24c(0x0c)

	void Update(float DeltaTime); // Function DeadByDaylight.TimerGate.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x55c4290
	void SetValues(float TimerDuration, float RushGain, float RushBlockDuration); // Function DeadByDaylight.TimerGate.SetValues // (Final|Native|Public|BlueprintCallable) // @ game+0x55c4170
	void Rushed(bool success); // Function DeadByDaylight.TimerGate.Rushed // (Final|Native|Public|BlueprintCallable) // @ game+0x46a2400
	void Reset(); // Function DeadByDaylight.TimerGate.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x55c40c0
	void RemoveTime(float Time); // Function DeadByDaylight.TimerGate.RemoveTime // (Final|Native|Public|BlueprintCallable) // @ game+0x46a2490
	void AddTime(float Time); // Function DeadByDaylight.TimerGate.AddTime // (Final|Native|Public|BlueprintCallable) // @ game+0x46a2490
};

// Class DeadByDaylight.TimerGateDecrease
// Size: 0x238 (Inherited: 0x230)
struct ATimerGateDecrease : AActor {
	struct ATimerGate* TimerGate; // 0x230(0x08)

	void Update(float DeltaTime); // Function DeadByDaylight.TimerGateDecrease.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x46a2490
};

// Class DeadByDaylight.DBDTimeTravelManager
// Size: 0xa0 (Inherited: 0x30)
struct UDBDTimeTravelManager : UObject {
	char pad_30[0x70]; // 0x30(0x70)
};

// Class DeadByDaylight.ToastNotificationScreen
// Size: 0x168 (Inherited: 0x120)
struct UToastNotificationScreen : UScreenBase {
	char pad_120[0x48]; // 0x120(0x48)

	void OnPromptSelected(int32_t notificationId); // Function DeadByDaylight.ToastNotificationScreen.OnPromptSelected // (Final|Native|Public) // @ game+0x55c8980
	void OnNotificationDisplayEnd(int32_t notificationId); // Function DeadByDaylight.ToastNotificationScreen.OnNotificationDisplayEnd // (Final|Native|Public) // @ game+0x55c88f0
	void OnButtonSelected(int32_t buttonId, int32_t notificationId); // Function DeadByDaylight.ToastNotificationScreen.OnButtonSelected // (Final|Native|Public) // @ game+0x55c87a0
};

// Class DeadByDaylight.TokenCounter
// Size: 0x58 (Inherited: 0x30)
struct UTokenCounter : UObject {
	char pad_30[0x18]; // 0x30(0x18)
	int32_t _tokenCount; // 0x48(0x04)
	int32_t _maxTokenCount; // 0x4c(0x04)
	char pad_50[0x8]; // 0x50(0x08)

	void OnRep_TokenCount(int32_t oldCount); // Function DeadByDaylight.TokenCounter.OnRep_TokenCount // (Final|Native|Private) // @ game+0x55c8a50
	int32_t GetTokenCount(); // Function DeadByDaylight.TokenCounter.GetTokenCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c8500
	int32_t GetMaxTokenCount(); // Function DeadByDaylight.TokenCounter.GetMaxTokenCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c83c0
	void Authority_SetTokenCount(int32_t value); // Function DeadByDaylight.TokenCounter.Authority_SetTokenCount // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55c7e10
	void Authority_SetMaxTokenCount(int32_t value); // Function DeadByDaylight.TokenCounter.Authority_SetMaxTokenCount // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55c7d80
	void Authority_IncrementToken(); // Function DeadByDaylight.TokenCounter.Authority_IncrementToken // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55c7d20
	void Authority_DecrementToken(); // Function DeadByDaylight.TokenCounter.Authority_DecrementToken // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55c7ae0
};

// Class DeadByDaylight.TokenProvider
// Size: 0x30 (Inherited: 0x30)
struct UTokenProvider : UInterface {

	struct UTokenCounter* GetTokenProvider(); // Function DeadByDaylight.TokenProvider.GetTokenProvider // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c8530
};

// Class DeadByDaylight.ToolBoxInterface
// Size: 0x30 (Inherited: 0x30)
struct UToolBoxInterface : UInterface {

	struct UChargerComponent* GetChargerComponent(); // Function DeadByDaylight.ToolBoxInterface.GetChargerComponent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.TooltipScreenUMG
// Size: 0x140 (Inherited: 0x120)
struct UTooltipScreenUMG : UScreenBase {
	struct UBaseTooltipWidget* _tooltipWidget; // 0x120(0x08)
	char pad_128[0x18]; // 0x128(0x18)

	void OnCloseTriggered(); // Function DeadByDaylight.TooltipScreenUMG.OnCloseTriggered // (Final|Native|Private) // @ game+0x54781c0
};

// Class DeadByDaylight.TormentAttackDamageCooldownInterface
// Size: 0x30 (Inherited: 0x30)
struct UTormentAttackDamageCooldownInterface : UInterface {
};

// Class DeadByDaylight.Totem
// Size: 0x478 (Inherited: 0x338)
struct ATotem : AInteractable {
	char pad_338[0x8]; // 0x338(0x08)
	struct FMulticastInlineDelegate OnTotemBound; // 0x340(0x10)
	char pad_350[0x18]; // 0x350(0x18)
	struct FLinearColor _boonAuraRevealColor; // 0x368(0x10)
	struct TArray<struct UTotemBoundPerk*> _boundPerks; // 0x378(0x10)
	enum class ETotemState _totemState; // 0x388(0x01)
	char pad_389[0x7]; // 0x389(0x07)
	struct FDBDTunableRowHandle _baseBoonTotemBlessingRange; // 0x390(0x28)
	struct FDBDTunableRowHandle _baseBoonTotemAuraRevealRange; // 0x3b8(0x28)
	char pad_3E0[0x18]; // 0x3e0(0x18)
	struct UAIPerceptionStimuliSourceComponent* _perceptionStimuliComponent; // 0x3f8(0x08)
	struct UBlockableComponent* _totemBlockableComponent; // 0x400(0x08)
	char pad_408[0x10]; // 0x408(0x10)
	struct ULocalPlayerTrackerComponent* _localPlayerTracker; // 0x418(0x08)
	struct UActivatorComponent* _activatorComponent; // 0x420(0x08)
	struct UGameplayTagContainerComponent* _objectState; // 0x428(0x08)
	struct USceneComponent* _interactionsAttachPoint; // 0x430(0x08)
	struct UTotemOutlineUpdateStrategy* _totemOutlineUpdateStrategy; // 0x438(0x08)
	char pad_440[0x30]; // 0x440(0x30)
	bool _canBeBoundToBoonPerk; // 0x470(0x01)
	char pad_471[0x7]; // 0x471(0x07)

	void OnUnblockTotemCosmetic(struct ADBDPlayer* Player); // Function DeadByDaylight.Totem.OnUnblockTotemCosmetic // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnTotemStateChanged(enum class ETotemState oldTotemState, enum class ETotemState newTotemState); // Function DeadByDaylight.Totem.OnTotemStateChanged // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnTotemBlockChanged(); // Function DeadByDaylight.Totem.OnTotemBlockChanged // (Final|Native|Private) // @ game+0x55c8b60
	void OnRep_TotemState(enum class ETotemState oldTotemState); // Function DeadByDaylight.Totem.OnRep_TotemState // (Final|Native|Private) // @ game+0x55c8ae0
	void OnLocallyObservedChanged(); // Function DeadByDaylight.Totem.OnLocallyObservedChanged // (Final|Native|Private) // @ game+0x55c88d0
	void OnCleanseTotem(struct ATotem* Totem, enum class ETotemState oldTotemState); // Function DeadByDaylight.Totem.OnCleanseTotem // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnBlockTotemCosmetic(struct ADBDPlayer* Player); // Function DeadByDaylight.Totem.OnBlockTotemCosmetic // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	bool IsTotemBlockedForPlayer(struct ADBDPlayer* Player); // Function DeadByDaylight.Totem.IsTotemBlockedForPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c8620
	bool IsBoundToPerk(); // Function DeadByDaylight.Totem.IsBoundToPerk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c85f0
	enum class ETotemState GetTotemState(); // Function DeadByDaylight.Totem.GetTotemState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x551e150
	struct UInteractor* GetMainInteractor(); // Function DeadByDaylight.Totem.GetMainInteractor // (Event|Protected|BlueprintEvent|Const) // @ game+0x5e02c90
	struct UChargeableInteractionDefinition* GetCleanseTotemInteraction(); // Function DeadByDaylight.Totem.GetCleanseTotemInteraction // (Event|Public|BlueprintEvent|Const) // @ game+0x5e02c90
	float GetBoonTotemBlessingRange(); // Function DeadByDaylight.Totem.GetBoonTotemBlessingRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c81e0
	float GetBoonTotemAuraRevealRange(); // Function DeadByDaylight.Totem.GetBoonTotemAuraRevealRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c81b0
	struct FLinearColor GetBoonAuraRevealColor(); // Function DeadByDaylight.Totem.GetBoonAuraRevealColor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c8170
	struct UChargeableInteractionDefinition* GetBlessTotemInteraction(); // Function DeadByDaylight.Totem.GetBlessTotemInteraction // (Event|Public|BlueprintEvent|Const) // @ game+0x5e02c90
	struct UAkComponent* GetAkAudioComponent(); // Function DeadByDaylight.Totem.GetAkAudioComponent // (Event|Public|BlueprintEvent|Const) // @ game+0x5e02c90
	void BindingDelegate__DelegateSignature(); // DelegateFunction DeadByDaylight.Totem.BindingDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void Authority_UnbindFromPerk(struct UTotemBoundPerk* Perk); // Function DeadByDaylight.Totem.Authority_UnbindFromPerk // (Final|Native|Public|BlueprintCallable) // @ game+0x55c7fa0
	void Authority_UnbindFromAllPerks(); // Function DeadByDaylight.Totem.Authority_UnbindFromAllPerks // (Final|Native|Public|BlueprintCallable) // @ game+0x55c7f80
	void Authority_Cleanse(); // Function DeadByDaylight.Totem.Authority_Cleanse // (Final|Native|Public|BlueprintCallable) // @ game+0x55c7740
	void Authority_BindToPerk(struct UTotemBoundPerk* Perk); // Function DeadByDaylight.Totem.Authority_BindToPerk // (Final|Native|Public|BlueprintCallable) // @ game+0x55c76b0
};

// Class DeadByDaylight.TotemOutlineUpdateStrategy
// Size: 0x160 (Inherited: 0x138)
struct UTotemOutlineUpdateStrategy : USourceBasedOutlineUpdateStrategy {
	struct FLinearColor _revealedColorToSurvivor; // 0x138(0x10)
	struct FLinearColor _boonTotemRevealedColorToSurvivor; // 0x148(0x10)
	struct UCurveLinearColor* _revealedColorToKiller; // 0x158(0x08)

	struct FLinearColor GetRevealColorToSurvivor(); // Function DeadByDaylight.TotemOutlineUpdateStrategy.GetRevealColorToSurvivor // (Final|Native|Public|HasDefaults|Const) // @ game+0x55c8420
};

// Class DeadByDaylight.TrapChemicalBomb
// Size: 0x248 (Inherited: 0x230)
struct ATrapChemicalBomb : AActor {
	enum class ETrapBombState _currentState; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
	struct ADBDPlayer* _trapPlacer; // 0x238(0x08)
	struct APallet* _placedPallet; // 0x240(0x08)

	void OnRep_CurrentState(); // Function DeadByDaylight.TrapChemicalBomb.OnRep_CurrentState // (Final|Native|Private) // @ game+0x55c8a30
	struct ADBDPlayer* GetTrapPlacer(); // Function DeadByDaylight.TrapChemicalBomb.GetTrapPlacer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5534c40
	enum class ETrapBombState GetState(); // Function DeadByDaylight.TrapChemicalBomb.GetState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x479b370
	struct APallet* GetPallet(); // Function DeadByDaylight.TrapChemicalBomb.GetPallet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55c83f0
};

// Class DeadByDaylight.TrapIconStrategy
// Size: 0x38 (Inherited: 0x38)
struct UTrapIconStrategy : UBasePerkIconStrategy {
};

// Class DeadByDaylight.TrapInstallerComponent
// Size: 0xc8 (Inherited: 0xb8)
struct UTrapInstallerComponent : UActorComponent {
	struct TArray<struct USurvivorTrapPerk*> _ownedTrapPerks; // 0xb8(0x10)
};

// Class DeadByDaylight.TriggerableActivatorComponent
// Size: 0xf8 (Inherited: 0xb8)
struct UTriggerableActivatorComponent : UActorComponent {
	struct TSoftClassPtr<UObject> _triggerableClass; // 0xb8(0x30)
	struct TArray<struct UTriggerableWorldObjectComponent*> _triggerables; // 0xe8(0x10)

	void Authority_OnLevelReadyToPlay(); // Function DeadByDaylight.TriggerableActivatorComponent.Authority_OnLevelReadyToPlay // (Final|Native|Private) // @ game+0x55c7d40
};

// Class DeadByDaylight.TriggerableWorldObjectComponent
// Size: 0x150 (Inherited: 0xb8)
struct UTriggerableWorldObjectComponent : UActorComponent {
	struct FMulticastInlineDelegate OnTriggered; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnTriggerReset; // 0xc8(0x10)
	float _triggerResetTime; // 0xd8(0x04)
	float _randomChance; // 0xdc(0x04)
	float _rollFrequency; // 0xe0(0x04)
	char pad_E4[0xc]; // 0xe4(0x0c)
	struct TWeakObjectPtr<struct UPrimitiveComponent> _conditionalTriggerVolume; // 0xf0(0x08)
	struct TSet<struct ADBDPlayer*> _conditionalVolumeOverlappingPlayers; // 0xf8(0x50)
	struct TWeakObjectPtr<struct UPrimitiveComponent> _guaranteedTriggerVolume; // 0x148(0x08)

	void SetGuaranteedTriggerVolume(struct UPrimitiveComponent* Volume); // Function DeadByDaylight.TriggerableWorldObjectComponent.SetGuaranteedTriggerVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x55c8c10
	void SetConditionalTriggerVolume(struct UPrimitiveComponent* Volume); // Function DeadByDaylight.TriggerableWorldObjectComponent.SetConditionalTriggerVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x55c8b80
	void Multicast_OnTriggerReset(); // Function DeadByDaylight.TriggerableWorldObjectComponent.Multicast_OnTriggerReset // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x4af1aa0
	void Multicast_OnTriggered(struct AActor* Instigator, struct FVector triggerLocation); // Function DeadByDaylight.TriggerableWorldObjectComponent.Multicast_OnTriggered // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x55c86c0
	void GetConditionalModifiers(struct ADBDPlayer* Player, float& outAdditive, float& outMultiplicative); // Function DeadByDaylight.TriggerableWorldObjectComponent.GetConditionalModifiers // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x55c8290
	bool CanPlayerTriggerGuaranteed(struct ADBDPlayer* Player); // Function DeadByDaylight.TriggerableWorldObjectComponent.CanPlayerTriggerGuaranteed // (Native|Event|Protected|BlueprintEvent) // @ game+0x55c80d0
	bool CanPlayerTriggerConditional(struct ADBDPlayer* Player); // Function DeadByDaylight.TriggerableWorldObjectComponent.CanPlayerTriggerConditional // (Native|Event|Protected|BlueprintEvent) // @ game+0x55c8030
	void Authority_Trigger(struct AActor* Instigator, struct FVector triggerLocation); // Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_Trigger // (Final|BlueprintAuthorityOnly|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x55c7ea0
	void Authority_ResetTrigger(); // Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_ResetTrigger // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x55c7d60
	void Authority_GuaranteedVolumeOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& HitResult); // Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_GuaranteedVolumeOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x55c7b00
	void Authority_ConditionalVolumeEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_ConditionalVolumeEndOverlap // (Final|Native|Protected) // @ game+0x55c7980
	void Authority_ConditionalVolumeBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& HitResult); // Function DeadByDaylight.TriggerableWorldObjectComponent.Authority_ConditionalVolumeBeginOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x55c7760
};

// Class DeadByDaylight.TriplanarDecalComponent
// Size: 0x260 (Inherited: 0x220)
struct UTriplanarDecalComponent : USceneComponent {
	float MinHeight; // 0x218(0x04)
	float Height; // 0x21c(0x04)
	float MaskIntensity; // 0x220(0x04)
	struct UTexture2D* TopTexture; // 0x228(0x08)
	struct UTexture2D* BottomTexture; // 0x230(0x08)
	struct UTexture2D* MaskTexture; // 0x238(0x08)
	enum class EDetailMode MinQualitySetting; // 0x240(0x01)
	char pad_245[0x3]; // 0x245(0x03)
	struct UDecalComponent* _triPlanarDecal; // 0x248(0x08)
	struct UObject* _triPlanarDecalClass; // 0x250(0x08)
	struct UMaterial* _decalMaterial; // 0x258(0x08)

	void UpdateTriplanarDecal(); // Function DeadByDaylight.TriplanarDecalComponent.UpdateTriplanarDecal // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.TutorialAssetLibrary
// Size: 0xc0 (Inherited: 0xb0)
struct UTutorialAssetLibrary : UAssetLibrary {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class DeadByDaylight.TutorialEndGameComponent
// Size: 0x160 (Inherited: 0x158)
struct UTutorialEndGameComponent : UEndGameComponent {
	float _timerMaxCompletionPercentage; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)

	void SetTimerMaxCompletionPercentage(float& Percentage); // Function DeadByDaylight.TutorialEndGameComponent.SetTimerMaxCompletionPercentage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x55cdb40
};

// Class DeadByDaylight.TutorialFunctionLibrary
// Size: 0x30 (Inherited: 0x30)
struct UTutorialFunctionLibrary : UBlueprintFunctionLibrary {

	bool IsInTutorial(struct UObject* WorldContextObject); // Function DeadByDaylight.TutorialFunctionLibrary.IsInTutorial // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55cd200
	struct UTutorialObjectiveController* GetTutorialObjectiveController(struct UObject* WorldContextObject); // Function DeadByDaylight.TutorialFunctionLibrary.GetTutorialObjectiveController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55cd050
	struct UTutorialNotificationController* GetTutorialNotificationController(struct UObject* WorldContextObject); // Function DeadByDaylight.TutorialFunctionLibrary.GetTutorialNotificationController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55ccfc0
	struct UTutorialHighlightController* GetTutorialHighlightController(struct UObject* WorldContextObject); // Function DeadByDaylight.TutorialFunctionLibrary.GetTutorialHighlightController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55ccf00
	struct ATutorialGameState* GetTutorialGameState(struct UObject* WorldContextObject); // Function DeadByDaylight.TutorialFunctionLibrary.GetTutorialGameState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55cce40
	struct ATutorialGameMode* GetTutorialGameMode(struct UObject* WorldContextObject); // Function DeadByDaylight.TutorialFunctionLibrary.GetTutorialGameMode // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55ccdb0
};

// Class DeadByDaylight.TutorialGameMode
// Size: 0x3b0 (Inherited: 0x378)
struct ATutorialGameMode : ADBDBaseMatchGameMode {
	char pad_378[0x10]; // 0x378(0x10)
	struct UTutorialObjectiveController* _tutorialObjectiveController; // 0x388(0x08)
	struct UTutorialNotificationController* _tutorialNotificationController; // 0x390(0x08)
	struct UTutorialHighlightController* _tutorialHighlightController; // 0x398(0x08)
	struct UAtlantaTutorialPlayerHudController* _atlantaTutorialPlayerHudController; // 0x3a0(0x08)
	char pad_3A8[0x8]; // 0x3a8(0x08)

	void SetEscapeGenerators(struct TArray<struct AGenerator*>& escapeGenerators, int32_t requiredActivationCount); // Function DeadByDaylight.TutorialGameMode.SetEscapeGenerators // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x55cd750
	void SetEscapeActivated(); // Function DeadByDaylight.TutorialGameMode.SetEscapeActivated // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd730
	void OnCanStartAtlantaTutorialChange__DelegateSignature(bool canStartTutorial); // DelegateFunction DeadByDaylight.TutorialGameMode.OnCanStartAtlantaTutorialChange__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	struct UTutorialObjectiveController* GetTutorialObjectiveController(); // Function DeadByDaylight.TutorialGameMode.GetTutorialObjectiveController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5576780
	struct UTutorialNotificationController* GetTutorialNotificationController(); // Function DeadByDaylight.TutorialGameMode.GetTutorialNotificationController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55ccf90
	struct UTutorialHighlightController* GetTutorialHighlightController(); // Function DeadByDaylight.TutorialGameMode.GetTutorialHighlightController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55cced0
	struct UAtlantaTutorialPlayerHudController* GetAtlantaTutorialPlayerHudController(); // Function DeadByDaylight.TutorialGameMode.GetAtlantaTutorialPlayerHudController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55ccd30
};

// Class DeadByDaylight.TutorialGameState
// Size: 0x980 (Inherited: 0x8e0)
struct ATutorialGameState : ADBDGameState {
	struct FMulticastInlineDelegate OnCurrentTutorialStepChanged; // 0x8e0(0x10)
	char pad_8F0[0x38]; // 0x8f0(0x38)
	bool _forceHatchVisible; // 0x928(0x01)
	char pad_929[0x57]; // 0x929(0x57)

	void TutorialEndReached(); // Function DeadByDaylight.TutorialGameState.TutorialEndReached // (Final|Native|Public|BlueprintCallable) // @ game+0x55cddf0
	void SetForcedHatchVisibility(bool IsHatchVisible); // Function DeadByDaylight.TutorialGameState.SetForcedHatchVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd8e0
	void SetEscapeRequirementsVisibility(bool IsVisible); // Function DeadByDaylight.TutorialGameState.SetEscapeRequirementsVisibility // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x55cd850
	void SetCurrentTutorialStep(enum class ETutorialStep step); // Function DeadByDaylight.TutorialGameState.SetCurrentTutorialStep // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd6b0
	void OnCurrentTutorialStepChanged__DelegateSignature(enum class ETutorialStep step); // DelegateFunction DeadByDaylight.TutorialGameState.OnCurrentTutorialStepChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	bool IsTutorialStarted(); // Function DeadByDaylight.TutorialGameState.IsTutorialStarted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55cd290
	enum class ETutorialStep GetCurrentTutorialStep(); // Function DeadByDaylight.TutorialGameState.GetCurrentTutorialStep // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55ccd60
	void CompleteLocallyControlledCharacterIntros(); // Function DeadByDaylight.TutorialGameState.CompleteLocallyControlledCharacterIntros // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x55cc970
};

// Class DeadByDaylight.TutorialHighlightController
// Size: 0x48 (Inherited: 0x30)
struct UTutorialHighlightController : UObject {
	char pad_30[0x18]; // 0x30(0x18)

	void SetHudComponentHighlight(enum class EHudComponent hudComponent, bool Show); // Function DeadByDaylight.TutorialHighlightController.SetHudComponentHighlight // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd9f0
};

// Class DeadByDaylight.TutorialNotificationController
// Size: 0xb0 (Inherited: 0x30)
struct UTutorialNotificationController : UObject {
	struct FMulticastInlineDelegate OnBlockingNotificationDismissedEvent; // 0x30(0x10)
	char pad_40[0x70]; // 0x40(0x70)

	void ShowNotification(struct FName tutorialNotificationId, float Duration); // Function DeadByDaylight.TutorialNotificationController.ShowNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x55cdc80
	void ShowBlockingNotification(struct FName tutorialNotificationId); // Function DeadByDaylight.TutorialNotificationController.ShowBlockingNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x55cdbe0
	void OnBlockingNotificationDismissedEvent__DelegateSignature(struct FName tutorialNotificationId); // DelegateFunction DeadByDaylight.TutorialNotificationController.OnBlockingNotificationDismissedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void OnBlockingNotificationDismissed(); // Function DeadByDaylight.TutorialNotificationController.OnBlockingNotificationDismissed // (Final|Native|Private) // @ game+0x55cd2b0
	void HideNotification(bool removeAllCachedNotifs); // Function DeadByDaylight.TutorialNotificationController.HideNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd170
};

// Class DeadByDaylight.TutorialObjectiveController
// Size: 0xe0 (Inherited: 0x30)
struct UTutorialObjectiveController : UObject {
	char pad_30[0xb0]; // 0x30(0xb0)

	void RemoveObjective(struct FName tutorialObjectiveId); // Function DeadByDaylight.TutorialObjectiveController.RemoveObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd4d0
	void RemoveAllObjectives(); // Function DeadByDaylight.TutorialObjectiveController.RemoveAllObjectives // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd410
	void CompleteObjective(struct FName tutorialObjectiveId, bool removeAfterCompletion); // Function DeadByDaylight.TutorialObjectiveController.CompleteObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x55cca30
	void AddObjective(struct FName tutorialObjectiveId); // Function DeadByDaylight.TutorialObjectiveController.AddObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x55cc8d0
};

// Class DeadByDaylight.TutorialsUtilities
// Size: 0x268 (Inherited: 0x230)
struct ATutorialsUtilities : AActor {
	struct FMulticastInlineDelegate OnTutorialUIReady; // 0x230(0x10)
	char pad_240[0x28]; // 0x240(0x28)

	void TriggerTutorialHudFadeOut(); // Function DeadByDaylight.TutorialsUtilities.TriggerTutorialHudFadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x54ac7e0
	void TriggerTutorialHudFadeIn(); // Function DeadByDaylight.TutorialsUtilities.TriggerTutorialHudFadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x55cddd0
	struct ATutorialsUtilities* GetTutorialsUtilities(struct UObject* WorldContextObject); // Function DeadByDaylight.TutorialsUtilities.GetTutorialsUtilities // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x55cd0e0
	void DestroyAI(struct AAIController* AIController); // Function DeadByDaylight.TutorialsUtilities.DestroyAI // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x55ccb20
};

// Class DeadByDaylight.AnimationWidget
// Size: 0x2a0 (Inherited: 0x298)
struct UAnimationWidget : UUserWidget {
	float _playRate; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)

	void SetPlayRate(float Rate); // Function DeadByDaylight.AnimationWidget.SetPlayRate // (Final|Native|Public|BlueprintCallable) // @ game+0x55cdac0
	float GetPlayRate(); // Function DeadByDaylight.AnimationWidget.GetPlayRate // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x55ccd80
};

// Class DeadByDaylight.UIController
// Size: 0x60 (Inherited: 0x30)
struct UUIController : UObject {
	struct UGFxObject* m_UIControllerObj; // 0x30(0x08)
	struct UMobileBaseUserWidget* _atlantaLoadingWidget; // 0x38(0x08)
	char pad_40[0x20]; // 0x40(0x20)
};

// Class DeadByDaylight.UMGInventoryItemButton
// Size: 0x678 (Inherited: 0x678)
struct UUMGInventoryItemButton : UUMGLoadoutItemButton {

	void UpdateItemButtonProgressBar(struct ACollectable* Item, struct UProgressBar* itemProgressBar); // Function DeadByDaylight.UMGInventoryItemButton.UpdateItemButtonProgressBar // (Final|Native|Private|BlueprintCallable) // @ game+0x55e8500
	void UpdateItemButton(struct ACollectable* Item); // Function DeadByDaylight.UMGInventoryItemButton.UpdateItemButton // (Final|Native|Private|BlueprintCallable) // @ game+0x55e8470
};

// Class DeadByDaylight.UMGAddonButton
// Size: 0x678 (Inherited: 0x678)
struct UUMGAddonButton : UUMGInventoryItemButton {

	void UpdateAddonButton(struct UItemAddon* addon); // Function DeadByDaylight.UMGAddonButton.UpdateAddonButton // (Final|Native|Private|BlueprintCallable) // @ game+0x55cde10
};

// Class DeadByDaylight.UMGAlertsWidget
// Size: 0x3f8 (Inherited: 0x338)
struct UUMGAlertsWidget : UMobileBaseUserWidget {
	struct TSoftClassPtr<UObject> AtlantaScoreAlertComponentClass; // 0x338(0x30)
	struct TSoftClassPtr<UObject> AtlantaStatusEffectAlertComponentClass; // 0x368(0x30)
	struct UCanvasPanel* CanvasPanelAlerts; // 0x398(0x08)
	float IdleTime; // 0x3a0(0x04)
	char pad_3A4[0x44]; // 0x3a4(0x44)
	struct UObject* _scoreAlertClass; // 0x3e8(0x08)
	struct UObject* _statusEffectAlertClass; // 0x3f0(0x08)
};

// Class DeadByDaylight.UMGAtlantaBaseEventsTemplate
// Size: 0x338 (Inherited: 0x338)
struct UUMGAtlantaBaseEventsTemplate : UMobileBaseUserWidget {
};

// Class DeadByDaylight.UMGAtlantaBonusACEventTemplate
// Size: 0x360 (Inherited: 0x338)
struct UUMGAtlantaBonusACEventTemplate : UUMGAtlantaBaseEventsTemplate {
	struct UUMGAtlCurrencyStorefrontWidget* currencyStorefrontWidget; // 0x338(0x08)
	struct FString LastPackSmallIconPath; // 0x340(0x10)
	float InitialSize; // 0x350(0x04)
	float AugmentedSize; // 0x354(0x04)
	int32_t MaxNumberOfPacksToShowBigger; // 0x358(0x04)
	char pad_35C[0x4]; // 0x35c(0x04)
};

// Class DeadByDaylight.UMGAtlantaCalendarEventsTemplate
// Size: 0x340 (Inherited: 0x338)
struct UUMGAtlantaCalendarEventsTemplate : UUMGAtlantaBaseEventsTemplate {
	struct UUMGAtlantaDailyRewardsGrid* DailyRewardGrid; // 0x338(0x08)
};

// Class DeadByDaylight.UMGAtlantaCreditsPopup
// Size: 0x358 (Inherited: 0x338)
struct UUMGAtlantaCreditsPopup : UMobileBaseUserWidget {
	struct UUMGHtmlRichText* RichTitleText; // 0x338(0x08)
	struct UUMGHtmlRichText* RichContentText; // 0x340(0x08)
	struct FString _titleDefaultStyle; // 0x348(0x10)

	void SetCreditTitle(struct FString Title); // Function DeadByDaylight.UMGAtlantaCreditsPopup.SetCreditTitle // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd610
	void SetCreditContent(struct FString Content); // Function DeadByDaylight.UMGAtlantaCreditsPopup.SetCreditContent // (Final|Native|Public|BlueprintCallable) // @ game+0x55cd570
};

// Class DeadByDaylight.UMGAtlantaDailyRewardsGrid
// Size: 0x4d0 (Inherited: 0x338)
struct UUMGAtlantaDailyRewardsGrid : UMobileBaseUserWidget {
	char pad_338[0x10]; // 0x338(0x10)
	struct TSoftClassPtr<UObject> BigDailyRewardWidgetTemplate_type_8; // 0x348(0x30)
	struct TSoftClassPtr<UObject> BigDailyRewardWidgetTemplate_type_10; // 0x378(0x30)
	struct TSoftClassPtr<UObject> BigDailyRewardWidgetTemplate_type_14; // 0x3a8(0x30)
	struct TSoftClassPtr<UObject> SmallDailyRewardWidgetTemplate_type_8; // 0x3d8(0x30)
	struct TSoftClassPtr<UObject> SmallDailyRewardWidgetTemplate_type_10; // 0x408(0x30)
	struct TSoftClassPtr<UObject> SmallDailyRewardWidgetTemplate_type_14; // 0x438(0x30)
	struct UUniformGridPanel* DailyRewardWidgetsGridPanel; // 0x468(0x08)
	struct UCanvasPanel* LastDailyRewardWidgetPanel; // 0x470(0x08)
	int32_t NumberOfItems; // 0x478(0x04)
	char pad_47C[0x2c]; // 0x47c(0x2c)
	struct UObject* _bigWidgetTemplate; // 0x4a8(0x08)
	struct UObject* _smallWidgetTemplate; // 0x4b0(0x08)
	struct TArray<struct UUMGDailyRewardWidget*> _rewardWidgets; // 0x4b8(0x10)
	struct UUMGDailyRewardWidget* _widgetToAttach; // 0x4c8(0x08)

	void StartRewardsIntroRewardSequence(); // Function DeadByDaylight.UMGAtlantaDailyRewardsGrid.StartRewardsIntroRewardSequence // (Final|Native|Protected) // @ game+0x55cdd90
	void StartIntroSequence(); // Function DeadByDaylight.UMGAtlantaDailyRewardsGrid.StartIntroSequence // (Final|Native|Public) // @ game+0x55cdd70
	void PlayNextRewardIntroAnimation(); // Function DeadByDaylight.UMGAtlantaDailyRewardsGrid.PlayNextRewardIntroAnimation // (Final|Native|Protected) // @ game+0x55cd3f0
	void InitializeLayouts_BP(); // Function DeadByDaylight.UMGAtlantaDailyRewardsGrid.InitializeLayouts_BP // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGAtlantaDailyRewardsScreen
// Size: 0x3d8 (Inherited: 0x338)
struct UUMGAtlantaDailyRewardsScreen : UMobileBaseUserWidget {
	char pad_338[0x10]; // 0x338(0x10)
	struct UUMGAtlantaDailyRewardsGrid* DailyRewardWidgetsGrid; // 0x348(0x08)
	struct UCanvasPanel* ContinueButtonPanel; // 0x350(0x08)
	struct UUMGPopupButton* ContinueButton; // 0x358(0x08)
	struct UTextBlock* RemainingTimeTextBlock; // 0x360(0x08)
	struct FSlateColor NormalColor; // 0x368(0x28)
	struct FSlateColor WarningColor; // 0x390(0x28)
	char pad_3B8[0x20]; // 0x3b8(0x20)

	void HandleCurrentActiveDailyRewardStateChanged(int32_t dailyRewardIndex, int32_t dailyRewardNewState); // Function DeadByDaylight.UMGAtlantaDailyRewardsScreen.HandleCurrentActiveDailyRewardStateChanged // (Final|Native|Protected|BlueprintCallable) // @ game+0x55d2fb0
	void HandleContinueButtonClick(); // Function DeadByDaylight.UMGAtlantaDailyRewardsScreen.HandleContinueButtonClick // (Final|Native|Protected|BlueprintCallable) // @ game+0x482a0a0
};

// Class DeadByDaylight.UMGAtlantaEventsDescription
// Size: 0x3b0 (Inherited: 0x338)
struct UUMGAtlantaEventsDescription : UMobileBaseUserWidget {
	struct UAtlantaEventsTemplateDataAsset* widgetData; // 0x338(0x08)
	struct UCanvasPanel* ItemsRewards; // 0x340(0x08)
	struct UTextBlock* Title; // 0x348(0x08)
	struct UTextBlock* Description; // 0x350(0x08)
	struct UTextBlock* TimePeriodTitle; // 0x358(0x08)
	struct UTextBlock* TimePeriodStart; // 0x360(0x08)
	struct UTextBlock* TimePeriodEnd; // 0x368(0x08)
	struct UUMGBaseButtonWidget* DeepLinkButton; // 0x370(0x08)
	struct UCanvasPanel* TimePeriodCanvas; // 0x378(0x08)
	struct UUMGAtlantaBaseEventsTemplate* _eventTemplate; // 0x380(0x08)
	char pad_388[0x28]; // 0x388(0x28)

	void HandleButtonClicked(); // Function DeadByDaylight.UMGAtlantaEventsDescription.HandleButtonClicked // (Final|Native|Private) // @ game+0x55d2e20
};

// Class DeadByDaylight.UMGAtlantaEventsElement
// Size: 0x350 (Inherited: 0x338)
struct UUMGAtlantaEventsElement : UMobileBaseUserWidget {
	struct UVerticalBox* ImageBox; // 0x338(0x08)
	struct UTextBlock* ElementName; // 0x340(0x08)
	struct UUMGPromoPackItemWidget* CustomizationWidget; // 0x348(0x08)
};

// Class DeadByDaylight.UMGAtlantaEventsScreen
// Size: 0x3b8 (Inherited: 0x338)
struct UUMGAtlantaEventsScreen : UMobileBaseUserWidget {
	struct UTextBlock* PageTitle; // 0x338(0x08)
	struct UWrapBox* WrapBox; // 0x340(0x08)
	struct UUMGAtlantaEventsDescription* DescriptionWidget; // 0x348(0x08)
	struct UUMGAtlantaEventsTab* EventsTabWBPReference; // 0x350(0x08)
	struct TArray<struct UUMGAtlantaEventsTab*> _eventsArray; // 0x358(0x10)
	char pad_368[0x50]; // 0x368(0x50)

	void HandleEventTabClicked(struct FString ID); // Function DeadByDaylight.UMGAtlantaEventsScreen.HandleEventTabClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x55d3080
	void BroadcastOnCloseButtonClicked(); // Function DeadByDaylight.UMGAtlantaEventsScreen.BroadcastOnCloseButtonClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x481fe00
	void BroadcastDeepLinkRequest(struct FString ID); // Function DeadByDaylight.UMGAtlantaEventsScreen.BroadcastDeepLinkRequest // (Final|Native|Private) // @ game+0x55d2950
};

// Class DeadByDaylight.UMGAtlantaEventsTab
// Size: 0x4a8 (Inherited: 0x468)
struct UUMGAtlantaEventsTab : UUMGBaseButtonWidget {
	struct FString _eventId; // 0x468(0x10)
	struct UTextBlock* HotTagText; // 0x478(0x08)
	struct UTextBlock* NewTagText; // 0x480(0x08)
	char pad_488[0x20]; // 0x488(0x20)

	void SetSelectionVisuals(bool IsSelected); // Function DeadByDaylight.UMGAtlantaEventsTab.SetSelectionVisuals // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetNewTag(); // Function DeadByDaylight.UMGAtlantaEventsTab.SetNewTag // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetHotTag(); // Function DeadByDaylight.UMGAtlantaEventsTab.SetHotTag // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGAtlantaFriendListScreen
// Size: 0x6f0 (Inherited: 0x338)
struct UUMGAtlantaFriendListScreen : UMobileBaseUserWidget {
	char pad_338[0x60]; // 0x338(0x60)
	struct UWidgetSwitcher* ListSwitcher; // 0x398(0x08)
	struct UWidgetSwitcher* SearchResultSwitcher; // 0x3a0(0x08)
	struct UUMGBaseFriendListElement* NonFriendSearchResult; // 0x3a8(0x08)
	struct UUMGBaseFriendListElement* RequestReceivedSearchResult; // 0x3b0(0x08)
	struct UUMGBaseFriendListElement* RequestSentSearchResult; // 0x3b8(0x08)
	struct UUMGBaseFriendListElement* FriendSearchResult; // 0x3c0(0x08)
	struct UTextBlock* SearchFailureText; // 0x3c8(0x08)
	struct UUMGBaseButtonWidget* CloseButton; // 0x3d0(0x08)
	struct UUMGFriendSearchBarWidget* SearchBar; // 0x3d8(0x08)
	struct UHorizontalBox* ButtonTabContainer; // 0x3e0(0x08)
	struct UUMGFriendListTabWidget* FriendListTabWidget; // 0x3e8(0x08)
	struct UUMGSuggestionsListTabWidget* SuggestionListTabWidget; // 0x3f0(0x08)
	struct UUMGRequestsListTabWidget* RequestListTabWidget; // 0x3f8(0x08)
	struct UUMGFriendTabButtonWidget* FriendsTabButton; // 0x400(0x08)
	struct UUMGFriendTabButtonWidget* SuggestionsTabButton; // 0x408(0x08)
	struct UUMGFriendTabButtonWidget* RequestsTabButton; // 0x410(0x08)
	struct UUMGBaseFriendListContextualMenuWidget* CurrentContextualMenuWidget; // 0x418(0x08)
	struct TSoftClassPtr<UObject> FriendWidget; // 0x420(0x30)
	struct TSoftClassPtr<UObject> RequestSentWidget; // 0x450(0x30)
	struct TSoftClassPtr<UObject> FriendRequestReceivedWidget; // 0x480(0x30)
	struct TSoftClassPtr<UObject> FriendsSuggestionWidget; // 0x4b0(0x30)
	struct TSoftClassPtr<UObject> FriendsSuggestion; // 0x4e0(0x30)
	struct TSoftClassPtr<UObject> FriendPartyInviteWidgetClass; // 0x510(0x30)
	struct TSoftClassPtr<UObject> ContextualMenuInvite; // 0x540(0x30)
	struct TSoftClassPtr<UObject> ContextualMenuConfirmDeclineAction; // 0x570(0x30)
	char pad_5A0[0x90]; // 0x5a0(0x90)
	struct TMap<struct FString, struct FFriendWidgetList> _existingFriendListWidgets; // 0x630(0x50)
	struct TMap<struct FString, struct UUMGBaseFriendListElement*> _existingFriendInvitePartyWidget; // 0x680(0x50)
	char pad_6D0[0x20]; // 0x6d0(0x20)

	void VerifyReceivedFriendRequestFocus(struct UExpandableArea* ExpandableArea, bool bIsExpanded); // Function DeadByDaylight.UMGAtlantaFriendListScreen.VerifyReceivedFriendRequestFocus // (Final|Native|Private) // @ game+0x55d3870
	void OnFinishedOutAnimation(); // Function DeadByDaylight.UMGAtlantaFriendListScreen.OnFinishedOutAnimation // (Final|Native|Private) // @ game+0x55d37f0
	void HandleTabButtonClicked(char tabIndex); // Function DeadByDaylight.UMGAtlantaFriendListScreen.HandleTabButtonClicked // (Final|Native|Private) // @ game+0x55d3770
	void HandleSearchInputChanged(struct FText& inputText); // Function DeadByDaylight.UMGAtlantaFriendListScreen.HandleSearchInputChanged // (Final|Native|Private|HasOutParms) // @ game+0x55d3580
	void HandleSearchButtonClicked(); // Function DeadByDaylight.UMGAtlantaFriendListScreen.HandleSearchButtonClicked // (Final|Native|Private) // @ game+0x55d3560
	void HandleOnActionOnFriend(struct FActionOnFriend& ActionOnFriend); // Function DeadByDaylight.UMGAtlantaFriendListScreen.HandleOnActionOnFriend // (Final|Native|Private|HasOutParms) // @ game+0x55d3480
	void HandleContextualMenuAction(enum class EActionOnFriendType Action); // Function DeadByDaylight.UMGAtlantaFriendListScreen.HandleContextualMenuAction // (Final|Native|Private) // @ game+0x55d2f30
	void HandleCloseButtonClicked(); // Function DeadByDaylight.UMGAtlantaFriendListScreen.HandleCloseButtonClicked // (Final|Native|Private) // @ game+0x55d2e60
};

// Class DeadByDaylight.UMGAtlantaGenericEventTemplate
// Size: 0x358 (Inherited: 0x338)
struct UUMGAtlantaGenericEventTemplate : UUMGAtlantaBaseEventsTemplate {
	struct UHorizontalBox* RelatedItemsBox; // 0x338(0x08)
	struct UUMGAtlantaEventsElement* EventsElementWBPReference; // 0x340(0x08)
	struct UUMGPromoPackItemWidget* CustomizationWBPReference; // 0x348(0x08)
	struct UUMGPromoPackItemWidget* CharacterWBPReference; // 0x350(0x08)
};

// Class DeadByDaylight.UMGAtlantaLegalMenuScreen
// Size: 0x348 (Inherited: 0x338)
struct UUMGAtlantaLegalMenuScreen : UMobileBaseUserWidget {
	char pad_338[0x10]; // 0x338(0x10)

	void SetLegalText(struct FString Title, struct FString LegalText); // Function DeadByDaylight.UMGAtlantaLegalMenuScreen.SetLegalText // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetButtonText(struct FText& acceptText, struct FText& declineText); // Function DeadByDaylight.UMGAtlantaLegalMenuScreen.SetButtonText // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void HandleMenuButtonClickEvent(bool isAccept); // Function DeadByDaylight.UMGAtlantaLegalMenuScreen.HandleMenuButtonClickEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55d33f0
};

// Class DeadByDaylight.UMGGenericPopup
// Size: 0x420 (Inherited: 0x338)
struct UUMGGenericPopup : UMobileBaseUserWidget {
	struct URichTextBlock* Title; // 0x338(0x08)
	struct UUMGHtmlRichText* Message; // 0x340(0x08)
	struct UImage* TitleBackground; // 0x348(0x08)
	struct UImage* TitleSmoke; // 0x350(0x08)
	struct UUMGPopupButton* RegressionPopupButton; // 0x358(0x08)
	struct UUMGPopupButton* AlternativePopupButton; // 0x360(0x08)
	struct UUMGPopupButton* ProgressionPopupButton; // 0x368(0x08)
	struct FSlateColor ErrorTitleSmokeColor; // 0x370(0x28)
	struct FSlateColor ErrorTitleBackgroundColor; // 0x398(0x28)
	struct FSlateColor DefaultTitleSmokeColor; // 0x3c0(0x28)
	struct FSlateColor DefaultTitleBackgroundColor; // 0x3e8(0x28)
	char pad_410[0x10]; // 0x410(0x10)

	void OnPopupDisappearance(); // Function DeadByDaylight.UMGGenericPopup.OnPopupDisappearance // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnPopupAppearance(); // Function DeadByDaylight.UMGGenericPopup.OnPopupAppearance // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGAtlantaLevelUpPopup
// Size: 0x420 (Inherited: 0x420)
struct UUMGAtlantaLevelUpPopup : UUMGGenericPopup {

	void OnSetData(int32_t Level, int32_t Prestige, bool prestigeIncreased, struct TArray<struct FRewardItemData>& Rewards); // Function DeadByDaylight.UMGAtlantaLevelUpPopup.OnSetData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGAtlantaMonthlyPassEventTemplate
// Size: 0x340 (Inherited: 0x338)
struct UUMGAtlantaMonthlyPassEventTemplate : UUMGAtlantaBaseEventsTemplate {
	struct UUMGSubscriptionPackButtonWidget* MonthlyPassWidget; // 0x338(0x08)
};

// Class DeadByDaylight.UMGAtlantaNavigationScreen
// Size: 0x398 (Inherited: 0x338)
struct UUMGAtlantaNavigationScreen : UMobileBaseUserWidget {
	struct UUMGBankAndPlayerInfoWidget* BankAndPlayerInfoWidget; // 0x338(0x08)
	struct UTextBlock* TextButtonStart; // 0x340(0x08)
	enum class ESlateVisibility PlayModeSelectionVisibility; // 0x348(0x01)
	enum class ESlateVisibility CharacterInfoVisibility; // 0x349(0x01)
	enum class ESlateVisibility BackButtonVisibility; // 0x34a(0x01)
	enum class ESlateVisibility MenuButtonsVisibility; // 0x34b(0x01)
	enum class ESlateVisibility ButtonRoleVisibility; // 0x34c(0x01)
	char pad_34D[0x3]; // 0x34d(0x03)
	struct UButton* ButtonRole; // 0x350(0x08)
	struct UWidgetSwitcher* BottomRightWidgetSwitcher; // 0x358(0x08)
	struct UUMGPartySlotsWidget* PartyPlayerSlots; // 0x360(0x08)
	struct UUMGBaseCountdownWidget* PartyCountdownLarge; // 0x368(0x08)
	struct TArray<struct FPartyMemberUIData> _partyMembers; // 0x370(0x10)
	char pad_380[0x18]; // 0x380(0x18)

	struct TArray<struct FPartyMemberUIData> GetPartyMembersData(int32_t index); // Function DeadByDaylight.UMGAtlantaNavigationScreen.GetPartyMembersData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55d2bb0
	void ButtonClickEvent(enum class ENavigationScreenButton buttonId); // Function DeadByDaylight.UMGAtlantaNavigationScreen.ButtonClickEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x55d2b30
};

// Class DeadByDaylight.UMGAtlantaPromoCodeRewardItemWidget
// Size: 0x470 (Inherited: 0x338)
struct UUMGAtlantaPromoCodeRewardItemWidget : UMobileBaseUserWidget {
	struct UPanelWidget* CurrencyItem; // 0x338(0x08)
	struct UImage* CurrencyIcon; // 0x340(0x08)
	struct UTextBlock* CurrencyName; // 0x348(0x08)
	struct UTextBlock* CurrencyAmount; // 0x350(0x08)
	struct UImage* ItemRarityTint; // 0x358(0x08)
	struct UWidgetAnimation* RevealAnimationSmall; // 0x360(0x08)
	struct UPanelWidget* CustomizationItem; // 0x368(0x08)
	struct UImage* CustomizationIcon; // 0x370(0x08)
	struct UTextBlock* CustomizationName; // 0x378(0x08)
	struct UImage* CustomizationRarityTint; // 0x380(0x08)
	struct UWidgetAnimation* RevealAnimationLarge; // 0x388(0x08)
	struct UPanelWidget* CharacterPanel; // 0x390(0x08)
	struct UImage* CharacterPortrait; // 0x398(0x08)
	struct UTextBlock* characterName; // 0x3a0(0x08)
	struct UPanelWidget* TicketPanel; // 0x3a8(0x08)
	struct UImage* TicketRarityTint; // 0x3b0(0x08)
	struct UImage* TicketIcon; // 0x3b8(0x08)
	struct UTextBlock* TicketName; // 0x3c0(0x08)
	struct UTextBlock* TicketAmount; // 0x3c8(0x08)
	struct UPanelWidget* OfferingPanel; // 0x3d0(0x08)
	struct UImage* OfferingRarityTint; // 0x3d8(0x08)
	struct UImage* OfferingIcon; // 0x3e0(0x08)
	struct UTextBlock* OfferingName; // 0x3e8(0x08)
	struct UTextBlock* OfferingAmount; // 0x3f0(0x08)
	char pad_3F8[0x78]; // 0x3f8(0x78)
};

// Class DeadByDaylight.UMGAtlantaPurchasePopup
// Size: 0x3e8 (Inherited: 0x338)
struct UUMGAtlantaPurchasePopup : UMobileBaseUserWidget {
	struct UWidgetSwitcher* LayoutSwitcher; // 0x338(0x08)
	struct UImage* ImagePopup; // 0x340(0x08)
	struct UTextBlock* OfferTextWithInfo; // 0x348(0x08)
	struct UTextBlock* OfferText; // 0x350(0x08)
	struct UTextBlock* TitleTextWithInfo; // 0x358(0x08)
	struct UTextBlock* titleText; // 0x360(0x08)
	struct UTextBlock* descriptionText; // 0x368(0x08)
	struct UHorizontalBox* ItemsContainer; // 0x370(0x08)
	struct UUMGPurchaseBuyButton* BuyButtonWithInfo; // 0x378(0x08)
	struct UUMGPurchaseBuyButton* BuyButton; // 0x380(0x08)
	struct UUMGBaseButtonWidget* CloseButton; // 0x388(0x08)
	struct UUMGPurchaseSticker* PurchaseSticker; // 0x390(0x08)
	struct TSoftClassPtr<UObject> PurchaseItemsInfoWidgetClass; // 0x398(0x30)
	char pad_3C8[0x20]; // 0x3c8(0x20)

	void HandleCloseButtonClicked(); // Function DeadByDaylight.UMGAtlantaPurchasePopup.HandleCloseButtonClicked // (Final|Native|Protected) // @ game+0x55d2e80
	void HandleBuyButtonClicked(); // Function DeadByDaylight.UMGAtlantaPurchasePopup.HandleBuyButtonClicked // (Final|Native|Protected) // @ game+0x55d2e40
};

// Class DeadByDaylight.UMGAtlantaRankUpPopup
// Size: 0x468 (Inherited: 0x420)
struct UUMGAtlantaRankUpPopup : UUMGGenericPopup {
	struct UUMGTallyRankBanner* RankBanner; // 0x420(0x08)
	struct UHorizontalBox* RewardsContainer; // 0x428(0x08)
	struct UCanvasPanel* RewardsSection; // 0x430(0x08)
	struct TSoftClassPtr<UObject> RewardWidgetClass; // 0x438(0x30)

	void PlayRankUpBannerAnimation(); // Function DeadByDaylight.UMGAtlantaRankUpPopup.PlayRankUpBannerAnimation // (Final|Native|Private) // @ game+0x55d3830
};

// Class DeadByDaylight.UMGAltantaRitual
// Size: 0x390 (Inherited: 0x338)
struct UUMGAltantaRitual : UMobileBaseUserWidget {
	struct FText _claimText; // 0x338(0x18)
	struct FText _claimedText; // 0x350(0x18)
	struct FText _completedText; // 0x368(0x18)
	char pad_380[0x10]; // 0x380(0x10)

	void SetData(struct FAtlantaRitualUIData& ritual); // Function DeadByDaylight.UMGAltantaRitual.SetData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void BroadcastOnClaimRewardsButtonPressed(int32_t ritualId); // Function DeadByDaylight.UMGAltantaRitual.BroadcastOnClaimRewardsButtonPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x55d2aa0
};

// Class DeadByDaylight.UMGAtlantaRitualsScreen
// Size: 0x428 (Inherited: 0x338)
struct UUMGAtlantaRitualsScreen : UMobileBaseUserWidget {
	struct UUMGAtlantaRitualTab* DailyTab; // 0x338(0x08)
	struct UUMGAtlantaRitualTab* WeeklyTab; // 0x340(0x08)
	struct FText _atlantaRitualTitle; // 0x348(0x18)
	struct FText _endInLabel; // 0x360(0x18)
	struct FText _dailyButtonLabel; // 0x378(0x18)
	struct FText _weeklyButtonLabel; // 0x390(0x18)
	struct FText _dailyRemainingTime; // 0x3a8(0x18)
	struct FText _weeklyRemainingTime; // 0x3c0(0x18)
	char pad_3D8[0x50]; // 0x3d8(0x50)

	void SetNewRitualNumbers(int32_t newDailyRitualNumber, int32_t newWeeklyRitualNumber); // Function DeadByDaylight.UMGAtlantaRitualsScreen.SetNewRitualNumbers // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void BroadcastOnClaimRewardButtonPressed(int32_t ritualId); // Function DeadByDaylight.UMGAtlantaRitualsScreen.BroadcastOnClaimRewardButtonPressed // (Final|Native|Private) // @ game+0x55d2a10
	void BroadcastOnBackButtonPressed(); // Function DeadByDaylight.UMGAtlantaRitualsScreen.BroadcastOnBackButtonPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x55d29f0
};

// Class DeadByDaylight.UMGAtlantaRitualTab
// Size: 0x380 (Inherited: 0x338)
struct UUMGAtlantaRitualTab : UMobileBaseUserWidget {
	struct UVerticalBox* ContainerBox; // 0x338(0x08)
	struct TSoftClassPtr<UObject> _itemWidgetClass; // 0x340(0x30)
	char pad_370[0x10]; // 0x370(0x10)

	void BroadcastOnClaimRewardsButtonPressed(int32_t ritualId); // Function DeadByDaylight.UMGAtlantaRitualTab.BroadcastOnClaimRewardsButtonPressed // (Final|Native|Private) // @ game+0x4856680
};

// Class DeadByDaylight.UMGAtlantaSeasonEndPopup
// Size: 0x460 (Inherited: 0x420)
struct UUMGAtlantaSeasonEndPopup : UUMGGenericPopup {
	struct UUMGTallyRankBanner* OldSurvivorRankBanner; // 0x420(0x08)
	struct UUMGTallyRankBanner* NewSurvivorRankBanner; // 0x428(0x08)
	struct UUMGTallyRankBanner* OldKillerRankBanner; // 0x430(0x08)
	struct UUMGTallyRankBanner* NewKillerRankBanner; // 0x438(0x08)
	struct UHorizontalBox* NewRankHorizontalBox; // 0x440(0x08)
	struct UHorizontalBox* OldRankHorizontalBox; // 0x448(0x08)
	struct FTimerHandle _fadeOutTimerHandle; // 0x450(0x08)
	float _timerBeforeFadeOutAnimation; // 0x458(0x04)
	char pad_45C[0x4]; // 0x45c(0x04)

	void TriggerFadeOutAnimationTimer(); // Function DeadByDaylight.UMGAtlantaSeasonEndPopup.TriggerFadeOutAnimationTimer // (Final|Native|Private) // @ game+0x55d3850
	void PlayNewRankFadeInAnimation(); // Function DeadByDaylight.UMGAtlantaSeasonEndPopup.PlayNewRankFadeInAnimation // (Final|Native|Private) // @ game+0x55d3810
};

// Class DeadByDaylight.UMGAtlantaSettingScreen
// Size: 0x538 (Inherited: 0x338)
struct UUMGAtlantaSettingScreen : UMobileBaseUserWidget {
	char pad_338[0xb0]; // 0x338(0xb0)
	struct UWidgetSwitcher* SettingContextSwitcher; // 0x3e8(0x08)
	struct UHorizontalBox* SettingTabBox; // 0x3f0(0x08)
	struct UHorizontalBox* AlwaysDisplayButtonBox; // 0x3f8(0x08)
	struct TSoftClassPtr<UObject> _settingTabButtonClass; // 0x400(0x30)
	struct TSoftClassPtr<UObject> _settingAlwaysDisplayButtonClass; // 0x430(0x30)
	struct TSoftObjectPtr<UTexture2D> _buttonBoxDividerAsset; // 0x460(0x30)
	struct TMap<enum class EOverlayTabs, struct TSoftClassPtr<UObject>> _overlayContextWidgetMap; // 0x490(0x50)
	struct TMap<enum class EOverlayTabs, struct UUMGSettingContextWidget*> _contextWidgetMap; // 0x4e0(0x50)
	char pad_530[0x8]; // 0x530(0x08)

	void ShowCreditsOrConsentsPopup(struct FString Title, struct FString Content); // Function DeadByDaylight.UMGAtlantaSettingScreen.ShowCreditsOrConsentsPopup // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetRightTopTextInfo(struct FText& Title, struct FString Content, enum class ESlateVisibility textVisibility); // Function DeadByDaylight.UMGAtlantaSettingScreen.SetRightTopTextInfo // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void HandleSurvivorCameraSensitivityChanged(int32_t value); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleSurvivorCameraSensitivityChanged // (Final|Native|Protected) // @ game+0x55d36e0
	void HandleSettingTabClick(int32_t tabIndex); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleSettingTabClick // (Final|Native|Protected) // @ game+0x55d3650
	void HandleLeaveButtonClick(); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleLeaveButtonClick // (Final|Native|Protected|BlueprintCallable) // @ game+0x482a0a0
	void HandleLanguageButtonClick(int32_t index); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleLanguageButtonClick // (Final|Native|Protected) // @ game+0x55d3360
	void HandleKillerCameraSensitivityChanged(int32_t value); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleKillerCameraSensitivityChanged // (Final|Native|Protected) // @ game+0x55d32d0
	void HandleInvertYToggleClick(bool toggleValue); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleInvertYToggleClick // (Final|Native|Protected) // @ game+0x55d3240
	void HandleInteractionButtonToggleClick(int32_t index); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleInteractionButtonToggleClick // (Final|Native|Protected) // @ game+0x55d31b0
	void HandleHandSideToggleClick(int32_t index); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleHandSideToggleClick // (Final|Native|Protected) // @ game+0x55d3120
	void HandleContextButtonClickEvent(int32_t index); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleContextButtonClickEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55d2ea0
	void HandleAlwaysDisplayButtonClick(int32_t tabIndex); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleAlwaysDisplayButtonClick // (Final|Native|Protected) // @ game+0x55d2d90
	void HandleAimAssistToggleClick(bool toggleValue); // Function DeadByDaylight.UMGAtlantaSettingScreen.HandleAimAssistToggleClick // (Final|Native|Protected) // @ game+0x55d2d00
};

// Class DeadByDaylight.UMGAtlantaStoreScreen
// Size: 0x370 (Inherited: 0x338)
struct UUMGAtlantaStoreScreen : UMobileBaseUserWidget {
	char pad_338[0x20]; // 0x338(0x20)
	struct UScaleBox* AuricCellsWidget; // 0x358(0x08)
	struct UUniformGridPanel* AuricCellsGridPanel; // 0x360(0x08)
	char pad_368[0x8]; // 0x368(0x08)

	void SetBank(enum class ECurrencyType CurrencyType, int32_t Bank); // Function DeadByDaylight.UMGAtlantaStoreScreen.SetBank // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void HandleOnStoreLeft(); // Function DeadByDaylight.UMGAtlantaStoreScreen.HandleOnStoreLeft // (Final|Native|Public|BlueprintCallable) // @ game+0x482a0a0
	void HandleOnClickedBuyAuricCell(int32_t cellIndex); // Function DeadByDaylight.UMGAtlantaStoreScreen.HandleOnClickedBuyAuricCell // (Final|Native|Public|BlueprintCallable) // @ game+0x55d86c0
};

// Class DeadByDaylight.UMGAtlantaTutorialScreen
// Size: 0x338 (Inherited: 0x338)
struct UUMGAtlantaTutorialScreen : UMobileBaseUserWidget {
};

// Class DeadByDaylight.UMGBaseStorefrontWidget
// Size: 0x338 (Inherited: 0x338)
struct UUMGBaseStorefrontWidget : UMobileBaseUserWidget {
};

// Class DeadByDaylight.UMGBaseCurrencyStorefrontWidget
// Size: 0x348 (Inherited: 0x338)
struct UUMGBaseCurrencyStorefrontWidget : UUMGBaseStorefrontWidget {
	char pad_338[0x10]; // 0x338(0x10)

	void BroadcastOnAuricCellButtonClicked(int32_t cellIndex); // Function DeadByDaylight.UMGBaseCurrencyStorefrontWidget.BroadcastOnAuricCellButtonClicked // (Final|Native|Protected) // @ game+0x55d8590
};

// Class DeadByDaylight.UMGAtlCurrencyStorefrontWidget
// Size: 0x418 (Inherited: 0x348)
struct UUMGAtlCurrencyStorefrontWidget : UUMGBaseCurrencyStorefrontWidget {
	struct UCanvasPanel* AuricCellsCanvasPanel; // 0x348(0x08)
	struct UUniformGridPanel* AuricCellsGridPanel; // 0x350(0x08)
	struct UHorizontalBox* BottomPurchaseBox; // 0x358(0x08)
	struct URichTextBlock* BottomRightPurchaseRichText; // 0x360(0x08)
	struct UOverlay* BottomTimer; // 0x368(0x08)
	struct UImage* AuricsBgR; // 0x370(0x08)
	struct UImage* AuricsBgL; // 0x378(0x08)
	struct UHorizontalBox* EventItemsPackContainerBox; // 0x380(0x08)
	struct FMargin PaddingEventItemsPackButton; // 0x388(0x10)
	struct TSoftClassPtr<UObject> EventItemsPackWidgetClass; // 0x398(0x30)
	char pad_3C8[0x18]; // 0x3c8(0x18)
	struct TArray<struct UUMGStoreAuricCellButton*> _auricCellButtons; // 0x3e0(0x10)
	char pad_3F0[0x28]; // 0x3f0(0x28)

	void UpdateFirstPurchaseForAllAuricCellsEndInUI(struct FString endInText); // Function DeadByDaylight.UMGAtlCurrencyStorefrontWidget.UpdateFirstPurchaseForAllAuricCellsEndInUI // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGAtlEndDateTimerWidget
// Size: 0x378 (Inherited: 0x338)
struct UUMGAtlEndDateTimerWidget : UMobileBaseUserWidget {
	struct UTextBlock* TextEndIn; // 0x338(0x08)
	char pad_340[0x38]; // 0x340(0x38)
};

// Class DeadByDaylight.UMGAtlEventItemWidget
// Size: 0x398 (Inherited: 0x338)
struct UUMGAtlEventItemWidget : UMobileBaseUserWidget {
	struct UImage* SquareImageBackground; // 0x338(0x08)
	struct UImage* SquareRarityBackground; // 0x340(0x08)
	struct UImage* SquareIcon; // 0x348(0x08)
	struct UImage* PortraitImageBackground; // 0x350(0x08)
	struct UImage* PortraitRarityBackground; // 0x358(0x08)
	struct UImage* PortraitIcon; // 0x360(0x08)
	struct UTextBlock* NameText; // 0x368(0x08)
	struct UTextBlock* QuantityText; // 0x370(0x08)
	struct UCanvasPanel* PortraitCanvas; // 0x378(0x08)
	struct UCanvasPanel* SquareCanvas; // 0x380(0x08)
	struct TArray<struct FEventItemsContentTypeUIData> ContentTypeUIData; // 0x388(0x10)
};

// Class DeadByDaylight.UMGBaseLandingPageStorefrontWidget
// Size: 0x428 (Inherited: 0x338)
struct UUMGBaseLandingPageStorefrontWidget : UUMGBaseStorefrontWidget {
	struct UHorizontalBox* BigButtonsSlot; // 0x338(0x08)
	struct UVerticalBox* SmallButtonsSlot1; // 0x340(0x08)
	struct UVerticalBox* SmallButtonsSlot2; // 0x348(0x08)
	struct TSoftClassPtr<UObject> SmallButtonClass; // 0x350(0x30)
	struct TSoftClassPtr<UObject> MediumButtonClass; // 0x380(0x30)
	struct TSoftClassPtr<UObject> BigButtonClass; // 0x3b0(0x30)
	struct FLinearColor DisabledButtonColor; // 0x3e0(0x10)
	struct FText DisabledButtonText; // 0x3f0(0x18)
	char pad_408[0x10]; // 0x408(0x10)
	struct TArray<struct UUMGLandingPageButtonWidget*> _landingPageTabs; // 0x418(0x10)

	void HandleTabSelected(enum class EStorefrontState& tabId); // Function DeadByDaylight.UMGBaseLandingPageStorefrontWidget.HandleTabSelected // (Final|Native|Private|HasOutParms) // @ game+0x55d87f0
};

// Class DeadByDaylight.UMGAtlLandingPageStorefrontWidget
// Size: 0x440 (Inherited: 0x428)
struct UUMGAtlLandingPageStorefrontWidget : UUMGBaseLandingPageStorefrontWidget {
	char pad_428[0x10]; // 0x428(0x10)
	struct UUMGBaseButtonWidget* AtlantaRedeemCodeBtn; // 0x438(0x08)

	void OnPromoCodeButtonPressed(); // Function DeadByDaylight.UMGAtlLandingPageStorefrontWidget.OnPromoCodeButtonPressed // (Final|Native|Protected) // @ game+0x55d8b00
};

// Class DeadByDaylight.UMGBasePassStorefrontWidget
// Size: 0x370 (Inherited: 0x338)
struct UUMGBasePassStorefrontWidget : UUMGBaseStorefrontWidget {
	struct UUMGSubscriptionsPageScrollWidget* SubscriptionsPageScroll; // 0x338(0x08)
	char pad_340[0x30]; // 0x340(0x30)

	void HandleSubscriptionInfoButtonClickedEvent(struct FString subscriptionDetails); // Function DeadByDaylight.UMGBasePassStorefrontWidget.HandleSubscriptionInfoButtonClickedEvent // (Final|Native|Private) // @ game+0x55d8750
	void HandleBuySubscriptionPackButtonClickedEvent(struct FName subscriptionPackID); // Function DeadByDaylight.UMGBasePassStorefrontWidget.HandleBuySubscriptionPackButtonClickedEvent // (Final|Native|Private) // @ game+0x55d8620
};

// Class DeadByDaylight.UMGAtlPassStorefrontWidget
// Size: 0x370 (Inherited: 0x370)
struct UUMGAtlPassStorefrontWidget : UUMGBasePassStorefrontWidget {
};

// Class DeadByDaylight.UMGBaseRootStorefrontWidget
// Size: 0x428 (Inherited: 0x338)
struct UUMGBaseRootStorefrontWidget : UMobileBaseUserWidget {
	char pad_338[0x48]; // 0x338(0x48)
	struct UNamedSlot* StorePageSlot; // 0x380(0x08)
	struct UUMGBaseButtonWidget* BackButton; // 0x388(0x08)
	struct UPanelWidget* CurrencyButtonsPanel; // 0x390(0x08)
	struct UTextBlock* StorefrontTitle; // 0x398(0x08)
	char pad_3A0[0x88]; // 0x3a0(0x88)

	void OnPurchaseAuricCellButtonPressed(); // Function DeadByDaylight.UMGBaseRootStorefrontWidget.OnPurchaseAuricCellButtonPressed // (Final|Native|Protected) // @ game+0x486b430
	void OnCurrencyButtonLongPressed(struct FTooltipPressedData& TooltipPressedData, enum class ECurrencyType CurrencyType); // Function DeadByDaylight.UMGBaseRootStorefrontWidget.OnCurrencyButtonLongPressed // (Final|Native|Protected|HasOutParms) // @ game+0x55d88c0
	void OnBackButtonPressed(); // Function DeadByDaylight.UMGBaseRootStorefrontWidget.OnBackButtonPressed // (Final|Native|Protected) // @ game+0x55d37f0
};

// Class DeadByDaylight.UMGAtlRootStorefrontWidget
// Size: 0x438 (Inherited: 0x428)
struct UUMGAtlRootStorefrontWidget : UUMGBaseRootStorefrontWidget {
	struct UUMGCurrencyWidget* ShardWalletWidget; // 0x428(0x08)
	struct UUMGAuricCellsButton* AuricWalletWidget; // 0x430(0x08)
};

// Class DeadByDaylight.UMGAtlStorePriceWidget
// Size: 0x340 (Inherited: 0x338)
struct UUMGAtlStorePriceWidget : UMobileBaseUserWidget {
	struct UTextBlock* PriceText; // 0x338(0x08)
};

// Class DeadByDaylight.UMGCurrencyWidget
// Size: 0x480 (Inherited: 0x468)
struct UUMGCurrencyWidget : UUMGBaseButtonWidget {
	enum class ECurrencyType CurrencyType; // 0x468(0x01)
	char pad_469[0x17]; // 0x469(0x17)

	void HandleTooltipLongPressEvent(); // Function DeadByDaylight.UMGCurrencyWidget.HandleTooltipLongPressEvent // (Final|Native|Protected) // @ game+0x55e2b00
};

// Class DeadByDaylight.UMGAuricCellsButton
// Size: 0x490 (Inherited: 0x480)
struct UUMGAuricCellsButton : UUMGCurrencyWidget {
	struct UImage* PlusImage; // 0x480(0x08)
	char pad_488[0x8]; // 0x488(0x08)
};

// Class DeadByDaylight.UMGAuthentificationProviderListWidget
// Size: 0x340 (Inherited: 0x338)
struct UUMGAuthentificationProviderListWidget : UMobileBaseUserWidget {
	struct UHorizontalBox* GuestButtonContainer; // 0x338(0x08)

	void HideGuestButton(); // Function DeadByDaylight.UMGAuthentificationProviderListWidget.HideGuestButton // (Final|Native|Public|BlueprintCallable) // @ game+0x55d8880
};

// Class DeadByDaylight.UMGBankAndPlayerInfoWidget
// Size: 0x3e0 (Inherited: 0x338)
struct UUMGBankAndPlayerInfoWidget : UMobileBaseUserWidget {
	struct UUMGBankWidget* BankWidget; // 0x338(0x08)
	struct UTextBlock* playerNameText; // 0x340(0x08)
	struct UUMGSelectedCharacterWidget* SelectedCharacterWidget; // 0x348(0x08)
	enum class ESlateVisibility RankWidgetVisibility; // 0x350(0x01)
	char pad_351[0x7]; // 0x351(0x07)
	struct UUMGLevelBannerWidget* LevelBanner; // 0x358(0x08)
	struct UUMGRankBanner* RankBanner; // 0x360(0x08)
	struct UUMGMainMenuMonthlyPassButton* MonthlyPassButton; // 0x368(0x08)
	char pad_370[0x60]; // 0x370(0x60)
	struct FMulticastInlineDelegate _onCancelPartyButtonClickedEvent; // 0x3d0(0x10)

	void SetPlayerLevelBP(int32_t Level, int32_t devotion, int32_t currentLevelXp, int32_t totalLevelXp, bool IsSlasher, bool playUpdateAnim); // Function DeadByDaylight.UMGBankAndPlayerInfoWidget.SetPlayerLevelBP // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void OnTooltipTriggeredByRankBanner(struct FTooltipPressedData& TooltipPressedData); // Function DeadByDaylight.UMGBankAndPlayerInfoWidget.OnTooltipTriggeredByRankBanner // (Final|Native|Private|HasOutParms) // @ game+0x55d8d50
	void OnTooltipTriggeredByLevelBannerWidget(struct FTooltipPressedData& TooltipPressedData); // Function DeadByDaylight.UMGBankAndPlayerInfoWidget.OnTooltipTriggeredByLevelBannerWidget // (Final|Native|Public|HasOutParms) // @ game+0x55d8c90
	void OnTooltipTriggeredByCurrency(struct FTooltipPressedData& TooltipPressedData, enum class ECurrencyType CurrencyType); // Function DeadByDaylight.UMGBankAndPlayerInfoWidget.OnTooltipTriggeredByCurrency // (Final|Native|Private|HasOutParms) // @ game+0x55d8b80
	void OnPurchaseAuricCellsButtonClicked(); // Function DeadByDaylight.UMGBankAndPlayerInfoWidget.OnPurchaseAuricCellsButtonClicked // (Final|Native|Public) // @ game+0x55d8b20
	void OnPrestigeButtonClicked(); // Function DeadByDaylight.UMGBankAndPlayerInfoWidget.OnPrestigeButtonClicked // (Final|Native|Public) // @ game+0x55d8ae0
	void OnMainMenuSubscriptionClicked(); // Function DeadByDaylight.UMGBankAndPlayerInfoWidget.OnMainMenuSubscriptionClicked // (Final|Native|Public) // @ game+0x4859620
	void OnCancelPartyButtonClicked(); // Function DeadByDaylight.UMGBankAndPlayerInfoWidget.OnCancelPartyButtonClicked // (Final|Native|Private) // @ game+0x55d88a0
};

// Class DeadByDaylight.UMGBankWidget
// Size: 0x370 (Inherited: 0x338)
struct UUMGBankWidget : UMobileBaseUserWidget {
	struct UUMGCurrencyWidget* BloodPointsCurrency; // 0x338(0x08)
	struct UUMGAuricCellsButton* CellsButton; // 0x340(0x08)
	struct UUMGCurrencyWidget* IridescentShardsCurrency; // 0x348(0x08)
	char pad_350[0x20]; // 0x350(0x20)

	void OnPurchaseAuricCellsClicked(); // Function DeadByDaylight.UMGBankWidget.OnPurchaseAuricCellsClicked // (Final|Native|Protected) // @ game+0x55d8b40
	void OnCurrencyTooltipRequested(struct FTooltipPressedData& TooltipPressedData, enum class ECurrencyType CurrencyType); // Function DeadByDaylight.UMGBankWidget.OnCurrencyTooltipRequested // (Final|Native|Protected|HasOutParms) // @ game+0x55d89d0
};

// Class DeadByDaylight.UMGBaseAlertWidget
// Size: 0x2c8 (Inherited: 0x298)
struct UUMGBaseAlertWidget : UUserWidget {
	char pad_298[0x30]; // 0x298(0x30)
};

// Class DeadByDaylight.UMGBaseCountdownWidget
// Size: 0x3a0 (Inherited: 0x338)
struct UUMGBaseCountdownWidget : UMobileBaseUserWidget {
	struct UTextBlock* TimerTextBlock; // 0x338(0x08)
	int32_t _timerThreshold; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct FSlateColor _timerColorBelowThreshold; // 0x348(0x28)
	struct FSlateColor _timerColorBeyondThreshold; // 0x370(0x28)
	char pad_398[0x8]; // 0x398(0x08)
};

// Class DeadByDaylight.UMGBaseCurrencyButtonWidget
// Size: 0x510 (Inherited: 0x468)
struct UUMGBaseCurrencyButtonWidget : UUMGBaseButtonWidget {
	struct UImage* FXImage; // 0x468(0x08)
	struct UImage* CurrencyColorImage; // 0x470(0x08)
	struct UImage* CurrencyIcon; // 0x478(0x08)
	struct UTextBlock* PriceText; // 0x480(0x08)
	struct FSlateColor AffordableColor; // 0x488(0x28)
	struct FSlateColor NotAffordableColor; // 0x4b0(0x28)
	struct FLinearColor DisabledOpacity; // 0x4d8(0x10)
	struct FLinearColor EnabledOpacity; // 0x4e8(0x10)
	char pad_4F8[0x18]; // 0x4f8(0x18)
};

// Class DeadByDaylight.UMGBaseSideMainMenuButton
// Size: 0x480 (Inherited: 0x468)
struct UUMGBaseSideMainMenuButton : UUMGBaseButtonWidget {
	struct UImage* NotificationBadge; // 0x468(0x08)
	float _baseTextOpacity; // 0x470(0x04)
	float _highlightTextOpacity; // 0x474(0x04)
	float _baseIconOpacity; // 0x478(0x04)
	float _highlightIconOpacity; // 0x47c(0x04)
};

// Class DeadByDaylight.UMGBaseToastWidget
// Size: 0x3a0 (Inherited: 0x338)
struct UUMGBaseToastWidget : UMobileBaseUserWidget {
	struct UImage* ToastIcon; // 0x338(0x08)
	struct UTextBlock* ToastText; // 0x340(0x08)
	struct UProgressBar* TimeToastProgression; // 0x348(0x08)
	char pad_350[0x50]; // 0x350(0x50)

	void TriggerToastInput(int32_t inputCode); // Function DeadByDaylight.UMGBaseToastWidget.TriggerToastInput // (Final|Native|Public|BlueprintCallable) // @ game+0x55d8e10
	void OnTimerFinished(); // Function DeadByDaylight.UMGBaseToastWidget.OnTimerFinished // (Final|Native|Private) // @ game+0x55d8b60
};

// Class DeadByDaylight.UMGBloodStoreArrayWidget
// Size: 0x3a8 (Inherited: 0x338)
struct UUMGBloodStoreArrayWidget : UMobileBaseUserWidget {
	char pad_338[0x10]; // 0x338(0x10)
	struct UUMGBloodStoreRowWidget* FirstBloodStoreRowWidget; // 0x348(0x08)
	struct UUMGBloodStoreRowWidget* SecondBloodStoreRowWidget; // 0x350(0x08)
	struct UUMGBloodStoreRowWidget* ThirdBloodStoreRowWidget; // 0x358(0x08)
	struct UUMGBloodStoreRowWidget* FourthBloodStoreRowWidget; // 0x360(0x08)
	struct UUMGBloodStoreRowWidget* FifthBloodStoreRowWidget; // 0x368(0x08)
	struct TArray<struct UUMGBloodStoreRowWidget*> _bloodStoreRowArray; // 0x370(0x10)
	char pad_380[0x28]; // 0x380(0x28)

	void BroadcastBloodNodeSelected(struct FString ID); // Function DeadByDaylight.UMGBloodStoreArrayWidget.BroadcastBloodNodeSelected // (Final|Native|Private) // @ game+0x55d8480
};

// Class DeadByDaylight.UMGBloodStoreItemPreviewWidget
// Size: 0x440 (Inherited: 0x338)
struct UUMGBloodStoreItemPreviewWidget : UMobileBaseUserWidget {
	char pad_338[0x30]; // 0x338(0x30)
	struct FText _itemName; // 0x368(0x18)
	struct FText _itemDescription; // 0x380(0x18)
	int32_t _itemPrice; // 0x398(0x04)
	char pad_39C[0x4]; // 0x39c(0x04)
	struct FText _refreshPrice; // 0x3a0(0x18)
	struct FText _nodeStatusText; // 0x3b8(0x18)
	struct FText _refreshTitle; // 0x3d0(0x18)
	struct FText _itemSelectionTitle; // 0x3e8(0x18)
	struct FText _itemSelectionText; // 0x400(0x18)
	struct FText _purchaseTitle; // 0x418(0x18)
	char pad_430[0x10]; // 0x430(0x10)

	void UnselectItem(); // Function DeadByDaylight.UMGBloodStoreItemPreviewWidget.UnselectItem // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void ShowRefreshButton(bool ShowRefreshButton, bool isRefreshFree); // Function DeadByDaylight.UMGBloodStoreItemPreviewWidget.ShowRefreshButton // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void ShowPurchaseButton(bool ShowPurchaseButton); // Function DeadByDaylight.UMGBloodStoreItemPreviewWidget.ShowPurchaseButton // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void DisplayItem(bool isItemPurchaseable, bool isItemAffordable); // Function DeadByDaylight.UMGBloodStoreItemPreviewWidget.DisplayItem // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void BroadcastUnselectPressed(); // Function DeadByDaylight.UMGBloodStoreItemPreviewWidget.BroadcastUnselectPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x481faf0
	void BroadcastRefreshPressed(); // Function DeadByDaylight.UMGBloodStoreItemPreviewWidget.BroadcastRefreshPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x481fb10
	void BroadcastPurchasePressed(); // Function DeadByDaylight.UMGBloodStoreItemPreviewWidget.BroadcastPurchasePressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x482a0a0
};

// Class DeadByDaylight.UMGBloodStoreItemWidget
// Size: 0x3b8 (Inherited: 0x338)
struct UUMGBloodStoreItemWidget : UMobileBaseUserWidget {
	char pad_338[0x10]; // 0x338(0x10)
	struct UImage* NodeImage; // 0x348(0x08)
	struct UImage* BackgroundImage; // 0x350(0x08)
	struct UImage* RarityBackground; // 0x358(0x08)
	struct UCanvasPanel* ItemPanel; // 0x360(0x08)
	struct UCanvasPanel* MysteryBoxPanel; // 0x368(0x08)
	struct UImage* MysteryBoxRarityBackground; // 0x370(0x08)
	struct UCanvasPanel* CollectedPanel; // 0x378(0x08)
	struct UCanvasPanel* ConsumedPanel; // 0x380(0x08)
	enum class EBloodwebNodeContentType _contentType; // 0x388(0x01)
	bool _isMysteryBox; // 0x389(0x01)
	char pad_38A[0x2]; // 0x38a(0x02)
	struct FVector2D _bigItemScale; // 0x38c(0x08)
	struct FVector2D _normalItemScale; // 0x394(0x08)
	float _consumedOpacity; // 0x39c(0x04)
	char pad_3A0[0x18]; // 0x3a0(0x18)

	void UnFocusNode(); // Function DeadByDaylight.UMGBloodStoreItemWidget.UnFocusNode // (Native|Event|Public|BlueprintEvent) // @ game+0x4830710
	void SetSelectedVisibilities(bool IsSelected); // Function DeadByDaylight.UMGBloodStoreItemWidget.SetSelectedVisibilities // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetBackgroundImages(); // Function DeadByDaylight.UMGBloodStoreItemWidget.SetBackgroundImages // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void PlayConsumedAnimation(bool skipIntro); // Function DeadByDaylight.UMGBloodStoreItemWidget.PlayConsumedAnimation // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void FocusNode(); // Function DeadByDaylight.UMGBloodStoreItemWidget.FocusNode // (Native|Event|Public|BlueprintEvent) // @ game+0x48306d0
	void ConsumeNode(); // Function DeadByDaylight.UMGBloodStoreItemWidget.ConsumeNode // (Native|Event|Public|BlueprintEvent) // @ game+0x48306f0
	void CollectNode(); // Function DeadByDaylight.UMGBloodStoreItemWidget.CollectNode // (Native|Event|Public|BlueprintEvent) // @ game+0x4830690
	void BroadcastBloodNodeSelected(); // Function DeadByDaylight.UMGBloodStoreItemWidget.BroadcastBloodNodeSelected // (Final|Native|Private|BlueprintCallable) // @ game+0x55d8570
};

// Class DeadByDaylight.UMGBloodStoreRowWidget
// Size: 0x3d0 (Inherited: 0x338)
struct UUMGBloodStoreRowWidget : UMobileBaseUserWidget {
	char pad_338[0x10]; // 0x338(0x10)
	struct UHorizontalBox* ItemContainer; // 0x348(0x08)
	struct UCanvasPanel* LockStatusPanel; // 0x350(0x08)
	struct UCanvasPanel* HardLockedStatusPanel; // 0x358(0x08)
	int32_t _purchasedItemsNbr; // 0x360(0x04)
	int32_t _requiredItemNbr; // 0x364(0x04)
	enum class EBloodStoreRowStyle _rowStyle; // 0x368(0x01)
	char pad_369[0x3]; // 0x369(0x03)
	struct FMargin _itemPadding; // 0x36c(0x10)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct TSoftClassPtr<UObject> _itemWidgetClass; // 0x380(0x30)
	struct UObject* _itemClass; // 0x3b0(0x08)
	char pad_3B8[0x18]; // 0x3b8(0x18)

	void UnlockRow(bool PlayAnim); // Function DeadByDaylight.UMGBloodStoreRowWidget.UnlockRow // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void LockRow(bool PlayAnim); // Function DeadByDaylight.UMGBloodStoreRowWidget.LockRow // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void BroadcastUnlockAnimationFinished(); // Function DeadByDaylight.UMGBloodStoreRowWidget.BroadcastUnlockAnimationFinished // (Final|Native|Protected|BlueprintCallable) // @ game+0x55dd610
	void BroadcastBloodNodeSelected(struct FString ID); // Function DeadByDaylight.UMGBloodStoreRowWidget.BroadcastBloodNodeSelected // (Final|Native|Private) // @ game+0x55d8480
};

// Class DeadByDaylight.UMGBloodStoreSubMenu
// Size: 0x368 (Inherited: 0x338)
struct UUMGBloodStoreSubMenu : UMobileBaseUserWidget {
	char pad_338[0x20]; // 0x338(0x20)
	struct UUMGBloodStoreTimer* SurvivorTimer; // 0x358(0x08)
	struct UUMGBloodStoreTimer* KillerTimer; // 0x360(0x08)

	void SetFaction(bool IsKiller); // Function DeadByDaylight.UMGBloodStoreSubMenu.SetFaction // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void BroadcastExpiredBloodWeb(); // Function DeadByDaylight.UMGBloodStoreSubMenu.BroadcastExpiredBloodWeb // (Final|Native|Protected) // @ game+0x481fb10
	void BroadcastCharacterRoleButtonClicked(); // Function DeadByDaylight.UMGBloodStoreSubMenu.BroadcastCharacterRoleButtonClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x482a0a0
};

// Class DeadByDaylight.UMGBloodStoreTimer
// Size: 0x3c0 (Inherited: 0x338)
struct UUMGBloodStoreTimer : UMobileBaseUserWidget {
	char pad_338[0x10]; // 0x338(0x10)
	struct FSlateColor _normalColor; // 0x348(0x28)
	struct FSlateColor _warningColor; // 0x370(0x28)
	struct UTextBlock* RemainingTimeTextBlock; // 0x398(0x08)
	struct UImage* RefreshImage; // 0x3a0(0x08)
	char pad_3A8[0x18]; // 0x3a8(0x18)
};

// Class DeadByDaylight.UMGBloodStoreWidget
// Size: 0x3f8 (Inherited: 0x338)
struct UUMGBloodStoreWidget : UMobileBaseUserWidget {
	struct FMulticastInlineDelegate OnBloodNodeSelected; // 0x338(0x10)
	struct FMulticastInlineDelegate OnBloodNodePurchase; // 0x348(0x10)
	struct FMulticastInlineDelegate OnBloodStoreRegenerate; // 0x358(0x10)
	struct FMulticastInlineDelegate OnCharacterRoleButtonClicked; // 0x368(0x10)
	struct UUMGBloodStoreArrayWidget* BloodStoreArrayWidget; // 0x378(0x08)
	struct UUMGBloodStoreItemPreviewWidget* ItemPreviewWidget; // 0x380(0x08)
	struct UUMGBloodStoreSubMenu* BloodStoreSubMenuWidget; // 0x388(0x08)
	struct FText _bloodStoreTitle; // 0x390(0x18)
	struct FText _killersTitle; // 0x3a8(0x18)
	struct FText _survivorsTitle; // 0x3c0(0x18)
	char pad_3D8[0x20]; // 0x3d8(0x20)

	void UnselectNode(); // Function DeadByDaylight.UMGBloodStoreWidget.UnselectNode // (Final|Native|Private) // @ game+0x55de4b0
	void SwitchRole(); // Function DeadByDaylight.UMGBloodStoreWidget.SwitchRole // (Final|Native|Private) // @ game+0x481fe00
	void SetSelectedNode(struct FString selectedId); // Function DeadByDaylight.UMGBloodStoreWidget.SetSelectedNode // (Final|Native|Private) // @ game+0x55de380
	void SetFaction(bool IsKiller); // Function DeadByDaylight.UMGBloodStoreWidget.SetFaction // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void RegenerateBloodStore(); // Function DeadByDaylight.UMGBloodStoreWidget.RegenerateBloodStore // (Final|Native|Private) // @ game+0x55de040
	void PurchaseSelectedNode(); // Function DeadByDaylight.UMGBloodStoreWidget.PurchaseSelectedNode // (Final|Native|Private) // @ game+0x55de020
};

// Class DeadByDaylight.UMGCharacterButton
// Size: 0x560 (Inherited: 0x338)
struct UUMGCharacterButton : UMobileBaseUserWidget {
	char pad_338[0x10]; // 0x338(0x10)
	struct UImage* PortraitIcon; // 0x348(0x08)
	struct UCanvasPanel* CharacterSelectedPanel; // 0x350(0x08)
	char pad_358[0x8]; // 0x358(0x08)
	struct UCanvasPanel* LevelPanel; // 0x360(0x08)
	struct UTextBlock* CharacterLevelText; // 0x368(0x08)
	struct UTextBlock* OwnedCustomizationText; // 0x370(0x08)
	struct UTextBlock* TotalCustomizationText; // 0x378(0x08)
	struct UCanvasPanel* PricePanel; // 0x380(0x08)
	struct UUMGCharacterPrice* CellPrice; // 0x388(0x08)
	struct UUMGCharacterPrice* ShardPrice; // 0x390(0x08)
	struct FCharacterSlotData CharacterSlotData; // 0x398(0x1c8)

	void SetIsSelected(bool IsSelected); // Function DeadByDaylight.UMGCharacterButton.SetIsSelected // (Final|Native|Public|BlueprintCallable) // @ game+0x55de2f0
	void SetCharacterData(struct FCharacterSlotData& CharacterData); // Function DeadByDaylight.UMGCharacterButton.SetCharacterData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x55de060
	void BroadcastClickedEvent(int32_t characterIndex); // Function DeadByDaylight.UMGCharacterButton.BroadcastClickedEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x55d8590
};

// Class DeadByDaylight.UMGCharacterFreeTicketButton
// Size: 0x388 (Inherited: 0x338)
struct UUMGCharacterFreeTicketButton : UMobileBaseUserWidget {
	struct UWidgetSwitcher* ButtonSwitcher; // 0x338(0x08)
	struct UTextBlock* FreeTicketLeftSecondsText; // 0x340(0x08)
	struct UImage* FreeTicketLeftSecondsBG; // 0x348(0x08)
	char pad_350[0x38]; // 0x350(0x38)
};

// Class DeadByDaylight.UMGCharacterFreeTicketItemButton
// Size: 0x358 (Inherited: 0x338)
struct UUMGCharacterFreeTicketItemButton : UMobileBaseUserWidget {
	char pad_338[0x20]; // 0x338(0x20)

	void UpdateWidget(struct FString bgPath, bool IsSlasher, int32_t durationInHours, int32_t itemCount, struct FSlateColor& IconColor); // Function DeadByDaylight.UMGCharacterFreeTicketItemButton.UpdateWidget // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void BroadcastClickEvent(); // Function DeadByDaylight.UMGCharacterFreeTicketItemButton.BroadcastClickEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x55dd5f0
};

// Class DeadByDaylight.UMGCharacterFreeTicketWidget
// Size: 0x398 (Inherited: 0x338)
struct UUMGCharacterFreeTicketWidget : UMobileBaseUserWidget {
	struct FMulticastInlineDelegate OnUseFreeTicketEvent; // 0x338(0x10)
	struct UWidgetSwitcher* PanelSwitcher; // 0x348(0x08)
	struct UVerticalBox* FreeTicketItemButtonBox; // 0x350(0x08)
	struct TSoftClassPtr<UObject> _buttonClass; // 0x358(0x30)
	char pad_388[0x10]; // 0x388(0x10)

	void UpdateBGColor(bool IsSlasher); // Function DeadByDaylight.UMGCharacterFreeTicketWidget.UpdateBGColor // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void HandleButtonClickEvent(struct FString ticketId, struct FString characterName); // Function DeadByDaylight.UMGCharacterFreeTicketWidget.HandleButtonClickEvent // (Final|Native|Public) // @ game+0x55dd670
};

// Class DeadByDaylight.UMGCharacterInfoScreen
// Size: 0x3d8 (Inherited: 0x338)
struct UUMGCharacterInfoScreen : UMobileBaseUserWidget {
	struct UCanvasPanel* ContentPanel; // 0x338(0x08)
	struct TSoftClassPtr<UObject> SurvivorInfoWidgetClass; // 0x340(0x30)
	struct TSoftClassPtr<UObject> KillerInfoWidgetClass; // 0x370(0x30)
	struct UUMGPopupButton* ProgressionButton; // 0x3a0(0x08)
	struct FMulticastInlineDelegate _onTeachableTooltipTriggeredLongPressEvent; // 0x3a8(0x10)
	struct FMulticastInlineDelegate _onPowerItemTooltipTriggeredLongPressEvent; // 0x3b8(0x10)
	struct FMulticastInlineDelegate _onProgressionButtonClickEvent; // 0x3c8(0x10)

	void HandleTeachablePerkTooltipLongPressedEvent(struct FTeachableData& TeachableData, struct FVector2D& position); // Function DeadByDaylight.UMGCharacterInfoScreen.HandleTeachablePerkTooltipLongPressedEvent // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x55ddb20
	void HandleProgressionButtonClickEvent(); // Function DeadByDaylight.UMGCharacterInfoScreen.HandleProgressionButtonClickEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55ddb00
	void HandlePowerItemTooltipLongPressedEvent(struct FInventorySlotData& SlotData, struct FVector2D position); // Function DeadByDaylight.UMGCharacterInfoScreen.HandlePowerItemTooltipLongPressedEvent // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x55dd800
};

// Class DeadByDaylight.UMGCharacterInfoWidget
// Size: 0x468 (Inherited: 0x338)
struct UUMGCharacterInfoWidget : UMobileBaseUserWidget {
	struct UScrollBox* CharacterInfoScrollBox; // 0x338(0x08)
	struct UUMGCharacterScrollingInfoWidget* CharacterScrollingInfoWidget; // 0x340(0x08)
	struct UCanvasPanel* CharacterDLCPanel; // 0x348(0x08)
	struct UImage* CharacterBackgroundImage; // 0x350(0x08)
	struct UTextBlock* characterName; // 0x358(0x08)
	struct FText _characterDifficultyText; // 0x360(0x18)
	struct FString _characterDLCText; // 0x378(0x10)
	bool _isKiller; // 0x388(0x01)
	char pad_389[0x7]; // 0x389(0x07)
	struct FSlateColor _easyColor; // 0x390(0x28)
	struct FSlateColor _intermediaryColor; // 0x3b8(0x28)
	struct FSlateColor _hardColor; // 0x3e0(0x28)
	struct FSlateColor _currentColor; // 0x408(0x28)
	struct FText _characterDLCTitle; // 0x430(0x18)
	struct FMulticastInlineDelegate _onTeachableTooltipTriggeredLongPressEvent; // 0x448(0x10)
	struct FMulticastInlineDelegate _onPowerItemTooltipTriggeredLongPressEvent; // 0x458(0x10)

	void HandleTooltipLongPressedEvent(struct FTeachableData& TeachableData, struct FVector2D& position); // Function DeadByDaylight.UMGCharacterInfoWidget.HandleTooltipLongPressedEvent // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x55ddc40
	void HandlePowerItemTooltipLongPressedEvent(struct FInventorySlotData& SlotData, struct FVector2D position); // Function DeadByDaylight.UMGCharacterInfoWidget.HandlePowerItemTooltipLongPressedEvent // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x55dd980
};

// Class DeadByDaylight.UMGCharacterPageScrollWidget
// Size: 0x518 (Inherited: 0x470)
struct UUMGCharacterPageScrollWidget : UUMGGridPageScrollWidget {
	char pad_470[0x10]; // 0x470(0x10)
	struct TSoftClassPtr<UObject> _characterButtonWidgetClass; // 0x480(0x30)
	struct TArray<struct FCharacterSlotData> _charactersData; // 0x4b0(0x10)
	bool _isKiller; // 0x4c0(0x01)
	char pad_4C1[0x7]; // 0x4c1(0x07)
	struct FText _charactersTitleText; // 0x4c8(0x18)
	struct FText _killersTitleText; // 0x4e0(0x18)
	struct FText _survivorsTitleText; // 0x4f8(0x18)
	char pad_510[0x8]; // 0x510(0x08)

	void HandleCharacterClicked(int32_t characterIndex); // Function DeadByDaylight.UMGCharacterPageScrollWidget.HandleCharacterClicked // (Final|Native|Protected) // @ game+0x55dd770
};

// Class DeadByDaylight.UMGCharacterPrestigeIcon
// Size: 0x340 (Inherited: 0x338)
struct UUMGCharacterPrestigeIcon : UMobileBaseUserWidget {
	struct UImage* PrestigeImage; // 0x338(0x08)
};

// Class DeadByDaylight.UMGCharacterPrestigeButton
// Size: 0x368 (Inherited: 0x340)
struct UUMGCharacterPrestigeButton : UUMGCharacterPrestigeIcon {
	struct UButton* PrestigeButton; // 0x340(0x08)
	struct UCanvasPanel* PrestigeAnimationCanvas; // 0x348(0x08)
	char pad_350[0x18]; // 0x350(0x18)

	void SetCharacterPrestigeData(bool CanPrestige, int32_t PrestigeLevel, enum class EPlayerRole Role); // Function DeadByDaylight.UMGCharacterPrestigeButton.SetCharacterPrestigeData // (Final|Native|Public|BlueprintCallable) // @ game+0x55de110
	void OnPrestigeButtonClicked(); // Function DeadByDaylight.UMGCharacterPrestigeButton.OnPrestigeButtonClicked // (Final|Native|Protected) // @ game+0x55de000
};

// Class DeadByDaylight.UMGCharacterPrice
// Size: 0x348 (Inherited: 0x338)
struct UUMGCharacterPrice : UMobileBaseUserWidget {
	struct UTextBlock* PriceTextBlock; // 0x338(0x08)
	struct FColor AffordableColor; // 0x340(0x04)
	struct FColor UnaffordableColor; // 0x344(0x04)

	void SetCurrencyData(struct FPurchaseCurrencyData& CurrencyData); // Function DeadByDaylight.UMGCharacterPrice.SetCurrencyData // (Final|Native|Public|HasOutParms) // @ game+0x55de220
};

// Class DeadByDaylight.UMGCharacterRotationWidget
// Size: 0x2d0 (Inherited: 0x298)
struct UUMGCharacterRotationWidget : UUserWidget {
	char pad_298[0x38]; // 0x298(0x38)
};

// Class DeadByDaylight.UMGCharacterScrollingInfoWidget
// Size: 0x498 (Inherited: 0x338)
struct UUMGCharacterScrollingInfoWidget : UMobileBaseUserWidget {
	struct UUMGTeachablePerkButton* FirstTeachablePerk; // 0x338(0x08)
	struct UUMGTeachablePerkButton* SecondTeachablePerk; // 0x340(0x08)
	struct UUMGTeachablePerkButton* ThirdTeachablePerk; // 0x348(0x08)
	struct UCanvasPanel* KillerInfoPanel; // 0x350(0x08)
	struct UUMGInventoryItemButton* KillerPower; // 0x358(0x08)
	struct UUMGHtmlRichText* CharacterBackstoryBox; // 0x360(0x08)
	struct FText _killerPowerName; // 0x368(0x18)
	struct FText _killerSpeedText; // 0x380(0x18)
	struct FText _killerTerrorRadiusText; // 0x398(0x18)
	struct FText _killerHeightText; // 0x3b0(0x18)
	struct FText _perksTitle; // 0x3c8(0x18)
	struct FText _teachablesTitle; // 0x3e0(0x18)
	struct FText _powerTitle; // 0x3f8(0x18)
	struct FText _attributesTitle; // 0x410(0x18)
	struct UTextBlock* FirstTeachablePerkText; // 0x428(0x08)
	struct UTextBlock* SecondTeachablePerkText; // 0x430(0x08)
	struct UTextBlock* ThirdTeachablePerkText; // 0x438(0x08)
	struct FText _backStoryTitle; // 0x440(0x18)
	struct TArray<struct UUMGTeachablePerkButton*> _teachablePerkArray; // 0x458(0x10)
	struct TArray<struct UTextBlock*> _teachablePerkNameArray; // 0x468(0x10)
	struct FMulticastInlineDelegate _onTeachableTooltipTriggeredEvent; // 0x478(0x10)
	struct FMulticastInlineDelegate _onPowerButtonTooltipLongPressEvent; // 0x488(0x10)

	void HandleTooltipLongPressedKillerPowerEvent(struct FInventorySlotData& ItemData, struct FVector2D position); // Function DeadByDaylight.UMGCharacterScrollingInfoWidget.HandleTooltipLongPressedKillerPowerEvent // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x55dde80
	void HandleTooltipLongPressedEvent(struct FTeachableData& TeachableData, struct FVector2D& position); // Function DeadByDaylight.UMGCharacterScrollingInfoWidget.HandleTooltipLongPressedEvent // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x55ddd60
};

// Class DeadByDaylight.UMGCharacterSelectionWidget
// Size: 0x390 (Inherited: 0x338)
struct UUMGCharacterSelectionWidget : UMobileBaseUserWidget {
	struct FMulticastInlineDelegate OnCharacterSelected; // 0x338(0x10)
	struct FMulticastInlineDelegate OnCharacterRoleButtonClicked; // 0x348(0x10)
	struct FMulticastInlineDelegate OnCharacterInfoButtonClicked; // 0x358(0x10)
	struct UUMGCharacterPageScrollWidget* CharacterPageScrollWidget; // 0x368(0x08)
	struct UUMGCharacterSelectSubmenu* CharacterSelectSubMenu; // 0x370(0x08)
	struct UUMGCharacterInfoWidget* CharacterInfoWidget; // 0x378(0x08)
	struct UWidgetSwitcher* CharacterSwitcher; // 0x380(0x08)
	bool _isKiller; // 0x388(0x01)
	char pad_389[0x7]; // 0x389(0x07)

	void SwitchPanel(); // Function DeadByDaylight.UMGCharacterSelectionWidget.SwitchPanel // (Final|Native|Protected) // @ game+0x55de490
	void BroadcastSelectedCharacter(int32_t characterIndex); // Function DeadByDaylight.UMGCharacterSelectionWidget.BroadcastSelectedCharacter // (Final|Native|Protected) // @ game+0x55d8590
	void BroadcastRoleButtonClicked(); // Function DeadByDaylight.UMGCharacterSelectionWidget.BroadcastRoleButtonClicked // (Final|Native|Protected) // @ game+0x481fb10
};

// Class DeadByDaylight.UMGCharacterSelectSubmenu
// Size: 0x358 (Inherited: 0x338)
struct UUMGCharacterSelectSubmenu : UMobileBaseUserWidget {
	char pad_338[0x20]; // 0x338(0x20)

	void SetInInfoPanelMode(bool isInInfoPanel); // Function DeadByDaylight.UMGCharacterSelectSubmenu.SetInInfoPanelMode // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetCurrentRole(bool IsKiller); // Function DeadByDaylight.UMGCharacterSelectSubmenu.SetCurrentRole // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void BroadcastRoleButtonClicked(); // Function DeadByDaylight.UMGCharacterSelectSubmenu.BroadcastRoleButtonClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x482a0a0
	void BroadcastInfoButtonClicked(); // Function DeadByDaylight.UMGCharacterSelectSubmenu.BroadcastInfoButtonClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x481fb10
};

// Class DeadByDaylight.UMGCharacterSelectSubmenuButton
// Size: 0x470 (Inherited: 0x468)
struct UUMGCharacterSelectSubmenuButton : UUMGBaseButtonWidget {
	struct UCanvasPanel* NotificationPanel; // 0x468(0x08)
};

// Class DeadByDaylight.UMGCharacterSlideShowWidget
// Size: 0x3a8 (Inherited: 0x338)
struct UUMGCharacterSlideShowWidget : UMobileBaseUserWidget {
	struct TMap<struct FName, struct TSoftObjectPtr<UTexture2D>> _perkCategoriesIcons; // 0x338(0x50)
	float SecondsBeforeNextSlide; // 0x388(0x04)
	char pad_38C[0x1c]; // 0x38c(0x1c)

	void WaitAndFadeOut(); // Function DeadByDaylight.UMGCharacterSlideShowWidget.WaitAndFadeOut // (Final|Native|Private) // @ game+0x55de4d0
	void SwitchCharacterSlide(); // Function DeadByDaylight.UMGCharacterSlideShowWidget.SwitchCharacterSlide // (Final|Native|Private) // @ game+0x55de470
	void FadeOut(); // Function DeadByDaylight.UMGCharacterSlideShowWidget.FadeOut // (Final|Native|Private) // @ game+0x55dd650
	void FadeIn(); // Function DeadByDaylight.UMGCharacterSlideShowWidget.FadeIn // (Final|Native|Private) // @ game+0x55dd630
	void DisplayCharacterSlide(struct FCharacterSlideData& characterSlide); // Function DeadByDaylight.UMGCharacterSlideShowWidget.DisplayCharacterSlide // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGChargeableInteractionWidget
// Size: 0x360 (Inherited: 0x338)
struct UUMGChargeableInteractionWidget : UMobileBaseUserWidget {
	struct UImage* ItemIcon; // 0x338(0x08)
	enum class ESlateVisibility InteractionIconVisibility; // 0x340(0x01)
	enum class ESlateVisibility ItemChargeVisibility; // 0x341(0x01)
	enum class ESlateVisibility InteractionHudVisibility; // 0x342(0x01)
	char pad_343[0x1d]; // 0x343(0x1d)

	void SetSecondaryMessage(struct FString secondMessage); // Function DeadByDaylight.UMGChargeableInteractionWidget.SetSecondaryMessage // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetProgressbarValue(float value); // Function DeadByDaylight.UMGChargeableInteractionWidget.SetProgressbarValue // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetProgressBarColor(enum class EBarColor BarColor); // Function DeadByDaylight.UMGChargeableInteractionWidget.SetProgressBarColor // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetProficiencyData(int32_t index, struct FStatusEffectSlotData& proficiencyData); // Function DeadByDaylight.UMGChargeableInteractionWidget.SetProficiencyData // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void SetOpacity(float Opacity); // Function DeadByDaylight.UMGChargeableInteractionWidget.SetOpacity // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetMessage(struct FString Message); // Function DeadByDaylight.UMGChargeableInteractionWidget.SetMessage // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetItemChargeValue(float value); // Function DeadByDaylight.UMGChargeableInteractionWidget.SetItemChargeValue // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetItemChargeColor(enum class EBarColor BarColor); // Function DeadByDaylight.UMGChargeableInteractionWidget.SetItemChargeColor // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void ClearProficienciesData(); // Function DeadByDaylight.UMGChargeableInteractionWidget.ClearProficienciesData // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGCloseTooltipWidget
// Size: 0x350 (Inherited: 0x338)
struct UUMGCloseTooltipWidget : UMobileBaseUserWidget {
	struct UButton* FullScreenButton; // 0x338(0x08)
	char pad_340[0x10]; // 0x340(0x10)

	void HandleCloseTooltipButton(); // Function DeadByDaylight.UMGCloseTooltipWidget.HandleCloseTooltipButton // (Final|Native|Private) // @ game+0x55e2a80
};

// Class DeadByDaylight.UMGCommandDebugButton
// Size: 0x358 (Inherited: 0x338)
struct UUMGCommandDebugButton : UMobileBaseUserWidget {
	struct UTextBlock* CommandLabel; // 0x338(0x08)
	struct UButton* CommandButton; // 0x340(0x08)
	struct FString CommandName; // 0x348(0x10)

	void TriggerCommand(); // Function DeadByDaylight.UMGCommandDebugButton.TriggerCommand // (Final|Native|Private) // @ game+0x4032ad0
};

// Class DeadByDaylight.UMGControlTypeSelectionWidget
// Size: 0x378 (Inherited: 0x338)
struct UUMGControlTypeSelectionWidget : UMobileBaseUserWidget {
	struct UUMGControlTypeWidget* SnapOnJoystick; // 0x338(0x08)
	struct UUMGControlTypeWidget* CameraFullScreen; // 0x340(0x08)
	struct UTextBlock* titleText; // 0x348(0x08)
	char pad_350[0x28]; // 0x350(0x28)

	void UpdateControlType(enum class EAtlantaControlTypeSetting ControlType); // Function DeadByDaylight.UMGControlTypeSelectionWidget.UpdateControlType // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGControlTypeWidget
// Size: 0x378 (Inherited: 0x338)
struct UUMGControlTypeWidget : UMobileBaseUserWidget {
	struct UUMGBaseButtonWidget* Button; // 0x338(0x08)
	struct UTextBlock* MoveTextHalfScreenCanvas; // 0x340(0x08)
	struct UTextBlock* AimTextHalfScreenCanvas; // 0x348(0x08)
	struct UTextBlock* MoveTextFullScreenCanvas; // 0x350(0x08)
	struct UTextBlock* AimTextFullScreenCanvas; // 0x358(0x08)
	char pad_360[0x18]; // 0x360(0x18)

	void SetOptionChecked(bool IsChecked); // Function DeadByDaylight.UMGControlTypeWidget.SetOptionChecked // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	bool IsChecked(); // Function DeadByDaylight.UMGControlTypeWidget.IsChecked // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void InitializeDefaultLayout(enum class EAtlantaControlTypeSetting ControlType); // Function DeadByDaylight.UMGControlTypeWidget.InitializeDefaultLayout // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void HandleButtonClicked(); // Function DeadByDaylight.UMGControlTypeWidget.HandleButtonClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e2a60
};

// Class DeadByDaylight.UMGCustomizationCategoriesBar
// Size: 0x348 (Inherited: 0x338)
struct UUMGCustomizationCategoriesBar : UMobileBaseUserWidget {
	char pad_338[0x10]; // 0x338(0x10)

	void SetSelectedCategory(enum class ECustomizationCategory category); // Function DeadByDaylight.UMGCustomizationCategoriesBar.SetSelectedCategory // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetRole(bool IsKiller); // Function DeadByDaylight.UMGCustomizationCategoriesBar.SetRole // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void BroadcastCustomizationCategoryButtonPressed(enum class ECustomizationCategory categoryIndex); // Function DeadByDaylight.UMGCustomizationCategoriesBar.BroadcastCustomizationCategoryButtonPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e27a0
};

// Class DeadByDaylight.UMGCustomizationInfoWidget
// Size: 0x4b8 (Inherited: 0x338)
struct UUMGCustomizationInfoWidget : UMobileBaseUserWidget {
	struct UImage* Icon; // 0x338(0x08)
	struct UImage* Background; // 0x340(0x08)
	struct URichTextBlock* InformationText; // 0x348(0x08)
	struct FSlateColor BackgroundColor; // 0x350(0x28)
	struct FSlateColor TextColor; // 0x378(0x28)
	struct FSlateColor IconColor; // 0x3a0(0x28)
	struct TSoftObjectPtr<UTexture2D> DefaultIcon; // 0x3c8(0x30)
	struct TSoftObjectPtr<UTexture2D> KillerIcon; // 0x3f8(0x30)
	struct TSoftObjectPtr<UTexture2D> SurvivorIcon; // 0x428(0x30)
	struct TSoftObjectPtr<UTexture2D> BreakableIcon; // 0x458(0x30)
	struct TSoftObjectPtr<UTexture2D> UnbreakableIcon; // 0x488(0x30)
};

// Class DeadByDaylight.UMGCustomizationItemPriceWidget
// Size: 0x438 (Inherited: 0x338)
struct UUMGCustomizationItemPriceWidget : UMobileBaseUserWidget {
	struct UTextBlock* CurrencyValue; // 0x338(0x08)
	struct UTextBlock* DiscountPercentageContainer; // 0x340(0x08)
	struct UTextBlock* DiscountPercentage; // 0x348(0x08)
	struct UImage* CurrencyIcon; // 0x350(0x08)
	struct TMap<enum class ECurrencyType, struct TSoftObjectPtr<UTexture2D>> CurrencyTextures; // 0x358(0x50)
	struct FSlateColor AffordableCurrencyTextColor; // 0x3a8(0x28)
	struct FSlateColor AffordableSpecialCurrencyTextColor; // 0x3d0(0x28)
	struct FSlateColor NonAffordableCurrencyTextColor; // 0x3f8(0x28)
	struct FString _itemId; // 0x420(0x10)
	enum class ECurrencyType _currencyType; // 0x430(0x01)
	bool _hasDiscountPercentage; // 0x431(0x01)
	char pad_432[0x6]; // 0x432(0x06)
};

// Class DeadByDaylight.UMGCustomizationItemBuyButton
// Size: 0x4c0 (Inherited: 0x438)
struct UUMGCustomizationItemBuyButton : UUMGCustomizationItemPriceWidget {
	char pad_438[0x10]; // 0x438(0x10)
	struct UImage* CurrencyColorStripe; // 0x448(0x08)
	struct TMap<enum class ECurrencyType, struct FColor> _currencyStripeColors; // 0x450(0x50)
	struct FLinearColor _disabledOpacity; // 0x4a0(0x10)
	struct FLinearColor _enabledOpacity; // 0x4b0(0x10)

	void BroadcastUnlockWithCurrency(); // Function DeadByDaylight.UMGCustomizationItemBuyButton.BroadcastUnlockWithCurrency // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e28b0
};

// Class DeadByDaylight.UMGCustomizationItemWidget
// Size: 0x3d8 (Inherited: 0x338)
struct UUMGCustomizationItemWidget : UMobileBaseUserWidget {
	char pad_338[0x10]; // 0x338(0x10)
	struct UImage* RarityBackground; // 0x348(0x08)
	struct UImage* PaintOverlay; // 0x350(0x08)
	struct UImage* Icon; // 0x358(0x08)
	struct UCanvasPanel* NewIndicator; // 0x360(0x08)
	struct UCanvasPanel* OutfitIndicator; // 0x368(0x08)
	struct UVerticalBox* PricesContainer; // 0x370(0x08)
	struct UCanvasPanel* ItemSelectedBorder; // 0x378(0x08)
	struct UCanvasPanel* EquippedContainer; // 0x380(0x08)
	struct TSoftClassPtr<UObject> _customizationItemPriceWidgetClass; // 0x388(0x30)
	struct TArray<struct UUMGCustomizationItemPriceWidget*> _priceWidgets; // 0x3b8(0x10)
	int32_t _itemIndex; // 0x3c8(0x04)
	struct FName _itemId; // 0x3cc(0x0c)

	void BroadcastAvailableItemSelected(); // Function DeadByDaylight.UMGCustomizationItemWidget.BroadcastAvailableItemSelected // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e2610
};

// Class DeadByDaylight.UMGCustomizationPageScrollWidget
// Size: 0x4d8 (Inherited: 0x470)
struct UUMGCustomizationPageScrollWidget : UUMGGridPageScrollWidget {
	char pad_470[0x10]; // 0x470(0x10)
	struct TSoftClassPtr<UObject> _customizationItemWidgetClass; // 0x480(0x30)
	struct TArray<struct FStoreItemSlotData> _availableItemsData; // 0x4b0(0x10)
	struct TArray<struct UUMGCustomizationItemWidget*> _itemWidgets; // 0x4c0(0x10)
	char pad_4D0[0x8]; // 0x4d0(0x08)

	void OnAvailableItemSelectedCallback(int32_t itemIndex); // Function DeadByDaylight.UMGCustomizationPageScrollWidget.OnAvailableItemSelectedCallback // (Final|Native|Private) // @ game+0x55e2b40
};

// Class DeadByDaylight.UMGCustomizationScreenWidget
// Size: 0x3e8 (Inherited: 0x338)
struct UUMGCustomizationScreenWidget : UMobileBaseUserWidget {
	char pad_338[0x30]; // 0x338(0x30)
	struct UUMGCustomizationPageScrollWidget* PageScrollWidget; // 0x368(0x08)
	struct UUMGCustomizationCategoriesBar* CustomizationCategoriesBar; // 0x370(0x08)
	struct UTextBlock* CategoryLabel; // 0x378(0x08)
	struct UTextBlock* CurrentlyEquippedLabel; // 0x380(0x08)
	struct UCanvasPanel* AvailableInOutfitsContainer; // 0x388(0x08)
	struct UCanvasPanel* UnlockItemContainer; // 0x390(0x08)
	struct UUMGCustomizationItemWidget* OutfitItem; // 0x398(0x08)
	struct UVerticalBox* PriceContainer; // 0x3a0(0x08)
	struct TSoftClassPtr<UObject> PriceButtonWidgetClass; // 0x3a8(0x30)
	char pad_3D8[0x4]; // 0x3d8(0x04)
	struct FName _currentSelectedItem; // 0x3dc(0x0c)

	void SetCategoryLabel(enum class ECustomizationCategory category); // Function DeadByDaylight.UMGCustomizationScreenWidget.SetCategoryLabel // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void BroadcastUnlockWithCurrencyEvent(int32_t currencyId, struct FString combinedItem); // Function DeadByDaylight.UMGCustomizationScreenWidget.BroadcastUnlockWithCurrencyEvent // (Final|Native|Private|BlueprintCallable) // @ game+0x55e28d0
	void BroadcastCustomizationCategoryButtonPressed(int32_t categoryIndex); // Function DeadByDaylight.UMGCustomizationScreenWidget.BroadcastCustomizationCategoryButtonPressed // (Final|Native|Private) // @ game+0x55e2820
	void BroadcastAvailableItemSelectedEvent(int32_t itemIndex, struct FStoreItemSlotData& SelectedItem, struct FStoreItemSlotData& parentItem); // Function DeadByDaylight.UMGCustomizationScreenWidget.BroadcastAvailableItemSelectedEvent // (Final|Native|Private|HasOutParms) // @ game+0x55e2630
};

// Class DeadByDaylight.UMGCustomizationTooltipContentWidget
// Size: 0x368 (Inherited: 0x338)
struct UUMGCustomizationTooltipContentWidget : UMobileBaseUserWidget {
	struct UUMGHtmlRichText* ItemDescription; // 0x338(0x08)
	struct UUMGCustomizationInfoWidget* OutfitInformation; // 0x340(0x08)
	struct UUMGCustomizationInfoWidget* RoleInformation; // 0x348(0x08)
	struct UUMGCustomizationInfoWidget* ReplacementInformation; // 0x350(0x08)
	struct UUMGCustomizationItemPriceWidget* AuricCellsPrice; // 0x358(0x08)
	struct UUMGCustomizationItemPriceWidget* IridescentShardsPrice; // 0x360(0x08)
};

// Class DeadByDaylight.UMGCustomizationTooltipHeaderWidget
// Size: 0x350 (Inherited: 0x338)
struct UUMGCustomizationTooltipHeaderWidget : UMobileBaseUserWidget {
	struct UTextBlock* Title; // 0x338(0x08)
	struct UTextBlock* CollectionName; // 0x340(0x08)
	struct UTextBlock* CategoryAndRarityText; // 0x348(0x08)

	void SetOutfitComposition(bool IsUnbreakable, struct TArray<enum class ECustomizationCategory>& composition); // Function DeadByDaylight.UMGCustomizationTooltipHeaderWidget.SetOutfitComposition // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGDailyRewardWidget
// Size: 0x508 (Inherited: 0x468)
struct UUMGDailyRewardWidget : UUMGBaseButtonWidget {
	struct FMulticastInlineDelegate OnDailyRewardStateChanged; // 0x468(0x10)
	bool IsMarkedSpecial; // 0x478(0x01)
	enum class EUMGDailyRewardWidgetState State; // 0x479(0x01)
	char pad_47A[0x6]; // 0x47a(0x06)
	struct UTextBlock* AmountText; // 0x480(0x08)
	struct UTextBlock* ItemNameText; // 0x488(0x08)
	struct UTextBlock* RewardNumberText; // 0x490(0x08)
	struct UWidgetSwitcher* RewardTypeSwitcher; // 0x498(0x08)
	struct UCanvasPanel* ItemInfoPanel; // 0x4a0(0x08)
	struct UCanvasPanel* OfferingInfoPanel; // 0x4a8(0x08)
	struct UCanvasPanel* GenericInfoPanel; // 0x4b0(0x08)
	struct UCanvasPanel* FreeTicketInfoPanel; // 0x4b8(0x08)
	struct UCanvasPanel* CrateKeyInfoPanel; // 0x4c0(0x08)
	struct UImage* ItemIcon; // 0x4c8(0x08)
	struct UImage* OfferingIcon; // 0x4d0(0x08)
	struct UImage* GenericRewardIcon; // 0x4d8(0x08)
	struct UImage* FreeTicketRewardIcon; // 0x4e0(0x08)
	struct UImage* ParentItemIcon; // 0x4e8(0x08)
	struct UImage* CrateKeyRewardIcon; // 0x4f0(0x08)
	struct UCanvasPanel* ParentItemPanel; // 0x4f8(0x08)
	char pad_500[0x8]; // 0x500(0x08)

	void StopIdleAnimationForState(enum class EUMGDailyRewardWidgetState inState); // Function DeadByDaylight.UMGDailyRewardWidget.StopIdleAnimationForState // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetStateVisuals(enum class EUMGDailyRewardWidgetState inState); // Function DeadByDaylight.UMGDailyRewardWidget.SetStateVisuals // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetRarityColors(struct FColor BackgroundColor, struct FColor TintColor); // Function DeadByDaylight.UMGDailyRewardWidget.SetRarityColors // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x5e02c90
	void PlayIdleAnimationForState(enum class EUMGDailyRewardWidgetState inState); // Function DeadByDaylight.UMGDailyRewardWidget.PlayIdleAnimationForState // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void HandleUnlockRewardAnimationFinished(); // Function DeadByDaylight.UMGDailyRewardWidget.HandleUnlockRewardAnimationFinished // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e2ae0
	void HandleUnlockMysteryRewardAnimationFinished(); // Function DeadByDaylight.UMGDailyRewardWidget.HandleUnlockMysteryRewardAnimationFinished // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e2b20
	void HandleDiscoverRewardAnimationFinished(); // Function DeadByDaylight.UMGDailyRewardWidget.HandleDiscoverRewardAnimationFinished // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e2ae0
	void HandleCollectRewardAnimationFinished(); // Function DeadByDaylight.UMGDailyRewardWidget.HandleCollectRewardAnimationFinished // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e2ac0
	void HandleCollectButtonClick(); // Function DeadByDaylight.UMGDailyRewardWidget.HandleCollectButtonClick // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e2aa0
	void DiscoverMysteryReward(); // Function DeadByDaylight.UMGDailyRewardWidget.DiscoverMysteryReward // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void CollectReward(); // Function DeadByDaylight.UMGDailyRewardWidget.CollectReward // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGDownloadProgressionWidget
// Size: 0x350 (Inherited: 0x338)
struct UUMGDownloadProgressionWidget : UMobileBaseUserWidget {
	struct UProgressBar* ProgressBar; // 0x338(0x08)
	struct UTextBlock* DownloadPercentage; // 0x340(0x08)
	struct UTextBlock* DownloadDescription; // 0x348(0x08)

	void UpdateProgression(struct FDownloadProgression& DownloadProgression); // Function DeadByDaylight.UMGDownloadProgressionWidget.UpdateProgression // (Final|Native|Public|HasOutParms) // @ game+0x55e2f10
};

// Class DeadByDaylight.UMGDragWidget
// Size: 0x2b8 (Inherited: 0x298)
struct UUMGDragWidget : UUserWidget {
	char pad_298[0x10]; // 0x298(0x10)
	struct TArray<struct UCustomWidgetWrapper_HudEditor*> _allEditableWidgets; // 0x2a8(0x10)

	void SetClampToViewportDirty(); // Function DeadByDaylight.UMGDragWidget.SetClampToViewportDirty // (Final|Native|Public|BlueprintCallable) // @ game+0x55e2e60
	struct TArray<struct UCustomWidgetWrapper_HudEditor*> GetAllEditableWidgets(); // Function DeadByDaylight.UMGDragWidget.GetAllEditableWidgets // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55e29b0
};

// Class DeadByDaylight.UMGDragWidget_HudEditor
// Size: 0x318 (Inherited: 0x2b8)
struct UUMGDragWidget_HudEditor : UUMGDragWidget {
	char pad_2B8[0x20]; // 0x2b8(0x20)
	struct UUserWidget* OnSelectionWidgetClass; // 0x2d8(0x08)
	struct UUMGHudEditorDragConstraintWidget* DragLinkWidgetClass; // 0x2e0(0x08)
	struct UCustomWidgetWrapper_HudEditor* _customWrapper; // 0x2e8(0x08)
	struct UUserWidget* _selectionWidget; // 0x2f0(0x08)
	struct UUMGHudEditorDragConstraintWidget* _dragLinkWidget; // 0x2f8(0x08)
	struct UUMGDragWidget_HudEditor* _parentLinkWidget; // 0x300(0x08)
	struct UUMGDragWidget_HudEditor* _childLinkWidget; // 0x308(0x08)
	char pad_310[0x8]; // 0x310(0x08)

	void SetOnSelection(bool IsSelected); // Function DeadByDaylight.UMGDragWidget_HudEditor.SetOnSelection // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55e2e80
	struct UCustomWidgetWrapper_HudEditor* GetCustomWrapper(); // Function DeadByDaylight.UMGDragWidget_HudEditor.GetCustomWrapper // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55e2a40
};

// Class DeadByDaylight.UMGEndGameCollapseProgressWidget
// Size: 0x378 (Inherited: 0x338)
struct UUMGEndGameCollapseProgressWidget : UMobileBaseUserWidget {
	struct UProgressBar* ProgressBar; // 0x338(0x08)
	struct UCanvasPanel* MarkerLeftCanvas; // 0x340(0x08)
	struct UCanvasPanel* MarkerRightCanvas; // 0x348(0x08)
	struct UHorizontalBoxSlot* _markerLeftBox; // 0x350(0x08)
	struct UHorizontalBoxSlot* _markerRightBox; // 0x358(0x08)
	char pad_360[0x18]; // 0x360(0x18)
};

// Class DeadByDaylight.UMGEndGameCollapseWidget
// Size: 0x3b8 (Inherited: 0x338)
struct UUMGEndGameCollapseWidget : UMobileBaseUserWidget {
	char pad_338[0x8]; // 0x338(0x08)
	float _progressBarInterpSpeed; // 0x340(0x04)
	bool _slowMode; // 0x344(0x01)
	char pad_345[0x3]; // 0x345(0x03)
	struct UCanvasPanel* NormalBar; // 0x348(0x08)
	struct UCanvasPanel* SlowBar; // 0x350(0x08)
	struct UUMGEndGameCollapseProgressWidget* NormalProgressBar; // 0x358(0x08)
	struct UUMGEndGameCollapseProgressWidget* SlowProgressBar; // 0x360(0x08)
	char pad_368[0x48]; // 0x368(0x48)
	struct UUMGEndGameCollapseProgressWidget* _topBar; // 0x3b0(0x08)

	void PlayToZeroAnimation(); // Function DeadByDaylight.UMGEndGameCollapseWidget.PlayToZeroAnimation // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGFogWidget
// Size: 0x380 (Inherited: 0x338)
struct UUMGFogWidget : UMobileBaseUserWidget {
	struct UUMGBankAndPlayerInfoWidget* BankAndPlayerInfoWidget; // 0x338(0x08)
	char pad_340[0x40]; // 0x340(0x40)

	void OnRankTooltipTriggered(struct FTooltipPressedData& TooltipPressedData); // Function DeadByDaylight.UMGFogWidget.OnRankTooltipTriggered // (Final|Native|Protected|HasOutParms) // @ game+0x55e2da0
	void OnLevelTooltipTriggered(struct FTooltipPressedData& TooltipPressedData); // Function DeadByDaylight.UMGFogWidget.OnLevelTooltipTriggered // (Final|Native|Protected|HasOutParms) // @ game+0x55e2ce0
	void OnCurrencyTooltipTriggered(struct FTooltipPressedData& TooltipPressedData, enum class ECurrencyType CurrencyType); // Function DeadByDaylight.UMGFogWidget.OnCurrencyTooltipTriggered // (Final|Native|Protected|HasOutParms) // @ game+0x55e2bd0
	void HandleOnSettingButtonClick(); // Function DeadByDaylight.UMGFogWidget.HandleOnSettingButtonClick // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e2a80
};

// Class DeadByDaylight.UMGGameplayAlertWidget
// Size: 0x2c8 (Inherited: 0x2c8)
struct UUMGGameplayAlertWidget : UUMGBaseAlertWidget {

	void UpdateWidget(struct FStatusEffectSlotData& statusEffectData, struct FInventorySlotData& originatorData); // Function DeadByDaylight.UMGGameplayAlertWidget.UpdateWidget // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGGhostfaceSpecific
// Size: 0x348 (Inherited: 0x338)
struct UUMGGhostfaceSpecific : UMobileBaseUserWidget {
	struct UImage* LeftLeanImage; // 0x338(0x08)
	struct UImage* RightLeanImage; // 0x340(0x08)
};

// Class DeadByDaylight.UMGHtmlRichText
// Size: 0x6d0 (Inherited: 0x6d0)
struct UUMGHtmlRichText : URichTextBlock {

	void SetHTMLText(struct FString InText); // Function DeadByDaylight.UMGHtmlRichText.SetHTMLText // (Final|Native|Public|BlueprintCallable) // @ game+0x55e7cc0
};

// Class DeadByDaylight.UMGHtmlTextDecorator
// Size: 0x30 (Inherited: 0x30)
struct UUMGHtmlTextDecorator : URichTextBlockDecorator {
};

// Class DeadByDaylight.UMGHudEditorDragConstraintWidget
// Size: 0x2d8 (Inherited: 0x298)
struct UUMGHudEditorDragConstraintWidget : UUserWidget {
	struct USizeBox* LinkSizeBox; // 0x298(0x08)
	struct UUserWidget* _childWidget; // 0x2a0(0x08)
	struct UUserWidget* _parentWidget; // 0x2a8(0x08)
	char pad_2B0[0x28]; // 0x2b0(0x28)
};

// Class DeadByDaylight.UMGHudEditorLayoutScreen
// Size: 0x2a8 (Inherited: 0x298)
struct UUMGHudEditorLayoutScreen : UUserWidget {
	struct TArray<struct UUMGDragWidget_HudEditor*> _editableWidgets; // 0x298(0x10)
};

// Class DeadByDaylight.UMGHudEditorLayoutWidget
// Size: 0x330 (Inherited: 0x2b8)
struct UUMGHudEditorLayoutWidget : UUMGDragWidget {
	char pad_2B8[0x10]; // 0x2b8(0x10)
	struct UUMGHudEditorScreen* hudEditorScreen; // 0x2c8(0x08)
	struct UAkAudioEvent* _onSaveOverlapSound; // 0x2d0(0x08)
	struct UUMGDragWidget_HudEditor* _currentWidgetToEdit; // 0x2d8(0x08)
	struct TMap<struct UUMGHudEditorLayoutScreen*, bool> _isSaveDirtyMap; // 0x2e0(0x50)

	void ShowSurvivorLayout(); // Function DeadByDaylight.UMGHudEditorLayoutWidget.ShowSurvivorLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x55e8450
	void ShowKillerLayout(); // Function DeadByDaylight.UMGHudEditorLayoutWidget.ShowKillerLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x55e8430
	void SetWidgetToEdit(struct UUMGDragWidget_HudEditor* Widget); // Function DeadByDaylight.UMGHudEditorLayoutWidget.SetWidgetToEdit // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55e81a0
	void SetSaveOverlapSound(struct UAkAudioEvent* onSaveOverlapSound); // Function DeadByDaylight.UMGHudEditorLayoutWidget.SetSaveOverlapSound // (Final|Native|Public|BlueprintCallable) // @ game+0x55e8110
	void SetHudEditorScreen(struct UUMGHudEditorScreen* hudEditorScreen); // Function DeadByDaylight.UMGHudEditorLayoutWidget.SetHudEditorScreen // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55e7d60
	void SaveLayout(); // Function DeadByDaylight.UMGHudEditorLayoutWidget.SaveLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x55e7c10
	void ResetLayout(); // Function DeadByDaylight.UMGHudEditorLayoutWidget.ResetLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x55e7b20
	void OnSaveDirty(bool IsDirty); // Function DeadByDaylight.UMGHudEditorLayoutWidget.OnSaveDirty // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	struct UCustomWidgetWrapper_HudEditor* GetHudEditorWrapperToEdit(); // Function DeadByDaylight.UMGHudEditorLayoutWidget.GetHudEditorWrapperToEdit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55e7580
	struct UUMGDragWidget_HudEditor* GetCurrentDragWidget(); // Function DeadByDaylight.UMGHudEditorLayoutWidget.GetCurrentDragWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55e74e0
	void FlipLayout(); // Function DeadByDaylight.UMGHudEditorLayoutWidget.FlipLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x55e74c0
	void FlagSaveAsDirty(); // Function DeadByDaylight.UMGHudEditorLayoutWidget.FlagSaveAsDirty // (Final|Native|Public|BlueprintCallable) // @ game+0x55e74a0
};

// Class DeadByDaylight.UMGHudEditorScreen
// Size: 0x308 (Inherited: 0x298)
struct UUMGHudEditorScreen : UUserWidget {
	struct UUMGHudEditorLayoutWidget* _hudEditorLayoutWidget; // 0x298(0x08)
	struct UUMGHudEditorVersionWidget* _versionSwapWidget; // 0x2a0(0x08)
	struct TMap<enum class EPlayerRole, struct UUMGHudEditorLayoutScreen*> _storedLayoutScreens; // 0x2a8(0x50)
	struct UUMGHudEditorLayoutScreen* _currentLayoutScreen; // 0x2f8(0x08)
	struct UAkAudioEvent* _onDropOverlapSound; // 0x300(0x08)

	void ShowHudLayout(enum class EPlayerRole Role); // Function DeadByDaylight.UMGHudEditorScreen.ShowHudLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x55e83b0
	void SetWidgets(struct UUMGHudEditorLayoutWidget* hudEditorLayoutWidget, struct UUMGHudEditorVersionWidget* versionSwapWidget); // Function DeadByDaylight.UMGHudEditorScreen.SetWidgets // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55e8230
	void SetEditorDropErrorOverlapSound(struct UAkAudioEvent* onDropOverlapSound); // Function DeadByDaylight.UMGHudEditorScreen.SetEditorDropErrorOverlapSound // (Final|Native|Public|BlueprintCallable) // @ game+0x55e7c30
	void RegisterEditorLayoutScreen(enum class EPlayerRole Role, struct UUMGHudEditorLayoutScreen* screen); // Function DeadByDaylight.UMGHudEditorScreen.RegisterEditorLayoutScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x55e7920
	void Quit(); // Function DeadByDaylight.UMGHudEditorScreen.Quit // (Final|Native|Public|BlueprintCallable) // @ game+0x55e77e0
	struct UUMGHudEditorVersionWidget* GetVersionSwapWidget(); // Function DeadByDaylight.UMGHudEditorScreen.GetVersionSwapWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x55e75b0
};

// Class DeadByDaylight.UMGHudEditorVersionWidget
// Size: 0x2c0 (Inherited: 0x298)
struct UUMGHudEditorVersionWidget : UUserWidget {
	struct UButton* VersionButton; // 0x298(0x08)
	struct UUMGDragWidget_HudEditor* _onEditWidget; // 0x2a0(0x08)
	char pad_2A8[0x18]; // 0x2a8(0x18)

	void Show(); // Function DeadByDaylight.UMGHudEditorVersionWidget.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x55e8390
	void OnButtonClick(); // Function DeadByDaylight.UMGHudEditorVersionWidget.OnButtonClick // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7700
	void Hide(); // Function DeadByDaylight.UMGHudEditorVersionWidget.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x55e75d0
};

// Class DeadByDaylight.UMGInboxMessageEntryWidget
// Size: 0x300 (Inherited: 0x298)
struct UUMGInboxMessageEntryWidget : UUserWidget {
	struct FInboxMessageUIData _messageData; // 0x298(0x60)
	bool _isCurrentSelection; // 0x2f8(0x01)
	char pad_2F9[0x7]; // 0x2f9(0x07)

	void UpdateMessageData(struct FInboxMessageUIData messageData); // Function DeadByDaylight.UMGInboxMessageEntryWidget.UpdateMessageData // (Native|Event|Protected|BlueprintEvent) // @ game+0x55e85d0
	void SetMessageData(struct FInboxMessageUIData& messageData); // Function DeadByDaylight.UMGInboxMessageEntryWidget.SetMessageData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x55e7df0
	struct FInboxMessageElapsedTime GetElapsedTime(); // Function DeadByDaylight.UMGInboxMessageEntryWidget.GetElapsedTime // (Final|Native|Public|BlueprintCallable) // @ game+0x55e7540
};

// Class DeadByDaylight.UMGInboxScreen
// Size: 0x3e0 (Inherited: 0x338)
struct UUMGInboxScreen : UMobileBaseUserWidget {
	char pad_338[0xa8]; // 0x338(0xa8)

	void UpdateMessagesCount(enum class EInboxMessageUIType MessageType, int32_t unclaimedCount, int32_t unreadCount, int32_t TotalCount); // Function DeadByDaylight.UMGInboxScreen.UpdateMessagesCount // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void UpdateMessage(struct FInboxMessageUIData& Message); // Function DeadByDaylight.UMGInboxScreen.UpdateMessage // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void SetSocialMessages(struct TArray<struct FInboxMessageUIData>& messages, int32_t unreadCount, int32_t TotalCount); // Function DeadByDaylight.UMGInboxScreen.SetSocialMessages // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void SetRewardsMessages(struct TArray<struct FInboxMessageUIData>& messages, int32_t unclaimedCount, int32_t unreadCount, int32_t TotalCount); // Function DeadByDaylight.UMGInboxScreen.SetRewardsMessages // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void SetNewsMessages(struct TArray<struct FInboxMessageUIData>& messages, int32_t unreadCount, int32_t TotalCount); // Function DeadByDaylight.UMGInboxScreen.SetNewsMessages // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	bool RemoveMessageFromPanel(struct UPanelWidget* containingPanel, struct FString MessageId, bool hasSeparator); // Function DeadByDaylight.UMGInboxScreen.RemoveMessageFromPanel // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e79f0
	void RemoveMessage(struct FString MessageId); // Function DeadByDaylight.UMGInboxScreen.RemoveMessage // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void ReadMessageEvent(struct FString MessageId); // Function DeadByDaylight.UMGInboxScreen.ReadMessageEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7880
	void ReadAllMessagesEvent(enum class EInboxMessageUIType MessageType); // Function DeadByDaylight.UMGInboxScreen.ReadAllMessagesEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7800
	int32_t FindWidgetIndexByMessageId(struct UPanelWidget* containingPanel, struct FString MessageId); // Function DeadByDaylight.UMGInboxScreen.FindWidgetIndexByMessageId // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e73b0
	struct UUMGInboxMessageEntryWidget* FindMessageWidgetById(struct UPanelWidget* containingPanel, struct FString MessageId); // Function DeadByDaylight.UMGInboxScreen.FindMessageWidgetById // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e72c0
	void CleanMessageEvent(struct FString MessageId); // Function DeadByDaylight.UMGInboxScreen.CleanMessageEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7220
	void CleanAllMessagesEvent(enum class EInboxMessageUIType MessageType); // Function DeadByDaylight.UMGInboxScreen.CleanAllMessagesEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e71a0
	void ClaimMessageEvent(struct FString MessageId); // Function DeadByDaylight.UMGInboxScreen.ClaimMessageEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7100
	void ClaimAllMessagesEvent(enum class EInboxMessageUIType MessageType); // Function DeadByDaylight.UMGInboxScreen.ClaimAllMessagesEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7080
	void ButtonClickEvent(enum class EInboxScreenButton buttonId); // Function DeadByDaylight.UMGInboxScreen.ButtonClickEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x486b2a0
};

// Class DeadByDaylight.UmgPlayerHud
// Size: 0x560 (Inherited: 0x298)
struct UUmgPlayerHud : UUserWidget {
	struct UCanvasPanel* GameStartingPanel; // 0x298(0x08)
	struct UCanvasPanel* InGamePanel; // 0x2a0(0x08)
	struct UAtlantaSkillCheckWidget* SkillCheckWidget; // 0x2a8(0x08)
	struct UUMGMapThemeWidget* MapThemeWidget; // 0x2b0(0x08)
	struct UUMGAlertsWidget* AtlantaAlertsWidget; // 0x2b8(0x08)
	struct UUMGObjectivesWidget* AtlantaObjectivesWidget; // 0x2c0(0x08)
	struct UPerkHudWidget* AtlantaPerksWidget; // 0x2c8(0x08)
	struct UPerkActionButton* ActivablePerkActionButton; // 0x2d0(0x08)
	struct UUMGStatusEffectsWidget* AtlantaStatusEffectsWidget; // 0x2d8(0x08)
	struct UUMGChargeableInteractionWidget* AtlantaInteractionWidget; // 0x2e0(0x08)
	struct UAtlantaPromptWidget* AtlantaPromptWidget; // 0x2e8(0x08)
	struct UAtlantaPromptWidget* AtlantaTutorialPromptWidget; // 0x2f0(0x08)
	struct UUMGPlayersStatusWidget* AtlantaPlayersStatusWidget; // 0x2f8(0x08)
	struct UVerticalBox* AtlantaObjectivesContainer; // 0x300(0x08)
	struct UActionButton* ActionButton; // 0x308(0x08)
	struct UCanvasPanel* ActionButtonContainer; // 0x310(0x08)
	struct UPerkSoundHudWidget* PerkSoundHudWidget; // 0x318(0x08)
	struct UMobileBaseUserWidget* CenterInteractionButton; // 0x320(0x08)
	struct UCanvasPanel* CenterInteractionContainer; // 0x328(0x08)
	struct UCanvasPanel* CancelButtonContainer; // 0x330(0x08)
	struct UUMGEndGameCollapseWidget* EndGameCollapseWidget; // 0x338(0x08)
	struct FMulticastInlineDelegate OnPerkClickedEvent; // 0x340(0x10)
	struct FMulticastInlineDelegate OnTutorialLeaveClickedEvent; // 0x350(0x10)
	struct FMulticastInlineDelegate OnTutorialNextClickedEvent; // 0x360(0x10)
	struct FMulticastInlineDelegate OnSettingsClickedEvent; // 0x370(0x10)
	struct ADBDPlayerController* LocalController; // 0x380(0x08)
	struct UAtlantaHudDirectionalStick* AtlantaDirectionalStick; // 0x388(0x08)
	struct UCanvasPanel* AtlantaDirectionalStickContainer; // 0x390(0x08)
	struct ADBDPlayer* _localPlayer; // 0x398(0x08)
	char pad_3A0[0x8]; // 0x3a0(0x08)
	struct FSlateBrush _unlockedVirtualJoystickThumbImage; // 0x3a8(0x90)
	struct FSlateBrush _lockedVirtualJoystickThumbImage; // 0x438(0x90)
	char pad_4C8[0x98]; // 0x4c8(0x98)

	void TutorialTallyNextSelected(); // Function DeadByDaylight.UmgPlayerHud.TutorialTallyNextSelected // (Final|Native|Protected|BlueprintCallable) // @ game+0x55f1ea0
	void TutorialTallyLeaveSelected(); // Function DeadByDaylight.UmgPlayerHud.TutorialTallyLeaveSelected // (Final|Native|Protected|BlueprintCallable) // @ game+0x484a9c0
	void SetVirtualJoystickThumbImage(bool locked); // Function DeadByDaylight.UmgPlayerHud.SetVirtualJoystickThumbImage // (Final|Native|Protected|BlueprintCallable) // @ game+0x55f1c70
	void OnSettingsButtonPressed(); // Function DeadByDaylight.UmgPlayerHud.OnSettingsButtonPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x55f1960
	void OnPerkClicked(struct FName perkId, bool clickedOnPerksWidget); // Function DeadByDaylight.UmgPlayerHud.OnPerkClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x55f1720
	void OnInteractionStarted(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.UmgPlayerHud.OnInteractionStarted // (Native|Protected) // @ game+0x55f15d0
	void OnInteractionEnded(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.UmgPlayerHud.OnInteractionEnded // (Native|Protected) // @ game+0x55f1540
	void OnInitializeHUD(); // Function DeadByDaylight.UmgPlayerHud.OnInitializeHUD // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	bool IsInteractionAvailable(enum class EInputInteractionType interactionType); // Function DeadByDaylight.UmgPlayerHud.IsInteractionAvailable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x55f1380
	bool IsInteractionAllowed(struct UInteractionDefinition* Interaction); // Function DeadByDaylight.UmgPlayerHud.IsInteractionAllowed // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x55f12e0
	bool IsInitialized(); // Function DeadByDaylight.UmgPlayerHud.IsInitialized // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x55f12b0
	struct FSlateBrush GetInteractionIconByType(enum class EInputInteractionType interactionInputType); // Function DeadByDaylight.UmgPlayerHud.GetInteractionIconByType // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x55f0fe0
	struct UInteractionDefinition* GetCurrentOrAvailableInteractionOfType(enum class EInputInteractionType interactionInputType); // Function DeadByDaylight.UmgPlayerHud.GetCurrentOrAvailableInteractionOfType // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x55f0f50
};

// Class DeadByDaylight.UmgPlayableHud
// Size: 0x560 (Inherited: 0x560)
struct UUmgPlayableHud : UUmgPlayerHud {
};

// Class DeadByDaylight.UmgKillerHud
// Size: 0x7e8 (Inherited: 0x560)
struct UUmgKillerHud : UUmgPlayableHud {
	struct UPowerButton* PowerButton; // 0x560(0x08)
	struct UCanvasPanel* PowerButtonContainer; // 0x568(0x08)
	struct UPowerButton* SecondAbilityButton; // 0x570(0x08)
	struct UCanvasPanel* SecondAbilityButtonContainer; // 0x578(0x08)
	struct UActionButton* AttackButton; // 0x580(0x08)
	struct UCanvasPanel* AttackButtonContainer; // 0x588(0x08)
	struct UActionButton* DropSurvivorButton; // 0x590(0x08)
	struct UCanvasPanel* DropSurvivorButtonContainer; // 0x598(0x08)
	struct UMobileBaseUserWidget* CancelButton; // 0x5a0(0x08)
	struct UUMGGhostfaceSpecific* GhostfaceSpecific; // 0x5a8(0x08)
	struct UCanvasPanel* SecondAttackButtonContainer; // 0x5b0(0x08)
	struct UAtlantaHudPowerAttackJoystick* HudPowerAttackJoystick; // 0x5b8(0x08)
	struct ASlasherPlayer* killer; // 0x5c0(0x08)
	char pad_5C8[0x8]; // 0x5c8(0x08)
	bool _isCancelButtonPressed; // 0x5d0(0x01)
	bool _isAttackButtonPressed; // 0x5d1(0x01)
	bool _isAttackJoystickActivated; // 0x5d2(0x01)
	bool _isPowerAttackJoystickActivated; // 0x5d3(0x01)
	char pad_5D4[0x4]; // 0x5d4(0x04)
	struct FSlateBrush _powerAttackJoystickBackgroundImage; // 0x5d8(0x90)
	struct FSlateBrush _DefaultAttackJoystickIconPressedImage; // 0x668(0x90)
	struct FSlateBrush _DefaultAttackJoystickIconUnpressedImage; // 0x6f8(0x90)
	struct FVector2D _powerAttackJoystickThumbPressedSize; // 0x788(0x08)
	struct FVector2D _powerAttackJoystickThumbUnpressedSize; // 0x790(0x08)
	char pad_798[0x50]; // 0x798(0x50)

	void UpdatePowerButtonTier(int32_t previousTier, int32_t currentTier, bool IsFirstTime); // Function DeadByDaylight.UmgKillerHud.UpdatePowerButtonTier // (Final|Native|Private) // @ game+0x55e88a0
	bool ShouldShowInteractionHighlight(enum class EInputInteractionType interactionType); // Function DeadByDaylight.UmgKillerHud.ShouldShowInteractionHighlight // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x55e8300
	void SetPowerIconFromItem(struct ACollectable* Item, enum class EInventoryType inventoryType); // Function DeadByDaylight.UmgKillerHud.SetPowerIconFromItem // (Final|Native|Protected) // @ game+0x55e8040
	void SetPowerAttackJoystickThumbImage(bool Pressed); // Function DeadByDaylight.UmgKillerHud.SetPowerAttackJoystickThumbImage // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7fb0
	void SetPowerAttackJoystickPosition(struct FVector2D& position); // Function DeadByDaylight.UmgKillerHud.SetPowerAttackJoystickPosition // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x55e7f20
	void RespondToVirtualJoystickPressChanged(int32_t controlIndex, bool Pressed); // Function DeadByDaylight.UmgKillerHud.RespondToVirtualJoystickPressChanged // (Final|Native|Public) // @ game+0x55e7b40
	void OnSecondAbilityButtonPressed(); // Function DeadByDaylight.UmgKillerHud.OnSecondAbilityButtonPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e77c0
	void OnSecondAbilityButtonLongPressed(); // Function DeadByDaylight.UmgKillerHud.OnSecondAbilityButtonLongPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e77a0
	void OnPowerButtonReleased(); // Function DeadByDaylight.UmgKillerHud.OnPowerButtonReleased // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7780
	void OnPowerButtonPressed(); // Function DeadByDaylight.UmgKillerHud.OnPowerButtonPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7760
	void OnCancelButtonReleased(); // Function DeadByDaylight.UmgKillerHud.OnCancelButtonReleased // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7740
	void OnCancelButtonPressed(); // Function DeadByDaylight.UmgKillerHud.OnCancelButtonPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7720
	void OnAttackButtonReleased(); // Function DeadByDaylight.UmgKillerHud.OnAttackButtonReleased // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e76e0
	void OnAttackButtonPressed(); // Function DeadByDaylight.UmgKillerHud.OnAttackButtonPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e76c0
	void OnActionButtonReleased(); // Function DeadByDaylight.UmgKillerHud.OnActionButtonReleased // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e76a0
	void OnActionButtonPressed(); // Function DeadByDaylight.UmgKillerHud.OnActionButtonPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e7680
	bool IsPowerButtonAvailable(); // Function DeadByDaylight.UmgKillerHud.IsPowerButtonAvailable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x55e7650
	bool IsCancelPowerButtonAvailable(); // Function DeadByDaylight.UmgKillerHud.IsCancelPowerButtonAvailable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x55e7620
	bool IsAttackButtonVisible(); // Function DeadByDaylight.UmgKillerHud.IsAttackButtonVisible // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x55e75f0
	void InitializePowerAttackJoystickPosition(); // Function DeadByDaylight.UmgKillerHud.InitializePowerAttackJoystickPosition // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void HandleOnAttackButtonReleased(); // Function DeadByDaylight.UmgKillerHud.HandleOnAttackButtonReleased // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void HandleOnAttackButtonPressed(); // Function DeadByDaylight.UmgKillerHud.HandleOnAttackButtonPressed // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	struct UInteractionDefinition* GetCurrentPowerUseInteraction(); // Function DeadByDaylight.UmgKillerHud.GetCurrentPowerUseInteraction // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x55e7510
};

// Class DeadByDaylight.UMGLacerationStatusEffectUI
// Size: 0x3b8 (Inherited: 0x338)
struct UUMGLacerationStatusEffectUI : UMobileBaseUserWidget {
	struct UImage* LacerationDecoration; // 0x338(0x08)
	struct UImage* LacerationFill; // 0x340(0x08)
	struct TArray<int32_t> _maximumLacerationDefinitions; // 0x348(0x10)
	struct TArray<struct UPaperSprite*> _lacerationDecorationImages; // 0x358(0x10)
	struct TArray<struct UTexture2D*> _lacerationFillImages; // 0x368(0x10)
	struct FLinearColor _lacerationDefaultColor; // 0x378(0x10)
	struct FLinearColor _lacerationFillFullColor; // 0x388(0x10)
	struct FName _glassShatterDisintigrateAnimationName; // 0x398(0x0c)
	char pad_3A4[0x4]; // 0x3a4(0x04)
	struct UMaterialInstanceDynamic* _lacerationFillFullMI; // 0x3a8(0x08)
	char pad_3B0[0x8]; // 0x3b0(0x08)

	void OnFinishedBoomAnimation(); // Function DeadByDaylight.UMGLacerationStatusEffectUI.OnFinishedBoomAnimation // (Final|Native|Private) // @ game+0x55ebf40
};

// Class DeadByDaylight.UMGLandingPageButtonWidget
// Size: 0x4b8 (Inherited: 0x468)
struct UUMGLandingPageButtonWidget : UUMGBaseButtonWidget {
	struct UCanvasPanel* BigTag; // 0x468(0x08)
	struct UCanvasPanel* SmallTag; // 0x470(0x08)
	struct UTextBlock* TagText; // 0x478(0x08)
	struct URichTextBlock* BannerTitleText; // 0x480(0x08)
	struct UImage* BannerImage; // 0x488(0x08)
	struct UImage* TitleColorBg; // 0x490(0x08)
	struct UImage* BorderColor; // 0x498(0x08)
	char pad_4A0[0x18]; // 0x4a0(0x18)
};

// Class DeadByDaylight.UMGLevelBannerWidget
// Size: 0x398 (Inherited: 0x338)
struct UUMGLevelBannerWidget : UMobileBaseUserWidget {
	char pad_338[0x8]; // 0x338(0x08)
	struct UButton* TooltipButton; // 0x340(0x08)
	struct UTextBlock* PlayerLevelText; // 0x348(0x08)
	struct UTextBlock* PlayerDevotionText; // 0x350(0x08)
	struct UTextBlock* PlayerCurrentExperienceText; // 0x358(0x08)
	struct UTextBlock* PlayerNextLevelExperienceText; // 0x360(0x08)
	struct UProgressBar* XPProgressBar; // 0x368(0x08)
	struct UHorizontalBox* XPTextContainer; // 0x370(0x08)
	struct UAkAudioEvent* OnLongPressSound; // 0x378(0x08)
	struct UImage* TooltipHighlightPicture; // 0x380(0x08)
	char pad_388[0x10]; // 0x388(0x10)

	void StopHighlight(); // Function DeadByDaylight.UMGLevelBannerWidget.StopHighlight // (Native|Public|BlueprintCallable) // @ game+0x55ec8d0
	void StartHighlight(); // Function DeadByDaylight.UMGLevelBannerWidget.StartHighlight // (Native|Public|BlueprintCallable) // @ game+0x55ec8a0
	void SetProgressbarValue(float Progress); // Function DeadByDaylight.UMGLevelBannerWidget.SetProgressbarValue // (Final|Native|Public|BlueprintCallable) // @ game+0x55ec790
	void SetInfoBP(int32_t PlayerLevel, int32_t PlayerPrestige, int32_t CurrentExperience, int32_t NextLevelExperience); // Function DeadByDaylight.UMGLevelBannerWidget.SetInfoBP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetInfo(int32_t PlayerLevel, int32_t PlayerPrestige, int32_t CurrentExperience, int32_t NextLevelExperience); // Function DeadByDaylight.UMGLevelBannerWidget.SetInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x55ec040
	void SetExperienceVisibilityBP(bool isExperienceVisible, bool isBig); // Function DeadByDaylight.UMGLevelBannerWidget.SetExperienceVisibilityBP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnTooltipButtonLongPressEvent(); // Function DeadByDaylight.UMGLevelBannerWidget.OnTooltipButtonLongPressEvent // (Final|Native|Protected) // @ game+0x55ebf80
};

// Class DeadByDaylight.UMGLoadingScreenWidget
// Size: 0x368 (Inherited: 0x338)
struct UUMGLoadingScreenWidget : UMobileBaseUserWidget {
	struct UTextBlock* Description; // 0x338(0x08)
	struct UImage* HintIcon; // 0x340(0x08)
	struct UProgressBar* LoadingBar; // 0x348(0x08)
	struct UPanelWidget* KillerPanel; // 0x350(0x08)
	struct UPanelWidget* SurvivorPanel; // 0x358(0x08)
	struct UTextBlock* Title; // 0x360(0x08)
};

// Class DeadByDaylight.UMGLoadoutBaseWidget
// Size: 0x390 (Inherited: 0x338)
struct UUMGLoadoutBaseWidget : UMobileBaseUserWidget {
	struct UUMGLoadoutItemButton* ItemOrPowerButton; // 0x338(0x08)
	struct UUMGLoadoutItemButton* AddonFirstButton; // 0x340(0x08)
	struct UUMGLoadoutItemButton* AddonSecondButton; // 0x348(0x08)
	struct UUMGLoadoutItemButton* OfferingButton; // 0x350(0x08)
	struct UUMGLoadoutItemButton* PerkFirstButton; // 0x358(0x08)
	struct UUMGLoadoutItemButton* PerkSecondButton; // 0x360(0x08)
	struct UUMGLoadoutItemButton* PerkThirdButton; // 0x368(0x08)
	struct UUMGLoadoutItemButton* PerkFourthButton; // 0x370(0x08)
	struct TArray<struct UUMGLoadoutItemButton*> LoadoutItemButtons; // 0x378(0x10)
	bool usingMatchRules; // 0x388(0x01)
	bool perkSlotsLockedByAdmin; // 0x389(0x01)
	bool IsSlasher; // 0x38a(0x01)
	char pad_38B[0x5]; // 0x38b(0x05)

	void SetLoadoutData(struct TArray<struct FInventorySlotData>& loadoutData, bool usingMatchRules, bool perkSlotsLockedByAdmin, enum class ELoadoutSlot LoadoutSlot, bool IsSlasher, bool isClickable); // Function DeadByDaylight.UMGLoadoutBaseWidget.SetLoadoutData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x55ec4d0
	void SetIsSelectedLoadoutItemButton(enum class ELoadoutSlot LoadoutSlot); // Function DeadByDaylight.UMGLoadoutBaseWidget.SetIsSelectedLoadoutItemButton // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetDividerImageColor(struct FLinearColor Color); // Function DeadByDaylight.UMGLoadoutBaseWidget.SetDividerImageColor // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGLoadoutFilterButton
// Size: 0x360 (Inherited: 0x338)
struct UUMGLoadoutFilterButton : UMobileBaseUserWidget {
	struct UButton* ActionButton; // 0x338(0x08)
	struct FMulticastInlineDelegate OnLoadoutFilterButtonClicked; // 0x340(0x10)
	char pad_350[0x10]; // 0x350(0x10)

	void SetIsSelected(bool IsSelected); // Function DeadByDaylight.UMGLoadoutFilterButton.SetIsSelected // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetIcon(struct TSoftObjectPtr<UTexture2D>& Icon); // Function DeadByDaylight.UMGLoadoutFilterButton.SetIcon // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void OnActionButtonClick(); // Function DeadByDaylight.UMGLoadoutFilterButton.OnActionButtonClick // (Final|Native|Public) // @ game+0x55ebe80
	void InitFilterButton(struct FName& filterName, struct TSoftObjectPtr<UTexture2D> filterTexture); // Function DeadByDaylight.UMGLoadoutFilterButton.InitFilterButton // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x55ebbf0
};

// Class DeadByDaylight.UMGLoadoutFilterWidget
// Size: 0x3b0 (Inherited: 0x338)
struct UUMGLoadoutFilterWidget : UMobileBaseUserWidget {
	struct FMulticastInlineDelegate OnLoadoutFilterClicked; // 0x338(0x10)
	struct TSoftClassPtr<UObject> AtlantaLoadoutFilterButtonClass; // 0x348(0x30)
	struct UHorizontalBox* FilterContainerBox; // 0x378(0x08)
	struct TArray<struct FName> Filters; // 0x380(0x10)
	struct TArray<struct UUMGLoadoutFilterButton*> FilterButtons; // 0x390(0x10)
	struct UUMGLoadoutFilterButton* SelectedFilterButton; // 0x3a0(0x08)
	char pad_3A8[0x8]; // 0x3a8(0x08)

	void OnFilterButtonClicked(struct FName filterName); // Function DeadByDaylight.UMGLoadoutFilterWidget.OnFilterButtonClicked // (Final|Native|Public) // @ game+0x55ebea0
	void InitFilterWidget(struct TMap<struct FName, struct TSoftObjectPtr<UTexture2D>>& filtersInfo); // Function DeadByDaylight.UMGLoadoutFilterWidget.InitFilterWidget // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x55ebd60
	void ClearSelectedFilter(); // Function DeadByDaylight.UMGLoadoutFilterWidget.ClearSelectedFilter // (Final|Native|Public|BlueprintCallable) // @ game+0x55eba20
};

// Class DeadByDaylight.UMGLoadoutPageScrollWidget
// Size: 0x578 (Inherited: 0x468)
struct UUMGLoadoutPageScrollWidget : UUMGPageScrollWidget {
	bool ShouldResizeWidget; // 0x468(0x01)
	char pad_469[0x7]; // 0x469(0x07)
	struct TSoftClassPtr<UObject> _itemWidgetClass; // 0x470(0x30)
	enum class EInventoryGridFormat _gridFormat; // 0x4a0(0x01)
	char pad_4A1[0x7]; // 0x4a1(0x07)
	struct TArray<struct FInventorySlotData> _inventoryData; // 0x4a8(0x10)
	struct TArray<int32_t> _inventorySelectedItemIndexes; // 0x4b8(0x10)
	struct FString _subtitle; // 0x4c8(0x10)
	char pad_4D8[0xa0]; // 0x4d8(0xa0)

	void SetItemWidgetClass(); // Function DeadByDaylight.UMGLoadoutPageScrollWidget.SetItemWidgetClass // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetItemIsSelected(int32_t index, bool IsSelected); // Function DeadByDaylight.UMGLoadoutPageScrollWidget.SetItemIsSelected // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetInventoryData(enum class EInventoryGridFormat gridFormat, struct TArray<struct FInventorySlotData>& InventoryData, struct TArray<int32_t>& selectedItemsIndexes, struct FString trackingItemName, struct FString Subtitle); // Function DeadByDaylight.UMGLoadoutPageScrollWidget.SetInventoryData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x55ec190
	void HandleItemClicked(struct FName ItemId); // Function DeadByDaylight.UMGLoadoutPageScrollWidget.HandleItemClicked // (Final|Native|Protected) // @ game+0x55ebb30
};

// Class DeadByDaylight.UMGLoadoutWidget
// Size: 0x3f8 (Inherited: 0x390)
struct UUMGLoadoutWidget : UUMGLoadoutBaseWidget {
	struct FText InventoryItemTypeText; // 0x390(0x18)
	struct FText InventoryFilterText; // 0x3a8(0x18)
	struct UUMGLoadoutPageScrollWidget* PageScrollWidget; // 0x3c0(0x08)
	struct FText LoadoutTitleText; // 0x3c8(0x18)
	struct FText InventoryPanelTitleText; // 0x3e0(0x18)

	void SetInventoryData(enum class EInventoryGridFormat gridFormat, struct TArray<struct FInventorySlotData>& InventoryData, struct TArray<int32_t>& selectedItemsIndexes, struct FString trackingItemName, struct FString Subtitle); // Function DeadByDaylight.UMGLoadoutWidget.SetInventoryData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGLobbyJoinedWidget
// Size: 0x3b8 (Inherited: 0x338)
struct UUMGLobbyJoinedWidget : UMobileBaseUserWidget {
	bool LocalPlayerIsSlasher; // 0x338(0x01)
	char pad_339[0x7]; // 0x339(0x07)
	struct FText TextLeaveLobby; // 0x340(0x18)
	struct FText TextPlayerNotReadyYet; // 0x358(0x18)
	struct FText TextWaitingPlayers; // 0x370(0x18)
	struct FText TextToBeReady; // 0x388(0x18)
	struct UHorizontalBox* CommandButtonsContainer; // 0x3a0(0x08)
	char pad_3A8[0x10]; // 0x3a8(0x10)

	void UpdatePlayersLatency(struct TMap<int32_t, float>& playersLatency, bool isHost); // Function DeadByDaylight.UMGLobbyJoinedWidget.UpdatePlayersLatency // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void SetWidgetsVisibility(bool widgetsVisibilty); // Function DeadByDaylight.UMGLobbyJoinedWidget.SetWidgetsVisibility // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetReadyStatus(struct TArray<struct FPlayerReadyStatusData>& playersReadyStatusData); // Function DeadByDaylight.UMGLobbyJoinedWidget.SetReadyStatus // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void SetLocalPlayerInfo(struct FPlayerInfoData& PlayerInfoData); // Function DeadByDaylight.UMGLobbyJoinedWidget.SetLocalPlayerInfo // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void SetLobbyTimer(int32_t Seconds); // Function DeadByDaylight.UMGLobbyJoinedWidget.SetLobbyTimer // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetLoadoutDataForLocalPlayer(struct TArray<struct FInventorySlotData>& loadoutData, bool usingMatchRules, bool perkSlotsLockedByAdmin, bool IsSlasher); // Function DeadByDaylight.UMGLobbyJoinedWidget.SetLoadoutDataForLocalPlayer // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void RemovePlayersInfo(int32_t playerID); // Function DeadByDaylight.UMGLobbyJoinedWidget.RemovePlayersInfo // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void HandleLeaveButtonClicked(); // Function DeadByDaylight.UMGLobbyJoinedWidget.HandleLeaveButtonClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x55ebbd0
	void AddPlayerInfo(int32_t playerID, struct FPlayerInfoData& PlayerInfoData, bool IsPlayerReady, struct TArray<struct FInventorySlotData>& loadoutData); // Function DeadByDaylight.UMGLobbyJoinedWidget.AddPlayerInfo // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGLobbyOfferingItemWidget
// Size: 0x338 (Inherited: 0x338)
struct UUMGLobbyOfferingItemWidget : UMobileBaseUserWidget {

	void SetOfferingData(struct FInventorySlotData& Data); // Function DeadByDaylight.UMGLobbyOfferingItemWidget.SetOfferingData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void HideOfferingItem(); // Function DeadByDaylight.UMGLobbyOfferingItemWidget.HideOfferingItem // (Final|Native|Public) // @ game+0x4850070
	struct TMap<struct FName, struct TSoftObjectPtr<UTexture2D>> GetOfferingIcons(); // Function DeadByDaylight.UMGLobbyOfferingItemWidget.GetOfferingIcons // (Final|Native|Protected|BlueprintCallable) // @ game+0x55eba40
};

// Class DeadByDaylight.UMGLobbyOfferingWidget
// Size: 0x398 (Inherited: 0x338)
struct UUMGLobbyOfferingWidget : UMobileBaseUserWidget {
	struct UCanvasPanel* CanvasOffering; // 0x338(0x08)
	struct TSoftClassPtr<UObject> LobbyOfferingItemClass; // 0x340(0x30)
	char pad_370[0x28]; // 0x370(0x28)
};

// Class DeadByDaylight.UMGLobbyScreen
// Size: 0x380 (Inherited: 0x338)
struct UUMGLobbyScreen : UMobileBaseUserWidget {
	struct UUMGLobbySearchingWidget* LobbySearchingWidget; // 0x338(0x08)
	struct FMulticastInlineDelegate OnJoinedLobbyLeaved; // 0x340(0x10)
	struct FMulticastInlineDelegate OnSearchingLobbyCancelled; // 0x350(0x10)
	struct UWidgetSwitcher* LobbySwitcher; // 0x360(0x08)
	struct UUMGLobbyJoinedWidget* LobbyJoinedWidget; // 0x368(0x08)
	struct UUMGLobbyOfferingWidget* OfferingWidget; // 0x370(0x08)
	struct UUMGFogWidget* FogWidget; // 0x378(0x08)

	void HandleSearchingLobbyCancel(); // Function DeadByDaylight.UMGLobbyScreen.HandleSearchingLobbyCancel // (Final|Native|Protected|BlueprintCallable) // @ game+0x484a9c0
	void HandleJoinedLobbyLeave(); // Function DeadByDaylight.UMGLobbyScreen.HandleJoinedLobbyLeave // (Final|Native|Protected|BlueprintCallable) // @ game+0x55e2a80
};

// Class DeadByDaylight.UMGLobbySearchingWidget
// Size: 0x478 (Inherited: 0x390)
struct UUMGLobbySearchingWidget : UUMGLoadoutBaseWidget {
	struct UUMGBankAndPlayerInfoWidget* BankAndPlayerInfoWidget; // 0x390(0x08)
	struct FText ItemOrPowerText; // 0x398(0x18)
	struct FText AddonText; // 0x3b0(0x18)
	struct FText OfferingText; // 0x3c8(0x18)
	struct FText PerksText; // 0x3e0(0x18)
	struct FText TextWaitingForPlayers; // 0x3f8(0x18)
	struct FText TextEstimatedTimeTitle; // 0x410(0x18)
	struct UButton* ButtonCancelSearching; // 0x428(0x08)
	struct UUMGPartySlotsWidget* PartySlots; // 0x430(0x08)
	char pad_438[0x40]; // 0x438(0x40)

	void SetWaitingTimer(int32_t Seconds); // Function DeadByDaylight.UMGLobbySearchingWidget.SetWaitingTimer // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetEstimatedWaitingTimer(int32_t Seconds); // Function DeadByDaylight.UMGLobbySearchingWidget.SetEstimatedWaitingTimer // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnRankTooltipTriggered(struct FTooltipPressedData& TooltipPressedData); // Function DeadByDaylight.UMGLobbySearchingWidget.OnRankTooltipTriggered // (Final|Native|Protected|HasOutParms) // @ game+0x55f18a0
	void OnLevelTooltipTriggered(struct FTooltipPressedData& TooltipPressedData); // Function DeadByDaylight.UMGLobbySearchingWidget.OnLevelTooltipTriggered // (Final|Native|Protected|HasOutParms) // @ game+0x55f1660
	void OnCurrencyTooltipTriggered(struct FTooltipPressedData& TooltipPressedData, enum class ECurrencyType CurrencyType); // Function DeadByDaylight.UMGLobbySearchingWidget.OnCurrencyTooltipTriggered // (Final|Native|Protected|HasOutParms) // @ game+0x55f1430
	void HandleLeaveButtonClicked(); // Function DeadByDaylight.UMGLobbySearchingWidget.HandleLeaveButtonClicked // (Final|Native|Protected) // @ game+0x55f1290
};

// Class DeadByDaylight.UMGLoginPopup
// Size: 0x438 (Inherited: 0x420)
struct UUMGLoginPopup : UUMGGenericPopup {
	struct UUMGAuthentificationProviderListWidget* AuthenticationProviderList; // 0x420(0x08)
	char pad_428[0x10]; // 0x428(0x10)

	void ChooseProvider(char Provider); // Function DeadByDaylight.UMGLoginPopup.ChooseProvider // (Final|Native|Public|BlueprintCallable) // @ game+0x55f0ed0
};

// Class DeadByDaylight.UMGMainMenuMonthlyPassButton
// Size: 0x388 (Inherited: 0x338)
struct UUMGMainMenuMonthlyPassButton : UMobileBaseUserWidget {
	struct UWidgetSwitcher* ButtonSwitcher; // 0x338(0x08)
	struct UButton* ActiveButton; // 0x340(0x08)
	struct UButton* NonActiveButton; // 0x348(0x08)
	struct FText playerName; // 0x350(0x18)
	struct UAkAudioEvent* OnClickSound; // 0x368(0x08)
	char pad_370[0x18]; // 0x370(0x18)

	void OnButtonClick(); // Function DeadByDaylight.UMGMainMenuMonthlyPassButton.OnButtonClick // (Final|Native|Protected|BlueprintCallable) // @ game+0x55f1410
};

// Class DeadByDaylight.UMGMapThemeWidget
// Size: 0x338 (Inherited: 0x338)
struct UUMGMapThemeWidget : UMobileBaseUserWidget {

	void SetThemeName(struct FString ThemeName); // Function DeadByDaylight.UMGMapThemeWidget.SetThemeName // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetMapName(struct FString MapName); // Function DeadByDaylight.UMGMapThemeWidget.SetMapName // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGMenuBaseBanner
// Size: 0x4a8 (Inherited: 0x480)
struct UUMGMenuBaseBanner : UUMGBaseSideMainMenuButton {
	struct UImage* BannerImage; // 0x480(0x08)
	struct UTextBlock* Title; // 0x488(0x08)
	struct TScriptInterface<ISlateTextureAtlasInterface> DefaultBanner; // 0x490(0x10)
	char pad_4A0[0x8]; // 0x4a0(0x08)
};

// Class DeadByDaylight.UMGMenuEventsBanner
// Size: 0x4c0 (Inherited: 0x4a8)
struct UUMGMenuEventsBanner : UUMGMenuBaseBanner {
	struct UImage* EventsIcon; // 0x4a8(0x08)
	struct UTextBlock* FallbackTitle; // 0x4b0(0x08)
	char pad_4B8[0x8]; // 0x4b8(0x08)

	void SetDefaultWidgetLayout(); // Function DeadByDaylight.UMGMenuEventsBanner.SetDefaultWidgetLayout // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetCustomWidgetLayout(); // Function DeadByDaylight.UMGMenuEventsBanner.SetCustomWidgetLayout // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGMenuMarketingBanner
// Size: 0x4b0 (Inherited: 0x4a8)
struct UUMGMenuMarketingBanner : UUMGMenuBaseBanner {
	struct UTextBlock* Subtitle; // 0x4a8(0x08)
};

// Class DeadByDaylight.UMGMonthlyPassRewardItemWidget
// Size: 0x390 (Inherited: 0x338)
struct UUMGMonthlyPassRewardItemWidget : UMobileBaseUserWidget {
	struct UTextBlock* itemAmount; // 0x338(0x08)
	struct UTextBlock* ItemName; // 0x340(0x08)
	struct UImage* ItemIcon; // 0x348(0x08)
	struct UImage* CheckIcon; // 0x350(0x08)
	struct UImage* ItemFrame; // 0x358(0x08)
	struct UImage* ItemRarityBackground; // 0x360(0x08)
	struct UCanvasPanel* ItemPaintPanel; // 0x368(0x08)
	struct FLinearColor ActiveItemFrameColor; // 0x370(0x10)
	struct FLinearColor NonActiveItemFrameColor; // 0x380(0x10)
};

// Class DeadByDaylight.UMGMonthlyPassCurrencyWidget
// Size: 0x398 (Inherited: 0x390)
struct UUMGMonthlyPassCurrencyWidget : UUMGMonthlyPassRewardItemWidget {
	struct UImage* CurrencyBackground; // 0x390(0x08)
};

// Class DeadByDaylight.UMGMonthlyPassFreeTicketWidget
// Size: 0x390 (Inherited: 0x390)
struct UUMGMonthlyPassFreeTicketWidget : UUMGMonthlyPassRewardItemWidget {
};

// Class DeadByDaylight.UMGNavigationButtonWidget
// Size: 0x478 (Inherited: 0x468)
struct UUMGNavigationButtonWidget : UUMGBaseButtonWidget {
	struct UWidget* NotificationPanel; // 0x468(0x08)
	char pad_470[0x8]; // 0x470(0x08)

	void SetIsSelected(bool IsSelected); // Function DeadByDaylight.UMGNavigationButtonWidget.SetIsSelected // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetIcon(struct UTexture2D* Icon); // Function DeadByDaylight.UMGNavigationButtonWidget.SetIcon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGObjectivesWidget
// Size: 0x340 (Inherited: 0x338)
struct UUMGObjectivesWidget : UMobileBaseUserWidget {
	enum class ESlateVisibility PanelEscapeRequirementsVisibility; // 0x338(0x01)
	enum class ESlateVisibility PanelGeneratorVisibility; // 0x339(0x01)
	enum class ESlateVisibility PanelFindExitVisibility; // 0x33a(0x01)
	enum class ESlateVisibility PanelHatchVisibility; // 0x33b(0x01)
	char pad_33C[0x4]; // 0x33c(0x04)

	void UpdateTextMessage(struct FText& textFind, struct FText& textExit, struct FText& textOr); // Function DeadByDaylight.UMGObjectivesWidget.UpdateTextMessage // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void UpdateGeneratorCount(int32_t Count); // Function DeadByDaylight.UMGObjectivesWidget.UpdateGeneratorCount // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGPartyBotSlotWidget
// Size: 0x4b8 (Inherited: 0x338)
struct UUMGPartyBotSlotWidget : UMobileBaseUserWidget {
	struct UTextBlock* RoleText; // 0x338(0x08)
	struct UTextBlock* BotDifficultyText; // 0x340(0x08)
	struct UTextBlock* CharacterNameText; // 0x348(0x08)
	struct UUMGBaseButtonWidget* EditButton; // 0x350(0x08)
	struct UImage* EditIcon; // 0x358(0x08)
	struct UUMGBaseButtonWidget* InvitePartyButton; // 0x360(0x08)
	struct UCanvasPanel* InvitePartyCanvas; // 0x368(0x08)
	struct TMap<enum class EAIDifficultyLevel, struct FSlateColor> DifficultyColors; // 0x370(0x50)
	char pad_3C0[0xf8]; // 0x3c0(0xf8)

	void HandleInvitePartyButtonEvent(); // Function DeadByDaylight.UMGPartyBotSlotWidget.HandleInvitePartyButtonEvent // (Final|Native|Private) // @ game+0x5570810
	void HandleEditButtonEvent(); // Function DeadByDaylight.UMGPartyBotSlotWidget.HandleEditButtonEvent // (Final|Native|Private) // @ game+0x55f1190
};

// Class DeadByDaylight.UMGPartyCountdownWidget
// Size: 0x3c0 (Inherited: 0x3a0)
struct UUMGPartyCountdownWidget : UUMGBaseCountdownWidget {
	struct UButton* UnreadyButton; // 0x3a0(0x08)
	struct UCanvasPanel* UnreadyButtonContainer; // 0x3a8(0x08)
	char pad_3B0[0x10]; // 0x3b0(0x10)

	void OnUnreadyButtonClicked(); // Function DeadByDaylight.UMGPartyCountdownWidget.OnUnreadyButtonClicked // (Final|Native|Private) // @ game+0x4859600
};

// Class DeadByDaylight.UMGPartyPlayerSlotWidget
// Size: 0x5c0 (Inherited: 0x338)
struct UUMGPartyPlayerSlotWidget : UMobileBaseUserWidget {
	struct UTextBlock* playerName; // 0x338(0x08)
	struct UTextBlock* AdditionalInformationText; // 0x340(0x08)
	struct UImage* FriendIcon; // 0x348(0x08)
	struct UUMGBaseButtonWidget* KickPlayerButton; // 0x350(0x08)
	struct FSlateFontInfo CharacterNameStyle; // 0x358(0x58)
	struct FSlateFontInfo PlayerInMatchStyle; // 0x3b0(0x58)
	float PlayerInMatchOpacity; // 0x408(0x04)
	float PlayerInLobbyOpacity; // 0x40c(0x04)
	struct UWidget* PlayerInformationContainer; // 0x410(0x08)
	struct UCanvasPanel* ReadyIconsCanvas; // 0x418(0x08)
	struct UCanvasPanel* RequestRoleIconsCanvas; // 0x420(0x08)
	struct UWidgetSwitcher* RoleSwitcher; // 0x428(0x08)
	struct UImage* LeaderIcon; // 0x430(0x08)
	char pad_438[0x188]; // 0x438(0x188)

	void SetVisualsFromState(enum class EPartyPlayerSlotWidgetState widgetState); // Function DeadByDaylight.UMGPartyPlayerSlotWidget.SetVisualsFromState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void HandleKickPlayerButtonEvent(); // Function DeadByDaylight.UMGPartyPlayerSlotWidget.HandleKickPlayerButtonEvent // (Final|Native|Private) // @ game+0x55f1270
};

// Class DeadByDaylight.UMGPartySlotsWidget
// Size: 0x438 (Inherited: 0x338)
struct UUMGPartySlotsWidget : UMobileBaseUserWidget {
	struct UPanelWidget* PartyPlayerSlotsContainer; // 0x338(0x08)
	struct TArray<struct UUMGPartyPlayerSlotWidget*> _partyPlayerSlots; // 0x340(0x10)
	char pad_350[0x8]; // 0x350(0x08)
	struct UVerticalBox* PartyBotSlotsContainer; // 0x358(0x08)
	struct TSoftClassPtr<UObject> PartyBotSlotWidgetClass; // 0x360(0x30)
	int32_t MaxSlotCount; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct FSlateColor ConflictingCharacterColor; // 0x398(0x28)
	struct FSlateColor NormalCharacterColor; // 0x3c0(0x28)
	char pad_3E8[0x50]; // 0x3e8(0x50)

	void SwapWidgets(int32_t first, int32_t second); // Function DeadByDaylight.UMGPartySlotsWidget.SwapWidgets // (Final|Native|Private|BlueprintCallable) // @ game+0x55f1dd0
	void SetWidgetState(int32_t index, enum class EPartyPlayerSlotWidgetState State); // Function DeadByDaylight.UMGPartySlotsWidget.SetWidgetState // (Final|Native|Private|BlueprintCallable) // @ game+0x55f1d00
	void RearrangePartySlots(); // Function DeadByDaylight.UMGPartySlotsWidget.RearrangePartySlots // (Final|Native|Private|BlueprintCallable) // @ game+0x55f1980
	void HandleKickPlayerButtonClickEvent(struct FString friendKrakenID); // Function DeadByDaylight.UMGPartySlotsWidget.HandleKickPlayerButtonClickEvent // (Final|Native|Private) // @ game+0x55f11d0
	void HandleInviteFriendButtonClickEvent(); // Function DeadByDaylight.UMGPartySlotsWidget.HandleInviteFriendButtonClickEvent // (Final|Native|Private) // @ game+0x55f11b0
	void HandleBotEditButtonClickEvent(int32_t index); // Function DeadByDaylight.UMGPartySlotsWidget.HandleBotEditButtonClickEvent // (Final|Native|Private) // @ game+0x55f1100
};

// Class DeadByDaylight.UMGPlayerRankInfo
// Size: 0x398 (Inherited: 0x338)
struct UUMGPlayerRankInfo : UMobileBaseUserWidget {
	struct UUMGTallyPipsContainer* PipsContainerWidget; // 0x338(0x08)
	struct UUMGTallyRankFrame* RankFrameWidget; // 0x340(0x08)
	struct UImage* Background; // 0x348(0x08)
	struct UTextBlock* TitleLabel; // 0x350(0x08)
	struct UTextBlock* RankLabel; // 0x358(0x08)
	struct UTextBlock* pipLabel; // 0x360(0x08)
	struct UCanvasPanel* HighlightContainer; // 0x368(0x08)
	struct FLinearColor _survivorColorBackground; // 0x370(0x10)
	struct FLinearColor _killerColorBackground; // 0x380(0x10)
	float _disableOpacity; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)

	void SetData(int32_t Rank, int32_t PipsRequiredForNextRank, int32_t filledPips, struct FText TitleLabel, struct FText pipLabel, enum class EPlayerRole PlayerRole, bool IsHighlight); // Function DeadByDaylight.UMGPlayerRankInfo.SetData // (Final|Native|Public|BlueprintCallable) // @ game+0x55f19a0
};

// Class DeadByDaylight.UMGPlayersStatusWidget
// Size: 0x438 (Inherited: 0x338)
struct UUMGPlayersStatusWidget : UMobileBaseUserWidget {
	struct TMap<enum class EPlayerRole, struct FCustomizedHudPlayerWrapperIdMapContainer> CustomizedHudWrapperIdMap; // 0x338(0x50)
	struct TSoftClassPtr<UObject> PlayerStatusIconClass; // 0x388(0x30)
	struct UHorizontalBox* playersContainer; // 0x3b8(0x08)
	struct TMap<struct FString, struct UUMGPlayerStatusIcon*> playerIconsByName; // 0x3c0(0x50)
	struct TArray<struct UUMGPlayerStatusIcon*> _playerIcons; // 0x410(0x10)
	char pad_420[0x18]; // 0x420(0x18)

	void OnPlayerStatusClicked(struct UUMGPlayerStatusIcon* playerStatusIcon); // Function DeadByDaylight.UMGPlayersStatusWidget.OnPlayerStatusClicked // (Final|Native|Private) // @ game+0x55f1810
};

// Class DeadByDaylight.UMGPlayerStatusIcon
// Size: 0x5b8 (Inherited: 0x338)
struct UUMGPlayerStatusIcon : UMobileBaseUserWidget {
	struct UProgressBar* HealthBar; // 0x338(0x08)
	struct UProgressBar* TimerBar; // 0x340(0x08)
	struct UCanvasPanel* HealthBarContainer; // 0x348(0x08)
	struct UCanvasPanel* TimerBarContainer; // 0x350(0x08)
	struct UTextBlock* playerName; // 0x358(0x08)
	struct UImage* StatusIconBloodTop; // 0x360(0x08)
	struct UImage* StatusIconBloodBottom; // 0x368(0x08)
	struct UImage* StatusIcon; // 0x370(0x08)
	struct UCanvasPanel* ObsessionCanvas; // 0x378(0x08)
	struct UCanvasPanel* BrokenIndicatorCanvas; // 0x380(0x08)
	struct UCanvasPanel* AfflictionCanvas; // 0x388(0x08)
	struct UCanvasPanel* AfflictionIntroCanvas; // 0x390(0x08)
	struct UCanvasPanel* SleepStatusCanvas; // 0x398(0x08)
	struct UCanvasPanel* SleepTimerCanvas; // 0x3a0(0x08)
	struct UCanvasPanel* ReverseBearTrapCanvas; // 0x3a8(0x08)
	struct UImage* ReverseBearTrapArrow; // 0x3b0(0x08)
	struct UCanvasPanel* SicknessCanvas; // 0x3b8(0x08)
	struct UImage* SicknessFill; // 0x3c0(0x08)
	struct UCanvasPanel* SpectateCanvas; // 0x3c8(0x08)
	struct UCanvasPanel* SelectedSpectatorCanvas; // 0x3d0(0x08)
	struct UCanvasPanel* AgonyCanvas; // 0x3d8(0x08)
	struct UCanvasPanel* HandsGrabbing; // 0x3e0(0x08)
	float SicknessFillHighOpacity; // 0x3e8(0x04)
	float SicknessFillLowOpacity; // 0x3ec(0x04)
	struct UCanvasPanel* StatusEffectContainerCanvas; // 0x3f0(0x08)
	struct UMaterialInstanceDynamic* SicknessFillMI; // 0x3f8(0x08)
	struct UTexture2D* _hookedTexture; // 0x400(0x08)
	struct UTexture2D* _hookedBloodTexture; // 0x408(0x08)
	struct UTexture2D* _trappedTexture; // 0x410(0x08)
	struct UTexture2D* _trappedBloodTexture; // 0x418(0x08)
	struct UTexture2D* _deadTexture; // 0x420(0x08)
	struct UTexture2D* _deadBloodTexture; // 0x428(0x08)
	struct UTexture2D* _escapedTexture; // 0x430(0x08)
	struct UTexture2D* _carriedTexture; // 0x438(0x08)
	struct UTexture2D* _injuredTexture; // 0x440(0x08)
	struct UTexture2D* _injuredBloodTexture; // 0x448(0x08)
	struct UTexture2D* _crawlingTexture; // 0x450(0x08)
	struct UTexture2D* _crawlingBloodTexture; // 0x458(0x08)
	struct UTexture2D* _sacrificedTexture; // 0x460(0x08)
	struct UTexture2D* _sacrificedBloodTexture; // 0x468(0x08)
	struct UTexture2D* _disconnectedTexture; // 0x470(0x08)
	struct UTexture2D* _deathBedTexture; // 0x478(0x08)
	struct UTexture2D* _defaultTexture; // 0x480(0x08)
	struct TSoftClassPtr<UObject> UMGStalkingStatusEffectUIClass; // 0x488(0x30)
	struct TSoftClassPtr<UObject> UMGLacerationStatusEffectUIClass; // 0x4b8(0x30)
	int32_t _maxNumberCharacterInName; // 0x4e8(0x04)
	char pad_4EC[0xbc]; // 0x4ec(0xbc)
	struct UUMGStalkingStatusEffectUI* _stalkingStatusEffectUI; // 0x5a8(0x08)
	struct UUMGLacerationStatusEffectUI* _lacerationStatusEffectUI; // 0x5b0(0x08)

	void SetSleepingTimer(float Progress); // Function DeadByDaylight.UMGPlayerStatusIcon.SetSleepingTimer // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetReverseTrapProgressionTimer(float Seconds); // Function DeadByDaylight.UMGPlayerStatusIcon.SetReverseTrapProgressionTimer // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnPlayerStatusButtonClicked(); // Function DeadByDaylight.UMGPlayerStatusIcon.OnPlayerStatusButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x55f6f00
};

// Class DeadByDaylight.UMGPopupButton
// Size: 0x4a0 (Inherited: 0x468)
struct UUMGPopupButton : UUMGBaseButtonWidget {
	char pad_468[0x14]; // 0x468(0x14)
	float DisabledOpacity; // 0x47c(0x04)
	float EnabledOpacity; // 0x480(0x04)
	char pad_484[0x4]; // 0x484(0x04)
	struct UImage* VFXs; // 0x488(0x08)
	struct UImage* Line; // 0x490(0x08)
	struct UImage* FXSmoke; // 0x498(0x08)

	void OnButtonReleased(); // Function DeadByDaylight.UMGPopupButton.OnButtonReleased // (Native|Public) // @ game+0x55f6ee0
	void OnButtonPressed(); // Function DeadByDaylight.UMGPopupButton.OnButtonPressed // (Native|Public) // @ game+0x55f6ec0
	void OnButtonClicked(); // Function DeadByDaylight.UMGPopupButton.OnButtonClicked // (Native|Public) // @ game+0x552b2b0
};

// Class DeadByDaylight.UMGPromoPackItemWidget
// Size: 0x4a0 (Inherited: 0x468)
struct UUMGPromoPackItemWidget : UUMGBaseButtonWidget {
	struct UCanvasPanel* SelectedPanel; // 0x468(0x08)
	struct UCanvasPanel* BackgroundPanel; // 0x470(0x08)
	struct UCanvasPanel* AmountPanel; // 0x478(0x08)
	char pad_480[0x20]; // 0x480(0x20)
};

// Class DeadByDaylight.UMGPromoPackCharacterWidget
// Size: 0x4a8 (Inherited: 0x4a0)
struct UUMGPromoPackCharacterWidget : UUMGPromoPackItemWidget {
	struct UCanvasPanel* OwnedPanel; // 0x4a0(0x08)
};

// Class DeadByDaylight.UMGPromoPackContentWidget
// Size: 0x360 (Inherited: 0x338)
struct UUMGPromoPackContentWidget : UMobileBaseUserWidget {
	struct UHorizontalBox* Content; // 0x338(0x08)
	struct UPromoPackContentDataAsset* WidgetPerContentType; // 0x340(0x08)
	struct UScrollBox* ScrollBox; // 0x348(0x08)
	struct TArray<struct TWeakObjectPtr<struct UVerticalBox>> _itemsContainer; // 0x350(0x10)
};

// Class DeadByDaylight.UMGPromoPackCurrencyWidget
// Size: 0x4a0 (Inherited: 0x4a0)
struct UUMGPromoPackCurrencyWidget : UUMGPromoPackItemWidget {
};

// Class DeadByDaylight.UMGPromoPackPurchaseCurrencyButtonWidget
// Size: 0x530 (Inherited: 0x510)
struct UUMGPromoPackPurchaseCurrencyButtonWidget : UUMGBaseCurrencyButtonWidget {
	struct UTextBlock* PercentageDiscountText; // 0x510(0x08)
	struct UTextBlock* UndiscountedPrice; // 0x518(0x08)
	struct UCanvasPanel* PercentageDiscountCanvas; // 0x520(0x08)
	struct UOverlay* OverlayUndiscountedPrice; // 0x528(0x08)
};

// Class DeadByDaylight.UMGPromoPackSelectedItemWidget
// Size: 0x370 (Inherited: 0x338)
struct UUMGPromoPackSelectedItemWidget : UMobileBaseUserWidget {
	struct UUMGHtmlRichText* ItemDescription; // 0x338(0x08)
	struct UImage* ItemTypeIcon; // 0x340(0x08)
	struct UTextBlock* ItemName; // 0x348(0x08)
	struct UTextBlock* ItemSubTitle; // 0x350(0x08)
	struct UNamedSlot* SelectedItemSlot; // 0x358(0x08)
	struct UUMGPromoPackItemWidget* SelectedItem; // 0x360(0x08)
	struct UScrollBox* ScrollBox; // 0x368(0x08)
};

// Class DeadByDaylight.UMGPromoPackSuggestionButton
// Size: 0x478 (Inherited: 0x468)
struct UUMGPromoPackSuggestionButton : UUMGBaseButtonWidget {
	struct URichTextBlock* RichTextButtonLabel; // 0x468(0x08)
	struct UImage* LineGlow; // 0x470(0x08)
};

// Class DeadByDaylight.UMGPurchaseBuyButton
// Size: 0x470 (Inherited: 0x468)
struct UUMGPurchaseBuyButton : UUMGBaseButtonWidget {
	struct UTextBlock* PriceText; // 0x468(0x08)
};

// Class DeadByDaylight.UMGPurchaseCurrencyWidget
// Size: 0x3c0 (Inherited: 0x338)
struct UUMGPurchaseCurrencyWidget : UMobileBaseUserWidget {
	struct UTextBlock* PercentageDiscountText; // 0x338(0x08)
	struct UImage* CurrencyIcon; // 0x340(0x08)
	struct UTextBlock* PriceText; // 0x348(0x08)
	struct UTextBlock* UndiscountedPrice; // 0x350(0x08)
	struct UImage* CurrencyColorImage; // 0x358(0x08)
	struct UOverlay* OriginalPriceOverlay; // 0x360(0x08)
	struct UCanvasPanel* DiscountCanvas; // 0x368(0x08)
	struct FSlateColor AffordableColor; // 0x370(0x28)
	struct FSlateColor NotAffordableColor; // 0x398(0x28)
};

// Class DeadByDaylight.UMGPurchaseItemsInfo
// Size: 0x350 (Inherited: 0x338)
struct UUMGPurchaseItemsInfo : UMobileBaseUserWidget {
	struct UImage* Icon; // 0x338(0x08)
	struct UTextBlock* Quantity; // 0x340(0x08)
	struct UTextBlock* ItemName; // 0x348(0x08)
};

// Class DeadByDaylight.UMGPurchaseSticker
// Size: 0x340 (Inherited: 0x338)
struct UUMGPurchaseSticker : UMobileBaseUserWidget {
	struct UTextBlock* TextDiscount; // 0x338(0x08)
};

// Class DeadByDaylight.UMGQueueStatusIconWidget
// Size: 0x370 (Inherited: 0x338)
struct UUMGQueueStatusIconWidget : UMobileBaseUserWidget {
	struct UImage* statusIndicator; // 0x338(0x08)
	struct FLinearColor AcceptableColor; // 0x340(0x10)
	struct FLinearColor ModerateColor; // 0x350(0x10)
	struct FLinearColor LongColor; // 0x360(0x10)
};

// Class DeadByDaylight.UMGRankBanner
// Size: 0x370 (Inherited: 0x338)
struct UUMGRankBanner : UMobileBaseUserWidget {
	char pad_338[0x8]; // 0x338(0x08)
	struct UUMGTallyRankFrame* RankFrameWidget; // 0x340(0x08)
	struct UButton* TooltipButton; // 0x348(0x08)
	struct UImage* HighlightImage; // 0x350(0x08)
	struct UAkAudioEvent* OnLongPressSound; // 0x358(0x08)
	struct FMulticastInlineDelegate _onLongPressRankTooltipEvent; // 0x360(0x10)

	void StopHighlight(); // Function DeadByDaylight.UMGRankBanner.StopHighlight // (Native|Public|BlueprintCallable) // @ game+0x55ec8d0
	void StartHighlight(); // Function DeadByDaylight.UMGRankBanner.StartHighlight // (Native|Public|BlueprintCallable) // @ game+0x55ec8a0
	void SetData(int32_t Rank, enum class EPlayerRole PlayerRole); // Function DeadByDaylight.UMGRankBanner.SetData // (Final|Native|Public|BlueprintCallable) // @ game+0x55f7000
	void HandleTooltipLongPressedEvent(); // Function DeadByDaylight.UMGRankBanner.HandleTooltipLongPressedEvent // (Final|Native|Private) // @ game+0x55f6ea0
};

// Class DeadByDaylight.UMGReceivedFriendRequestListElement
// Size: 0x400 (Inherited: 0x3f8)
struct UUMGReceivedFriendRequestListElement : UUMGBaseFriendListElement {
	struct URichTextBlock* FriendRequestStatusRichText; // 0x3f8(0x08)
};

// Class DeadByDaylight.UMGRefundDataWidget
// Size: 0x338 (Inherited: 0x338)
struct UUMGRefundDataWidget : UMobileBaseUserWidget {

	void SetDataAndUpdateWidget(struct FRefundUIData& RefundUIData); // Function DeadByDaylight.UMGRefundDataWidget.SetDataAndUpdateWidget // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGRewardPopupLayout
// Size: 0x4b8 (Inherited: 0x338)
struct UUMGRewardPopupLayout : UMobileBaseUserWidget {
	struct UHorizontalBox* TopHorizontalBox; // 0x338(0x08)
	struct UHorizontalBox* BottomHorizontalBox; // 0x340(0x08)
	struct UUMGRewardSlotTutorialPopupRewardWidget* FirstCharacter; // 0x348(0x08)
	struct UUMGRewardSlotTutorialPopupRewardWidget* SecondCharacter; // 0x350(0x08)
	struct UUMGRewardSlotTutorialPopupRewardWidget* ThirdCharacter; // 0x358(0x08)
	struct UUMGRewardSlotTutorialPopupRewardWidget* FourthCharacter; // 0x360(0x08)
	struct UUMGRewardSlotTutorialPopupRewardWidget* FifthCharacter; // 0x368(0x08)
	struct UUMGRewardSlotTutorialPopupRewardWidget* AuricCells; // 0x370(0x08)
	struct UUMGRewardSlotTutorialPopupRewardWidget* IridescentShards; // 0x378(0x08)
	struct UUMGRewardSlotTutorialPopupRewardWidget* BloodPoints; // 0x380(0x08)
	struct FRewardLayoutWidgetToGenerate TopWidgetToGenerate; // 0x388(0x90)
	struct FRewardLayoutWidgetToGenerate BottomWidgetToGenerate; // 0x418(0x90)
	char pad_4A8[0x10]; // 0x4a8(0x10)
};

// Class DeadByDaylight.UMGRewardSlotTutorialPopupRewardWidget
// Size: 0x360 (Inherited: 0x338)
struct UUMGRewardSlotTutorialPopupRewardWidget : UMobileBaseUserWidget {
	struct UTextBlock* RewardText; // 0x338(0x08)
	struct UImage* RewardPicture; // 0x340(0x08)
	struct UWidget* UnlockedPanel; // 0x348(0x08)
	struct UWidget* MissedRewardPanel; // 0x350(0x08)
	float RewardUnlockedTextOpacity; // 0x358(0x04)
	float RewardToBeMissedTextOpacity; // 0x35c(0x04)
};

// Class DeadByDaylight.UMGRewardWidget
// Size: 0x340 (Inherited: 0x338)
struct UUMGRewardWidget : UMobileBaseUserWidget {
	struct UImage* CheckIcon; // 0x338(0x08)

	void SetData(struct FRewardItemData& RewardData); // Function DeadByDaylight.UMGRewardWidget.SetData // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGRichTextRewardItemDecorator
// Size: 0x38 (Inherited: 0x30)
struct UUMGRichTextRewardItemDecorator : URichTextBlockDecorator {
	struct UDataTable* RewardSet; // 0x30(0x08)
};

// Class DeadByDaylight.UMGRitualClaimRewardButton
// Size: 0x480 (Inherited: 0x468)
struct UUMGRitualClaimRewardButton : UUMGBaseButtonWidget {
	struct FMulticastInlineDelegate OnPressedAnimationCompleted; // 0x468(0x10)
	struct UCanvasPanel* ClaimFxPanel; // 0x478(0x08)

	void SetClaimedButtonStatus(bool isClaimed, float percent); // Function DeadByDaylight.UMGRitualClaimRewardButton.SetClaimedButtonStatus // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55f6f20
	void OnPressedAnimationCompleted__DelegateSignature(); // DelegateFunction DeadByDaylight.UMGRitualClaimRewardButton.OnPressedAnimationCompleted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x5e02c90
	void BroadcastOnPressedAnimationCompleted(); // Function DeadByDaylight.UMGRitualClaimRewardButton.BroadcastOnPressedAnimationCompleted // (Final|Native|Protected|BlueprintCallable) // @ game+0x55f6e00
};

// Class DeadByDaylight.UMGRitualRefreshButton
// Size: 0x478 (Inherited: 0x468)
struct UUMGRitualRefreshButton : UUMGBaseButtonWidget {
	struct UCanvasPanel* RefreshCanvas; // 0x468(0x08)
	struct UWidgetSwitcher* RefreshSwitcher; // 0x470(0x08)

	void SetRefreshButton(int32_t Currency, enum class ECurrencyType currentyType, bool isAdsRefresh); // Function DeadByDaylight.UMGRitualRefreshButton.SetRefreshButton // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x55f70d0
};

// Class DeadByDaylight.UMGRoleSelectionScreen
// Size: 0x358 (Inherited: 0x338)
struct UUMGRoleSelectionScreen : UMobileBaseUserWidget {
	int32_t _newInboxMessageCount; // 0x338(0x04)
	char pad_33C[0x1c]; // 0x33c(0x1c)

	void ButtonClickEvent(enum class ERoleSelectionScreenButton buttonId); // Function DeadByDaylight.UMGRoleSelectionScreen.ButtonClickEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x55f6e20
};

// Class DeadByDaylight.UMGRoleSwitcherWidget
// Size: 0x2f8 (Inherited: 0x298)
struct UUMGRoleSwitcherWidget : UUserWidget {
	bool _isCurrentRoleRoleSwitcher; // 0x298(0x01)
	char pad_299[0x3]; // 0x299(0x03)
	float _touchDeltaTolerance; // 0x29c(0x04)
	char pad_2A0[0x58]; // 0x2a0(0x58)
};

// Class DeadByDaylight.UMGScoreAlertWidget
// Size: 0x2c8 (Inherited: 0x2c8)
struct UUMGScoreAlertWidget : UUMGBaseAlertWidget {

	void UpdateWidget(enum class EDBDScoreCategory scoreType, struct FString Title, int32_t ScoreValue, float Progress, struct FText& defaultScoreText); // Function DeadByDaylight.UMGScoreAlertWidget.UpdateWidget // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGSelectedCharacterWidget
// Size: 0x380 (Inherited: 0x338)
struct UUMGSelectedCharacterWidget : UMobileBaseUserWidget {
	struct UUMGCharacterPrestigeButton* PrestigeButton; // 0x338(0x08)
	struct UTextBlock* CharacterNameText; // 0x340(0x08)
	struct UTextBlock* CharacterLevelText; // 0x348(0x08)
	struct UVerticalBox* CharacterLevelVerticalBox; // 0x350(0x08)
	struct UImage* LeaderIcon; // 0x358(0x08)
	char pad_360[0x10]; // 0x360(0x10)
	struct FMulticastInlineDelegate _onCancelPartyButtonClick; // 0x370(0x10)

	void SetVisualsForReadyState(bool IsPlayerReady); // Function DeadByDaylight.UMGSelectedCharacterWidget.SetVisualsForReadyState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetVisualsForPartyState(bool triggerPartyVisuals); // Function DeadByDaylight.UMGSelectedCharacterWidget.SetVisualsForPartyState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void OnPrestigeButtonClicked(); // Function DeadByDaylight.UMGSelectedCharacterWidget.OnPrestigeButtonClicked // (Final|Native|Protected) // @ game+0x55fb7e0
};

// Class DeadByDaylight.UMGSettingContextWidget
// Size: 0x350 (Inherited: 0x338)
struct UUMGSettingContextWidget : UMobileBaseUserWidget {
	char pad_338[0x18]; // 0x338(0x18)

	void SetContextTitle(struct FText& contextTitle); // Function DeadByDaylight.UMGSettingContextWidget.SetContextTitle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void HandleContextButtonClickEvent(int32_t buttonData); // Function DeadByDaylight.UMGSettingContextWidget.HandleContextButtonClickEvent // (Native|Protected|BlueprintCallable) // @ game+0x55fb060
};

// Class DeadByDaylight.UMGSettingAboutContextWidget
// Size: 0x360 (Inherited: 0x350)
struct UUMGSettingAboutContextWidget : UUMGSettingContextWidget {
	struct UUMGSettingContextButton* EULAButton; // 0x350(0x08)
	struct UUMGSettingContextButton* CreditsButton; // 0x358(0x08)

	void SetVersionNumber(struct FString VersionNumber); // Function DeadByDaylight.UMGSettingAboutContextWidget.SetVersionNumber // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGSettingContextButton
// Size: 0x350 (Inherited: 0x338)
struct UUMGSettingContextButton : UMobileBaseUserWidget {
	struct FMulticastInlineDelegate OnSettingContextButtonClickEvent; // 0x338(0x10)
	char pad_348[0x8]; // 0x348(0x08)

	void SetIsSelected(bool IsSelected); // Function DeadByDaylight.UMGSettingContextButton.SetIsSelected // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void SetContextButtonData(int32_t buttonId); // Function DeadByDaylight.UMGSettingContextButton.SetContextButtonData // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb920
	void SetButtonText(struct FString ButtonText); // Function DeadByDaylight.UMGSettingContextButton.SetButtonText // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void HandleSettingContextButtonClick(); // Function DeadByDaylight.UMGSettingContextButton.HandleSettingContextButtonClick // (Final|Native|Protected|BlueprintCallable) // @ game+0x486b280
	int32_t GetContextButtonData(); // Function DeadByDaylight.UMGSettingContextButton.GetContextButtonData // (Final|Native|Public|BlueprintCallable) // @ game+0x55faef0
};

// Class DeadByDaylight.UMGSettingControlsContextWidget
// Size: 0x3e0 (Inherited: 0x350)
struct UUMGSettingControlsContextWidget : UUMGSettingContextWidget {
	char pad_350[0x60]; // 0x350(0x60)
	bool AimAssist; // 0x3b0(0x01)
	char pad_3B1[0x3]; // 0x3b1(0x03)
	int32_t HandSide; // 0x3b4(0x04)
	int32_t InteractionButton; // 0x3b8(0x04)
	bool InvertY; // 0x3bc(0x01)
	char pad_3BD[0x3]; // 0x3bd(0x03)
	float KillerCameraSensitivity; // 0x3c0(0x04)
	float SurvivorCameraSensitivity; // 0x3c4(0x04)
	char pad_3C8[0x18]; // 0x3c8(0x18)

	void HandleSurvivorCameraSensitivityChanged(float sliderValue); // Function DeadByDaylight.UMGSettingControlsContextWidget.HandleSurvivorCameraSensitivityChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb5e0
	void HandleKillerCameraSensitivityChanged(float sliderValue); // Function DeadByDaylight.UMGSettingControlsContextWidget.HandleKillerCameraSensitivityChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb2c0
	void HandleInvertYToggleClick(bool toggleValue); // Function DeadByDaylight.UMGSettingControlsContextWidget.HandleInvertYToggleClick // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb230
	void HandleInteractionButtonToggleClick(int32_t index); // Function DeadByDaylight.UMGSettingControlsContextWidget.HandleInteractionButtonToggleClick // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb1a0
	void HandleHandSideToggleClick(int32_t index); // Function DeadByDaylight.UMGSettingControlsContextWidget.HandleHandSideToggleClick // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb110
	void HandleAimAssistToggleClick(bool toggleValue); // Function DeadByDaylight.UMGSettingControlsContextWidget.HandleAimAssistToggleClick // (Final|Native|Public|BlueprintCallable) // @ game+0x55faf20
};

// Class DeadByDaylight.UMGSettingLanguageContextWidget
// Size: 0x398 (Inherited: 0x350)
struct UUMGSettingLanguageContextWidget : UUMGSettingContextWidget {
	struct UScrollBox* LanguageScrollBox; // 0x350(0x08)
	struct TSoftClassPtr<UObject> _languageButtonClass; // 0x358(0x30)
	int32_t _languageListRowGap; // 0x388(0x04)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct UUMGSettingContextButton* _selectedLanguageButton; // 0x390(0x08)
};

// Class DeadByDaylight.UMGSettingMenuButton
// Size: 0x350 (Inherited: 0x338)
struct UUMGSettingMenuButton : UMobileBaseUserWidget {
	char pad_338[0x18]; // 0x338(0x18)

	void SetTabButtonText(struct FText& ButtonText); // Function DeadByDaylight.UMGSettingMenuButton.SetTabButtonText // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void SetIsSelected(bool IsSelected); // Function DeadByDaylight.UMGSettingMenuButton.SetIsSelected // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void HandleSettingTabButtonClick(); // Function DeadByDaylight.UMGSettingMenuButton.HandleSettingTabButtonClick // (Final|Native|Protected|BlueprintCallable) // @ game+0x55fb5c0
};

// Class DeadByDaylight.UMGSettingSettingsContextWidget
// Size: 0x418 (Inherited: 0x350)
struct UUMGSettingSettingsContextWidget : UUMGSettingContextWidget {
	char pad_350[0x90]; // 0x350(0x90)
	bool MainVolumeOn; // 0x3e0(0x01)
	char pad_3E1[0x3]; // 0x3e1(0x03)
	float MainVolume; // 0x3e4(0x04)
	bool MenuVolumeOn; // 0x3e8(0x01)
	char pad_3E9[0x3]; // 0x3e9(0x03)
	float MenuVolume; // 0x3ec(0x04)
	bool IsLoggedIn; // 0x3f0(0x01)
	bool IsEnableUserCenterWithLoggedOut; // 0x3f1(0x01)
	bool IsLeaveTutorialButtonVisible; // 0x3f2(0x01)
	bool IsAutoDeclineFriendRequestOn; // 0x3f3(0x01)
	char pad_3F4[0x24]; // 0x3f4(0x24)

	void ShowLinkAccountRow(bool isShow); // Function DeadByDaylight.UMGSettingSettingsContextWidget.ShowLinkAccountRow // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void HandleUserCenterButtonClick(); // Function DeadByDaylight.UMGSettingSettingsContextWidget.HandleUserCenterButtonClick // (Final|Native|Public|BlueprintCallable) // @ game+0x4859600
	void HandleMenuVolumeToggleClick(bool toggleValue); // Function DeadByDaylight.UMGSettingSettingsContextWidget.HandleMenuVolumeToggleClick // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb530
	void HandleMenuVolumeChanged(float sliderValue); // Function DeadByDaylight.UMGSettingSettingsContextWidget.HandleMenuVolumeChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb4b0
	void HandleMainVolumeToggleClick(bool toggleValue); // Function DeadByDaylight.UMGSettingSettingsContextWidget.HandleMainVolumeToggleClick // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb420
	void HandleMainVolumeChanged(float sliderValue); // Function DeadByDaylight.UMGSettingSettingsContextWidget.HandleMainVolumeChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb3a0
	void HandleLogOutButtonClick(); // Function DeadByDaylight.UMGSettingSettingsContextWidget.HandleLogOutButtonClick // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb380
	void HandleLogInButtonClick(); // Function DeadByDaylight.UMGSettingSettingsContextWidget.HandleLogInButtonClick // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb360
	void HandleLeaveTutorialButtonClick(); // Function DeadByDaylight.UMGSettingSettingsContextWidget.HandleLeaveTutorialButtonClick // (Final|Native|Public|BlueprintCallable) // @ game+0x4859620
	void HandleAutoDeclineFriendRequestToggleClick(bool toggleValue); // Function DeadByDaylight.UMGSettingSettingsContextWidget.HandleAutoDeclineFriendRequestToggleClick // (Final|Native|Public|BlueprintCallable) // @ game+0x55fafb0
};

// Class DeadByDaylight.UMGSettingSubscriptionStatus
// Size: 0x340 (Inherited: 0x298)
struct UUMGSettingSubscriptionStatus : UUserWidget {
	struct FText SubscriptionStatusText; // 0x298(0x18)
	struct FText StatusText; // 0x2b0(0x18)
	struct FText InactiveStatusText; // 0x2c8(0x18)
	struct FText EndText; // 0x2e0(0x18)
	struct UWidgetSwitcher* TypeSwitcher; // 0x2f8(0x08)
	struct UHorizontalBox* ActiveWidget; // 0x300(0x08)
	struct UOverlay* InactiveWidget; // 0x308(0x08)
	struct UTextBlock* titleText; // 0x310(0x08)
	struct UTextBlock* DisplayName; // 0x318(0x08)
	struct UTextBlock* Status; // 0x320(0x08)
	struct UTextBlock* StatusInactive; // 0x328(0x08)
	struct UTextBlock* End; // 0x330(0x08)
	struct UTextBlock* EndDate; // 0x338(0x08)
};

// Class DeadByDaylight.UMGSettingTutorialContextWidget
// Size: 0x378 (Inherited: 0x350)
struct UUMGSettingTutorialContextWidget : UUMGSettingContextWidget {
	struct UUMGSettingContextButton* SurvivorTutorialButton; // 0x350(0x08)
	struct UUMGSettingContextButton* KillerTutorialButton; // 0x358(0x08)
	struct UUMGSettingContextButton* SurvivorCinematicButton; // 0x360(0x08)
	struct UUMGSettingContextButton* KillerCinematicButton; // 0x368(0x08)
	struct UUMGSettingContextButton* LoreCinematicButton; // 0x370(0x08)
};

// Class DeadByDaylight.UMGShadersPrecompilingProgressionWidget
// Size: 0x348 (Inherited: 0x338)
struct UUMGShadersPrecompilingProgressionWidget : UMobileBaseUserWidget {
	struct UProgressBar* _progressBar; // 0x338(0x08)
	struct UTextBlock* _progressionText; // 0x340(0x08)
};

// Class DeadByDaylight.UmgSpectatorHud
// Size: 0x580 (Inherited: 0x560)
struct UUmgSpectatorHud : UUmgPlayerHud {
	struct FMulticastInlineDelegate OnLeaveSpectateClicked; // 0x560(0x10)
	struct FMulticastInlineDelegate OnPlayerSpectate; // 0x570(0x10)

	void OnPlayerStatusSelected(struct FString playerName); // Function DeadByDaylight.UmgSpectatorHud.OnPlayerStatusSelected // (Final|Native|Private) // @ game+0x55fb740
	void HandleLeaveSpectateClicked(); // Function DeadByDaylight.UmgSpectatorHud.HandleLeaveSpectateClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x55fb340
};

// Class DeadByDaylight.UMGSplashScreen
// Size: 0x3a8 (Inherited: 0x338)
struct UUMGSplashScreen : UMobileBaseUserWidget {
	struct FMulticastInlineDelegate OnSaveGamePopupCompleteEvent; // 0x338(0x10)
	struct FMulticastInlineDelegate OnScreenTouched; // 0x348(0x10)
	struct UCanvasPanel* SavePopup; // 0x358(0x08)
	struct UTextBlock* GameVersion; // 0x360(0x08)
	struct UTextBlock* LoadingState; // 0x368(0x08)
	struct UTextBlock* PressKey; // 0x370(0x08)
	struct UButton* TapButton; // 0x378(0x08)
	struct UTextBlock* SaveGameTitle; // 0x380(0x08)
	struct UTextBlock* SaveGameDescription; // 0x388(0x08)
	struct UUMGDownloadProgressionWidget* DownloadProgression; // 0x390(0x08)
	struct UUMGCharacterSlideShowWidget* CharacterSlideShow; // 0x398(0x08)
	char pad_3A0[0x8]; // 0x3a0(0x08)

	void OnTapButtonClicked(); // Function DeadByDaylight.UMGSplashScreen.OnTapButtonClicked // (Final|Native|Private) // @ game+0x55fb840
	void OnSaveGamePopupComplete(); // Function DeadByDaylight.UMGSplashScreen.OnSaveGamePopupComplete // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x55fb800
};

// Class DeadByDaylight.UMGStalkingStatusEffectUI
// Size: 0x388 (Inherited: 0x338)
struct UUMGStalkingStatusEffectUI : UMobileBaseUserWidget {
	struct UCanvasPanel* StalkedCanvas; // 0x338(0x08)
	struct UImage* StalkingFillFull; // 0x340(0x08)
	struct UImage* StalkingFillLines; // 0x348(0x08)
	struct UImage* StalkingRedBackground; // 0x350(0x08)
	struct FName StalkingStartAnimationName; // 0x358(0x0c)
	char pad_364[0x4]; // 0x364(0x04)
	struct UMaterialInstanceDynamic* _stalkingFillFullMI; // 0x368(0x08)
	struct UMaterialInstanceDynamic* _stalkingFillLinesMI; // 0x370(0x08)
	char pad_378[0x10]; // 0x378(0x10)
};

// Class DeadByDaylight.UMGStatusEffectIcon
// Size: 0x6c0 (Inherited: 0x678)
struct UUMGStatusEffectIcon : UUMGLoadoutItemButton {
	struct FStatusEffectSlotData statusEffectData; // 0x678(0x48)

	void UpdateWidget(); // Function DeadByDaylight.UMGStatusEffectIcon.UpdateWidget // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void UpdatePercentageFill(float Percentage); // Function DeadByDaylight.UMGStatusEffectIcon.UpdatePercentageFill // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGStatusEffectsWidget
// Size: 0x3c8 (Inherited: 0x338)
struct UUMGStatusEffectsWidget : UMobileBaseUserWidget {
	struct TSoftClassPtr<UObject> AtlantaStatusEffectIconClass; // 0x338(0x30)
	struct UHorizontalBox* StatusEffectsBox; // 0x368(0x08)
	struct TMap<struct FName, struct UUMGStatusEffectIcon*> _statusEffectsMap; // 0x370(0x50)
	char pad_3C0[0x8]; // 0x3c0(0x08)

	void RemoveExistingStatusEffect(struct FString statusEffectID); // Function DeadByDaylight.UMGStatusEffectsWidget.RemoveExistingStatusEffect // (Final|Native|Protected|BlueprintCallable) // @ game+0x55fb880
};

// Class DeadByDaylight.UMGStoreAuricCellButton
// Size: 0x510 (Inherited: 0x468)
struct UUMGStoreAuricCellButton : UUMGBaseButtonWidget {
	char pad_468[0x10]; // 0x468(0x10)
	struct FCurrencyPurchaseData CurrencyPurchaseData; // 0x478(0x68)
	struct UTextBlock* AuricCellTitleText; // 0x4e0(0x08)
	struct UOverlay* Timer; // 0x4e8(0x08)
	char pad_4F0[0x20]; // 0x4f0(0x20)

	void UpdateWidget(int32_t Multiplier, struct FDateTime EndDate); // Function DeadByDaylight.UMGStoreAuricCellButton.UpdateWidget // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x5e02c90
	void UpdateFirstPurchaseEndInUI(struct FString endInString); // Function DeadByDaylight.UMGStoreAuricCellButton.UpdateFirstPurchaseEndInUI // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void ReportInvalidPercentage(float Percentage); // Function DeadByDaylight.UMGStoreAuricCellButton.ReportInvalidPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x46a2490
	bool HasBonusExpired(struct FDateTime EndDate); // Function DeadByDaylight.UMGStoreAuricCellButton.HasBonusExpired // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x55fb660
};

// Class DeadByDaylight.UMGStoreEventItemsPackButton
// Size: 0x3f0 (Inherited: 0x338)
struct UUMGStoreEventItemsPackButton : UMobileBaseUserWidget {
	struct UImage* ImageIcon; // 0x338(0x08)
	struct UTextBlock* titleText; // 0x340(0x08)
	struct UTextBlock* CurrencyAmountText; // 0x348(0x08)
	struct UTextBlock* CurrencyNameText; // 0x350(0x08)
	struct UUniformGridPanel* UniformGridPanel; // 0x358(0x08)
	struct UUMGBaseButtonWidget* BuyButton; // 0x360(0x08)
	struct UUMGAtlStorePriceWidget* StorePriceWidget; // 0x368(0x08)
	struct UUMGAtlEndDateTimerWidget* EndDateTimerWidget; // 0x370(0x08)
	struct UCanvasPanel* SelectedImageBox; // 0x378(0x08)
	struct TSoftClassPtr<UObject> EventItemWidgetClassPtr; // 0x380(0x30)
	int32_t nbColumns; // 0x3b0(0x04)
	char pad_3B4[0x3c]; // 0x3b4(0x3c)

	void ShowSelectedCanvas(); // Function DeadByDaylight.UMGStoreEventItemsPackButton.ShowSelectedCanvas // (Final|Native|Private) // @ game+0x55fb9b0
	void HideSelectedCanvas(); // Function DeadByDaylight.UMGStoreEventItemsPackButton.HideSelectedCanvas // (Final|Native|Private) // @ game+0x55fb700
	void HandleEndDateTimerReached(); // Function DeadByDaylight.UMGStoreEventItemsPackButton.HandleEndDateTimerReached // (Final|Native|Private) // @ game+0x55fb0f0
	void HandleButtonClicked(); // Function DeadByDaylight.UMGStoreEventItemsPackButton.HandleButtonClicked // (Final|Native|Private) // @ game+0x55fb040
};

// Class DeadByDaylight.UMGStorefrontCustomizationWidget
// Size: 0x4b0 (Inherited: 0x4a0)
struct UUMGStorefrontCustomizationWidget : UUMGPromoPackItemWidget {
	struct UTextBlock* CustomizationQuantityText; // 0x4a0(0x08)
	struct UCanvasPanel* CustomizationQuantityPanel; // 0x4a8(0x08)
};

// Class DeadByDaylight.UMGStreamVideoWidget
// Size: 0x380 (Inherited: 0x338)
struct UUMGStreamVideoWidget : UMobileBaseUserWidget {
	struct UImage* VideoImage; // 0x338(0x08)
	struct UButton* TapButton; // 0x340(0x08)
	struct UUMGBaseButtonWidget* SkipButton; // 0x348(0x08)
	char pad_350[0x10]; // 0x350(0x10)
	float _timerShowSkipButton; // 0x360(0x04)
	char pad_364[0x1c]; // 0x364(0x1c)

	void OnTapButtonClicked(); // Function DeadByDaylight.UMGStreamVideoWidget.OnTapButtonClicked // (Final|Native|Protected) // @ game+0x55fb860
	void OnSkipButtonClicked(); // Function DeadByDaylight.UMGStreamVideoWidget.OnSkipButtonClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x55fb820
};

// Class DeadByDaylight.UMGSubscriptionPackButtonWidget
// Size: 0x5c0 (Inherited: 0x468)
struct UUMGSubscriptionPackButtonWidget : UUMGBaseButtonWidget {
	struct USubscriptionRewardDataAsset* WidgetPerRewardType; // 0x468(0x08)
	struct UCanvasPanel* ButtonPressedVFX; // 0x470(0x08)
	struct UCanvasPanel* PricePanel; // 0x478(0x08)
	struct UImage* TitleIcon; // 0x480(0x08)
	struct UTextBlock* Title; // 0x488(0x08)
	struct UTextBlock* Price; // 0x490(0x08)
	struct UCanvasPanel* RenewalDatePanel; // 0x498(0x08)
	struct UTextBlock* RenewalDateText; // 0x4a0(0x08)
	struct UUniformGridPanel* PurchaseRewardsGrid; // 0x4a8(0x08)
	struct UUniformGridPanel* DailyRewardsGrid; // 0x4b0(0x08)
	struct UImage* PortraitBorder; // 0x4b8(0x08)
	struct UButton* InfoButton; // 0x4c0(0x08)
	struct UImage* ActiveBackgroundImage; // 0x4c8(0x08)
	struct UImage* NonActiveBackgroundImage; // 0x4d0(0x08)
	struct FLinearColor ActiveTextColor; // 0x4d8(0x10)
	struct FLinearColor NonActiveTextColor; // 0x4e8(0x10)
	struct FLinearColor TextColor; // 0x4f8(0x10)
	struct FLinearColor ActiveSmokeBackgroundTint; // 0x508(0x10)
	struct FLinearColor NonActiveSmokeBackgroundTint; // 0x518(0x10)
	struct UImage* PurchaseRewardsSmokeBackground; // 0x528(0x08)
	struct UImage* DailyRewardsSmokeBackground; // 0x530(0x08)
	struct FLinearColor ActiveTitleBackgroundTint; // 0x538(0x10)
	struct FLinearColor NonActiveTitleBackgroundTint; // 0x548(0x10)
	struct UImage* TitleBackground; // 0x558(0x08)
	struct UCanvasPanel* ActiveFrame; // 0x560(0x08)
	struct UCanvasPanel* NonActiveFrame; // 0x568(0x08)
	char pad_570[0x50]; // 0x570(0x50)

	void OnInfoButtonClicked(); // Function DeadByDaylight.UMGSubscriptionPackButtonWidget.OnInfoButtonClicked // (Final|Native|Private|BlueprintCallable) // @ game+0x55fb720
};

// Class DeadByDaylight.UMGSubscriptionsPageScrollWidget
// Size: 0x4e8 (Inherited: 0x470)
struct UUMGSubscriptionsPageScrollWidget : UUMGGridPageScrollWidget {
	struct TSoftClassPtr<UObject> SubscriptionPackButtonClass; // 0x470(0x30)
	struct FVector2D ItemPadding; // 0x4a0(0x08)
	char pad_4A8[0x40]; // 0x4a8(0x40)

	void HandleSubscriptionInfoButtonClickedEvent(struct FString subscriptionDetails); // Function DeadByDaylight.UMGSubscriptionsPageScrollWidget.HandleSubscriptionInfoButtonClickedEvent // (Final|Native|Private) // @ game+0x5600e10
	void HandleBuySubscriptionPackButtonClickedEvent(struct FName subscriptionPackID); // Function DeadByDaylight.UMGSubscriptionsPageScrollWidget.HandleBuySubscriptionPackButtonClickedEvent // (Final|Native|Private) // @ game+0x5600d70
};

// Class DeadByDaylight.UmgSurvivorHud
// Size: 0x860 (Inherited: 0x560)
struct UUmgSurvivorHud : UUmgPlayableHud {
	char pad_560[0x8]; // 0x560(0x08)
	struct UActionButton* CrouchButton; // 0x568(0x08)
	struct UCanvasPanel* CrouchButtonContainer; // 0x570(0x08)
	struct UWiggleWidget* StruggleWidget; // 0x578(0x08)
	struct UCanvasPanel* StruggleWidgetContainer; // 0x580(0x08)
	struct UWiggleWidget* WiggleWidget; // 0x588(0x08)
	struct UCanvasPanel* WiggleWidgetContainer; // 0x590(0x08)
	struct ACamperPlayer* Survivor; // 0x598(0x08)
	struct UActionButton* CancelButton; // 0x5a0(0x08)
	struct UCanvasPanel* CenterInteractionButtonContainer; // 0x5a8(0x08)
	struct UCanvasPanel* LookBackButtonContainer; // 0x5b0(0x08)
	struct UAtlantaHudLookBackJoystick* LookBackJoystick; // 0x5b8(0x08)
	struct UActionButton* SkillCheckButton; // 0x5c0(0x08)
	struct UCanvasPanel* SkillCheckButtonCanvas; // 0x5c8(0x08)
	struct UCanvasPanel* InsaneSkillCheckButtonCanvas; // 0x5d0(0x08)
	char pad_5D8[0x8]; // 0x5d8(0x08)
	struct FSlateBrush _unpressedLookBackJoystickThumbImage; // 0x5e0(0x90)
	struct FSlateBrush _pressedLookBackJoystickThumbImage; // 0x670(0x90)
	char pad_700[0x20]; // 0x700(0x20)
	struct FSlateBrush _unpressedLookBackJoystickBackgroundImage; // 0x720(0x90)
	struct FSlateBrush _pressedLookBackJoystickBackgroundImage; // 0x7b0(0x90)
	char pad_840[0x20]; // 0x840(0x20)

	void UpdateCancelButton(); // Function DeadByDaylight.UmgSurvivorHud.UpdateCancelButton // (Final|Native|Private|BlueprintCallable) // @ game+0x56013e0
	bool ShouldUseContextualItemButton(); // Function DeadByDaylight.UmgSurvivorHud.ShouldUseContextualItemButton // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x5601390
	void SetSkillCheckButtonPosition(bool IsInsane); // Function DeadByDaylight.UmgSurvivorHud.SetSkillCheckButtonPosition // (Final|Native|Private|BlueprintCallable) // @ game+0x56012e0
	void SetNonRestrictedControlsVisibility(bool visible); // Function DeadByDaylight.UmgSurvivorHud.SetNonRestrictedControlsVisibility // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void SetLookBackJoystickPosition(struct FVector2D& position); // Function DeadByDaylight.UmgSurvivorHud.SetLookBackJoystickPosition // (Final|Native|Private|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x56011d0
	void SetLookBackJoystickImage(bool Pressed); // Function DeadByDaylight.UmgSurvivorHud.SetLookBackJoystickImage // (Final|Native|Private|BlueprintCallable) // @ game+0x5601140
	void RespondToVirtualJoystickPressChanged(int32_t controlIndex, bool Pressed); // Function DeadByDaylight.UmgSurvivorHud.RespondToVirtualJoystickPressChanged // (Final|Native|Public) // @ game+0x5600f60
	void OnCancelButtonClicked(); // Function DeadByDaylight.UmgSurvivorHud.OnCancelButtonClicked // (Final|Native|Private|BlueprintCallable) // @ game+0x5600f00
	void InitializeLookBackJoystickPosition(); // Function DeadByDaylight.UmgSurvivorHud.InitializeLookBackJoystickPosition // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	bool HasSecondaryActionAvailable(); // Function DeadByDaylight.UmgSurvivorHud.HasSecondaryActionAvailable // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x5600eb0
	struct FVector2D GetLookBackJoystickNormalizedOffset(); // Function DeadByDaylight.UmgSurvivorHud.GetLookBackJoystickNormalizedOffset // (Final|Native|Private|HasDefaults|BlueprintCallable) // @ game+0x5600a80
	bool GetLookBackJoystickIsPressed(); // Function DeadByDaylight.UmgSurvivorHud.GetLookBackJoystickIsPressed // (Final|Native|Private|BlueprintCallable) // @ game+0x5600a50
	struct FText GetCenterItemText(); // Function DeadByDaylight.UmgSurvivorHud.GetCenterItemText // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x56008c0
	struct UTexture2D* GetCenterItemIcon(); // Function DeadByDaylight.UmgSurvivorHud.GetCenterItemIcon // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x5600890
	void CenterItemClicked(bool fromCancelRequest); // Function DeadByDaylight.UmgSurvivorHud.CenterItemClicked // (Final|Native|Private|BlueprintCallable) // @ game+0x5600800
};

// Class DeadByDaylight.UMGSwitcherScreen
// Size: 0x3e8 (Inherited: 0x338)
struct UUMGSwitcherScreen : UMobileBaseUserWidget {
	struct FMulticastInlineDelegate OnLoadoutWidgetSlotClicked; // 0x338(0x10)
	struct FMulticastInlineDelegate OnLoadoutWidgetInventoryItemSelected; // 0x348(0x10)
	struct FMulticastInlineDelegate OnLoadoutWidgetInventoryItemUnselected; // 0x358(0x10)
	char pad_368[0x60]; // 0x368(0x60)
	struct UWidgetSwitcher* ContainerWidgetSwitcher; // 0x3c8(0x08)
	struct UUMGBloodStoreWidget* BloodStoreWidget; // 0x3d0(0x08)
	struct UUMGLoadoutWidget* LoadoutWidget; // 0x3d8(0x08)
	struct UUMGCharacterSelectionWidget* CharacterSelectionWidget; // 0x3e0(0x08)

	void BroadcastSlotClickedEvent(int32_t LoadoutSlot); // Function DeadByDaylight.UMGSwitcherScreen.BroadcastSlotClickedEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55d8590
	void BroadcastItemUnSelectedEvent(int32_t itemIndex); // Function DeadByDaylight.UMGSwitcherScreen.BroadcastItemUnSelectedEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x5600770
	void BroadcastItemSelectedEvent(int32_t itemIndex); // Function DeadByDaylight.UMGSwitcherScreen.BroadcastItemSelectedEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x55d86c0
	void BroadcastCharacterSelectedEvent(int32_t characterIndex); // Function DeadByDaylight.UMGSwitcherScreen.BroadcastCharacterSelectedEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x56006e0
	void BroadcastCharacterRoleButtonClickedEvent(); // Function DeadByDaylight.UMGSwitcherScreen.BroadcastCharacterRoleButtonClickedEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x56006c0
	void BroadcastCharacterInfoButtonClickedEvent(); // Function DeadByDaylight.UMGSwitcherScreen.BroadcastCharacterInfoButtonClickedEvent // (Final|Native|Protected|BlueprintCallable) // @ game+0x48501f0
	void BroadcastBloodStoreRegenerate(int32_t characterId); // Function DeadByDaylight.UMGSwitcherScreen.BroadcastBloodStoreRegenerate // (Final|Native|Protected|BlueprintCallable) // @ game+0x55d36e0
	void BroadcastBloodNodeSelected(int32_t characterId, int32_t NodeId, int32_t nodeDepth); // Function DeadByDaylight.UMGSwitcherScreen.BroadcastBloodNodeSelected // (Final|Native|Protected|BlueprintCallable) // @ game+0x56005b0
	void BroadcastBloodNodePurchase(int32_t characterId); // Function DeadByDaylight.UMGSwitcherScreen.BroadcastBloodNodePurchase // (Final|Native|Protected|BlueprintCallable) // @ game+0x55d32d0
};

// Class DeadByDaylight.UMGTallyBloodpointsScoreWidget
// Size: 0x338 (Inherited: 0x338)
struct UUMGTallyBloodpointsScoreWidget : UMobileBaseUserWidget {

	void UpdateWidgetByScoreData(struct FText& Title, struct UTexture2D* Asset, int32_t ScoreValue); // Function DeadByDaylight.UMGTallyBloodpointsScoreWidget.UpdateWidgetByScoreData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGTallyListElementWidget
// Size: 0x348 (Inherited: 0x338)
struct UUMGTallyListElementWidget : UMobileBaseUserWidget {
	int32_t ElementIndex; // 0x338(0x04)
	struct FVector2D WidgetSize; // 0x33c(0x08)
	char pad_344[0x4]; // 0x344(0x04)

	void OnPlayInAnimation(); // Function DeadByDaylight.UMGTallyListElementWidget.OnPlayInAnimation // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnPageVisibilityChanged(bool IsVisible, bool wasInAnimationPlayed); // Function DeadByDaylight.UMGTallyListElementWidget.OnPageVisibilityChanged // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnInAnimationFinished(); // Function DeadByDaylight.UMGTallyListElementWidget.OnInAnimationFinished // (Native|Public|BlueprintCallable) // @ game+0x48306d0
};

// Class DeadByDaylight.UMGTallyBloodpointsWidget
// Size: 0x4e8 (Inherited: 0x348)
struct UUMGTallyBloodpointsWidget : UUMGTallyListElementWidget {
	enum class ESlateVisibility _itemBoxVisibility; // 0x348(0x01)
	char pad_349[0x7]; // 0x349(0x07)
	struct FText _labelTotalScore; // 0x350(0x18)
	struct FText _labelItemTitle; // 0x368(0x18)
	struct FText _labelItemAddOnTitle; // 0x380(0x18)
	struct FLinearColor _labelItemTitleColor; // 0x398(0x10)
	struct UHorizontalBox* BoxScoreCategory; // 0x3a8(0x08)
	struct TMap<enum class EDBDScoreCategory, struct FScoreCategoryUIExtraData> _scoreCategoryExtraDataMap; // 0x3b0(0x50)
	char pad_400[0xe8]; // 0x400(0xe8)

	void UpdateTallyTotalBloodpoints(int32_t totalValue); // Function DeadByDaylight.UMGTallyBloodpointsWidget.UpdateTallyTotalBloodpoints // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void UpdateTallyRewardWidget(struct FString rewardName, int32_t existReward, int32_t addReward); // Function DeadByDaylight.UMGTallyBloodpointsWidget.UpdateTallyRewardWidget // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void UpdateTallyItemWidget(struct FTallyItemChangedData& Data); // Function DeadByDaylight.UMGTallyBloodpointsWidget.UpdateTallyItemWidget // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void ShowTallyItemWidget(bool isShow); // Function DeadByDaylight.UMGTallyBloodpointsWidget.ShowTallyItemWidget // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGTallyBonusVisualWidget
// Size: 0x390 (Inherited: 0x338)
struct UUMGTallyBonusVisualWidget : UMobileBaseUserWidget {
	struct TMap<int32_t, struct TSoftObjectPtr<UTexture2D>> MultiplierTextureMap; // 0x338(0x50)
	struct UImage* MultiplierImage; // 0x388(0x08)
};

// Class DeadByDaylight.UMGTallyCharacterProgressionBar
// Size: 0x360 (Inherited: 0x338)
struct UUMGTallyCharacterProgressionBar : UMobileBaseUserWidget {
	char pad_338[0x20]; // 0x338(0x20)
	struct UProgressBar* ProgressBar; // 0x358(0x08)
};

// Class DeadByDaylight.UMGTallyCharacterProgressionWidget
// Size: 0x3d0 (Inherited: 0x348)
struct UUMGTallyCharacterProgressionWidget : UUMGTallyListElementWidget {
	struct UUMGTallyCharacterProgressionBar* CharacterProgressionBar; // 0x348(0x08)
	struct UTextBlock* TextCharacterCurrentExperience; // 0x350(0x08)
	struct UTextBlock* TextExperienceForNextLevel; // 0x358(0x08)
	struct UTextBlock* TextExperienceEarned; // 0x360(0x08)
	struct UTextBlock* TextCurrentLevel; // 0x368(0x08)
	struct UImage* CharacterPicture; // 0x370(0x08)
	struct UImage* prestigeIcon; // 0x378(0x08)
	struct UTextBlock* TextCharacterName; // 0x380(0x08)
	int32_t ExperiencePerSecond; // 0x388(0x04)
	char pad_38C[0x44]; // 0x38c(0x44)

	void StartSequence(); // Function DeadByDaylight.UMGTallyCharacterProgressionWidget.StartSequence // (Final|Native|Public|BlueprintCallable) // @ game+0x56013c0
	void StartNewLevel(); // Function DeadByDaylight.UMGTallyCharacterProgressionWidget.StartNewLevel // (Final|Native|Private) // @ game+0x5600f40
	void SetWidgetToFinalState(); // Function DeadByDaylight.UMGTallyCharacterProgressionWidget.SetWidgetToFinalState // (Final|Native|Public|BlueprintCallable) // @ game+0x5601370
	void OnFullBarOut(); // Function DeadByDaylight.UMGTallyCharacterProgressionWidget.OnFullBarOut // (Final|Native|Private) // @ game+0x5600f40
	void OnFullBarIn(); // Function DeadByDaylight.UMGTallyCharacterProgressionWidget.OnFullBarIn // (Final|Native|Private) // @ game+0x5600f20
};

// Class DeadByDaylight.UMGTallyEmblemMarker
// Size: 0x390 (Inherited: 0x338)
struct UUMGTallyEmblemMarker : UMobileBaseUserWidget {
	struct UImage* QualityImage; // 0x338(0x08)
	struct TMap<enum class EEmblemQuality, struct FEmblemQualityImages> _qualityImages; // 0x340(0x50)
};

// Class DeadByDaylight.UMGTallyEmblemProgressBar
// Size: 0x3d0 (Inherited: 0x338)
struct UUMGTallyEmblemProgressBar : UMobileBaseUserWidget {
	struct UProgressBar* ProgressBar; // 0x338(0x08)
	struct UCanvasPanel* QualityContainer; // 0x340(0x08)
	struct TSoftClassPtr<UObject> EmblemQualityClass; // 0x348(0x30)
	struct FVector2D _emblemQualityAlignment; // 0x378(0x08)
	struct TMap<enum class EEmblemQuality, struct FSlateBrush> _qualityFillImages; // 0x380(0x50)
};

// Class DeadByDaylight.UMGTallyEmblemProgressionWidget
// Size: 0x3a8 (Inherited: 0x338)
struct UUMGTallyEmblemProgressionWidget : UMobileBaseUserWidget {
	struct UImage* PositiveIcon; // 0x338(0x08)
	struct UImage* NegativeIcon; // 0x340(0x08)
	struct UTextBlock* PercentText; // 0x348(0x08)
	struct UTextBlock* descriptionText; // 0x350(0x08)
	struct FSlateColor WarningPercentColor; // 0x358(0x28)
	struct FSlateColor WarningDescriptionColor; // 0x380(0x28)
};

// Class DeadByDaylight.UMGTallyEmblemsWidget
// Size: 0x390 (Inherited: 0x348)
struct UUMGTallyEmblemsWidget : UUMGTallyListElementWidget {
	struct TSoftClassPtr<UObject> EmblemWidgetClass; // 0x348(0x30)
	struct UHorizontalBox* EmblemsContainer; // 0x378(0x08)
	struct TArray<struct UUMGTallyEmblemWidget*> _emblems; // 0x380(0x10)

	struct TArray<struct UUMGTallyEmblemWidget*> GetEmblems(); // Function DeadByDaylight.UMGTallyEmblemsWidget.GetEmblems // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5600940
};

// Class DeadByDaylight.UMGTallyEmblemWidget
// Size: 0x398 (Inherited: 0x338)
struct UUMGTallyEmblemWidget : UMobileBaseUserWidget {
	struct TMap<enum class EEmblemQuality, struct UTexture2D*> _emblemBackgrounds; // 0x338(0x50)
	struct UImage* BackgroundImage; // 0x388(0x08)
	struct UImage* IconImage; // 0x390(0x08)

	void PlayFadeInAnimation(); // Function DeadByDaylight.UMGTallyEmblemWidget.PlayFadeInAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGTallyListWidget
// Size: 0x558 (Inherited: 0x468)
struct UUMGTallyListWidget : UUMGPageScrollWidget {
	struct FText TopLeftText; // 0x468(0x18)
	struct FText TopRightText; // 0x480(0x18)
	struct UCanvasPanel* ListBGPanel; // 0x498(0x08)
	enum class EPlayerRole _playerRole; // 0x4a0(0x01)
	char pad_4A1[0x7]; // 0x4a1(0x07)
	struct TSet<int32_t> _inAnimationPlayedPages; // 0x4a8(0x50)
	struct TMap<enum class ETallyListPageID, struct UUMGTallyListElementWidget*> _listItemWidgets; // 0x4f8(0x50)
	char pad_548[0x10]; // 0x548(0x10)
};

// Class DeadByDaylight.UMGTallyPip
// Size: 0x348 (Inherited: 0x338)
struct UUMGTallyPip : UMobileBaseUserWidget {
	struct UImage* Filling; // 0x338(0x08)
	char pad_340[0x8]; // 0x340(0x08)

	void HideFilling(); // Function DeadByDaylight.UMGTallyPip.HideFilling // (Final|Native|Protected) // @ game+0x5600ee0
};

// Class DeadByDaylight.UMGTallyPipsContainer
// Size: 0x370 (Inherited: 0x338)
struct UUMGTallyPipsContainer : UMobileBaseUserWidget {
	struct UHorizontalBox* PipsContainer; // 0x338(0x08)
	struct TArray<struct TSoftClassPtr<UObject>> _pipsClasses; // 0x340(0x10)
	struct FMargin _pipsPadding; // 0x350(0x10)
	struct TArray<struct UUMGTallyPip*> Pips; // 0x360(0x10)

	void SetData(int32_t Rank, int32_t PipsRequiredForNextRank, int32_t filledPips); // Function DeadByDaylight.UMGTallyPipsContainer.SetData // (Final|Native|Public|BlueprintCallable) // @ game+0x5601030
};

// Class DeadByDaylight.UMGTallyPlayerLevelWidget
// Size: 0x390 (Inherited: 0x348)
struct UUMGTallyPlayerLevelWidget : UUMGTallyListElementWidget {
	char pad_348[0x48]; // 0x348(0x48)

	void OnSetInitialPlayerXp(int32_t initialXp, struct FPlayerLevelData& initialLevelData); // Function DeadByDaylight.UMGTallyPlayerLevelWidget.OnSetInitialPlayerXp // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	void OnSetFinalPlayerXp(int32_t finalXp, struct TArray<struct FPlayerLevelData>& reachedLevels, struct TArray<struct FXpBonusData>& xpBonuses, struct TArray<struct FRewardItemData>& rewardsEarned); // Function DeadByDaylight.UMGTallyPlayerLevelWidget.OnSetFinalPlayerXp // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x5e02c90
	struct TArray<struct FXpBonusData> GetXpBonuses(); // Function DeadByDaylight.UMGTallyPlayerLevelWidget.GetXpBonuses // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5600c70
	struct TArray<struct FRewardItemData> GetRewardsEarned(); // Function DeadByDaylight.UMGTallyPlayerLevelWidget.GetRewardsEarned // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5600bd0
	struct TArray<struct FPlayerLevelData> GetReachedLevels(); // Function DeadByDaylight.UMGTallyPlayerLevelWidget.GetReachedLevels // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5600af0
	int32_t GetInitialXp(); // Function DeadByDaylight.UMGTallyPlayerLevelWidget.GetInitialXp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5600a30
	int32_t GetFinalXp(); // Function DeadByDaylight.UMGTallyPlayerLevelWidget.GetFinalXp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5600a10
};

// Class DeadByDaylight.UMGTallyProgressBar
// Size: 0x360 (Inherited: 0x338)
struct UUMGTallyProgressBar : UMobileBaseUserWidget {
	struct UProgressBar* ProgressBar; // 0x338(0x08)
	struct UCanvasPanel* PipsContainer; // 0x340(0x08)
	struct TArray<struct TSoftClassPtr<UObject>> _pipsClasses; // 0x348(0x10)
	struct FVector2D _pipsAlignment; // 0x358(0x08)

	void SetPercent(float value); // Function DeadByDaylight.UMGTallyProgressBar.SetPercent // (Final|Native|Public|BlueprintCallable) // @ game+0x5601260
	int32_t GetPipsCount(); // Function DeadByDaylight.UMGTallyProgressBar.GetPipsCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5600ac0
};

// Class DeadByDaylight.UMGTallyRankBanner
// Size: 0x350 (Inherited: 0x338)
struct UUMGTallyRankBanner : UMobileBaseUserWidget {
	struct UUMGTallyPipsContainer* PipsContainerWidget; // 0x338(0x08)
	struct UUMGRankBanner* RankBanner; // 0x340(0x08)
	struct UImage* SmokeBackground; // 0x348(0x08)

	void SetAsLocked(bool locked); // Function DeadByDaylight.UMGTallyRankBanner.SetAsLocked // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.UMGTallyRankFrame
// Size: 0x348 (Inherited: 0x338)
struct UUMGTallyRankFrame : UMobileBaseUserWidget {
	struct UImage* Frame; // 0x338(0x08)
	struct UTextBlock* label; // 0x340(0x08)

	void SetData(int32_t Rank, enum class EPlayerRole PlayerRole); // Function DeadByDaylight.UMGTallyRankFrame.SetData // (Final|Native|Public|BlueprintCallable) // @ game+0x5606cc0
};

// Class DeadByDaylight.UMGTallyRankWidget
// Size: 0x3e8 (Inherited: 0x348)
struct UUMGTallyRankWidget : UUMGTallyListElementWidget {
	struct FMargin _emblemsPadding; // 0x348(0x10)
	struct TSoftClassPtr<UObject> EmblemWidgetClass; // 0x358(0x30)
	struct UHorizontalBox* EmblemsContainer; // 0x388(0x08)
	struct UUMGTallyProgressBar* ProgressBar; // 0x390(0x08)
	struct UUMGTallyRankBanner* RankBanner; // 0x398(0x08)
	struct UTextBlock* RankProgressLabel; // 0x3a0(0x08)
	struct TArray<struct UUMGTallyEmblemWidget*> _emblems; // 0x3a8(0x10)
	struct FTallyScorePipsData _scoreData; // 0x3b8(0x30)

	struct FTallyScorePipsData GetScoreData(); // Function DeadByDaylight.UMGTallyRankWidget.GetScoreData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5605f80
	struct TArray<struct UUMGTallyEmblemWidget*> GetEmblems(); // Function DeadByDaylight.UMGTallyRankWidget.GetEmblems // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5605e40
};

// Class DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget
// Size: 0x6b0 (Inherited: 0x390)
struct UUMGTallyScoreboardPlayerInfoWidget : UUMGLoadoutBaseWidget {
	struct FMulticastInlineDelegate OnTallyScoreboardAddFriendEvent; // 0x390(0x10)
	struct FMulticastInlineDelegate OnTallyScoreboardReportEvent; // 0x3a0(0x10)
	struct UImage* ImageHorizontalSeparation; // 0x3b0(0x08)
	struct FTallyPlayerResultData PlayerResultData; // 0x3b8(0x2f0)
	bool LoadoutIsBlocked; // 0x6a8(0x01)
	char pad_6A9[0x7]; // 0x6a9(0x07)

	void UpdateWidget(); // Function DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.UpdateWidget // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void UpdateReported(); // Function DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.UpdateReported // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void UpdateLoadout(); // Function DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.UpdateLoadout // (Final|Native|Protected|BlueprintCallable) // @ game+0x56073a0
	void SetPlayerScoreData(struct FTallyPlayerResultData& resultData); // Function DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.SetPlayerScoreData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x5607090
	void SetPlayerReported(bool isReport); // Function DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.SetPlayerReported // (Final|Native|Public|BlueprintCallable) // @ game+0x5607000
	void SetPlayerLoadoutBlocked(bool isBlock); // Function DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.SetPlayerLoadoutBlocked // (Final|Native|Public|BlueprintCallable) // @ game+0x5606f70
	void HandleReportEvent(struct FName buttonId); // Function DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.HandleReportEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x5606440
	void HandleAddFriendEvent(struct FName buttonId); // Function DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget.HandleAddFriendEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x56060c0
};

// Class DeadByDaylight.UMGTallyScoreboardWidget
// Size: 0x3e8 (Inherited: 0x348)
struct UUMGTallyScoreboardWidget : UUMGTallyListElementWidget {
	struct FMulticastInlineDelegate OnTallyScoreboardAddFriendEvent; // 0x348(0x10)
	struct FMulticastInlineDelegate OnTallyScoreboardReportEvent; // 0x358(0x10)
	struct FText LabelTextRank; // 0x368(0x18)
	struct FText LabelTextScore; // 0x380(0x18)
	struct FText LabelTextStatus; // 0x398(0x18)
	struct UUMGTallyScoreboardPlayerInfoWidget* KillerWidget; // 0x3b0(0x08)
	struct UUMGTallyScoreboardPlayerInfoWidget* FirstSurvivorWidget; // 0x3b8(0x08)
	struct UUMGTallyScoreboardPlayerInfoWidget* SecondSurvivorWidget; // 0x3c0(0x08)
	struct UUMGTallyScoreboardPlayerInfoWidget* ThirdSurvivorWidget; // 0x3c8(0x08)
	struct UUMGTallyScoreboardPlayerInfoWidget* FourthSurvivorWidget; // 0x3d0(0x08)
	struct TArray<struct UUMGTallyScoreboardPlayerInfoWidget*> SurvivorWidgets; // 0x3d8(0x10)

	void SetFadeOut(); // Function DeadByDaylight.UMGTallyScoreboardWidget.SetFadeOut // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void HandleReportEvent(struct FString playerID); // Function DeadByDaylight.UMGTallyScoreboardWidget.HandleReportEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x56064e0
	void HandleAddFriendEvent(struct FString playerID); // Function DeadByDaylight.UMGTallyScoreboardWidget.HandleAddFriendEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x5606160
};

// Class DeadByDaylight.UMGTeachablePerkButton
// Size: 0x498 (Inherited: 0x338)
struct UUMGTeachablePerkButton : UMobileBaseUserWidget {
	struct UPerkActionButton* TeachablePerkButton; // 0x338(0x08)
	struct UImage* LockedStatusIcon; // 0x340(0x08)
	struct FTeachableData _teachableData; // 0x348(0x140)
	struct FMulticastInlineDelegate _onTeachablePerkTooltipLongPressEvent; // 0x488(0x10)

	void HandleTooltipLongPressedEvent(struct FInventorySlotData& ItemData, struct FVector2D position); // Function DeadByDaylight.UMGTeachablePerkButton.HandleTooltipLongPressedEvent // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x56065d0
};

// Class DeadByDaylight.UMGToastNotificationScreen
// Size: 0x4a0 (Inherited: 0x338)
struct UUMGToastNotificationScreen : UMobileBaseUserWidget {
	struct TSoftClassPtr<UObject> NotificationToast; // 0x338(0x30)
	struct TSoftClassPtr<UObject> InvitationPartyToast; // 0x368(0x30)
	struct UVerticalBox* ToastsContainer; // 0x398(0x08)
	char pad_3A0[0x30]; // 0x3a0(0x30)
	struct TMap<uint32_t, struct UUMGBaseToastWidget*> _toastsDisplayedOnScreen; // 0x3d0(0x50)
	char pad_420[0x80]; // 0x420(0x80)

	void HandleOnPromptSelected(int32_t notificationId); // Function DeadByDaylight.UMGToastNotificationScreen.HandleOnPromptSelected // (Final|Native|Protected) // @ game+0x56063b0
	void HandleOnNotificationDisplayEnd(int32_t notificationId); // Function DeadByDaylight.UMGToastNotificationScreen.HandleOnNotificationDisplayEnd // (Final|Native|Protected) // @ game+0x5606320
	void HandleOnButtonSelected(int32_t buttonId, int32_t notificationId); // Function DeadByDaylight.UMGToastNotificationScreen.HandleOnButtonSelected // (Final|Native|Protected) // @ game+0x5606250
};

// Class DeadByDaylight.UMGTooltipContentPlayerLevelWidget
// Size: 0x368 (Inherited: 0x338)
struct UUMGTooltipContentPlayerLevelWidget : UMobileBaseUserWidget {
	struct FText PlayerLevelText; // 0x338(0x18)
	struct UUMGLevelBannerWidget* LevelBanner; // 0x350(0x08)
	struct URichTextBlock* LevelExperienceRichText; // 0x358(0x08)
	struct UTextBlock* ExperienceToNextLevelText; // 0x360(0x08)

	void SetInfo(int32_t PlayerLevel, int32_t PlayerPrestige, int32_t CurrentExperience, int32_t NextLevelExperience); // Function DeadByDaylight.UMGTooltipContentPlayerLevelWidget.SetInfo // (Final|Native|Public) // @ game+0x5606d90
};

// Class DeadByDaylight.UMGUtilities
// Size: 0x30 (Inherited: 0x30)
struct UUMGUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.UnbrokenPalletsRestrictedPlacementAreaStrategy
// Size: 0xc0 (Inherited: 0xa0)
struct UUnbrokenPalletsRestrictedPlacementAreaStrategy : URestrictedPlacementAreaStrategy {
	struct TArray<struct APallet*> _unbrokenPallets; // 0xa0(0x10)
	struct FName _palletCollisionBoxWhenDroppedTagName; // 0xb0(0x0c)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class DeadByDaylight.UnlockPersonalPerksPopupScreen
// Size: 0x140 (Inherited: 0x140)
struct UUnlockPersonalPerksPopupScreen : UGenericPopupScreen {
};

// Class DeadByDaylight.UsableWithPerkFlagPerkIconStrategy
// Size: 0x50 (Inherited: 0x38)
struct UUsableWithPerkFlagPerkIconStrategy : UBasePerkIconStrategy {
	struct TArray<struct FGameplayTag> _perkTagsOnPlayer; // 0x38(0x10)
	bool _playerShouldHaveTags; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class DeadByDaylight.VaultableComponent
// Size: 0xd8 (Inherited: 0xb8)
struct UVaultableComponent : UActorComponent {
	struct FMulticastInlineDelegate OnVault; // 0xb8(0x10)
	char pad_C8[0x10]; // 0xc8(0x10)

	void SignalVault(struct ADBDPlayer* Survivor, float InteractionTime); // Function DeadByDaylight.VaultableComponent.SignalVault // (Final|Native|Public|BlueprintCallable) // @ game+0x56072d0
	void OnChaseEnded(struct ADBDPlayer* Survivor, float ChaseTimer); // Function DeadByDaylight.VaultableComponent.OnChaseEnded // (Final|Native|Private) // @ game+0x5606970
};

// Class DeadByDaylight.VaultFastDefintion
// Size: 0x670 (Inherited: 0x670)
struct UVaultFastDefintion : UVaultDefinition {
};

// Class DeadByDaylight.VersioningUtilities
// Size: 0x30 (Inherited: 0x30)
struct UVersioningUtilities : UBlueprintFunctionLibrary {
};

// Class DeadByDaylight.VisibleHatchRestrictedPlacementAreaStrategy
// Size: 0xa8 (Inherited: 0xa0)
struct UVisibleHatchRestrictedPlacementAreaStrategy : URestrictedPlacementAreaStrategy {
	char pad_A0[0x8]; // 0xa0(0x08)
};

// Class DeadByDaylight.VomitStateComponent
// Size: 0xf0 (Inherited: 0xb8)
struct UVomitStateComponent : UActorComponent {
	char pad_B8[0x8]; // 0xb8(0x08)
	struct FTagStateBool _isCharging; // 0xc0(0x30)

	void SetVomitState(enum class ELinkedVomitState newVomitState); // Function DeadByDaylight.VomitStateComponent.SetVomitState // (Final|Native|Public|BlueprintCallable) // @ game+0x56071b0
	void SetObjectState(struct UGameplayTagContainerComponent* objectState); // Function DeadByDaylight.VomitStateComponent.SetObjectState // (Final|Native|Public|BlueprintCallable) // @ game+0x5606ee0
	bool IsVomiting(); // Function DeadByDaylight.VomitStateComponent.IsVomiting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5606780
	enum class ELinkedVomitState getVomitState(); // Function DeadByDaylight.VomitStateComponent.getVomitState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x550d570
};

// Class DeadByDaylight.WakerObject
// Size: 0x368 (Inherited: 0x338)
struct AWakerObject : AInteractable {
	char pad_338[0x8]; // 0x338(0x08)
	struct UCamperDreamworldComponent* _linkedCamperDreamworldComponent; // 0x340(0x08)
	bool IsInteracting; // 0x348(0x01)
	bool _chargeComplete; // 0x349(0x01)
	char pad_34A[0x1e]; // 0x34a(0x1e)

	void UpdateVisibilityAndOutline(); // Function DeadByDaylight.WakerObject.UpdateVisibilityAndOutline // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void SetChargeComplete(bool complete); // Function DeadByDaylight.WakerObject.SetChargeComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x5606c30
	void OnRep_LinkedCamperChanged(struct UCamperDreamworldComponent* Previous); // Function DeadByDaylight.WakerObject.OnRep_LinkedCamperChanged // (Final|Native|Protected) // @ game+0x5606b10
	void OnNewLinkedCamper(struct UCamperDreamworldComponent* dreamworldComponent); // Function DeadByDaylight.WakerObject.OnNewLinkedCamper // (Event|Public|BlueprintEvent) // @ game+0x5e02c90
	void OnLinkedCamperDreamStateChanged(bool IsInDreamworld, bool locallyObservedChanged); // Function DeadByDaylight.WakerObject.OnLinkedCamperDreamStateChanged // (Final|Native|Protected) // @ game+0x5606a40
	void OnAnyCamperDreamStateChanged(bool IsInDreamworld, bool locallyObservedChanged); // Function DeadByDaylight.WakerObject.OnAnyCamperDreamStateChanged // (Final|Native|Protected) // @ game+0x56068a0
	void LinkCampersOnLevelReadyToPlay(); // Function DeadByDaylight.WakerObject.LinkCampersOnLevelReadyToPlay // (Final|Native|Public) // @ game+0x5606880
	bool IsLinkedToCamper(struct ADBDPlayer* camper); // Function DeadByDaylight.WakerObject.IsLinkedToCamper // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5605d70
	bool HasLinkedCamper(); // Function DeadByDaylight.WakerObject.HasLinkedCamper // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5606750
	struct USkeletalMeshComponent* GetMesh(); // Function DeadByDaylight.WakerObject.GetMesh // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5e02c90
	bool GetIsInteracting(); // Function DeadByDaylight.WakerObject.GetIsInteracting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5605f50
	struct UPrimitiveComponent* GetInteractorPrimitiveComponent(); // Function DeadByDaylight.WakerObject.GetInteractorPrimitiveComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x558eaa0
	float GetInteractionPercentComplete(); // Function DeadByDaylight.WakerObject.GetInteractionPercentComplete // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x5605f10
	bool GetChargeComplete(); // Function DeadByDaylight.WakerObject.GetChargeComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5605e10
	bool CanWakeUpCamper(struct ADBDPlayer* camper); // Function DeadByDaylight.WakerObject.CanWakeUpCamper // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5605d70
	void BindToCamperDreamStateChanged(struct ADBDPlayer* Player); // Function DeadByDaylight.WakerObject.BindToCamperDreamStateChanged // (Final|Native|Public) // @ game+0x5605ce0
};

// Class DeadByDaylight.WalesCypherHandler
// Size: 0x48 (Inherited: 0x38)
struct UWalesCypherHandler : ULocalPlayerSubsystem {
	struct UWalesCypherParameters* _walesCypherParams; // 0x38(0x08)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class DeadByDaylight.WalesCypherParameters
// Size: 0x50 (Inherited: 0x38)
struct UWalesCypherParameters : UDataAsset {
	struct FString AUDIO_EVENT; // 0x38(0x10)
	int32_t SLASHER_INDEX; // 0x48(0x04)
	int32_t CAMPER_INDEX; // 0x4c(0x04)
};

// Class DeadByDaylight.WalletHandler
// Size: 0x170 (Inherited: 0x30)
struct UWalletHandler : UObject {
	char pad_30[0x140]; // 0x30(0x140)
};

// Class DeadByDaylight.WeightBasedSearchableItemStrategy
// Size: 0x48 (Inherited: 0x38)
struct UWeightBasedSearchableItemStrategy : USearchableItemStrategy {
	struct TArray<struct FWeightBasedItemData> _weightBasedItems; // 0x38(0x10)
};

// Class DeadByDaylight.WeightedElement
// Size: 0x30 (Inherited: 0x30)
struct UWeightedElement : UInterface {
};

// Class DeadByDaylight.WiggleWidget
// Size: 0x358 (Inherited: 0x338)
struct UWiggleWidget : UMobileBaseUserWidget {
	float TimeBetweenAnimationStart; // 0x338(0x04)
	char pad_33C[0x4]; // 0x33c(0x04)
	struct UMobileBaseUserWidget* WiggleButtonLeft; // 0x340(0x08)
	struct UMobileBaseUserWidget* WiggleButtonRight; // 0x348(0x08)
	char pad_350[0x8]; // 0x350(0x08)

	void BecomeUnavailable(); // Function DeadByDaylight.WiggleWidget.BecomeUnavailable // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
	void BecomeAvailable(); // Function DeadByDaylight.WiggleWidget.BecomeAvailable // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x5e02c90
};

// Class DeadByDaylight.Window
// Size: 0x3c0 (Inherited: 0x338)
struct AWindow : AInteractable {
	struct UPrimitiveComponent* _windowCollider; // 0x338(0x08)
	bool _isBlockedByLevel; // 0x340(0x01)
	char pad_341[0x7]; // 0x341(0x07)
	struct TMap<struct ACamperPlayer*, struct FVaultData> _survivorVaultData; // 0x348(0x50)
	char pad_398[0x8]; // 0x398(0x08)
	struct UBlockableComponent* _blockableComponent; // 0x3a0(0x08)
	char pad_3A8[0x10]; // 0x3a8(0x10)
	struct UDBDNavEvadeLoopComponent* _navEvadeLoopComponent; // 0x3b8(0x08)

	void OnRep_blockedByLevel(); // Function DeadByDaylight.Window.OnRep_blockedByLevel // (Final|Native|Private) // @ game+0x56090f0
	void OnFastVault(struct ADBDPlayer* Player, struct UInteractionDefinition* Interaction); // Function DeadByDaylight.Window.OnFastVault // (Event|Protected|BlueprintEvent) // @ game+0x5e02c90
	void NotifyOnFastVault(struct ADBDPlayer* Player, struct UInteractionDefinition* Interaction); // Function DeadByDaylight.Window.NotifyOnFastVault // (Final|Native|Public|BlueprintCallable) // @ game+0x5608ca0
	bool IsWindowVaultBlockedFor(struct ADBDPlayer* Player); // Function DeadByDaylight.Window.IsWindowVaultBlockedFor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x5608c00
	void Authority_SetBlockedByLevel(bool isBlockedByLevel); // Function DeadByDaylight.Window.Authority_SetBlockedByLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x5608b40
	void Authority_OnVaultInternal(struct ADBDPlayer* Player, bool canBlockVault); // Function DeadByDaylight.Window.Authority_OnVaultInternal // (Final|BlueprintAuthorityOnly|Native|Protected|BlueprintCallable) // @ game+0x5608a70
};

// Class DeadByDaylight.XboxProfileDAL
// Size: 0x88 (Inherited: 0x88)
struct UXboxProfileDAL : UPlayerProfileDAL {
};

// Class DeadByDaylight.ZoneDetectorComponent
// Size: 0xf0 (Inherited: 0xb8)
struct UZoneDetectorComponent : UActorComponent {
	char pad_B8[0x18]; // 0xb8(0x18)
	struct TArray<struct UPrimitiveComponent*> _zones; // 0xd0(0x10)
	struct TArray<struct FName> _tags; // 0xe0(0x10)

	void OnOverlapExit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DeadByDaylight.ZoneDetectorComponent.OnOverlapExit // (Final|Native|Protected) // @ game+0x5608f90
	void OnOverlapEnter(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DeadByDaylight.ZoneDetectorComponent.OnOverlapEnter // (Final|Native|Protected|HasOutParms) // @ game+0x5608d70
};

